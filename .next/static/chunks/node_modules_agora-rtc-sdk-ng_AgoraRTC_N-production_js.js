/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_agora-rtc-sdk-ng_AgoraRTC_N-production_js"],{

/***/ "./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js":
/*!****************************************************************!*\
  !*** ./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * AgoraWebSDK_N-v4.15.1-0-g31e59714-dirty Copyright AgoraInc.\n */\n\n!function(e,t){ true?module.exports=t():0}(this,(function(){\"use strict\";var e=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:{},t=function(e){return e&&e.Math==Math&&e},i=t(\"object\"==typeof globalThis&&globalThis)||t(\"object\"==typeof window&&window)||t(\"object\"==typeof self&&self)||t(\"object\"==typeof e&&e)||function(){return this}()||Function(\"return this\")(),r={},n=function(e){try{return!!e()}catch(e){return!0}},o=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),s=!n((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")})),a=s,c=Function.prototype.call,d=a?c.bind(c):function(){return c.apply(c,arguments)},u={},h={}.propertyIsEnumerable,A=Object.getOwnPropertyDescriptor,l=A&&!h.call({1:2},1);u.f=l?function(e){var t=A(this,e);return!!t&&t.enumerable}:h;var p,g,E=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},f=s,m=Function.prototype,I=m.bind,_=m.call,C=f&&I.bind(_,_),S=f?function(e){return e&&C(e)}:function(e){return e&&function(){return _.apply(e,arguments)}},v=S,T=v({}.toString),R=v(\"\".slice),y=function(e){return R(T(e),8,-1)},w=S,b=n,N=y,O=i.Object,D=w(\"\".split),P=b((function(){return!O(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==N(e)?D(e,\"\"):O(e)}:O,L=i.TypeError,k=function(e){if(null==e)throw L(\"Can't call method on \"+e);return e},B=P,M=k,U=function(e){return B(M(e))},x=function(e){return\"function\"==typeof e},Q=x,F=function(e){return\"object\"==typeof e?null!==e:Q(e)},V=i,j=x,G=function(e){return j(e)?e:void 0},K=function(e,t){return arguments.length<2?G(V[e]):V[e]&&V[e][t]},H=S({}.isPrototypeOf),W=K(\"navigator\",\"userAgent\")||\"\",Y=i,J=W,q=Y.process,X=Y.Deno,z=q&&q.versions||X&&X.version,Z=z&&z.v8;Z&&(g=(p=Z.split(\".\"))[0]>0&&p[0]<4?1:+(p[0]+p[1])),!g&&J&&(!(p=J.match(/Edge\\/(\\d+)/))||p[1]>=74)&&(p=J.match(/Chrome\\/(\\d+)/))&&(g=+p[1]);var $=g,ee=$,te=n,ie=!!Object.getOwnPropertySymbols&&!te((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&ee&&ee<41})),re=ie&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator,ne=K,oe=x,se=H,ae=re,ce=i.Object,de=ae?function(e){return\"symbol\"==typeof e}:function(e){var t=ne(\"Symbol\");return oe(t)&&se(t.prototype,ce(e))},ue=i.String,he=function(e){try{return ue(e)}catch(e){return\"Object\"}},Ae=x,le=he,pe=i.TypeError,ge=function(e){if(Ae(e))return e;throw pe(le(e)+\" is not a function\")},Ee=ge,fe=function(e,t){var i=e[t];return null==i?void 0:Ee(i)},me=d,Ie=x,_e=F,Ce=i.TypeError,Se={exports:{}},ve=i,Te=Object.defineProperty,Re=function(e,t){try{Te(ve,e,{value:t,configurable:!0,writable:!0})}catch(i){ve[e]=t}return t},ye=Re,we=\"__core-js_shared__\",be=i[we]||ye(we,{}),Ne=be;(Se.exports=function(e,t){return Ne[e]||(Ne[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.20.3\",mode:\"global\",copyright:\"Â© 2014-2022 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE\",source:\"https://github.com/zloirock/core-js\"});var Oe=k,De=i.Object,Pe=function(e){return De(Oe(e))},Le=Pe,ke=S({}.hasOwnProperty),Be=Object.hasOwn||function(e,t){return ke(Le(e),t)},Me=S,Ue=0,xe=Math.random(),Qe=Me(1..toString),Fe=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+Qe(++Ue+xe,36)},Ve=i,je=Se.exports,Ge=Be,Ke=Fe,He=ie,We=re,Ye=je(\"wks\"),Je=Ve.Symbol,qe=Je&&Je.for,Xe=We?Je:Je&&Je.withoutSetter||Ke,ze=function(e){if(!Ge(Ye,e)||!He&&\"string\"!=typeof Ye[e]){var t=\"Symbol.\"+e;He&&Ge(Je,e)?Ye[e]=Je[e]:Ye[e]=We&&qe?qe(t):Xe(t)}return Ye[e]},Ze=d,$e=F,et=de,tt=fe,it=function(e,t){var i,r;if(\"string\"===t&&Ie(i=e.toString)&&!_e(r=me(i,e)))return r;if(Ie(i=e.valueOf)&&!_e(r=me(i,e)))return r;if(\"string\"!==t&&Ie(i=e.toString)&&!_e(r=me(i,e)))return r;throw Ce(\"Can't convert object to primitive value\")},rt=ze,nt=i.TypeError,ot=rt(\"toPrimitive\"),st=function(e,t){if(!$e(e)||et(e))return e;var i,r=tt(e,ot);if(r){if(void 0===t&&(t=\"default\"),i=Ze(r,e,t),!$e(i)||et(i))return i;throw nt(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),it(e,t)},at=de,ct=function(e){var t=st(e,\"string\");return at(t)?t:t+\"\"},dt=F,ut=i.document,ht=dt(ut)&&dt(ut.createElement),At=function(e){return ht?ut.createElement(e):{}},lt=At,pt=!o&&!n((function(){return 7!=Object.defineProperty(lt(\"div\"),\"a\",{get:function(){return 7}}).a})),gt=o,Et=d,ft=u,mt=E,It=U,_t=ct,Ct=Be,St=pt,vt=Object.getOwnPropertyDescriptor;r.f=gt?vt:function(e,t){if(e=It(e),t=_t(t),St)try{return vt(e,t)}catch(e){}if(Ct(e,t))return mt(!Et(ft.f,e,t),e[t])};var Tt={},Rt=o&&n((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype})),yt=i,wt=F,bt=yt.String,Nt=yt.TypeError,Ot=function(e){if(wt(e))return e;throw Nt(bt(e)+\" is not an object\")},Dt=o,Pt=pt,Lt=Rt,kt=Ot,Bt=ct,Mt=i.TypeError,Ut=Object.defineProperty,xt=Object.getOwnPropertyDescriptor,Qt=\"enumerable\",Ft=\"configurable\",Vt=\"writable\";Tt.f=Dt?Lt?function(e,t,i){if(kt(e),t=Bt(t),kt(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&Vt in i&&!i.writable){var r=xt(e,t);r&&r.writable&&(e[t]=i.value,i={configurable:Ft in i?i.configurable:r.configurable,enumerable:Qt in i?i.enumerable:r.enumerable,writable:!1})}return Ut(e,t,i)}:Ut:function(e,t,i){if(kt(e),t=Bt(t),kt(i),Pt)try{return Ut(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw Mt(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e};var jt=Tt,Gt=E,Kt=o?function(e,t,i){return jt.f(e,t,Gt(1,i))}:function(e,t,i){return e[t]=i,e},Ht={exports:{}},Wt=x,Yt=be,Jt=S(Function.toString);Wt(Yt.inspectSource)||(Yt.inspectSource=function(e){return Jt(e)});var qt,Xt,zt,Zt=Yt.inspectSource,$t=x,ei=Zt,ti=i.WeakMap,ii=$t(ti)&&/native code/.test(ei(ti)),ri=Se.exports,ni=Fe,oi=ri(\"keys\"),si=function(e){return oi[e]||(oi[e]=ni(e))},ai={},ci=ii,di=i,ui=S,hi=F,Ai=Kt,li=Be,pi=be,gi=si,Ei=ai,fi=\"Object already initialized\",mi=di.TypeError,Ii=di.WeakMap;if(ci||pi.state){var _i=pi.state||(pi.state=new Ii),Ci=ui(_i.get),Si=ui(_i.has),vi=ui(_i.set);qt=function(e,t){if(Si(_i,e))throw new mi(fi);return t.facade=e,vi(_i,e,t),t},Xt=function(e){return Ci(_i,e)||{}},zt=function(e){return Si(_i,e)}}else{var Ti=gi(\"state\");Ei[Ti]=!0,qt=function(e,t){if(li(e,Ti))throw new mi(fi);return t.facade=e,Ai(e,Ti,t),t},Xt=function(e){return li(e,Ti)?e[Ti]:{}},zt=function(e){return li(e,Ti)}}var Ri={set:qt,get:Xt,has:zt,enforce:function(e){return zt(e)?Xt(e):qt(e,{})},getterFor:function(e){return function(t){var i;if(!hi(t)||(i=Xt(t)).type!==e)throw mi(\"Incompatible receiver, \"+e+\" required\");return i}}},yi=o,wi=Be,bi=Function.prototype,Ni=yi&&Object.getOwnPropertyDescriptor,Oi=wi(bi,\"name\"),Di={EXISTS:Oi,PROPER:Oi&&\"something\"===function(){}.name,CONFIGURABLE:Oi&&(!yi||yi&&Ni(bi,\"name\").configurable)},Pi=i,Li=x,ki=Be,Bi=Kt,Mi=Re,Ui=Zt,xi=Di.CONFIGURABLE,Qi=Ri.get,Fi=Ri.enforce,Vi=String(String).split(\"String\");(Ht.exports=function(e,t,i,r){var n,o=!!r&&!!r.unsafe,s=!!r&&!!r.enumerable,a=!!r&&!!r.noTargetGet,c=r&&void 0!==r.name?r.name:t;Li(i)&&(\"Symbol(\"===String(c).slice(0,7)&&(c=\"[\"+String(c).replace(/^Symbol\\(([^)]*)\\)/,\"$1\")+\"]\"),(!ki(i,\"name\")||xi&&i.name!==c)&&Bi(i,\"name\",c),(n=Fi(i)).source||(n.source=Vi.join(\"string\"==typeof c?c:\"\"))),e!==Pi?(o?!a&&e[t]&&(s=!0):delete e[t],s?e[t]=i:Bi(e,t,i)):s?e[t]=i:Mi(t,i)})(Function.prototype,\"toString\",(function(){return Li(this)&&Qi(this).source||Ui(this)}));var ji={},Gi=Math.ceil,Ki=Math.floor,Hi=function(e){var t=+e;return t!=t||0===t?0:(t>0?Ki:Gi)(t)},Wi=Hi,Yi=Math.max,Ji=Math.min,qi=function(e,t){var i=Wi(e);return i<0?Yi(i+t,0):Ji(i,t)},Xi=Hi,zi=Math.min,Zi=function(e){return e>0?zi(Xi(e),9007199254740991):0},$i=Zi,er=function(e){return $i(e.length)},tr=U,ir=qi,rr=er,nr=function(e){return function(t,i,r){var n,o=tr(t),s=rr(o),a=ir(r,s);if(e&&i!=i){for(;s>a;)if((n=o[a++])!=n)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===i)return e||a||0;return!e&&-1}},or={includes:nr(!0),indexOf:nr(!1)},sr=Be,ar=U,cr=or.indexOf,dr=ai,ur=S([].push),hr=function(e,t){var i,r=ar(e),n=0,o=[];for(i in r)!sr(dr,i)&&sr(r,i)&&ur(o,i);for(;t.length>n;)sr(r,i=t[n++])&&(~cr(o,i)||ur(o,i));return o},Ar=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"],lr=hr,pr=Ar.concat(\"length\",\"prototype\");ji.f=Object.getOwnPropertyNames||function(e){return lr(e,pr)};var gr={};gr.f=Object.getOwnPropertySymbols;var Er=K,fr=ji,mr=gr,Ir=Ot,_r=S([].concat),Cr=Er(\"Reflect\",\"ownKeys\")||function(e){var t=fr.f(Ir(e)),i=mr.f;return i?_r(t,i(e)):t},Sr=Be,vr=Cr,Tr=r,Rr=Tt,yr=function(e,t,i){for(var r=vr(t),n=Rr.f,o=Tr.f,s=0;s<r.length;s++){var a=r[s];Sr(e,a)||i&&Sr(i,a)||n(e,a,o(t,a))}},wr=n,br=x,Nr=/#|\\.prototype\\./,Or=function(e,t){var i=Pr[Dr(e)];return i==kr||i!=Lr&&(br(t)?wr(t):!!t)},Dr=Or.normalize=function(e){return String(e).replace(Nr,\".\").toLowerCase()},Pr=Or.data={},Lr=Or.NATIVE=\"N\",kr=Or.POLYFILL=\"P\",Br=Or,Mr=i,Ur=r.f,xr=Kt,Qr=Ht.exports,Fr=Re,Vr=yr,jr=Br,Gr=function(e,t){var i,r,n,o,s,a=e.target,c=e.global,d=e.stat;if(i=c?Mr:d?Mr[a]||Fr(a,{}):(Mr[a]||{}).prototype)for(r in t){if(o=t[r],n=e.noTargetGet?(s=Ur(i,r))&&s.value:i[r],!jr(c?r:a+(d?\".\":\"#\")+r,e.forced)&&void 0!==n){if(typeof o==typeof n)continue;Vr(o,n)}(e.sham||n&&n.sham)&&xr(o,\"sham\",!0),Qr(i,r,o,e)}},Kr=s,Hr=Function.prototype,Wr=Hr.apply,Yr=Hr.call,Jr=\"object\"==typeof Reflect&&Reflect.apply||(Kr?Yr.bind(Wr):function(){return Yr.apply(Wr,arguments)}),qr=Gr,Xr=K,zr=Jr,Zr=S,$r=n,en=i.Array,tn=Xr(\"JSON\",\"stringify\"),rn=Zr(/./.exec),nn=Zr(\"\".charAt),on=Zr(\"\".charCodeAt),sn=Zr(\"\".replace),an=Zr(1..toString),cn=/[\\uD800-\\uDFFF]/g,dn=/^[\\uD800-\\uDBFF]$/,un=/^[\\uDC00-\\uDFFF]$/,hn=function(e,t,i){var r=nn(i,t-1),n=nn(i,t+1);return rn(dn,e)&&!rn(un,n)||rn(un,e)&&!rn(dn,r)?\"\\\\u\"+an(on(e,0),16):e},An=$r((function(){return'\"\\\\udf06\\\\ud834\"'!==tn(\"\\udf06\\ud834\")||'\"\\\\udead\"'!==tn(\"\\udead\")}));tn&&qr({target:\"JSON\",stat:!0,forced:An},{stringify:function(e,t,i){for(var r=0,n=arguments.length,o=en(n);r<n;r++)o[r]=arguments[r];var s=zr(tn,null,o);return\"string\"==typeof s?sn(s,cn,hn):s}});var ln=function(e){try{return!!e()}catch(e){return!0}},pn=!ln((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")})),gn=pn,En=Function.prototype,fn=En.bind,mn=En.call,In=gn&&fn.bind(mn,mn),_n=gn?function(e){return e&&In(e)}:function(e){return e&&function(){return mn.apply(e,arguments)}},Cn=_n({}.isPrototypeOf),Sn=function(e){return e&&e.Math==Math&&e},vn=Sn(\"object\"==typeof globalThis&&globalThis)||Sn(\"object\"==typeof window&&window)||Sn(\"object\"==typeof self&&self)||Sn(\"object\"==typeof e&&e)||function(){return this}()||Function(\"return this\")(),Tn=pn,Rn=Function.prototype,yn=Rn.apply,wn=Rn.call,bn=\"object\"==typeof Reflect&&Reflect.apply||(Tn?wn.bind(yn):function(){return wn.apply(yn,arguments)}),Nn=function(e){return\"function\"==typeof e},On={},Dn=!ln((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Pn=pn,Ln=Function.prototype.call,kn=Pn?Ln.bind(Ln):function(){return Ln.apply(Ln,arguments)},Bn={},Mn={}.propertyIsEnumerable,Un=Object.getOwnPropertyDescriptor,xn=Un&&!Mn.call({1:2},1);Bn.f=xn?function(e){var t=Un(this,e);return!!t&&t.enumerable}:Mn;var Qn,Fn,Vn=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},jn=_n,Gn=jn({}.toString),Kn=jn(\"\".slice),Hn=function(e){return Kn(Gn(e),8,-1)},Wn=_n,Yn=ln,Jn=Hn,qn=vn.Object,Xn=Wn(\"\".split),zn=Yn((function(){return!qn(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==Jn(e)?Xn(e,\"\"):qn(e)}:qn,Zn=vn.TypeError,$n=function(e){if(null==e)throw Zn(\"Can't call method on \"+e);return e},eo=zn,to=$n,io=function(e){return eo(to(e))},ro=Nn,no=function(e){return\"object\"==typeof e?null!==e:ro(e)},oo={},so=oo,ao=vn,co=Nn,uo=function(e){return co(e)?e:void 0},ho=function(e,t){return arguments.length<2?uo(so[e])||uo(ao[e]):so[e]&&so[e][t]||ao[e]&&ao[e][t]},Ao=ho(\"navigator\",\"userAgent\")||\"\",lo=vn,po=Ao,go=lo.process,Eo=lo.Deno,fo=go&&go.versions||Eo&&Eo.version,mo=fo&&fo.v8;mo&&(Fn=(Qn=mo.split(\".\"))[0]>0&&Qn[0]<4?1:+(Qn[0]+Qn[1])),!Fn&&po&&(!(Qn=po.match(/Edge\\/(\\d+)/))||Qn[1]>=74)&&(Qn=po.match(/Chrome\\/(\\d+)/))&&(Fn=+Qn[1]);var Io=Fn,_o=Io,Co=ln,So=!!Object.getOwnPropertySymbols&&!Co((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&_o&&_o<41})),vo=So&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator,To=ho,Ro=Nn,yo=Cn,wo=vo,bo=vn.Object,No=wo?function(e){return\"symbol\"==typeof e}:function(e){var t=To(\"Symbol\");return Ro(t)&&yo(t.prototype,bo(e))},Oo=vn.String,Do=function(e){try{return Oo(e)}catch(e){return\"Object\"}},Po=Nn,Lo=Do,ko=vn.TypeError,Bo=function(e){if(Po(e))return e;throw ko(Lo(e)+\" is not a function\")},Mo=Bo,Uo=function(e,t){var i=e[t];return null==i?void 0:Mo(i)},xo=kn,Qo=Nn,Fo=no,Vo=vn.TypeError,jo={exports:{}},Go=vn,Ko=Object.defineProperty,Ho=function(e,t){try{Ko(Go,e,{value:t,configurable:!0,writable:!0})}catch(i){Go[e]=t}return t},Wo=\"__core-js_shared__\",Yo=vn[Wo]||Ho(Wo,{}),Jo=Yo;(jo.exports=function(e,t){return Jo[e]||(Jo[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.20.3\",mode:\"pure\",copyright:\"Â© 2014-2022 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.20.3/LICENSE\",source:\"https://github.com/zloirock/core-js\"});var qo=$n,Xo=vn.Object,zo=function(e){return Xo(qo(e))},Zo=zo,$o=_n({}.hasOwnProperty),es=Object.hasOwn||function(e,t){return $o(Zo(e),t)},ts=_n,is=0,rs=Math.random(),ns=ts(1..toString),os=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+ns(++is+rs,36)},ss=vn,as=jo.exports,cs=es,ds=os,us=So,hs=vo,As=as(\"wks\"),ls=ss.Symbol,ps=ls&&ls.for,gs=hs?ls:ls&&ls.withoutSetter||ds,Es=function(e){if(!cs(As,e)||!us&&\"string\"!=typeof As[e]){var t=\"Symbol.\"+e;us&&cs(ls,e)?As[e]=ls[e]:As[e]=hs&&ps?ps(t):gs(t)}return As[e]},fs=kn,ms=no,Is=No,_s=Uo,Cs=function(e,t){var i,r;if(\"string\"===t&&Qo(i=e.toString)&&!Fo(r=xo(i,e)))return r;if(Qo(i=e.valueOf)&&!Fo(r=xo(i,e)))return r;if(\"string\"!==t&&Qo(i=e.toString)&&!Fo(r=xo(i,e)))return r;throw Vo(\"Can't convert object to primitive value\")},Ss=Es,vs=vn.TypeError,Ts=Ss(\"toPrimitive\"),Rs=function(e,t){if(!ms(e)||Is(e))return e;var i,r=_s(e,Ts);if(r){if(void 0===t&&(t=\"default\"),i=fs(r,e,t),!ms(i)||Is(i))return i;throw vs(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),Cs(e,t)},ys=No,ws=function(e){var t=Rs(e,\"string\");return ys(t)?t:t+\"\"},bs=no,Ns=vn.document,Os=bs(Ns)&&bs(Ns.createElement),Ds=function(e){return Os?Ns.createElement(e):{}},Ps=Ds,Ls=!Dn&&!ln((function(){return 7!=Object.defineProperty(Ps(\"div\"),\"a\",{get:function(){return 7}}).a})),ks=Dn,Bs=kn,Ms=Bn,Us=Vn,xs=io,Qs=ws,Fs=es,Vs=Ls,js=Object.getOwnPropertyDescriptor;On.f=ks?js:function(e,t){if(e=xs(e),t=Qs(t),Vs)try{return js(e,t)}catch(e){}if(Fs(e,t))return Us(!Bs(Ms.f,e,t),e[t])};var Gs=ln,Ks=Nn,Hs=/#|\\.prototype\\./,Ws=function(e,t){var i=Js[Ys(e)];return i==Xs||i!=qs&&(Ks(t)?Gs(t):!!t)},Ys=Ws.normalize=function(e){return String(e).replace(Hs,\".\").toLowerCase()},Js=Ws.data={},qs=Ws.NATIVE=\"N\",Xs=Ws.POLYFILL=\"P\",zs=Ws,Zs=Bo,$s=pn,ea=_n(_n.bind),ta=function(e,t){return Zs(e),void 0===t?e:$s?ea(e,t):function(){return e.apply(t,arguments)}},ia={},ra=Dn&&ln((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype})),na=vn,oa=no,sa=na.String,aa=na.TypeError,ca=function(e){if(oa(e))return e;throw aa(sa(e)+\" is not an object\")},da=Dn,ua=Ls,ha=ra,Aa=ca,la=ws,pa=vn.TypeError,ga=Object.defineProperty,Ea=Object.getOwnPropertyDescriptor,fa=\"enumerable\",ma=\"configurable\",Ia=\"writable\";ia.f=da?ha?function(e,t,i){if(Aa(e),t=la(t),Aa(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&Ia in i&&!i.writable){var r=Ea(e,t);r&&r.writable&&(e[t]=i.value,i={configurable:ma in i?i.configurable:r.configurable,enumerable:fa in i?i.enumerable:r.enumerable,writable:!1})}return ga(e,t,i)}:ga:function(e,t,i){if(Aa(e),t=la(t),Aa(i),ua)try{return ga(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw pa(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e};var _a=ia,Ca=Vn,Sa=Dn?function(e,t,i){return _a.f(e,t,Ca(1,i))}:function(e,t,i){return e[t]=i,e},va=vn,Ta=bn,Ra=_n,ya=Nn,wa=On.f,ba=zs,Na=oo,Oa=ta,Da=Sa,Pa=es,La=function(e){var t=function(i,r,n){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(i);case 2:return new e(i,r)}return new e(i,r,n)}return Ta(e,this,arguments)};return t.prototype=e.prototype,t},ka=function(e,t){var i,r,n,o,s,a,c,d,u=e.target,h=e.global,A=e.stat,l=e.proto,p=h?va:A?va[u]:(va[u]||{}).prototype,g=h?Na:Na[u]||Da(Na,u,{})[u],E=g.prototype;for(n in t)i=!ba(h?n:u+(A?\".\":\"#\")+n,e.forced)&&p&&Pa(p,n),s=g[n],i&&(a=e.noTargetGet?(d=wa(p,n))&&d.value:p[n]),o=i&&a?a:t[n],i&&typeof s==typeof o||(c=e.bind&&i?Oa(o,va):e.wrap&&i?La(o):l&&ya(o)?Ra(o):o,(e.sham||o&&o.sham||s&&s.sham)&&Da(c,\"sham\",!0),Da(g,n,c),l&&(Pa(Na,r=u+\"Prototype\")||Da(Na,r,{}),Da(Na[r],n,o),e.real&&E&&!E[n]&&Da(E,n,o)))},Ba=Math.ceil,Ma=Math.floor,Ua=function(e){var t=+e;return t!=t||0===t?0:(t>0?Ma:Ba)(t)},xa=Ua,Qa=Math.min,Fa=function(e){return e>0?Qa(xa(e),9007199254740991):0},Va=function(e){return Fa(e.length)},ja=Bo,Ga=zo,Ka=zn,Ha=Va,Wa=vn.TypeError,Ya=function(e){return function(t,i,r,n){ja(i);var o=Ga(t),s=Ka(o),a=Ha(o),c=e?a-1:0,d=e?-1:1;if(r<2)for(;;){if(c in s){n=s[c],c+=d;break}if(c+=d,e?c<0:a<=c)throw Wa(\"Reduce of empty array with no initial value\")}for(;e?c>=0:a>c;c+=d)c in s&&(n=i(n,s[c],c,o));return n}},Ja={left:Ya(!1),right:Ya(!0)},qa=ln,Xa=function(e,t){var i=[][e];return!!i&&qa((function(){i.call(null,t||function(){throw 1},1)}))},za=\"process\"==Hn(vn.process),Za=Ja.left,$a=Io,ec=za;ka({target:\"Array\",proto:!0,forced:!Xa(\"reduce\")||!ec&&$a>79&&$a<83},{reduce:function(e){var t=arguments.length;return Za(this,e,t,t>1?arguments[1]:void 0)}});var tc=oo,ic=function(e){return tc[e+\"Prototype\"]},rc=ic(\"Array\").reduce,nc=Cn,oc=rc,sc=Array.prototype,ac=function(e){var t=e.reduce;return e===sc||nc(sc,e)&&t===sc.reduce?oc:t},cc=ac,dc={};dc[ze(\"toStringTag\")]=\"z\";var uc=i,hc=\"[object z]\"===String(dc),Ac=x,lc=y,pc=ze(\"toStringTag\"),gc=uc.Object,Ec=\"Arguments\"==lc(function(){return arguments}()),fc=hc?lc:function(e){var t,i,r;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=gc(e),pc))?i:Ec?lc(t):\"Object\"==(r=lc(t))&&Ac(t.callee)?\"Arguments\":r},mc=fc,Ic=i.String,_c=function(e){if(\"Symbol\"===mc(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return Ic(e)},Cc=Ot,Sc=function(){var e=Cc(this),t=\"\";return e.global&&(t+=\"g\"),e.ignoreCase&&(t+=\"i\"),e.multiline&&(t+=\"m\"),e.dotAll&&(t+=\"s\"),e.unicode&&(t+=\"u\"),e.sticky&&(t+=\"y\"),t},vc=n,Tc=i.RegExp,Rc=vc((function(){var e=Tc(\"a\",\"y\");return e.lastIndex=2,null!=e.exec(\"abcd\")})),yc=Rc||vc((function(){return!Tc(\"a\",\"y\").sticky})),wc={BROKEN_CARET:Rc||vc((function(){var e=Tc(\"^r\",\"gy\");return e.lastIndex=2,null!=e.exec(\"str\")})),MISSED_STICKY:yc,UNSUPPORTED_Y:Rc},bc={},Nc=hr,Oc=Ar,Dc=Object.keys||function(e){return Nc(e,Oc)},Pc=o,Lc=Rt,kc=Tt,Bc=Ot,Mc=U,Uc=Dc;bc.f=Pc&&!Lc?Object.defineProperties:function(e,t){Bc(e);for(var i,r=Mc(t),n=Uc(t),o=n.length,s=0;o>s;)kc.f(e,i=n[s++],r[i]);return e};var xc,Qc=K(\"document\",\"documentElement\"),Fc=Ot,Vc=bc,jc=Ar,Gc=ai,Kc=Qc,Hc=At,Wc=si(\"IE_PROTO\"),Yc=function(){},Jc=function(e){return\"<script>\"+e+\"</\"+\"script>\"},qc=function(e){e.write(Jc(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},Xc=function(){try{xc=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t;Xc=\"undefined\"!=typeof document?document.domain&&xc?qc(xc):((t=Hc(\"iframe\")).style.display=\"none\",Kc.appendChild(t),t.src=String(\"javascript:\"),(e=t.contentWindow.document).open(),e.write(Jc(\"document.F=Object\")),e.close(),e.F):qc(xc);for(var i=jc.length;i--;)delete Xc.prototype[jc[i]];return Xc()};Gc[Wc]=!0;var zc=Object.create||function(e,t){var i;return null!==e?(Yc.prototype=Fc(e),i=new Yc,Yc.prototype=null,i[Wc]=e):i=Xc(),void 0===t?i:Vc.f(i,t)},Zc=n,$c=i.RegExp,ed=Zc((function(){var e=$c(\".\",\"s\");return!(e.dotAll&&e.exec(\"\\n\")&&\"s\"===e.flags)})),td=n,id=i.RegExp,rd=td((function(){var e=id(\"(?<a>b)\",\"g\");return\"b\"!==e.exec(\"b\").groups.a||\"bc\"!==\"b\".replace(e,\"$<a>c\")})),nd=d,od=S,sd=_c,ad=Sc,cd=wc,dd=Se.exports,ud=zc,hd=Ri.get,Ad=ed,ld=rd,pd=dd(\"native-string-replace\",String.prototype.replace),gd=RegExp.prototype.exec,Ed=gd,fd=od(\"\".charAt),md=od(\"\".indexOf),Id=od(\"\".replace),_d=od(\"\".slice),Cd=function(){var e=/a/,t=/b*/g;return nd(gd,e,\"a\"),nd(gd,t,\"a\"),0!==e.lastIndex||0!==t.lastIndex}(),Sd=cd.BROKEN_CARET,vd=void 0!==/()??/.exec(\"\")[1];(Cd||vd||Sd||Ad||ld)&&(Ed=function(e){var t,i,r,n,o,s,a,c=this,d=hd(c),u=sd(e),h=d.raw;if(h)return h.lastIndex=c.lastIndex,t=nd(Ed,h,u),c.lastIndex=h.lastIndex,t;var A=d.groups,l=Sd&&c.sticky,p=nd(ad,c),g=c.source,E=0,f=u;if(l&&(p=Id(p,\"y\",\"\"),-1===md(p,\"g\")&&(p+=\"g\"),f=_d(u,c.lastIndex),c.lastIndex>0&&(!c.multiline||c.multiline&&\"\\n\"!==fd(u,c.lastIndex-1))&&(g=\"(?: \"+g+\")\",f=\" \"+f,E++),i=new RegExp(\"^(?:\"+g+\")\",p)),vd&&(i=new RegExp(\"^\"+g+\"$(?!\\\\s)\",p)),Cd&&(r=c.lastIndex),n=nd(gd,l?i:c,f),l?n?(n.input=_d(n.input,E),n[0]=_d(n[0],E),n.index=c.lastIndex,c.lastIndex+=n[0].length):c.lastIndex=0:Cd&&n&&(c.lastIndex=c.global?n.index+n[0].length:r),vd&&n&&n.length>1&&nd(pd,n[0],i,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)})),n&&A)for(n.groups=s=ud(null),o=0;o<A.length;o++)s[(a=A[o])[0]]=n[a[1]];return n});var Td=Ed;Gr({target:\"RegExp\",proto:!0,forced:/./.exec!==Td},{exec:Td});var Rd=zc,yd=Tt,wd=ze(\"unscopables\"),bd=Array.prototype;null==bd[wd]&&yd.f(bd,wd,{configurable:!0,value:Rd(null)});var Nd,Od,Dd,Pd={},Ld=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),kd=i,Bd=Be,Md=x,Ud=Pe,xd=Ld,Qd=si(\"IE_PROTO\"),Fd=kd.Object,Vd=Fd.prototype,jd=xd?Fd.getPrototypeOf:function(e){var t=Ud(e);if(Bd(t,Qd))return t[Qd];var i=t.constructor;return Md(i)&&t instanceof i?i.prototype:t instanceof Fd?Vd:null},Gd=n,Kd=x,Hd=jd,Wd=Ht.exports,Yd=ze(\"iterator\"),Jd=!1;[].keys&&(\"next\"in(Dd=[].keys())?(Od=Hd(Hd(Dd)))!==Object.prototype&&(Nd=Od):Jd=!0),(null==Nd||Gd((function(){var e={};return Nd[Yd].call(e)!==e})))&&(Nd={}),Kd(Nd[Yd])||Wd(Nd,Yd,(function(){return this}));var qd={IteratorPrototype:Nd,BUGGY_SAFARI_ITERATORS:Jd},Xd=Tt.f,zd=Be,Zd=ze(\"toStringTag\"),$d=function(e,t,i){e&&!i&&(e=e.prototype),e&&!zd(e,Zd)&&Xd(e,Zd,{configurable:!0,value:t})},eu=qd.IteratorPrototype,tu=zc,iu=E,ru=$d,nu=Pd,ou=function(){return this},su=i,au=x,cu=su.String,du=su.TypeError,uu=S,hu=Ot,Au=function(e){if(\"object\"==typeof e||au(e))return e;throw du(\"Can't set \"+cu(e)+\" as a prototype\")},lu=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=uu(Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\").set))(i,[]),t=i instanceof Array}catch(e){}return function(i,r){return hu(i),Au(r),t?e(i,r):i.__proto__=r,i}}():void 0),pu=Gr,gu=d,Eu=Di,fu=x,mu=function(e,t,i,r){var n=t+\" Iterator\";return e.prototype=tu(eu,{next:iu(+!r,i)}),ru(e,n,!1),nu[n]=ou,e},Iu=jd,_u=lu,Cu=$d,Su=Kt,vu=Ht.exports,Tu=Pd,Ru=Eu.PROPER,yu=Eu.CONFIGURABLE,wu=qd.IteratorPrototype,bu=qd.BUGGY_SAFARI_ITERATORS,Nu=ze(\"iterator\"),Ou=\"keys\",Du=\"values\",Pu=\"entries\",Lu=function(){return this},ku=U,Bu=function(e){bd[wd][e]=!0},Mu=Pd,Uu=Ri,xu=Tt.f,Qu=function(e,t,i,r,n,o,s){mu(i,t,r);var a,c,d,u=function(e){if(e===n&&g)return g;if(!bu&&e in l)return l[e];switch(e){case Ou:case Du:case Pu:return function(){return new i(this,e)}}return function(){return new i(this)}},h=t+\" Iterator\",A=!1,l=e.prototype,p=l[Nu]||l[\"@@iterator\"]||n&&l[n],g=!bu&&p||u(n),E=\"Array\"==t&&l.entries||p;if(E&&(a=Iu(E.call(new e)))!==Object.prototype&&a.next&&(Iu(a)!==wu&&(_u?_u(a,wu):fu(a[Nu])||vu(a,Nu,Lu)),Cu(a,h,!0)),Ru&&n==Du&&p&&p.name!==Du&&(yu?Su(l,\"name\",Du):(A=!0,g=function(){return gu(p,this)})),n)if(c={values:u(Du),keys:o?g:u(Ou),entries:u(Pu)},s)for(d in c)(bu||A||!(d in l))&&vu(l,d,c[d]);else pu({target:t,proto:!0,forced:bu||A},c);return l[Nu]!==g&&vu(l,Nu,g,{name:n}),Tu[t]=g,c},Fu=o,Vu=\"Array Iterator\",ju=Uu.set,Gu=Uu.getterFor(Vu),Ku=Qu(Array,\"Array\",(function(e,t){ju(this,{type:Vu,target:ku(e),index:0,kind:t})}),(function(){var e=Gu(this),t=e.target,i=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):\"keys\"==i?{value:r,done:!1}:\"values\"==i?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),\"values\"),Hu=Mu.Arguments=Mu.Array;if(Bu(\"keys\"),Bu(\"values\"),Bu(\"entries\"),Fu&&\"values\"!==Hu.name)try{xu(Hu,\"name\",{value:\"values\"})}catch(e){}var Wu=At(\"span\").classList,Yu=Wu&&Wu.constructor&&Wu.constructor.prototype,Ju=Yu===Object.prototype?void 0:Yu,qu=i,Xu={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},zu=Ju,Zu=Ku,$u=Kt,eh=ze,th=eh(\"iterator\"),ih=eh(\"toStringTag\"),rh=Zu.values,nh=function(e,t){if(e){if(e[th]!==rh)try{$u(e,th,rh)}catch(t){e[th]=rh}if(e[ih]||$u(e,ih,t),Xu[t])for(var i in Zu)if(e[i]!==Zu[i])try{$u(e,i,Zu[i])}catch(t){e[i]=Zu[i]}}};for(var oh in Xu)nh(qu[oh]&&qu[oh].prototype,oh);nh(zu,\"DOMTokenList\");var sh=x,ah=F,ch=lu,dh=function(e,t,i){var r,n;return ch&&sh(r=t.constructor)&&r!==i&&ah(n=r.prototype)&&n!==i.prototype&&ch(e,n),e},uh=_c,hh=function(e,t){return void 0===e?arguments.length<2?\"\":t:uh(e)},Ah=F,lh=Kt,ph=S(\"\".replace),gh=String(Error(\"zxcasd\").stack),Eh=/\\n\\s*at [^:]*:[^\\n]*/,fh=Eh.test(gh),mh=function(e,t){if(fh&&\"string\"==typeof e)for(;t--;)e=ph(e,Eh,\"\");return e},Ih=E,_h=!n((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",Ih(1,7)),7!==e.stack)})),Ch=K,Sh=Be,vh=Kt,Th=H,Rh=lu,yh=yr,wh=dh,bh=hh,Nh=function(e,t){Ah(t)&&\"cause\"in t&&lh(e,\"cause\",t.cause)},Oh=mh,Dh=_h,Ph=Gr,Lh=Jr,kh=function(e,t,i,r){var n=r?2:1,o=e.split(\".\"),s=o[o.length-1],a=Ch.apply(null,o);if(a){var c=a.prototype;if(Sh(c,\"cause\")&&delete c.cause,!i)return a;var d=Ch(\"Error\"),u=t((function(e,t){var i=bh(r?t:e,void 0),o=r?new a(e):new a;return void 0!==i&&vh(o,\"message\",i),Dh&&vh(o,\"stack\",Oh(o.stack,2)),this&&Th(c,this)&&wh(o,this,u),arguments.length>n&&Nh(o,arguments[n]),o}));u.prototype=c,\"Error\"!==s&&(Rh?Rh(u,d):yh(u,d,{name:!0})),yh(u,a);try{c.name!==s&&vh(c,\"name\",s),c.constructor=u}catch(e){}return u}},Bh=\"WebAssembly\",Mh=i.WebAssembly,Uh=7!==Error(\"e\",{cause:7}).cause,xh=function(e,t){var i={};i[e]=kh(e,t,Uh),Ph({global:!0,forced:Uh},i)},Qh=function(e,t){if(Mh&&Mh[e]){var i={};i[e]=kh(\"WebAssembly.\"+e,t,Uh),Ph({target:Bh,stat:!0,forced:Uh},i)}};xh(\"Error\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"EvalError\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"RangeError\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"ReferenceError\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"SyntaxError\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"TypeError\",(function(e){return function(t){return Lh(e,this,arguments)}})),xh(\"URIError\",(function(e){return function(t){return Lh(e,this,arguments)}})),Qh(\"CompileError\",(function(e){return function(t){return Lh(e,this,arguments)}})),Qh(\"LinkError\",(function(e){return function(t){return Lh(e,this,arguments)}})),Qh(\"RuntimeError\",(function(e){return function(t){return Lh(e,this,arguments)}}));let Fh=!0,Vh=!0;function jh(e,t,i){const r=e.match(t);return r&&r.length>=i&&parseInt(r[i],10)}function Gh(e,t,i){if(!e.RTCPeerConnection)return;const r=e.RTCPeerConnection.prototype,n=r.addEventListener;r.addEventListener=function(e,r){if(e!==t)return n.apply(this,arguments);const o=e=>{const t=i(e);t&&(r.handleEvent?r.handleEvent(t):r(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(r,o),n.apply(this,[e,o])};const o=r.removeEventListener;r.removeEventListener=function(e,i){if(e!==t||!this._eventMap||!this._eventMap[t])return o.apply(this,arguments);if(!this._eventMap[t].has(i))return o.apply(this,arguments);const r=this._eventMap[t].get(i);return this._eventMap[t].delete(i),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,o.apply(this,[e,r])},Object.defineProperty(r,\"on\"+t,{get(){return this[\"_on\"+t]},set(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)},enumerable:!0,configurable:!0})}function Kh(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Fh=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")}function Hh(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+typeof e+\". Please use a boolean.\"):(Vh=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))}function Wh(){if(\"object\"==typeof window){if(Fh)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}}function Yh(e,t){Vh&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")}function Jh(e){const t={browser:null,version:null};if(void 0===e||!e.navigator)return t.browser=\"Not a browser.\",t;const{navigator:i}=e;if(i.mozGetUserMedia)t.browser=\"firefox\",t.version=jh(i.userAgent,/Firefox\\/(\\d+)\\./,1);else if(i.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection&&!e.RTCIceGatherer)t.browser=\"chrome\",t.version=jh(i.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else if(i.mediaDevices&&i.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))t.browser=\"edge\",t.version=jh(i.userAgent,/Edge\\/(\\d+).(\\d+)$/,2);else{if(!e.RTCPeerConnection||!i.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return t.browser=\"Not a supported browser.\",t;t.browser=\"safari\",t.version=jh(i.userAgent,/AppleWebKit\\/(\\d+)\\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&\"currentDirection\"in e.RTCRtpTransceiver.prototype}return t}function qh(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function Xh(e){var t;return qh(e)?cc(t=Object.keys(e)).call(t,(function(t,i){const r=qh(e[i]),n=r?Xh(e[i]):e[i],o=r&&!Object.keys(n).length;return void 0===n||o?t:Object.assign(t,{[i]:n})}),{}):e}function zh(e,t,i){const r=i?\"outbound-rtp\":\"inbound-rtp\",n=new Map;if(null===t)return n;const o=[];return e.forEach(e=>{\"track\"===e.type&&e.trackIdentifier===t.id&&o.push(e)}),o.forEach(t=>{e.forEach(i=>{i.type===r&&i.trackId===t.id&&function e(t,i,r){i&&!r.has(i.id)&&(r.set(i.id,i),Object.keys(i).forEach(n=>{n.endsWith(\"Id\")?e(t,t.get(i[n]),r):n.endsWith(\"Ids\")&&i[n].forEach(i=>{e(t,t.get(i),r)})}))}(e,i,n)})}),n}var Zh=jo.exports,$h=os,eA=Zh(\"keys\"),tA=function(e){return eA[e]||(eA[e]=$h(e))},iA=!ln((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),rA=vn,nA=es,oA=Nn,sA=zo,aA=iA,cA=tA(\"IE_PROTO\"),dA=rA.Object,uA=dA.prototype,hA=aA?dA.getPrototypeOf:function(e){var t=sA(e);if(nA(t,cA))return t[cA];var i=t.constructor;return oA(i)&&t instanceof i?i.prototype:t instanceof dA?uA:null},AA=vn,lA=Nn,pA=AA.String,gA=AA.TypeError,EA=_n,fA=ca,mA=function(e){if(\"object\"==typeof e||lA(e))return e;throw gA(\"Can't set \"+pA(e)+\" as a prototype\")},IA=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=EA(Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\").set))(i,[]),t=i instanceof Array}catch(e){}return function(i,r){return fA(i),mA(r),t?e(i,r):i.__proto__=r,i}}():void 0),_A={},CA=Ua,SA=Math.max,vA=Math.min,TA=function(e,t){var i=CA(e);return i<0?SA(i+t,0):vA(i,t)},RA=io,yA=TA,wA=Va,bA=function(e){return function(t,i,r){var n,o=RA(t),s=wA(o),a=yA(r,s);if(e&&i!=i){for(;s>a;)if((n=o[a++])!=n)return!0}else for(;s>a;a++)if((e||a in o)&&o[a]===i)return e||a||0;return!e&&-1}},NA={includes:bA(!0),indexOf:bA(!1)},OA={},DA=es,PA=io,LA=NA.indexOf,kA=OA,BA=_n([].push),MA=function(e,t){var i,r=PA(e),n=0,o=[];for(i in r)!DA(kA,i)&&DA(r,i)&&BA(o,i);for(;t.length>n;)DA(r,i=t[n++])&&(~LA(o,i)||BA(o,i));return o},UA=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"],xA=MA,QA=UA.concat(\"length\",\"prototype\");_A.f=Object.getOwnPropertyNames||function(e){return xA(e,QA)};var FA={};FA.f=Object.getOwnPropertySymbols;var VA=ho,jA=_A,GA=FA,KA=ca,HA=_n([].concat),WA=VA(\"Reflect\",\"ownKeys\")||function(e){var t=jA.f(KA(e)),i=GA.f;return i?HA(t,i(e)):t},YA=es,JA=WA,qA=On,XA=ia,zA={},ZA=MA,$A=UA,el=Object.keys||function(e){return ZA(e,$A)},tl=Dn,il=ra,rl=ia,nl=ca,ol=io,sl=el;zA.f=tl&&!il?Object.defineProperties:function(e,t){nl(e);for(var i,r=ol(t),n=sl(t),o=n.length,s=0;o>s;)rl.f(e,i=n[s++],r[i]);return e};var al,cl=ho(\"document\",\"documentElement\"),dl=ca,ul=zA,hl=UA,Al=OA,ll=cl,pl=Ds,gl=tA(\"IE_PROTO\"),El=function(){},fl=function(e){return\"<script>\"+e+\"</\"+\"script>\"},ml=function(e){e.write(fl(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},Il=function(){try{al=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t;Il=\"undefined\"!=typeof document?document.domain&&al?ml(al):((t=pl(\"iframe\")).style.display=\"none\",ll.appendChild(t),t.src=String(\"javascript:\"),(e=t.contentWindow.document).open(),e.write(fl(\"document.F=Object\")),e.close(),e.F):ml(al);for(var i=hl.length;i--;)delete Il.prototype[hl[i]];return Il()};Al[gl]=!0;var _l=Object.create||function(e,t){var i;return null!==e?(El.prototype=dl(e),i=new El,El.prototype=null,i[gl]=e):i=Il(),void 0===t?i:ul.f(i,t)},Cl=_n(\"\".replace),Sl=String(Error(\"zxcasd\").stack),vl=/\\n\\s*at [^:]*:[^\\n]*/,Tl=vl.test(Sl),Rl=no,yl=Sa,wl={},bl=wl,Nl=Es(\"iterator\"),Ol=Array.prototype,Dl=function(e){return void 0!==e&&(bl.Array===e||Ol[Nl]===e)},Pl={};Pl[Es(\"toStringTag\")]=\"z\";var Ll=\"[object z]\"===String(Pl),kl=vn,Bl=Ll,Ml=Nn,Ul=Hn,xl=Es(\"toStringTag\"),Ql=kl.Object,Fl=\"Arguments\"==Ul(function(){return arguments}()),Vl=Bl?Ul:function(e){var t,i,r;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=Ql(e),xl))?i:Fl?Ul(t):\"Object\"==(r=Ul(t))&&Ml(t.callee)?\"Arguments\":r},jl=Vl,Gl=Uo,Kl=wl,Hl=Es(\"iterator\"),Wl=function(e){if(null!=e)return Gl(e,Hl)||Gl(e,\"@@iterator\")||Kl[jl(e)]},Yl=kn,Jl=Bo,ql=ca,Xl=Do,zl=Wl,Zl=vn.TypeError,$l=function(e,t){var i=arguments.length<2?zl(e):t;if(Jl(i))return ql(Yl(i,e));throw Zl(Xl(e)+\" is not iterable\")},ep=kn,tp=ca,ip=Uo,rp=function(e,t,i){var r,n;tp(e);try{if(!(r=ip(e,\"return\"))){if(\"throw\"===t)throw i;return i}r=ep(r,e)}catch(e){n=!0,r=e}if(\"throw\"===t)throw i;if(n)throw r;return tp(r),i},np=ta,op=kn,sp=ca,ap=Do,cp=Dl,dp=Va,up=Cn,hp=$l,Ap=Wl,lp=rp,pp=vn.TypeError,gp=function(e,t){this.stopped=e,this.result=t},Ep=gp.prototype,fp=function(e,t,i){var r,n,o,s,a,c,d,u=i&&i.that,h=!(!i||!i.AS_ENTRIES),A=!(!i||!i.IS_ITERATOR),l=!(!i||!i.INTERRUPTED),p=np(t,u),g=function(e){return r&&lp(r,\"normal\",e),new gp(!0,e)},E=function(e){return h?(sp(e),l?p(e[0],e[1],g):p(e[0],e[1])):l?p(e,g):p(e)};if(A)r=e;else{if(!(n=Ap(e)))throw pp(ap(e)+\" is not iterable\");if(cp(n)){for(o=0,s=dp(e);s>o;o++)if((a=E(e[o]))&&up(Ep,a))return a;return new gp(!1)}r=hp(e,n)}for(c=r.next;!(d=op(c,r)).done;){try{a=E(d.value)}catch(e){lp(r,\"throw\",e)}if(\"object\"==typeof a&&a&&up(Ep,a))return a}return new gp(!1)},mp=Vl,Ip=vn.String,_p=function(e){if(\"Symbol\"===mp(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return Ip(e)},Cp=_p,Sp=Vn,vp=!ln((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",Sp(1,7)),7!==e.stack)})),Tp=ka,Rp=vn,yp=Cn,wp=hA,bp=IA,Np=function(e,t,i){for(var r=JA(t),n=XA.f,o=qA.f,s=0;s<r.length;s++){var a=r[s];YA(e,a)||i&&YA(i,a)||n(e,a,o(t,a))}},Op=_l,Dp=Sa,Pp=Vn,Lp=function(e,t){if(Tl&&\"string\"==typeof e)for(;t--;)e=Cl(e,vl,\"\");return e},kp=function(e,t){Rl(t)&&\"cause\"in t&&yl(e,\"cause\",t.cause)},Bp=fp,Mp=function(e,t){return void 0===e?arguments.length<2?\"\":t:Cp(e)},Up=vp,xp=Es(\"toStringTag\"),Qp=Rp.Error,Fp=[].push,Vp=function(e,t){var i,r=arguments.length>2?arguments[2]:void 0,n=yp(jp,this);bp?i=bp(new Qp,n?wp(this):jp):(i=n?this:Op(jp),Dp(i,xp,\"Error\")),void 0!==t&&Dp(i,\"message\",Mp(t)),Up&&Dp(i,\"stack\",Lp(i.stack,1)),kp(i,r);var o=[];return Bp(e,Fp,{that:o}),Dp(i,\"errors\",o),i};bp?bp(Vp,Qp):Np(Vp,Qp,{name:!0});var jp=Vp.prototype=Op(Qp.prototype,{constructor:Pp(1,Vp),message:Pp(1,\"\"),name:Pp(1,\"AggregateError\")});Tp({global:!0},{AggregateError:Vp});var Gp=Nn,Kp=Yo,Hp=_n(Function.toString);Gp(Kp.inspectSource)||(Kp.inspectSource=function(e){return Hp(e)});var Wp,Yp,Jp,qp=Kp.inspectSource,Xp=Nn,zp=qp,Zp=vn.WeakMap,$p=Xp(Zp)&&/native code/.test(zp(Zp)),eg=vn,tg=_n,ig=no,rg=Sa,ng=es,og=Yo,sg=tA,ag=OA,cg=\"Object already initialized\",dg=eg.TypeError,ug=eg.WeakMap;if($p||og.state){var hg=og.state||(og.state=new ug),Ag=tg(hg.get),lg=tg(hg.has),pg=tg(hg.set);Wp=function(e,t){if(lg(hg,e))throw new dg(cg);return t.facade=e,pg(hg,e,t),t},Yp=function(e){return Ag(hg,e)||{}},Jp=function(e){return lg(hg,e)}}else{var gg=sg(\"state\");ag[gg]=!0,Wp=function(e,t){if(ng(e,gg))throw new dg(cg);return t.facade=e,rg(e,gg,t),t},Yp=function(e){return ng(e,gg)?e[gg]:{}},Jp=function(e){return ng(e,gg)}}var Eg,fg,mg,Ig={set:Wp,get:Yp,has:Jp,enforce:function(e){return Jp(e)?Yp(e):Wp(e,{})},getterFor:function(e){return function(t){var i;if(!ig(t)||(i=Yp(t)).type!==e)throw dg(\"Incompatible receiver, \"+e+\" required\");return i}}},_g=Dn,Cg=es,Sg=Function.prototype,vg=_g&&Object.getOwnPropertyDescriptor,Tg=Cg(Sg,\"name\"),Rg={EXISTS:Tg,PROPER:Tg&&\"something\"===function(){}.name,CONFIGURABLE:Tg&&(!_g||_g&&vg(Sg,\"name\").configurable)},yg=Sa,wg=function(e,t,i,r){r&&r.enumerable?e[t]=i:yg(e,t,i)},bg=ln,Ng=Nn,Og=_l,Dg=hA,Pg=wg,Lg=Es(\"iterator\"),kg=!1;[].keys&&(\"next\"in(mg=[].keys())?(fg=Dg(Dg(mg)))!==Object.prototype&&(Eg=fg):kg=!0);var Bg=null==Eg||bg((function(){var e={};return Eg[Lg].call(e)!==e}));Ng((Eg=Bg?{}:Og(Eg))[Lg])||Pg(Eg,Lg,(function(){return this}));var Mg={IteratorPrototype:Eg,BUGGY_SAFARI_ITERATORS:kg},Ug=Vl,xg=Ll?{}.toString:function(){return\"[object \"+Ug(this)+\"]\"},Qg=Ll,Fg=ia.f,Vg=Sa,jg=es,Gg=xg,Kg=Es(\"toStringTag\"),Hg=function(e,t,i,r){if(e){var n=i?e:e.prototype;jg(n,Kg)||Fg(n,Kg,{configurable:!0,value:t}),r&&!Qg&&Vg(n,\"toString\",Gg)}},Wg=Mg.IteratorPrototype,Yg=_l,Jg=Vn,qg=Hg,Xg=wl,zg=function(){return this},Zg=function(e,t,i,r){var n=t+\" Iterator\";return e.prototype=Yg(Wg,{next:Jg(+!r,i)}),qg(e,n,!1,!0),Xg[n]=zg,e},$g=ka,eE=kn,tE=Zg,iE=hA,rE=Hg,nE=wg,oE=wl,sE=Rg.PROPER,aE=Mg.BUGGY_SAFARI_ITERATORS,cE=Es(\"iterator\"),dE=\"keys\",uE=\"values\",hE=\"entries\",AE=function(){return this},lE=function(e,t,i,r,n,o,s){tE(i,t,r);var a,c,d,u=function(e){if(e===n&&g)return g;if(!aE&&e in l)return l[e];switch(e){case dE:case uE:case hE:return function(){return new i(this,e)}}return function(){return new i(this)}},h=t+\" Iterator\",A=!1,l=e.prototype,p=l[cE]||l[\"@@iterator\"]||n&&l[n],g=!aE&&p||u(n),E=\"Array\"==t&&l.entries||p;if(E&&(a=iE(E.call(new e)))!==Object.prototype&&a.next&&(rE(a,h,!0,!0),oE[h]=AE),sE&&n==uE&&p&&p.name!==uE&&(A=!0,g=function(){return eE(p,this)}),n)if(c={values:u(uE),keys:o?g:u(dE),entries:u(hE)},s)for(d in c)(aE||A||!(d in l))&&nE(l,d,c[d]);else $g({target:t,proto:!0,forced:aE||A},c);return s&&l[cE]!==g&&nE(l,cE,g,{name:n}),oE[t]=g,c},pE=io,gE=wl,EE=Ig;ia.f;var fE=lE,mE=\"Array Iterator\",IE=EE.set,_E=EE.getterFor(mE);fE(Array,\"Array\",(function(e,t){IE(this,{type:mE,target:pE(e),index:0,kind:t})}),(function(){var e=_E(this),t=e.target,i=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):\"keys\"==i?{value:r,done:!1}:\"values\"==i?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),\"values\"),gE.Arguments=gE.Array;var CE=vn.Promise,SE=wg,vE=function(e,t,i){for(var r in t)i&&i.unsafe&&e[r]?e[r]=t[r]:SE(e,r,t[r],i);return e},TE=ho,RE=ia,yE=Dn,wE=Es(\"species\"),bE=Cn,NE=vn.TypeError,OE=function(e,t){if(bE(t,e))return e;throw NE(\"Incorrect invocation\")},DE=Es(\"iterator\"),PE=!1;try{var LE=0,kE={next:function(){return{done:!!LE++}},return:function(){PE=!0}};kE[DE]=function(){return this},Array.from(kE,(function(){throw 2}))}catch(e){}var BE=_n,ME=ln,UE=Nn,xE=Vl,QE=qp,FE=function(){},VE=[],jE=ho(\"Reflect\",\"construct\"),GE=/^\\s*(?:class|function)\\b/,KE=BE(GE.exec),HE=!GE.exec(FE),WE=function(e){if(!UE(e))return!1;try{return jE(FE,VE,e),!0}catch(e){return!1}},YE=function(e){if(!UE(e))return!1;switch(xE(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return HE||!!KE(GE,QE(e))}catch(e){return!0}};YE.sham=!0;var JE,qE,XE,zE,ZE=!jE||ME((function(){var e;return WE(WE.call)||!WE(Object)||!WE((function(){e=!0}))||e}))?YE:WE,$E=ZE,ef=Do,tf=vn.TypeError,rf=ca,nf=function(e){if($E(e))return e;throw tf(ef(e)+\" is not a constructor\")},of=Es(\"species\"),sf=function(e,t){var i,r=rf(e).constructor;return void 0===r||null==(i=rf(r)[of])?t:nf(i)},af=_n([].slice),cf=/(?:ipad|iphone|ipod).*applewebkit/i.test(Ao),df=vn,uf=bn,hf=ta,Af=Nn,lf=es,pf=ln,gf=cl,Ef=af,ff=Ds,mf=cf,If=za,_f=df.setImmediate,Cf=df.clearImmediate,Sf=df.process,vf=df.Dispatch,Tf=df.Function,Rf=df.MessageChannel,yf=df.String,wf=0,bf={},Nf=\"onreadystatechange\";try{JE=df.location}catch(e){}var Of=function(e){if(lf(bf,e)){var t=bf[e];delete bf[e],t()}},Df=function(e){return function(){Of(e)}},Pf=function(e){Of(e.data)},Lf=function(e){df.postMessage(yf(e),JE.protocol+\"//\"+JE.host)};_f&&Cf||(_f=function(e){var t=Ef(arguments,1);return bf[++wf]=function(){uf(Af(e)?e:Tf(e),void 0,t)},qE(wf),wf},Cf=function(e){delete bf[e]},If?qE=function(e){Sf.nextTick(Df(e))}:vf&&vf.now?qE=function(e){vf.now(Df(e))}:Rf&&!mf?(zE=(XE=new Rf).port2,XE.port1.onmessage=Pf,qE=hf(zE.postMessage,zE)):df.addEventListener&&Af(df.postMessage)&&!df.importScripts&&JE&&\"file:\"!==JE.protocol&&!pf(Lf)?(qE=Lf,df.addEventListener(\"message\",Pf,!1)):qE=Nf in ff(\"script\")?function(e){gf.appendChild(ff(\"script\")).onreadystatechange=function(){gf.removeChild(this),Of(e)}}:function(e){setTimeout(Df(e),0)});var kf,Bf,Mf,Uf,xf,Qf,Ff,Vf,jf={set:_f,clear:Cf},Gf=vn,Kf=/ipad|iphone|ipod/i.test(Ao)&&void 0!==Gf.Pebble,Hf=/web0s(?!.*chrome)/i.test(Ao),Wf=vn,Yf=ta,Jf=On.f,qf=jf.set,Xf=cf,zf=Kf,Zf=Hf,$f=za,em=Wf.MutationObserver||Wf.WebKitMutationObserver,tm=Wf.document,im=Wf.process,rm=Wf.Promise,nm=Jf(Wf,\"queueMicrotask\"),om=nm&&nm.value;om||(kf=function(){var e,t;for($f&&(e=im.domain)&&e.exit();Bf;){t=Bf.fn,Bf=Bf.next;try{t()}catch(e){throw Bf?Uf():Mf=void 0,e}}Mf=void 0,e&&e.enter()},Xf||$f||Zf||!em||!tm?!zf&&rm&&rm.resolve?((Ff=rm.resolve(void 0)).constructor=rm,Vf=Yf(Ff.then,Ff),Uf=function(){Vf(kf)}):$f?Uf=function(){im.nextTick(kf)}:(qf=Yf(qf,Wf),Uf=function(){qf(kf)}):(xf=!0,Qf=tm.createTextNode(\"\"),new em(kf).observe(Qf,{characterData:!0}),Uf=function(){Qf.data=xf=!xf}));var sm=om||function(e){var t={fn:e,next:void 0};Mf&&(Mf.next=t),Bf||(Bf=t,Uf()),Mf=t},am={},cm=Bo,dm=function(e){var t,i;this.promise=new e((function(e,r){if(void 0!==t||void 0!==i)throw TypeError(\"Bad Promise constructor\");t=e,i=r})),this.resolve=cm(t),this.reject=cm(i)};am.f=function(e){return new dm(e)};var um=ca,hm=no,Am=am,lm=function(e,t){if(um(e),hm(t)&&t.constructor===e)return t;var i=Am.f(e);return(0,i.resolve)(t),i.promise},pm=vn,gm=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},Em=function(){this.head=null,this.tail=null};Em.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}};var fm,mm,Im,_m=\"object\"==typeof window,Cm=ka,Sm=vn,vm=ho,Tm=kn,Rm=CE,ym=vE,wm=Hg,bm=function(e){var t=TE(e),i=RE.f;yE&&t&&!t[wE]&&i(t,wE,{configurable:!0,get:function(){return this}})},Nm=Bo,Om=Nn,Dm=no,Pm=OE,Lm=qp,km=fp,Bm=function(e,t){if(!t&&!PE)return!1;var i=!1;try{var r={};r[DE]=function(){return{next:function(){return{done:i=!0}}}},e(r)}catch(e){}return i},Mm=sf,Um=jf.set,xm=sm,Qm=lm,Fm=function(e,t){var i=pm.console;i&&i.error&&(1==arguments.length?i.error(e):i.error(e,t))},Vm=am,jm=gm,Gm=Em,Km=Ig,Hm=zs,Wm=_m,Ym=za,Jm=Io,qm=Es(\"species\"),Xm=\"Promise\",zm=Km.getterFor(Xm),Zm=Km.set,$m=Km.getterFor(Xm),eI=Rm&&Rm.prototype,tI=Rm,iI=eI,rI=Sm.TypeError,nI=Sm.document,oI=Sm.process,sI=Vm.f,aI=sI,cI=!!(nI&&nI.createEvent&&Sm.dispatchEvent),dI=Om(Sm.PromiseRejectionEvent),uI=\"unhandledrejection\",hI=Hm(Xm,(function(){var e=Lm(tI),t=e!==String(tI);if(!t&&66===Jm)return!0;if(!iI.finally)return!0;if(Jm>=51&&/native code/.test(e))return!1;var i=new tI((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};return(i.constructor={})[qm]=r,!(i.then((function(){}))instanceof r)||!t&&Wm&&!dI})),AI=hI||!Bm((function(e){tI.all(e).catch((function(){}))})),lI=function(e){var t;return!(!Dm(e)||!Om(t=e.then))&&t},pI=function(e,t){var i,r,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,u=e.domain;try{a?(s||(2===t.rejection&&II(t),t.rejection=1),!0===a?i=o:(u&&u.enter(),i=a(o),u&&(u.exit(),n=!0)),i===e.promise?d(rI(\"Promise-chain cycle\")):(r=lI(i))?Tm(r,i,c,d):c(i)):d(o)}catch(e){u&&!n&&u.exit(),d(e)}},gI=function(e,t){e.notified||(e.notified=!0,xm((function(){for(var i,r=e.reactions;i=r.get();)pI(i,e);e.notified=!1,t&&!e.rejection&&fI(e)})))},EI=function(e,t,i){var r,n;cI?((r=nI.createEvent(\"Event\")).promise=t,r.reason=i,r.initEvent(e,!1,!0),Sm.dispatchEvent(r)):r={promise:t,reason:i},!dI&&(n=Sm[\"on\"+e])?n(r):e===uI&&Fm(\"Unhandled promise rejection\",i)},fI=function(e){Tm(Um,Sm,(function(){var t,i=e.facade,r=e.value;if(mI(e)&&(t=jm((function(){Ym?oI.emit(\"unhandledRejection\",r,i):EI(uI,i,r)})),e.rejection=Ym||mI(e)?2:1,t.error))throw t.value}))},mI=function(e){return 1!==e.rejection&&!e.parent},II=function(e){Tm(Um,Sm,(function(){var t=e.facade;Ym?oI.emit(\"rejectionHandled\",t):EI(\"rejectionhandled\",t,e.value)}))},_I=function(e,t,i){return function(r){e(t,r,i)}},CI=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,gI(e,!0))},SI=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw rI(\"Promise can't be resolved itself\");var r=lI(t);r?xm((function(){var i={done:!1};try{Tm(r,t,_I(SI,i,e),_I(CI,i,e))}catch(t){CI(i,t,e)}})):(e.value=t,e.state=1,gI(e,!1))}catch(t){CI({done:!1},t,e)}}};hI&&(iI=(tI=function(e){Pm(this,iI),Nm(e),Tm(fm,this);var t=zm(this);try{e(_I(SI,t),_I(CI,t))}catch(e){CI(t,e)}}).prototype,(fm=function(e){Zm(this,{type:Xm,done:!1,notified:!1,parent:!1,reactions:new Gm,rejection:!1,state:0,value:void 0})}).prototype=ym(iI,{then:function(e,t){var i=$m(this),r=sI(Mm(this,tI));return i.parent=!0,r.ok=!Om(e)||e,r.fail=Om(t)&&t,r.domain=Ym?oI.domain:void 0,0==i.state?i.reactions.add(r):xm((function(){pI(r,i)})),r.promise},catch:function(e){return this.then(void 0,e)}}),mm=function(){var e=new fm,t=zm(e);this.promise=e,this.resolve=_I(SI,t),this.reject=_I(CI,t)},Vm.f=sI=function(e){return e===tI||e===Im?new mm(e):aI(e)}),Cm({global:!0,wrap:!0,forced:hI},{Promise:tI}),wm(tI,Xm,!1,!0),bm(Xm),Im=vm(Xm),Cm({target:Xm,stat:!0,forced:hI},{reject:function(e){var t=sI(this);return Tm(t.reject,void 0,e),t.promise}}),Cm({target:Xm,stat:!0,forced:true},{resolve:function(e){return Qm(this===Im?tI:this,e)}}),Cm({target:Xm,stat:!0,forced:AI},{all:function(e){var t=this,i=sI(t),r=i.resolve,n=i.reject,o=jm((function(){var i=Nm(t.resolve),o=[],s=0,a=1;km(e,(function(e){var c=s++,d=!1;a++,Tm(i,t,e).then((function(e){d||(d=!0,o[c]=e,--a||r(o))}),n)})),--a||r(o)}));return o.error&&n(o.value),i.promise},race:function(e){var t=this,i=sI(t),r=i.reject,n=jm((function(){var n=Nm(t.resolve);km(e,(function(e){Tm(n,t,e).then(i.resolve,r)}))}));return n.error&&r(n.value),i.promise}});var vI=kn,TI=Bo,RI=am,yI=gm,wI=fp;ka({target:\"Promise\",stat:!0},{allSettled:function(e){var t=this,i=RI.f(t),r=i.resolve,n=i.reject,o=yI((function(){var i=TI(t.resolve),n=[],o=0,s=1;wI(e,(function(e){var a=o++,c=!1;s++,vI(i,t,e).then((function(e){c||(c=!0,n[a]={status:\"fulfilled\",value:e},--s||r(n))}),(function(e){c||(c=!0,n[a]={status:\"rejected\",reason:e},--s||r(n))}))})),--s||r(n)}));return o.error&&n(o.value),i.promise}});var bI=Bo,NI=ho,OI=kn,DI=am,PI=gm,LI=fp,kI=\"No one promise resolved\";ka({target:\"Promise\",stat:!0},{any:function(e){var t=this,i=NI(\"AggregateError\"),r=DI.f(t),n=r.resolve,o=r.reject,s=PI((function(){var r=bI(t.resolve),s=[],a=0,c=1,d=!1;LI(e,(function(e){var u=a++,h=!1;c++,OI(r,t,e).then((function(e){h||d||(d=!0,n(e))}),(function(e){h||d||(h=!0,s[u]=e,--c||o(new i(s,kI)))}))})),--c||o(new i(s,kI))}));return s.error&&o(s.value),r.promise}});var BI=CE,MI=ho,UI=Nn,xI=sf,QI=lm;ka({target:\"Promise\",proto:!0,real:!0,forced:!!BI&&ln((function(){BI.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=xI(this,MI(\"Promise\")),i=UI(e);return this.then(i?function(i){return QI(t,e()).then((function(){return i}))}:e,i?function(i){return QI(t,e()).then((function(){throw i}))}:e)}});var FI=_n,VI=Ua,jI=_p,GI=$n,KI=FI(\"\".charAt),HI=FI(\"\".charCodeAt),WI=FI(\"\".slice),YI=function(e){return function(t,i){var r,n,o=jI(GI(t)),s=VI(i),a=o.length;return s<0||s>=a?e?\"\":void 0:(r=HI(o,s))<55296||r>56319||s+1===a||(n=HI(o,s+1))<56320||n>57343?e?KI(o,s):r:e?WI(o,s,s+2):n-56320+(r-55296<<10)+65536}},JI={codeAt:YI(!1),charAt:YI(!0)},qI=JI.charAt,XI=_p,zI=Ig,ZI=lE,$I=\"String Iterator\",e_=zI.set,t_=zI.getterFor($I);ZI(String,\"String\",(function(e){e_(this,{type:$I,string:XI(e),index:0})}),(function(){var e,t=t_(this),i=t.string,r=t.index;return r>=i.length?{value:void 0,done:!0}:(e=qI(i,r),t.index+=e.length,{value:e,done:!1})}));var i_=oo.Promise,r_={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},n_=vn,o_=Vl,s_=Sa,a_=wl,c_=Es(\"toStringTag\");for(var d_ in r_){var u_=n_[d_],h_=u_&&u_.prototype;h_&&o_(h_)!==c_&&s_(h_,c_,d_),a_[d_]=a_.Array}var A_=i_,l_=A_,p_=\"process\"==y(i.process),g_=p_,E_=H,f_=i.TypeError,m_=function(e,t){if(E_(t,e))return e;throw f_(\"Incorrect invocation\")},I_=o,__=n,C_=Ot,S_=zc,v_=hh,T_=Error.prototype.toString,R_=__((function(){if(I_){var e=S_(Object.defineProperty({},\"name\",{get:function(){return this===e}}));if(\"true\"!==T_.call(e))return!0}return\"2: 1\"!==T_.call({message:1,name:2})||\"Error\"!==T_.call({})}))?function(){var e=C_(this),t=v_(e.name,\"Error\"),i=v_(e.message);return t?i?t+\": \"+i:t:i}:T_,y_={IndexSizeError:{s:\"INDEX_SIZE_ERR\",c:1,m:1},DOMStringSizeError:{s:\"DOMSTRING_SIZE_ERR\",c:2,m:0},HierarchyRequestError:{s:\"HIERARCHY_REQUEST_ERR\",c:3,m:1},WrongDocumentError:{s:\"WRONG_DOCUMENT_ERR\",c:4,m:1},InvalidCharacterError:{s:\"INVALID_CHARACTER_ERR\",c:5,m:1},NoDataAllowedError:{s:\"NO_DATA_ALLOWED_ERR\",c:6,m:0},NoModificationAllowedError:{s:\"NO_MODIFICATION_ALLOWED_ERR\",c:7,m:1},NotFoundError:{s:\"NOT_FOUND_ERR\",c:8,m:1},NotSupportedError:{s:\"NOT_SUPPORTED_ERR\",c:9,m:1},InUseAttributeError:{s:\"INUSE_ATTRIBUTE_ERR\",c:10,m:1},InvalidStateError:{s:\"INVALID_STATE_ERR\",c:11,m:1},SyntaxError:{s:\"SYNTAX_ERR\",c:12,m:1},InvalidModificationError:{s:\"INVALID_MODIFICATION_ERR\",c:13,m:1},NamespaceError:{s:\"NAMESPACE_ERR\",c:14,m:1},InvalidAccessError:{s:\"INVALID_ACCESS_ERR\",c:15,m:1},ValidationError:{s:\"VALIDATION_ERR\",c:16,m:0},TypeMismatchError:{s:\"TYPE_MISMATCH_ERR\",c:17,m:1},SecurityError:{s:\"SECURITY_ERR\",c:18,m:1},NetworkError:{s:\"NETWORK_ERR\",c:19,m:1},AbortError:{s:\"ABORT_ERR\",c:20,m:1},URLMismatchError:{s:\"URL_MISMATCH_ERR\",c:21,m:1},QuotaExceededError:{s:\"QUOTA_EXCEEDED_ERR\",c:22,m:1},TimeoutError:{s:\"TIMEOUT_ERR\",c:23,m:1},InvalidNodeTypeError:{s:\"INVALID_NODE_TYPE_ERR\",c:24,m:1},DataCloneError:{s:\"DATA_CLONE_ERR\",c:25,m:1}},w_=Gr,b_=function(e){try{if(g_)return Function('return require(\"'+e+'\")')()}catch(e){}},N_=K,O_=n,D_=zc,P_=E,L_=Tt.f,k_=bc.f,B_=Ht.exports,M_=Be,U_=m_,x_=Ot,Q_=R_,F_=hh,V_=y_,j_=mh,G_=Ri,K_=o,H_=\"DOMException\",W_=\"DATA_CLONE_ERR\",Y_=N_(\"Error\"),J_=N_(H_)||function(){try{(new(N_(\"MessageChannel\")||b_(\"worker_threads\").MessageChannel)).port1.postMessage(new WeakMap)}catch(e){if(e.name==W_&&25==e.code)return e.constructor}}(),q_=J_&&J_.prototype,X_=Y_.prototype,z_=G_.set,Z_=G_.getterFor(H_),$_=\"stack\"in Y_(H_),eC=function(e){return M_(V_,e)&&V_[e].m?V_[e].c:0},tC=function(){U_(this,iC);var e=arguments.length,t=F_(e<1?void 0:arguments[0]),i=F_(e<2?void 0:arguments[1],\"Error\"),r=eC(i);if(z_(this,{type:H_,name:i,message:t,code:r}),K_||(this.name=i,this.message=t,this.code=r),$_){var n=Y_(t);n.name=H_,L_(this,\"stack\",P_(1,j_(n.stack,1)))}},iC=tC.prototype=D_(X_),rC=function(e){return{enumerable:!0,configurable:!0,get:e}},nC=function(e){return rC((function(){return Z_(this)[e]}))};K_&&k_(iC,{name:nC(\"name\"),message:nC(\"message\"),code:nC(\"code\")}),L_(iC,\"constructor\",P_(1,tC));var oC=O_((function(){return!(new J_ instanceof Y_)})),sC=oC||O_((function(){return X_.toString!==Q_||\"2: 1\"!==String(new J_(1,2))})),aC=oC||O_((function(){return 25!==new J_(1,\"DataCloneError\").code}));oC||25!==J_.DATA_CLONE_ERR||q_.DATA_CLONE_ERR;w_({global:!0,forced:oC},{DOMException:oC?tC:J_});var cC=N_(H_),dC=cC.prototype;for(var uC in sC&&J_===cC&&B_(dC,\"toString\",Q_),aC&&K_&&J_===cC&&L_(dC,\"code\",rC((function(){return eC(x_(this).name)}))),V_)if(M_(V_,uC)){var hC=V_[uC],AC=hC.s,lC=P_(6,hC.c);M_(cC,AC)||L_(cC,AC,lC),M_(dC,AC)||L_(dC,AC,lC)}var pC=Gr,gC=K,EC=E,fC=Tt.f,mC=Be,IC=m_,_C=dh,CC=hh,SC=y_,vC=mh,TC=\"DOMException\",RC=gC(\"Error\"),yC=gC(TC),wC=function(){IC(this,bC);var e=arguments.length,t=CC(e<1?void 0:arguments[0]),i=CC(e<2?void 0:arguments[1],\"Error\"),r=new yC(t,i),n=RC(t);return n.name=TC,fC(r,\"stack\",EC(1,vC(n.stack,1))),_C(r,this,wC),r},bC=wC.prototype=yC.prototype,NC=\"stack\"in RC(TC),OC=\"stack\"in new yC(1,2),DC=NC&&!OC;pC({global:!0,forced:DC},{DOMException:DC?wC:yC});var PC=gC(TC),LC=PC.prototype;if(LC.constructor!==PC)for(var kC in fC(LC,\"constructor\",EC(1,PC)),SC)if(mC(SC,kC)){var BC=SC[kC],MC=BC.s;mC(PC,MC)||fC(PC,MC,EC(6,BC.c))}var UC=\"DOMException\";$d(K(UC),UC);var xC=S,QC=Ht.exports,FC=Td,VC=n,jC=ze,GC=Kt,KC=jC(\"species\"),HC=RegExp.prototype,WC=S,YC=Hi,JC=_c,qC=k,XC=WC(\"\".charAt),zC=WC(\"\".charCodeAt),ZC=WC(\"\".slice),$C=function(e){return function(t,i){var r,n,o=JC(qC(t)),s=YC(i),a=o.length;return s<0||s>=a?e?\"\":void 0:(r=zC(o,s))<55296||r>56319||s+1===a||(n=zC(o,s+1))<56320||n>57343?e?XC(o,s):r:e?ZC(o,s,s+2):n-56320+(r-55296<<10)+65536}},eS={codeAt:$C(!1),charAt:$C(!0)}.charAt,tS=S,iS=Pe,rS=Math.floor,nS=tS(\"\".charAt),oS=tS(\"\".replace),sS=tS(\"\".slice),aS=/\\$([$&'`]|\\d{1,2}|<[^>]*>)/g,cS=/\\$([$&'`]|\\d{1,2})/g,dS=d,uS=Ot,hS=x,AS=y,lS=Td,pS=i.TypeError,gS=Jr,ES=d,fS=S,mS=function(e,t,i,r){var n=jC(e),o=!VC((function(){var t={};return t[n]=function(){return 7},7!=\"\"[e](t)})),s=o&&!VC((function(){var t=!1,i=/a/;return\"split\"===e&&((i={}).constructor={},i.constructor[KC]=function(){return i},i.flags=\"\",i[n]=/./[n]),i.exec=function(){return t=!0,null},i[n](\"\"),!t}));if(!o||!s||i){var a=xC(/./[n]),c=t(n,\"\"[e],(function(e,t,i,r,n){var s=xC(e),c=t.exec;return c===FC||c===HC.exec?o&&!n?{done:!0,value:a(t,i,r)}:{done:!0,value:s(i,t,r)}:{done:!1}}));QC(String.prototype,e,c[0]),QC(HC,n,c[1])}r&&GC(HC[n],\"sham\",!0)},IS=n,_S=Ot,CS=x,SS=Hi,vS=Zi,TS=_c,RS=k,yS=function(e,t,i){return t+(i?eS(e,t).length:1)},wS=fe,bS=function(e,t,i,r,n,o){var s=i+e.length,a=r.length,c=cS;return void 0!==n&&(n=iS(n),c=aS),oS(o,c,(function(o,c){var d;switch(nS(c,0)){case\"$\":return\"$\";case\"&\":return e;case\"`\":return sS(t,0,i);case\"'\":return sS(t,s);case\"<\":d=n[sS(c,1,-1)];break;default:var u=+c;if(0===u)return o;if(u>a){var h=rS(u/10);return 0===h?o:h<=a?void 0===r[h-1]?nS(c,1):r[h-1]+nS(c,1):o}d=r[u-1]}return void 0===d?\"\":d}))},NS=function(e,t){var i=e.exec;if(hS(i)){var r=dS(i,e,t);return null!==r&&uS(r),r}if(\"RegExp\"===AS(e))return dS(lS,e,t);throw pS(\"RegExp#exec called on incompatible receiver\")},OS=ze(\"replace\"),DS=Math.max,PS=Math.min,LS=fS([].concat),kS=fS([].push),BS=fS(\"\".indexOf),MS=fS(\"\".slice),US=\"$0\"===\"a\".replace(/./,\"$0\"),xS=!!/./[OS]&&\"\"===/./[OS](\"a\",\"$0\");mS(\"replace\",(function(e,t,i){var r=xS?\"$\":\"$0\";return[function(e,i){var r=RS(this),n=null==e?void 0:wS(e,OS);return n?ES(n,e,r,i):ES(t,TS(r),e,i)},function(e,n){var o=_S(this),s=TS(e);if(\"string\"==typeof n&&-1===BS(n,r)&&-1===BS(n,\"$<\")){var a=i(t,o,s,n);if(a.done)return a.value}var c=CS(n);c||(n=TS(n));var d=o.global;if(d){var u=o.unicode;o.lastIndex=0}for(var h=[];;){var A=NS(o,s);if(null===A)break;if(kS(h,A),!d)break;\"\"===TS(A[0])&&(o.lastIndex=yS(s,vS(o.lastIndex),u))}for(var l,p=\"\",g=0,E=0;E<h.length;E++){for(var f=TS((A=h[E])[0]),m=DS(PS(SS(A.index),s.length),0),I=[],_=1;_<A.length;_++)kS(I,void 0===(l=A[_])?l:String(l));var C=A.groups;if(c){var S=LS([f],I,m,s);void 0!==C&&kS(S,C);var v=TS(gS(n,void 0,S))}else v=bS(f,s,m,I,C,n);m>=g&&(p+=MS(s,g,m)+v,g=m+f.length)}return p+MS(s,g)}]}),!!IS((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:\"7\"},e},\"7\"!==\"\".replace(e,\"$<a>\")}))||!US||xS);var QS=F,FS=y,VS=ze(\"match\"),jS=K,GS=Tt,KS=o,HS=ze(\"species\"),WS=function(e){var t=jS(e),i=GS.f;KS&&t&&!t[HS]&&i(t,HS,{configurable:!0,get:function(){return this}})},YS=o,JS=i,qS=S,XS=Br,zS=dh,ZS=Kt,$S=Tt.f,ev=ji.f,tv=H,iv=function(e){var t;return QS(e)&&(void 0!==(t=e[VS])?!!t:\"RegExp\"==FS(e))},rv=_c,nv=Sc,ov=wc,sv=Ht.exports,av=n,cv=Be,dv=Ri.enforce,uv=WS,hv=ed,Av=rd,lv=ze(\"match\"),pv=JS.RegExp,gv=pv.prototype,Ev=JS.SyntaxError,fv=qS(nv),mv=qS(gv.exec),Iv=qS(\"\".charAt),_v=qS(\"\".replace),Cv=qS(\"\".indexOf),Sv=qS(\"\".slice),vv=/^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/,Tv=/a/g,Rv=/a/g,yv=new pv(Tv)!==Tv,wv=ov.MISSED_STICKY,bv=ov.UNSUPPORTED_Y,Nv=YS&&(!yv||wv||hv||Av||av((function(){return Rv[lv]=!1,pv(Tv)!=Tv||pv(Rv)==Rv||\"/a/i\"!=pv(Tv,\"i\")})));if(XS(\"RegExp\",Nv)){for(var Ov=function(e,t){var i,r,n,o,s,a,c=tv(gv,this),d=iv(e),u=void 0===t,h=[],A=e;if(!c&&d&&u&&e.constructor===Ov)return e;if((d||tv(gv,e))&&(e=e.source,u&&(t=\"flags\"in A?A.flags:fv(A))),e=void 0===e?\"\":rv(e),t=void 0===t?\"\":rv(t),A=e,hv&&\"dotAll\"in Tv&&(r=!!t&&Cv(t,\"s\")>-1)&&(t=_v(t,/s/g,\"\")),i=t,wv&&\"sticky\"in Tv&&(n=!!t&&Cv(t,\"y\")>-1)&&bv&&(t=_v(t,/y/g,\"\")),Av&&(e=(o=function(e){for(var t,i=e.length,r=0,n=\"\",o=[],s={},a=!1,c=!1,d=0,u=\"\";r<=i;r++){if(\"\\\\\"===(t=Iv(e,r)))t+=Iv(e,++r);else if(\"]\"===t)a=!1;else if(!a)switch(!0){case\"[\"===t:a=!0;break;case\"(\"===t:mv(vv,Sv(e,r+1))&&(r+=2,c=!0),n+=t,d++;continue;case\">\"===t&&c:if(\"\"===u||cv(s,u))throw new Ev(\"Invalid capture group name\");s[u]=!0,o[o.length]=[u,d],c=!1,u=\"\";continue}c?u+=t:n+=t}return[n,o]}(e))[0],h=o[1]),s=zS(pv(e,t),c?this:gv,Ov),(r||n||h.length)&&(a=dv(s),r&&(a.dotAll=!0,a.raw=Ov(function(e){for(var t,i=e.length,r=0,n=\"\",o=!1;r<=i;r++)\"\\\\\"!==(t=Iv(e,r))?o||\".\"!==t?(\"[\"===t?o=!0:\"]\"===t&&(o=!1),n+=t):n+=\"[\\\\s\\\\S]\":n+=t+Iv(e,++r);return n}(e),i)),n&&(a.sticky=!0),h.length&&(a.groups=h)),e!==A)try{ZS(s,\"source\",\"\"===A?\"(?:)\":A)}catch(e){}return s},Dv=function(e){e in Ov||$S(Ov,e,{configurable:!0,get:function(){return pv[e]},set:function(t){pv[e]=t}})},Pv=ev(pv),Lv=0;Pv.length>Lv;)Dv(Pv[Lv++]);gv.constructor=Ov,Ov.prototype=gv,sv(JS,\"RegExp\",Ov)}uv(\"RegExp\");var kv=i,Bv=o,Mv=ed,Uv=y,xv=Tt.f,Qv=Ri.get,Fv=RegExp.prototype,Vv=kv.TypeError;Bv&&Mv&&xv(Fv,\"dotAll\",{configurable:!0,get:function(){if(this!==Fv){if(\"RegExp\"===Uv(this))return!!Qv(this).dotAll;throw Vv(\"Incompatible receiver, RegExp required\")}}});const jv=Wh;function Gv(e,t){const i=e&&e.navigator;if(!i.mediaDevices)return;const r=function(e){if(\"object\"!=typeof e||e.mandatory||e.optional)return e;const t={};return Object.keys(e).forEach(i=>{if(\"require\"===i||\"advanced\"===i||\"mediaSource\"===i)return;const r=\"object\"==typeof e[i]?e[i]:{ideal:e[i]};void 0!==r.exact&&\"number\"==typeof r.exact&&(r.min=r.max=r.exact);const n=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==r.ideal){t.optional=t.optional||[];let e={};\"number\"==typeof r.ideal?(e[n(\"min\",i)]=r.ideal,t.optional.push(e),e={},e[n(\"max\",i)]=r.ideal,t.optional.push(e)):(e[n(\"\",i)]=r.ideal,t.optional.push(e))}void 0!==r.exact&&\"number\"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[n(\"\",i)]=r.exact):[\"min\",\"max\"].forEach(e=>{void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[n(e,i)]=r[e])})}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},n=function(e,n){if(t.version>=61)return n(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"==typeof e.audio){const t=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),t(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=r(e.audio)}if(e&&\"object\"==typeof e.video){let o=e.video.facingMode;o=o&&(\"object\"==typeof o?o:{ideal:o});const s=t.version<66;if(o&&(\"user\"===o.exact||\"environment\"===o.exact||\"user\"===o.ideal||\"environment\"===o.ideal)&&(!i.mediaDevices.getSupportedConstraints||!i.mediaDevices.getSupportedConstraints().facingMode||s)){let t;if(delete e.video.facingMode,\"environment\"===o.exact||\"environment\"===o.ideal?t=[\"back\",\"rear\"]:\"user\"!==o.exact&&\"user\"!==o.ideal||(t=[\"front\"]),t)return i.mediaDevices.enumerateDevices().then(i=>{let s=(i=i.filter(e=>\"videoinput\"===e.kind)).find(e=>t.some(t=>e.label.toLowerCase().includes(t)));return!s&&i.length&&t.includes(\"back\")&&(s=i[i.length-1]),s&&(e.video.deviceId=o.exact?{exact:s.deviceId}:{ideal:s.deviceId}),e.video=r(e.video),jv(\"chrome: \"+JSON.stringify(e)),n(e)})}e.video=r(e.video)}return jv(\"chrome: \"+JSON.stringify(e)),n(e)},o=function(e){return t.version>=64?e:{name:{PermissionDeniedError:\"NotAllowedError\",PermissionDismissedError:\"NotAllowedError\",InvalidStateError:\"NotAllowedError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotAllowedError\",MediaDeviceKillSwitchOn:\"NotAllowedError\",TabCaptureError:\"AbortError\",ScreenCaptureError:\"AbortError\",DeviceCaptureError:\"AbortError\"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&\": \")+this.message}}};if(i.getUserMedia=function(e,t,r){n(e,e=>{i.webkitGetUserMedia(e,t,e=>{r&&r(o(e))})})}.bind(i),i.mediaDevices.getUserMedia){const e=i.mediaDevices.getUserMedia.bind(i.mediaDevices);i.mediaDevices.getUserMedia=function(t){return n(t,t=>e(t).then(e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(e=>{e.stop()}),new DOMException(\"\",\"NotFoundError\");return e},e=>l_.reject(o(e))))}}}function Kv(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function Hv(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)},enumerable:!0,configurable:!0});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener(\"addtrack\",i=>{let r;r=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(e=>e.track&&e.track.id===i.track.id):{track:i.track};const n=new Event(\"track\");n.track=i.track,n.receiver=r,n.transceiver={receiver:r},n.streams=[t.stream],this.dispatchEvent(n)}),t.stream.getTracks().forEach(i=>{let r;r=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find(e=>e.track&&e.track.id===i.id):{track:i};const n=new Event(\"track\");n.track=i,n.receiver=r,n.transceiver={receiver:r},n.streams=[t.stream],this.dispatchEvent(n)})},this.addEventListener(\"addstream\",this._ontrackpoly)),t.apply(this,arguments)}}else Gh(e,\"track\",e=>(e.transceiver||Object.defineProperty(e,\"transceiver\",{value:{receiver:e.receiver}}),e))}function Wv(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){const t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};const i=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){let n=i.apply(this,arguments);return n||(n=t(this,e),this._senders.push(n)),n};const r=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){r.apply(this,arguments);const t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],i.apply(this,[e]),e.getTracks().forEach(e=>{this._senders.push(t(this,e))})};const r=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],r.apply(this,[e]),e.getTracks().forEach(e=>{const t=this._senders.find(t=>t.track===e);t&&this._senders.splice(this._senders.indexOf(t),1)})}}else if(\"object\"==typeof e&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function Yv(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,i,r]=arguments;if(arguments.length>0&&\"function\"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||\"function\"!=typeof e))return t.apply(this,[]);const n=function(e){const t={};return e.result().forEach(e=>{const i={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach(t=>{i[t]=e.stat(t)}),t[i.id]=i}),t},o=function(e){return new Map(Object.keys(e).map(t=>[t,e[t]]))};if(arguments.length>=2){const r=function(e){i(o(n(e)))};return t.apply(this,[r,e])}return new l_((e,i)=>{t.apply(this,[function(t){e(o(n(t)))},i])}).then(i,r)}}function Jv(e){if(!(\"object\"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!(\"getStats\"in e.RTCRtpSender.prototype)){const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){const e=this;return this._pc.getStats().then(t=>zh(t,e.track,!0))}}if(!(\"getStats\"in e.RTCRtpReceiver.prototype)){const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e}),Gh(e,\"track\",e=>(e.receiver._pc=e.srcElement,e)),e.RTCRtpReceiver.prototype.getStats=function(){const e=this;return this._pc.getStats().then(t=>zh(t,e.track,!1))}}if(!(\"getStats\"in e.RTCRtpSender.prototype)||!(\"getStats\"in e.RTCRtpReceiver.prototype))return;const t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){const e=arguments[0];let t,i,r;return this.getSenders().forEach(i=>{i.track===e&&(t?r=!0:t=i)}),this.getReceivers().forEach(t=>(t.track===e&&(i?r=!0:i=t),t.track===e)),r||t&&i?l_.reject(new DOMException(\"There are more than one sender or receiver for the track.\",\"InvalidAccessError\")):t?t.getStats():i?i.getStats():l_.reject(new DOMException(\"There is no sender or receiver for the track.\",\"InvalidAccessError\"))}return t.apply(this,arguments)}}function qv(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map(e=>this._shimmedLocalStreams[e][0])};const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,i){if(!i)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};const r=t.apply(this,arguments);return this._shimmedLocalStreams[i.id]?-1===this._shimmedLocalStreams[i.id].indexOf(r)&&this._shimmedLocalStreams[i.id].push(r):this._shimmedLocalStreams[i.id]=[i,r],r};const i=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach(e=>{if(this.getSenders().find(t=>t.track===e))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")});const t=this.getSenders();i.apply(this,arguments);const r=this.getSenders().filter(e=>-1===t.indexOf(e));this._shimmedLocalStreams[e.id]=[e].concat(r)};const r=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],r.apply(this,arguments)};const n=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach(t=>{const i=this._shimmedLocalStreams[t].indexOf(e);-1!==i&&this._shimmedLocalStreams[t].splice(i,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]}),n.apply(this,arguments)}}function Xv(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return qv(e);const i=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){const e=i.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map(e=>this._reverseStreams[e.id])};const r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach(e=>{if(this.getSenders().find(t=>t.track===e))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}),!this._reverseStreams[t.id]){const i=new e.MediaStream(t.getTracks());this._streams[t.id]=i,this._reverseStreams[i.id]=t,t=i}r.apply(this,[t])};const n=e.RTCPeerConnection.prototype.removeStream;function o(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(t=>{const r=e._reverseStreams[t],n=e._streams[r.id];i=i.replace(new RegExp(n.id,\"g\"),r.id)}),new RTCSessionDescription({type:t.type,sdp:i})}function s(e,t){let i=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(t=>{const r=e._reverseStreams[t],n=e._streams[r.id];i=i.replace(new RegExp(r.id,\"g\"),n.id)}),new RTCSessionDescription({type:t.type,sdp:i})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},n.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,i){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");const r=[].slice.call(arguments,1);if(1!==r.length||!r[0].getTracks().find(e=>e===t))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");const n=this.getSenders().find(e=>e.track===t);if(n)throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};const o=this._streams[i.id];if(o)o.addTrack(t),l_.resolve().then(()=>{this.dispatchEvent(new Event(\"negotiationneeded\"))});else{const r=new e.MediaStream([t]);this._streams[i.id]=r,this._reverseStreams[r.id]=i,this.addStream(r)}return this.getSenders().find(e=>e.track===t)},[\"createOffer\",\"createAnswer\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],r={[t](){const e=arguments;return arguments.length&&\"function\"==typeof arguments[0]?i.apply(this,[t=>{const i=o(this,t);e[0].apply(null,[i])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):i.apply(this,arguments).then(e=>o(this,e))}};e.RTCPeerConnection.prototype[t]=r[t]}));const a=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=s(this,arguments[0]),a.apply(this,arguments)):a.apply(this,arguments)};const c=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get(){const e=c.get.apply(this);return\"\"===e.type?e:o(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if(\"closed\"===this.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===this))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach(i=>{this._streams[i].getTracks().find(t=>e.track===t)&&(t=this._streams[i])}),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event(\"negotiationneeded\")))}}function zv(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],r={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=r[t]}))}function Zv(e,t){Gh(e,\"negotiationneeded\",e=>{const i=e.target;if(!(t.version<72||i.getConfiguration&&\"plan-b\"===i.getConfiguration().sdpSemantics)||\"stable\"===i.signalingState)return e})}var $v=Object.freeze({__proto__:null,shimMediaStream:Kv,shimOnTrack:Hv,shimGetSendersWithDtmf:Wv,shimGetStats:Yv,shimSenderReceiverGetStats:Jv,shimAddTrackRemoveTrackWithNative:qv,shimAddTrackRemoveTrack:Xv,shimPeerConnection:zv,fixNegotiationNeeded:Zv,shimGetUserMedia:Gv,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(\"function\"==typeof t?e.navigator.mediaDevices.getDisplayMedia=function(i){return t(i).then(t=>{const r=i.video&&i.video.width,n=i.video&&i.video.height,o=i.video&&i.video.frameRate;return i.video={mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:t,maxFrameRate:o||3}},r&&(i.video.mandatory.maxWidth=r),n&&(i.video.mandatory.maxHeight=n),e.navigator.mediaDevices.getUserMedia(i)})}:console.error(\"shimGetDisplayMedia: getSourceId argument is not a function\"))}});var eT={exports:{}};!function(e){var t={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return e.trim().split(\"\\n\").map((function(e){return e.trim()}))},t.splitSections=function(e){return e.split(\"\\nm=\").map((function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"}))},t.getDescription=function(e){var i=t.splitSections(e);return i&&i[0]},t.getMediaSections=function(e){var i=t.splitSections(e);return i.shift(),i},t.matchPrefix=function(e,i){return t.splitLines(e).filter((function(e){return 0===e.indexOf(i)}))},t.parseCandidate=function(e){for(var t,i={foundation:(t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \"))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":i.relatedAddress=t[r+1];break;case\"rport\":i.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":i.tcpType=t[r+1];break;case\"ufrag\":i.ufrag=t[r+1],i.usernameFragment=t[r+1];break;default:i[t[r]]=t[r+1]}return i},t.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var i=e.type;return t.push(\"typ\"),t.push(i),\"host\"!==i&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},t.parseIceOptions=function(e){return e.substr(14).split(\" \")},t.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),i={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),i.name=t[0],i.clockRate=parseInt(t[1],10),i.channels=3===t.length?parseInt(t[2],10):1,i.numChannels=i.channels,i},t.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var i=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==i?\"/\"+i:\"\")+\"\\r\\n\"},t.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},t.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},t.parseFmtp=function(e){for(var t,i={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),n=0;n<r.length;n++)i[(t=r[n].trim().split(\"=\"))[0].trim()]=t[1];return i},t.writeFmtp=function(e){var t=\"\",i=e.payloadType;if(void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach((function(t){e.parameters[t]?r.push(t+\"=\"+e.parameters[t]):r.push(t)})),t+=\"a=fmtp:\"+i+\" \"+r.join(\";\")+\"\\r\\n\"}return t},t.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},t.writeRtcpFb=function(e){var t=\"\",i=e.payloadType;return void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((function(e){t+=\"a=rtcp-fb:\"+i+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"})),t},t.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),i={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(\":\",t);return r>-1?(i.attribute=e.substr(t+1,r-t-1),i.value=e.substr(r+1)):i.attribute=e.substr(t+1),i},t.parseSsrcGroup=function(e){var t=e.substr(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map((function(e){return parseInt(e,10)}))}},t.getMid=function(e){var i=t.matchPrefix(e,\"a=mid:\")[0];if(i)return i.substr(6)},t.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},t.getDtlsParameters=function(e,i){return{role:\"auto\",fingerprints:t.matchPrefix(e+i,\"a=fingerprint:\").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){var i=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach((function(e){i+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"})),i},t.getIceParameters=function(e,i){var r=t.splitLines(e);return{usernameFragment:(r=r.concat(t.splitLines(i))).filter((function(e){return 0===e.indexOf(\"a=ice-ufrag:\")}))[0].substr(12),password:r.filter((function(e){return 0===e.indexOf(\"a=ice-pwd:\")}))[0].substr(10)}},t.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},t.parseRtpParameters=function(e){for(var i={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=t.splitLines(e)[0].split(\" \"),n=3;n<r.length;n++){var o=r[n],s=t.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(s){var a=t.parseRtpMap(s),c=t.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(a.parameters=c.length?t.parseFmtp(c[0]):{},a.rtcpFeedback=t.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(t.parseRtcpFb),i.codecs.push(a),a.name.toUpperCase()){case\"RED\":case\"ULPFEC\":i.fecMechanisms.push(a.name.toUpperCase())}}}return t.matchPrefix(e,\"a=extmap:\").forEach((function(e){i.headerExtensions.push(t.parseExtmap(e))})),i},t.writeRtpDescription=function(e,i){var r=\"\";r+=\"m=\"+e+\" \",r+=i.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=i.codecs.map((function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType})).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",i.codecs.forEach((function(e){r+=t.writeRtpMap(e),r+=t.writeFmtp(e),r+=t.writeRtcpFb(e)}));var n=0;return i.codecs.forEach((function(e){e.maxptime>n&&(n=e.maxptime)})),n>0&&(r+=\"a=maxptime:\"+n+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",i.headerExtensions&&i.headerExtensions.forEach((function(e){r+=t.writeExtmap(e)})),r},t.parseRtpEncodingParameters=function(e){var i,r=[],n=t.parseRtpParameters(e),o=-1!==n.fecMechanisms.indexOf(\"RED\"),s=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),a=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"cname\"===e.attribute})),c=a.length>0&&a[0].ssrc,d=t.matchPrefix(e,\"a=ssrc-group:FID\").map((function(e){return e.substr(17).split(\" \").map((function(e){return parseInt(e,10)}))}));d.length>0&&d[0].length>1&&d[0][0]===c&&(i=d[0][1]),n.codecs.forEach((function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var t={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&i&&(t.rtx={ssrc:i}),r.push(t),o&&((t=JSON.parse(JSON.stringify(t))).fec={ssrc:c,mechanism:s?\"red+ulpfec\":\"red\"},r.push(t))}})),0===r.length&&c&&r.push({ssrc:c});var u=t.matchPrefix(e,\"b=\");return u.length&&(u=0===u[0].indexOf(\"b=TIAS:\")?parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,r.forEach((function(e){e.maxBitrate=u}))),r},t.parseRtcpParameters=function(e){var i={},r=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"cname\"===e.attribute}))[0];r&&(i.cname=r.value,i.ssrc=r.ssrc);var n=t.matchPrefix(e,\"a=rtcp-rsize\");i.reducedSize=n.length>0,i.compound=0===n.length;var o=t.matchPrefix(e,\"a=rtcp-mux\");return i.mux=o.length>0,i},t.parseMsid=function(e){var i,r=t.matchPrefix(e,\"a=msid:\");if(1===r.length)return{stream:(i=r[0].substr(7).split(\" \"))[0],track:i[1]};var n=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"msid\"===e.attribute}));return n.length>0?{stream:(i=n[0].value.split(\" \"))[0],track:i[1]}:void 0},t.generateSessionId=function(){return Math.random().toString().substr(2,21)},t.writeSessionBoilerplate=function(e,i,r){var n=void 0!==i?i:2;return\"v=0\\r\\no=\"+(r||\"thisisadapterortc\")+\" \"+(e||t.generateSessionId())+\" \"+n+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},t.writeMediaSection=function(e,i,r,n){var o=t.writeRtpDescription(e.kind,i);if(o+=t.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=t.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?o+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?o+=\"a=sendrecv\\r\\n\":e.rtpSender?o+=\"a=sendonly\\r\\n\":e.rtpReceiver?o+=\"a=recvonly\\r\\n\":o+=\"a=inactive\\r\\n\",e.rtpSender){var s=\"msid:\"+n.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";o+=\"a=\"+s,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+s,e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+s,o+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+t.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+t.localCName+\"\\r\\n\"),o},t.getDirection=function(e,i){for(var r=t.splitLines(e),n=0;n<r.length;n++)switch(r[n]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[n].substr(2)}return i?t.getDirection(i):\"sendrecv\"},t.getKind=function(e){return t.splitLines(e)[0].split(\" \")[0].substr(2)},t.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},t.parseMLine=function(e){var i=t.splitLines(e)[0].substr(2).split(\" \");return{kind:i[0],port:parseInt(i[1],10),protocol:i[2],fmt:i.slice(3).join(\" \")}},t.parseOLine=function(e){var i=t.matchPrefix(e,\"o=\")[0].substr(2).split(\" \");return{username:i[0],sessionId:i[1],sessionVersion:parseInt(i[2],10),netType:i[3],addressType:i[4],address:i[5]}},t.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;for(var i=t.splitLines(e),r=0;r<i.length;r++)if(i[r].length<2||\"=\"!==i[r].charAt(1))return!1;return!0},e.exports=t}(eT);var tT=eT.exports;function iT(e,t,i,r,n){var o=tT.writeRtpDescription(e.kind,t);if(o+=tT.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=tT.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===i?\"actpass\":n||\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",e.rtpSender&&e.rtpReceiver?o+=\"a=sendrecv\\r\\n\":e.rtpSender?o+=\"a=sendonly\\r\\n\":e.rtpReceiver?o+=\"a=recvonly\\r\\n\":o+=\"a=inactive\\r\\n\",e.rtpSender){var s=e.rtpSender._initialTrackId||e.rtpSender.track.id;e.rtpSender._initialTrackId=s;var a=\"msid:\"+(r?r.id:\"-\")+\" \"+s+\"\\r\\n\";o+=\"a=\"+a,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+a,e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+a,o+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+tT.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+tT.localCName+\"\\r\\n\"),o}function rT(e,t){var i={codecs:[],headerExtensions:[],fecMechanisms:[]},r=function(e,t){e=parseInt(e,10);for(var i=0;i<t.length;i++)if(t[i].payloadType===e||t[i].preferredPayloadType===e)return t[i]},n=function(e,t,i,n){var o=r(e.parameters.apt,i),s=r(t.parameters.apt,n);return o&&s&&o.name.toLowerCase()===s.name.toLowerCase()};return e.codecs.forEach((function(r){for(var o=0;o<t.codecs.length;o++){var s=t.codecs[o];if(r.name.toLowerCase()===s.name.toLowerCase()&&r.clockRate===s.clockRate){if(\"rtx\"===r.name.toLowerCase()&&r.parameters&&s.parameters.apt&&!n(r,s,e.codecs,t.codecs))continue;(s=JSON.parse(JSON.stringify(s))).numChannels=Math.min(r.numChannels,s.numChannels),i.codecs.push(s),s.rtcpFeedback=s.rtcpFeedback.filter((function(e){for(var t=0;t<r.rtcpFeedback.length;t++)if(r.rtcpFeedback[t].type===e.type&&r.rtcpFeedback[t].parameter===e.parameter)return!0;return!1}));break}}})),e.headerExtensions.forEach((function(e){for(var r=0;r<t.headerExtensions.length;r++){var n=t.headerExtensions[r];if(e.uri===n.uri){i.headerExtensions.push(n);break}}})),i}function nT(e,t,i){return-1!=={offer:{setLocalDescription:[\"stable\",\"have-local-offer\"],setRemoteDescription:[\"stable\",\"have-remote-offer\"]},answer:{setLocalDescription:[\"have-remote-offer\",\"have-local-pranswer\"],setRemoteDescription:[\"have-local-offer\",\"have-remote-pranswer\"]}}[t][e].indexOf(i)}function oT(e,t){var i=e.getRemoteCandidates().find((function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type}));return i||e.addRemoteCandidate(t),!i}function sT(e,t){var i=new Error(t);return i.name=e,i.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[e],i}var aT=function(e,t){function i(t,i){i.addTrack(t),i.dispatchEvent(new e.MediaStreamTrackEvent(\"addtrack\",{track:t}))}function r(t,i,r,n){var o=new Event(\"track\");o.track=i,o.receiver=r,o.transceiver={receiver:r},o.streams=n,e.setTimeout((function(){t._dispatchEvent(\"track\",o)}))}var n=function(i){var r=this,n=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach((function(e){r[e]=n[e].bind(n)})),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.connectionState=\"new\",this.iceGatheringState=\"new\",i=JSON.parse(JSON.stringify(i||{})),this.usingBundle=\"max-bundle\"===i.bundlePolicy,\"negotiate\"===i.rtcpMuxPolicy)throw sT(\"NotSupportedError\",\"rtcpMuxPolicy 'negotiate' is not supported\");switch(i.rtcpMuxPolicy||(i.rtcpMuxPolicy=\"require\"),i.iceTransportPolicy){case\"all\":case\"relay\":break;default:i.iceTransportPolicy=\"all\"}switch(i.bundlePolicy){case\"balanced\":case\"max-compat\":case\"max-bundle\":break;default:i.bundlePolicy=\"balanced\"}if(i.iceServers=function(e,t){var i=!1;return(e=JSON.parse(JSON.stringify(e))).filter((function(e){if(e&&(e.urls||e.url)){var r=e.urls||e.url;e.url&&!e.urls&&console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");var n=\"string\"==typeof r;return n&&(r=[r]),r=r.filter((function(e){return 0!==e.indexOf(\"turn:\")||-1===e.indexOf(\"transport=udp\")||-1!==e.indexOf(\"turn:[\")||i?0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\"):(i=!0,!0)})),delete e.url,e.urls=n?r[0]:r,!!r.length}}))}(i.iceServers||[],t),this._iceGatherers=[],i.iceCandidatePoolSize)for(var o=i.iceCandidatePoolSize;o>0;o--)this._iceGatherers.push(new e.RTCIceGatherer({iceServers:i.iceServers,gatherPolicy:i.iceTransportPolicy}));else i.iceCandidatePoolSize=0;this._config=i,this.transceivers=[],this._sdpSessionId=tT.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(n.prototype,\"localDescription\",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(n.prototype,\"remoteDescription\",{configurable:!0,get:function(){return this._remoteDescription}}),n.prototype.onicecandidate=null,n.prototype.onaddstream=null,n.prototype.ontrack=null,n.prototype.onremovestream=null,n.prototype.onsignalingstatechange=null,n.prototype.oniceconnectionstatechange=null,n.prototype.onconnectionstatechange=null,n.prototype.onicegatheringstatechange=null,n.prototype.onnegotiationneeded=null,n.prototype.ondatachannel=null,n.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),\"function\"==typeof this[\"on\"+e]&&this[\"on\"+e](t))},n.prototype._emitGatheringStateChange=function(){var e=new Event(\"icegatheringstatechange\");this._dispatchEvent(\"icegatheringstatechange\",e)},n.prototype.getConfiguration=function(){return this._config},n.prototype.getLocalStreams=function(){return this.localStreams},n.prototype.getRemoteStreams=function(){return this.remoteStreams},n.prototype._createTransceiver=function(e,t){var i=this.transceivers.length>0,r={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&i)r.iceTransport=this.transceivers[0].iceTransport,r.dtlsTransport=this.transceivers[0].dtlsTransport;else{var n=this._createIceAndDtlsTransports();r.iceTransport=n.iceTransport,r.dtlsTransport=n.dtlsTransport}return t||this.transceivers.push(r),r},n.prototype.addTrack=function(t,i){if(this._isClosed)throw sT(\"InvalidStateError\",\"Attempted to call addTrack on a closed peerconnection.\");var r;if(this.transceivers.find((function(e){return e.track===t})))throw sT(\"InvalidAccessError\",\"Track already exists.\");for(var n=0;n<this.transceivers.length;n++)this.transceivers[n].track||this.transceivers[n].kind!==t.kind||(r=this.transceivers[n]);return r||(r=this._createTransceiver(t.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(i)&&this.localStreams.push(i),r.track=t,r.stream=i,r.rtpSender=new e.RTCRtpSender(t,r.dtlsTransport),r.rtpSender},n.prototype.addStream=function(e){var i=this;if(t>=15025)e.getTracks().forEach((function(t){i.addTrack(t,e)}));else{var r=e.clone();e.getTracks().forEach((function(e,t){var i=r.getTracks()[t];e.addEventListener(\"enabled\",(function(e){i.enabled=e.enabled}))})),r.getTracks().forEach((function(e){i.addTrack(e,r)}))}},n.prototype.removeTrack=function(t){if(this._isClosed)throw sT(\"InvalidStateError\",\"Attempted to call removeTrack on a closed peerconnection.\");if(!(t instanceof e.RTCRtpSender))throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");var i=this.transceivers.find((function(e){return e.rtpSender===t}));if(!i)throw sT(\"InvalidAccessError\",\"Sender was not created by this connection.\");var r=i.stream;i.rtpSender.stop(),i.rtpSender=null,i.track=null,i.stream=null,-1===this.transceivers.map((function(e){return e.stream})).indexOf(r)&&this.localStreams.indexOf(r)>-1&&this.localStreams.splice(this.localStreams.indexOf(r),1),this._maybeFireNegotiationNeeded()},n.prototype.removeStream=function(e){var t=this;e.getTracks().forEach((function(e){var i=t.getSenders().find((function(t){return t.track===e}));i&&t.removeTrack(i)}))},n.prototype.getSenders=function(){return this.transceivers.filter((function(e){return!!e.rtpSender})).map((function(e){return e.rtpSender}))},n.prototype.getReceivers=function(){return this.transceivers.filter((function(e){return!!e.rtpReceiver})).map((function(e){return e.rtpReceiver}))},n.prototype._createIceGatherer=function(t,i){var r=this;if(i&&t>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var n=new e.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(n,\"state\",{value:\"new\",writable:!0}),this.transceivers[t].bufferedCandidateEvents=[],this.transceivers[t].bufferCandidates=function(e){var i=!e.candidate||0===Object.keys(e.candidate).length;n.state=i?\"completed\":\"gathering\",null!==r.transceivers[t].bufferedCandidateEvents&&r.transceivers[t].bufferedCandidateEvents.push(e)},n.addEventListener(\"localcandidate\",this.transceivers[t].bufferCandidates),n},n.prototype._gather=function(t,i){var r=this,n=this.transceivers[i].iceGatherer;if(!n.onlocalcandidate){var o=this.transceivers[i].bufferedCandidateEvents;this.transceivers[i].bufferedCandidateEvents=null,n.removeEventListener(\"localcandidate\",this.transceivers[i].bufferCandidates),n.onlocalcandidate=function(e){if(!(r.usingBundle&&i>0)){var o=new Event(\"icecandidate\");o.candidate={sdpMid:t,sdpMLineIndex:i};var s=e.candidate,a=!s||0===Object.keys(s).length;if(a)\"new\"!==n.state&&\"gathering\"!==n.state||(n.state=\"completed\");else{\"new\"===n.state&&(n.state=\"gathering\"),s.component=1,s.ufrag=n.getLocalParameters().usernameFragment;var c=tT.writeCandidate(s);o.candidate=Object.assign(o.candidate,tT.parseCandidate(c)),o.candidate.candidate=c,o.candidate.toJSON=function(){return{candidate:o.candidate.candidate,sdpMid:o.candidate.sdpMid,sdpMLineIndex:o.candidate.sdpMLineIndex,usernameFragment:o.candidate.usernameFragment}}}var d=tT.getMediaSections(r._localDescription.sdp);d[o.candidate.sdpMLineIndex]+=a?\"a=end-of-candidates\\r\\n\":\"a=\"+o.candidate.candidate+\"\\r\\n\",r._localDescription.sdp=tT.getDescription(r._localDescription.sdp)+d.join(\"\");var u=r.transceivers.every((function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state}));\"gathering\"!==r.iceGatheringState&&(r.iceGatheringState=\"gathering\",r._emitGatheringStateChange()),a||r._dispatchEvent(\"icecandidate\",o),u&&(r._dispatchEvent(\"icecandidate\",new Event(\"icecandidate\")),r.iceGatheringState=\"complete\",r._emitGatheringStateChange())}},e.setTimeout((function(){o.forEach((function(e){n.onlocalcandidate(e)}))}),0)}},n.prototype._createIceAndDtlsTransports=function(){var t=this,i=new e.RTCIceTransport(null);i.onicestatechange=function(){t._updateIceConnectionState(),t._updateConnectionState()};var r=new e.RTCDtlsTransport(i);return r.ondtlsstatechange=function(){t._updateConnectionState()},r.onerror=function(){Object.defineProperty(r,\"state\",{value:\"failed\",writable:!0}),t._updateConnectionState()},{iceTransport:i,dtlsTransport:r}},n.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var i=this.transceivers[e].iceTransport;i&&(delete i.onicestatechange,delete this.transceivers[e].iceTransport);var r=this.transceivers[e].dtlsTransport;r&&(delete r.ondtlsstatechange,delete r.onerror,delete this.transceivers[e].dtlsTransport)},n.prototype._transceive=function(e,i,r){var n=rT(e.localCapabilities,e.remoteCapabilities);i&&e.rtpSender&&(n.encodings=e.sendEncodingParameters,n.rtcp={cname:tT.localCName,compound:e.rtcpParameters.compound},e.recvEncodingParameters.length&&(n.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(n)),r&&e.rtpReceiver&&n.codecs.length>0&&(\"video\"===e.kind&&e.recvEncodingParameters&&t<15019&&e.recvEncodingParameters.forEach((function(e){delete e.rtx})),e.recvEncodingParameters.length?n.encodings=e.recvEncodingParameters:n.encodings=[{}],n.rtcp={compound:e.rtcpParameters.compound},e.rtcpParameters.cname&&(n.rtcp.cname=e.rtcpParameters.cname),e.sendEncodingParameters.length&&(n.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(n))},n.prototype.setLocalDescription=function(e){var t,i,r=this;if(-1===[\"offer\",\"answer\"].indexOf(e.type))return Promise.reject(sT(\"TypeError\",'Unsupported type \"'+e.type+'\"'));if(!nT(\"setLocalDescription\",e.type,r.signalingState)||r._isClosed)return Promise.reject(sT(\"InvalidStateError\",\"Can not set local \"+e.type+\" in state \"+r.signalingState));if(\"offer\"===e.type)t=tT.splitSections(e.sdp),i=t.shift(),t.forEach((function(e,t){var i=tT.parseRtpParameters(e);r.transceivers[t].localCapabilities=i})),r.transceivers.forEach((function(e,t){r._gather(e.mid,t)}));else if(\"answer\"===e.type){t=tT.splitSections(r._remoteDescription.sdp),i=t.shift();var n=tT.matchPrefix(i,\"a=ice-lite\").length>0;t.forEach((function(e,t){var o=r.transceivers[t],s=o.iceGatherer,a=o.iceTransport,c=o.dtlsTransport,d=o.localCapabilities,u=o.remoteCapabilities;if(!(tT.isRejected(e)&&0===tT.matchPrefix(e,\"a=bundle-only\").length)&&!o.rejected){var h=tT.getIceParameters(e,i),A=tT.getDtlsParameters(e,i);n&&(A.role=\"server\"),r.usingBundle&&0!==t||(r._gather(o.mid,t),\"new\"===a.state&&a.start(s,h,n?\"controlling\":\"controlled\"),\"new\"===c.state&&c.start(A));var l=rT(d,u);r._transceive(o,l.codecs.length>0,!1)}}))}return r._localDescription={type:e.type,sdp:e.sdp},\"offer\"===e.type?r._updateSignalingState(\"have-local-offer\"):r._updateSignalingState(\"stable\"),Promise.resolve()},n.prototype.setRemoteDescription=function(n){var o=this;if(-1===[\"offer\",\"answer\"].indexOf(n.type))return Promise.reject(sT(\"TypeError\",'Unsupported type \"'+n.type+'\"'));if(!nT(\"setRemoteDescription\",n.type,o.signalingState)||o._isClosed)return Promise.reject(sT(\"InvalidStateError\",\"Can not set remote \"+n.type+\" in state \"+o.signalingState));var s={};o.remoteStreams.forEach((function(e){s[e.id]=e}));var a=[],c=tT.splitSections(n.sdp),d=c.shift(),u=tT.matchPrefix(d,\"a=ice-lite\").length>0,h=tT.matchPrefix(d,\"a=group:BUNDLE \").length>0;o.usingBundle=h;var A=tT.matchPrefix(d,\"a=ice-options:\")[0];return o.canTrickleIceCandidates=!!A&&A.substr(14).split(\" \").indexOf(\"trickle\")>=0,c.forEach((function(r,c){var A=tT.splitLines(r),l=tT.getKind(r),p=tT.isRejected(r)&&0===tT.matchPrefix(r,\"a=bundle-only\").length,g=A[0].substr(2).split(\" \")[2],E=tT.getDirection(r,d),f=tT.parseMsid(r),m=tT.getMid(r)||tT.generateIdentifier();if(p||\"application\"===l&&(\"DTLS/SCTP\"===g||\"UDP/DTLS/SCTP\"===g))o.transceivers[c]={mid:m,kind:l,protocol:g,rejected:!0};else{var I,_,C,S,v,T,R,y,w;!p&&o.transceivers[c]&&o.transceivers[c].rejected&&(o.transceivers[c]=o._createTransceiver(l,!0));var b,N,O=tT.parseRtpParameters(r);p||(b=tT.getIceParameters(r,d),(N=tT.getDtlsParameters(r,d)).role=\"client\"),R=tT.parseRtpEncodingParameters(r);var D=tT.parseRtcpParameters(r),P=tT.matchPrefix(r,\"a=end-of-candidates\",d).length>0,L=tT.matchPrefix(r,\"a=candidate:\").map((function(e){return tT.parseCandidate(e)})).filter((function(e){return 1===e.component}));if((\"offer\"===n.type||\"answer\"===n.type)&&!p&&h&&c>0&&o.transceivers[c]&&(o._disposeIceAndDtlsTransports(c),o.transceivers[c].iceGatherer=o.transceivers[0].iceGatherer,o.transceivers[c].iceTransport=o.transceivers[0].iceTransport,o.transceivers[c].dtlsTransport=o.transceivers[0].dtlsTransport,o.transceivers[c].rtpSender&&o.transceivers[c].rtpSender.setTransport(o.transceivers[0].dtlsTransport),o.transceivers[c].rtpReceiver&&o.transceivers[c].rtpReceiver.setTransport(o.transceivers[0].dtlsTransport)),\"offer\"!==n.type||p){if(\"answer\"===n.type&&!p){_=(I=o.transceivers[c]).iceGatherer,C=I.iceTransport,S=I.dtlsTransport,v=I.rtpReceiver,T=I.sendEncodingParameters,y=I.localCapabilities,o.transceivers[c].recvEncodingParameters=R,o.transceivers[c].remoteCapabilities=O,o.transceivers[c].rtcpParameters=D,L.length&&\"new\"===C.state&&(!u&&!P||h&&0!==c?L.forEach((function(e){oT(I.iceTransport,e)})):C.setRemoteCandidates(L)),h&&0!==c||(\"new\"===C.state&&C.start(_,b,\"controlling\"),\"new\"===S.state&&S.start(N)),!rT(I.localCapabilities,I.remoteCapabilities).codecs.filter((function(e){return\"rtx\"===e.name.toLowerCase()})).length&&I.sendEncodingParameters[0].rtx&&delete I.sendEncodingParameters[0].rtx,o._transceive(I,\"sendrecv\"===E||\"recvonly\"===E,\"sendrecv\"===E||\"sendonly\"===E),!v||\"sendrecv\"!==E&&\"sendonly\"!==E?delete I.rtpReceiver:(w=v.track,f?(s[f.stream]||(s[f.stream]=new e.MediaStream),i(w,s[f.stream]),a.push([w,v,s[f.stream]])):(s.default||(s.default=new e.MediaStream),i(w,s.default),a.push([w,v,s.default])))}}else{(I=o.transceivers[c]||o._createTransceiver(l)).mid=m,I.iceGatherer||(I.iceGatherer=o._createIceGatherer(c,h)),L.length&&\"new\"===I.iceTransport.state&&(!P||h&&0!==c?L.forEach((function(e){oT(I.iceTransport,e)})):I.iceTransport.setRemoteCandidates(L)),y=e.RTCRtpReceiver.getCapabilities(l),t<15019&&(y.codecs=y.codecs.filter((function(e){return\"rtx\"!==e.name}))),T=I.sendEncodingParameters||[{ssrc:1001*(2*c+2)}];var k,B=!1;if(\"sendrecv\"===E||\"sendonly\"===E){if(B=!I.rtpReceiver,v=I.rtpReceiver||new e.RTCRtpReceiver(I.dtlsTransport,l),B)w=v.track,f&&\"-\"===f.stream||(f?(s[f.stream]||(s[f.stream]=new e.MediaStream,Object.defineProperty(s[f.stream],\"id\",{get:function(){return f.stream}})),Object.defineProperty(w,\"id\",{get:function(){return f.track}}),k=s[f.stream]):(s.default||(s.default=new e.MediaStream),k=s.default)),k&&(i(w,k),I.associatedRemoteMediaStreams.push(k)),a.push([w,v,k])}else I.rtpReceiver&&I.rtpReceiver.track&&(I.associatedRemoteMediaStreams.forEach((function(t){var i=t.getTracks().find((function(e){return e.id===I.rtpReceiver.track.id}));i&&function(t,i){i.removeTrack(t),i.dispatchEvent(new e.MediaStreamTrackEvent(\"removetrack\",{track:t}))}(i,t)})),I.associatedRemoteMediaStreams=[]);I.localCapabilities=y,I.remoteCapabilities=O,I.rtpReceiver=v,I.rtcpParameters=D,I.sendEncodingParameters=T,I.recvEncodingParameters=R,o._transceive(o.transceivers[c],!1,B)}}})),void 0===o._dtlsRole&&(o._dtlsRole=\"offer\"===n.type?\"active\":\"passive\"),o._remoteDescription={type:n.type,sdp:n.sdp},\"offer\"===n.type?o._updateSignalingState(\"have-remote-offer\"):o._updateSignalingState(\"stable\"),Object.keys(s).forEach((function(t){var i=s[t];if(i.getTracks().length){if(-1===o.remoteStreams.indexOf(i)){o.remoteStreams.push(i);var n=new Event(\"addstream\");n.stream=i,e.setTimeout((function(){o._dispatchEvent(\"addstream\",n)}))}a.forEach((function(e){var t=e[0],n=e[1];i.id===e[2].id&&r(o,t,n,[i])}))}})),a.forEach((function(e){e[2]||r(o,e[0],e[1],[])})),e.setTimeout((function(){o&&o.transceivers&&o.transceivers.forEach((function(e){e.iceTransport&&\"new\"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"),e.iceTransport.addRemoteCandidate({}))}))}),4e3),Promise.resolve()},n.prototype.close=function(){this.transceivers.forEach((function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()})),this._isClosed=!0,this._updateSignalingState(\"closed\")},n.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this._dispatchEvent(\"signalingstatechange\",t)},n.prototype._maybeFireNegotiationNeeded=function(){var t=this;\"stable\"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,e.setTimeout((function(){if(t.needNegotiation){t.needNegotiation=!1;var e=new Event(\"negotiationneeded\");t._dispatchEvent(\"negotiationneeded\",e)}}),0))},n.prototype._updateIceConnectionState=function(){var e,t={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(e){e.iceTransport&&!e.rejected&&t[e.iceTransport.state]++})),e=\"new\",t.failed>0?e=\"failed\":t.checking>0?e=\"checking\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0?e=\"connected\":t.completed>0&&(e=\"completed\"),e!==this.iceConnectionState){this.iceConnectionState=e;var i=new Event(\"iceconnectionstatechange\");this._dispatchEvent(\"iceconnectionstatechange\",i)}},n.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach((function(e){e.iceTransport&&e.dtlsTransport&&!e.rejected&&(t[e.iceTransport.state]++,t[e.dtlsTransport.state]++)})),t.connected+=t.completed,e=\"new\",t.failed>0?e=\"failed\":t.connecting>0?e=\"connecting\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0&&(e=\"connected\"),e!==this.connectionState){this.connectionState=e;var i=new Event(\"connectionstatechange\");this._dispatchEvent(\"connectionstatechange\",i)}},n.prototype.createOffer=function(){var i=this;if(i._isClosed)return Promise.reject(sT(\"InvalidStateError\",\"Can not call createOffer after close\"));var r=i.transceivers.filter((function(e){return\"audio\"===e.kind})).length,n=i.transceivers.filter((function(e){return\"video\"===e.kind})).length,o=arguments[0];if(o){if(o.mandatory||o.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==o.offerToReceiveAudio&&(r=!0===o.offerToReceiveAudio?1:!1===o.offerToReceiveAudio?0:o.offerToReceiveAudio),void 0!==o.offerToReceiveVideo&&(n=!0===o.offerToReceiveVideo?1:!1===o.offerToReceiveVideo?0:o.offerToReceiveVideo)}for(i.transceivers.forEach((function(e){\"audio\"===e.kind?--r<0&&(e.wantReceive=!1):\"video\"===e.kind&&--n<0&&(e.wantReceive=!1)}));r>0||n>0;)r>0&&(i._createTransceiver(\"audio\"),r--),n>0&&(i._createTransceiver(\"video\"),n--);var s=tT.writeSessionBoilerplate(i._sdpSessionId,i._sdpSessionVersion++);i.transceivers.forEach((function(r,n){var o=r.track,s=r.kind,a=r.mid||tT.generateIdentifier();r.mid=a,r.iceGatherer||(r.iceGatherer=i._createIceGatherer(n,i.usingBundle));var c=e.RTCRtpSender.getCapabilities(s);t<15019&&(c.codecs=c.codecs.filter((function(e){return\"rtx\"!==e.name}))),c.codecs.forEach((function(e){\"H264\"===e.name&&void 0===e.parameters[\"level-asymmetry-allowed\"]&&(e.parameters[\"level-asymmetry-allowed\"]=\"1\"),r.remoteCapabilities&&r.remoteCapabilities.codecs&&r.remoteCapabilities.codecs.forEach((function(t){e.name.toLowerCase()===t.name.toLowerCase()&&e.clockRate===t.clockRate&&(e.preferredPayloadType=t.payloadType)}))})),c.headerExtensions.forEach((function(e){(r.remoteCapabilities&&r.remoteCapabilities.headerExtensions||[]).forEach((function(t){e.uri===t.uri&&(e.id=t.id)}))}));var d=r.sendEncodingParameters||[{ssrc:1001*(2*n+1)}];o&&t>=15019&&\"video\"===s&&!d[0].rtx&&(d[0].rtx={ssrc:d[0].ssrc+1}),r.wantReceive&&(r.rtpReceiver=new e.RTCRtpReceiver(r.dtlsTransport,s)),r.localCapabilities=c,r.sendEncodingParameters=d})),\"max-compat\"!==i._config.bundlePolicy&&(s+=\"a=group:BUNDLE \"+i.transceivers.map((function(e){return e.mid})).join(\" \")+\"\\r\\n\"),s+=\"a=ice-options:trickle\\r\\n\",i.transceivers.forEach((function(e,t){s+=iT(e,e.localCapabilities,\"offer\",e.stream,i._dtlsRole),s+=\"a=rtcp-rsize\\r\\n\",!e.iceGatherer||\"new\"===i.iceGatheringState||0!==t&&i.usingBundle||(e.iceGatherer.getLocalCandidates().forEach((function(e){e.component=1,s+=\"a=\"+tT.writeCandidate(e)+\"\\r\\n\"})),\"completed\"===e.iceGatherer.state&&(s+=\"a=end-of-candidates\\r\\n\"))}));var a=new e.RTCSessionDescription({type:\"offer\",sdp:s});return Promise.resolve(a)},n.prototype.createAnswer=function(){var i=this;if(i._isClosed)return Promise.reject(sT(\"InvalidStateError\",\"Can not call createAnswer after close\"));if(\"have-remote-offer\"!==i.signalingState&&\"have-local-pranswer\"!==i.signalingState)return Promise.reject(sT(\"InvalidStateError\",\"Can not call createAnswer in signalingState \"+i.signalingState));var r=tT.writeSessionBoilerplate(i._sdpSessionId,i._sdpSessionVersion++);i.usingBundle&&(r+=\"a=group:BUNDLE \"+i.transceivers.map((function(e){return e.mid})).join(\" \")+\"\\r\\n\"),r+=\"a=ice-options:trickle\\r\\n\";var n=tT.getMediaSections(i._remoteDescription.sdp).length;i.transceivers.forEach((function(e,o){if(!(o+1>n)){if(e.rejected)return\"application\"===e.kind?\"DTLS/SCTP\"===e.protocol?r+=\"m=application 0 DTLS/SCTP 5000\\r\\n\":r+=\"m=application 0 \"+e.protocol+\" webrtc-datachannel\\r\\n\":\"audio\"===e.kind?r+=\"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\":\"video\"===e.kind&&(r+=\"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"),void(r+=\"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\"+e.mid+\"\\r\\n\");var s;if(e.stream)\"audio\"===e.kind?s=e.stream.getAudioTracks()[0]:\"video\"===e.kind&&(s=e.stream.getVideoTracks()[0]),s&&t>=15019&&\"video\"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1});var a=rT(e.localCapabilities,e.remoteCapabilities);!a.codecs.filter((function(e){return\"rtx\"===e.name.toLowerCase()})).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,r+=iT(e,a,\"answer\",e.stream,i._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(r+=\"a=rtcp-rsize\\r\\n\")}}));var o=new e.RTCSessionDescription({type:\"answer\",sdp:r});return Promise.resolve(o)},n.prototype.addIceCandidate=function(e){var t,i=this;return e&&void 0===e.sdpMLineIndex&&!e.sdpMid?Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")):new Promise((function(r,n){if(!i._remoteDescription)return n(sT(\"InvalidStateError\",\"Can not add ICE candidate without a remote description\"));if(e&&\"\"!==e.candidate){var o=e.sdpMLineIndex;if(e.sdpMid)for(var s=0;s<i.transceivers.length;s++)if(i.transceivers[s].mid===e.sdpMid){o=s;break}var a=i.transceivers[o];if(!a)return n(sT(\"OperationError\",\"Can not add ICE candidate\"));if(a.rejected)return r();var c=Object.keys(e.candidate).length>0?tT.parseCandidate(e.candidate):{};if(\"tcp\"===c.protocol&&(0===c.port||9===c.port))return r();if(c.component&&1!==c.component)return r();if((0===o||o>0&&a.iceTransport!==i.transceivers[0].iceTransport)&&!oT(a.iceTransport,c))return n(sT(\"OperationError\",\"Can not add ICE candidate\"));var d=e.candidate.trim();0===d.indexOf(\"a=\")&&(d=d.substr(2)),(t=tT.getMediaSections(i._remoteDescription.sdp))[o]+=\"a=\"+(c.type?d:\"end-of-candidates\")+\"\\r\\n\",i._remoteDescription.sdp=tT.getDescription(i._remoteDescription.sdp)+t.join(\"\")}else for(var u=0;u<i.transceivers.length&&(i.transceivers[u].rejected||(i.transceivers[u].iceTransport.addRemoteCandidate({}),(t=tT.getMediaSections(i._remoteDescription.sdp))[u]+=\"a=end-of-candidates\\r\\n\",i._remoteDescription.sdp=tT.getDescription(i._remoteDescription.sdp)+t.join(\"\"),!i.usingBundle));u++);r()}))},n.prototype.getStats=function(t){if(t&&t instanceof e.MediaStreamTrack){var i=null;if(this.transceivers.forEach((function(e){e.rtpSender&&e.rtpSender.track===t?i=e.rtpSender:e.rtpReceiver&&e.rtpReceiver.track===t&&(i=e.rtpReceiver)})),!i)throw sT(\"InvalidAccessError\",\"Invalid selector.\");return i.getStats()}var r=[];return this.transceivers.forEach((function(e){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach((function(t){e[t]&&r.push(e[t].getStats())}))})),Promise.all(r).then((function(e){var t=new Map;return e.forEach((function(e){e.forEach((function(e){t.set(e.id,e)}))})),t}))};[\"RTCRtpSender\",\"RTCRtpReceiver\",\"RTCIceGatherer\",\"RTCIceTransport\",\"RTCDtlsTransport\"].forEach((function(t){var i=e[t];if(i&&i.prototype&&i.prototype.getStats){var r=i.prototype.getStats;i.prototype.getStats=function(){return r.apply(this).then((function(e){var t=new Map;return Object.keys(e).forEach((function(i){var r;e[i].type={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[(r=e[i]).type]||r.type,t.set(i,e[i])})),t}))}}}));var o=[\"createOffer\",\"createAnswer\"];return o.forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[0]||\"function\"==typeof e[1]?t.apply(this,[arguments[2]]).then((function(t){\"function\"==typeof e[0]&&e[0].apply(null,[t])}),(function(t){\"function\"==typeof e[1]&&e[1].apply(null,[t])})):t.apply(this,arguments)}})),(o=[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"]).forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]||\"function\"==typeof e[2]?t.apply(this,arguments).then((function(){\"function\"==typeof e[1]&&e[1].apply(null)}),(function(t){\"function\"==typeof e[2]&&e[2].apply(null,[t])})):t.apply(this,arguments)}})),[\"getStats\"].forEach((function(e){var t=n.prototype[e];n.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]?t.apply(this,arguments).then((function(){\"function\"==typeof e[1]&&e[1].apply(null)})):t.apply(this,arguments)}})),n};function cT(e){const t=e&&e.navigator,i=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return i(e).catch(e=>l_.reject(function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString(){return this.name}}}(e)))}}function dT(e){\"getDisplayMedia\"in e.navigator&&e.navigator.mediaDevices&&(e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||(e.navigator.mediaDevices.getDisplayMedia=e.navigator.getDisplayMedia.bind(e.navigator)))}function uT(e,t){if(e.RTCIceGatherer&&(e.RTCIceCandidate||(e.RTCIceCandidate=function(e){return e}),e.RTCSessionDescription||(e.RTCSessionDescription=function(e){return e}),t.version<15025)){const t=Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype,\"enabled\");Object.defineProperty(e.MediaStreamTrack.prototype,\"enabled\",{set(e){t.set.call(this,e);const i=new Event(\"enabled\");i.enabled=e,this.dispatchEvent(i)}})}e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)&&Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=new e.RTCDtmfSender(this):\"video\"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),e.RTCDtmfSender&&!e.RTCDTMFSender&&(e.RTCDTMFSender=e.RTCDtmfSender);const i=aT(e,t.version);e.RTCPeerConnection=function(e){return e&&e.iceServers&&(e.iceServers=function(e,t){let i=!1;return(e=JSON.parse(JSON.stringify(e))).filter(e=>{if(e&&(e.urls||e.url)){let t=e.urls||e.url;e.url&&!e.urls&&Yh(\"RTCIceServer.url\",\"RTCIceServer.urls\");const r=\"string\"==typeof t;return r&&(t=[t]),t=t.filter(e=>{if(0===e.indexOf(\"stun:\"))return!1;const t=e.startsWith(\"turn\")&&!e.startsWith(\"turn:[\")&&e.includes(\"transport=udp\");return t&&!i?(i=!0,!0):t&&!i}),delete e.url,e.urls=r?t[0]:t,!!t.length}})}(e.iceServers,t.version),Wh(\"ICE servers after filtering:\",e.iceServers)),new i(e)},e.RTCPeerConnection.prototype=i.prototype}function hT(e){e.RTCRtpSender&&!(\"replaceTrack\"in e.RTCRtpSender.prototype)&&(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)}var AT=Object.freeze({__proto__:null,shimPeerConnection:uT,shimReplaceTrack:hT,shimGetUserMedia:cT,shimGetDisplayMedia:dT}),lT=i.Promise,pT=Ht.exports,gT=function(e,t,i){for(var r in t)pT(e,r,t[r],i);return e},ET=ge,fT=s,mT=S(S.bind),IT=function(e,t){return ET(e),void 0===t?e:fT?mT(e,t):function(){return e.apply(t,arguments)}},_T=Pd,CT=ze(\"iterator\"),ST=Array.prototype,vT=function(e){return void 0!==e&&(_T.Array===e||ST[CT]===e)},TT=fc,RT=fe,yT=Pd,wT=ze(\"iterator\"),bT=function(e){if(null!=e)return RT(e,wT)||RT(e,\"@@iterator\")||yT[TT(e)]},NT=d,OT=ge,DT=Ot,PT=he,LT=bT,kT=i.TypeError,BT=function(e,t){var i=arguments.length<2?LT(e):t;if(OT(i))return DT(NT(i,e));throw kT(PT(e)+\" is not iterable\")},MT=d,UT=Ot,xT=fe,QT=IT,FT=d,VT=Ot,jT=he,GT=vT,KT=er,HT=H,WT=BT,YT=bT,JT=function(e,t,i){var r,n;UT(e);try{if(!(r=xT(e,\"return\"))){if(\"throw\"===t)throw i;return i}r=MT(r,e)}catch(e){n=!0,r=e}if(\"throw\"===t)throw i;if(n)throw r;return UT(r),i},qT=i.TypeError,XT=function(e,t){this.stopped=e,this.result=t},zT=XT.prototype,ZT=ze(\"iterator\"),$T=!1;try{var eR=0,tR={next:function(){return{done:!!eR++}},return:function(){$T=!0}};tR[ZT]=function(){return this},Array.from(tR,(function(){throw 2}))}catch(e){}var iR=function(e,t){if(!t&&!$T)return!1;var i=!1;try{var r={};r[ZT]=function(){return{next:function(){return{done:i=!0}}}},e(r)}catch(e){}return i},rR=S,nR=n,oR=x,sR=fc,aR=Zt,cR=function(){},dR=[],uR=K(\"Reflect\",\"construct\"),hR=/^\\s*(?:class|function)\\b/,AR=rR(hR.exec),lR=!hR.exec(cR),pR=function(e){if(!oR(e))return!1;try{return uR(cR,dR,e),!0}catch(e){return!1}},gR=function(e){if(!oR(e))return!1;switch(sR(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return lR||!!AR(hR,aR(e))}catch(e){return!0}};gR.sham=!0;var ER,fR,mR,IR,_R=!uR||nR((function(){var e;return pR(pR.call)||!pR(Object)||!pR((function(){e=!0}))||e}))?gR:pR,CR=_R,SR=he,vR=i.TypeError,TR=function(e){if(CR(e))return e;throw vR(SR(e)+\" is not a constructor\")},RR=Ot,yR=TR,wR=ze(\"species\"),bR=function(e,t){var i,r=RR(e).constructor;return void 0===r||null==(i=RR(r)[wR])?t:yR(i)},NR=S([].slice),OR=/(?:ipad|iphone|ipod).*applewebkit/i.test(W),DR=i,PR=Jr,LR=IT,kR=x,BR=Be,MR=n,UR=Qc,xR=NR,QR=At,FR=OR,VR=p_,jR=DR.setImmediate,GR=DR.clearImmediate,KR=DR.process,HR=DR.Dispatch,WR=DR.Function,YR=DR.MessageChannel,JR=DR.String,qR=0,XR={},zR=\"onreadystatechange\";try{ER=DR.location}catch(e){}var ZR=function(e){if(BR(XR,e)){var t=XR[e];delete XR[e],t()}},$R=function(e){return function(){ZR(e)}},ey=function(e){ZR(e.data)},ty=function(e){DR.postMessage(JR(e),ER.protocol+\"//\"+ER.host)};jR&&GR||(jR=function(e){var t=xR(arguments,1);return XR[++qR]=function(){PR(kR(e)?e:WR(e),void 0,t)},fR(qR),qR},GR=function(e){delete XR[e]},VR?fR=function(e){KR.nextTick($R(e))}:HR&&HR.now?fR=function(e){HR.now($R(e))}:YR&&!FR?(IR=(mR=new YR).port2,mR.port1.onmessage=ey,fR=LR(IR.postMessage,IR)):DR.addEventListener&&kR(DR.postMessage)&&!DR.importScripts&&ER&&\"file:\"!==ER.protocol&&!MR(ty)?(fR=ty,DR.addEventListener(\"message\",ey,!1)):fR=zR in QR(\"script\")?function(e){UR.appendChild(QR(\"script\")).onreadystatechange=function(){UR.removeChild(this),ZR(e)}}:function(e){setTimeout($R(e),0)});var iy,ry,ny,oy,sy,ay,cy,dy,uy={set:jR,clear:GR},hy=i,Ay=/ipad|iphone|ipod/i.test(W)&&void 0!==hy.Pebble,ly=/web0s(?!.*chrome)/i.test(W),py=i,gy=IT,Ey=r.f,fy=uy.set,my=OR,Iy=Ay,_y=ly,Cy=p_,Sy=py.MutationObserver||py.WebKitMutationObserver,vy=py.document,Ty=py.process,Ry=py.Promise,yy=Ey(py,\"queueMicrotask\"),wy=yy&&yy.value;wy||(iy=function(){var e,t;for(Cy&&(e=Ty.domain)&&e.exit();ry;){t=ry.fn,ry=ry.next;try{t()}catch(e){throw ry?oy():ny=void 0,e}}ny=void 0,e&&e.enter()},my||Cy||_y||!Sy||!vy?!Iy&&Ry&&Ry.resolve?((cy=Ry.resolve(void 0)).constructor=Ry,dy=gy(cy.then,cy),oy=function(){dy(iy)}):Cy?oy=function(){Ty.nextTick(iy)}:(fy=gy(fy,py),oy=function(){fy(iy)}):(sy=!0,ay=vy.createTextNode(\"\"),new Sy(iy).observe(ay,{characterData:!0}),oy=function(){ay.data=sy=!sy}));var by=wy||function(e){var t={fn:e,next:void 0};ny&&(ny.next=t),ry||(ry=t,oy()),ny=t},Ny={},Oy=ge,Dy=function(e){var t,i;this.promise=new e((function(e,r){if(void 0!==t||void 0!==i)throw TypeError(\"Bad Promise constructor\");t=e,i=r})),this.resolve=Oy(t),this.reject=Oy(i)};Ny.f=function(e){return new Dy(e)};var Py=Ot,Ly=F,ky=Ny,By=function(e,t){if(Py(e),Ly(t)&&t.constructor===e)return t;var i=ky.f(e);return(0,i.resolve)(t),i.promise},My=i,Uy=function(){this.head=null,this.tail=null};Uy.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}};var xy,Qy,Fy,Vy,jy=Uy,Gy=\"object\"==typeof window,Ky=Gr,Hy=i,Wy=K,Yy=d,Jy=lT,qy=Ht.exports,Xy=gT,zy=lu,Zy=$d,$y=WS,ew=ge,tw=x,iw=F,rw=m_,nw=Zt,ow=function(e,t,i){var r,n,o,s,a,c,d,u=i&&i.that,h=!(!i||!i.AS_ENTRIES),A=!(!i||!i.IS_ITERATOR),l=!(!i||!i.INTERRUPTED),p=QT(t,u),g=function(e){return r&&JT(r,\"normal\",e),new XT(!0,e)},E=function(e){return h?(VT(e),l?p(e[0],e[1],g):p(e[0],e[1])):l?p(e,g):p(e)};if(A)r=e;else{if(!(n=YT(e)))throw qT(jT(e)+\" is not iterable\");if(GT(n)){for(o=0,s=KT(e);s>o;o++)if((a=E(e[o]))&&HT(zT,a))return a;return new XT(!1)}r=WT(e,n)}for(c=r.next;!(d=FT(c,r)).done;){try{a=E(d.value)}catch(e){JT(r,\"throw\",e)}if(\"object\"==typeof a&&a&&HT(zT,a))return a}return new XT(!1)},sw=iR,aw=bR,cw=uy.set,dw=by,uw=By,hw=function(e,t){var i=My.console;i&&i.error&&(1==arguments.length?i.error(e):i.error(e,t))},Aw=Ny,lw=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},pw=jy,gw=Ri,Ew=Br,fw=Gy,mw=p_,Iw=$,_w=ze(\"species\"),Cw=\"Promise\",Sw=gw.getterFor(Cw),vw=gw.set,Tw=gw.getterFor(Cw),Rw=Jy&&Jy.prototype,yw=Jy,ww=Rw,bw=Hy.TypeError,Nw=Hy.document,Ow=Hy.process,Dw=Aw.f,Pw=Dw,Lw=!!(Nw&&Nw.createEvent&&Hy.dispatchEvent),kw=tw(Hy.PromiseRejectionEvent),Bw=\"unhandledrejection\",Mw=!1,Uw=Ew(Cw,(function(){var e=nw(yw),t=e!==String(yw);if(!t&&66===Iw)return!0;if(Iw>=51&&/native code/.test(e))return!1;var i=new yw((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};return(i.constructor={})[_w]=r,!(Mw=i.then((function(){}))instanceof r)||!t&&fw&&!kw})),xw=Uw||!sw((function(e){yw.all(e).catch((function(){}))})),Qw=function(e){var t;return!(!iw(e)||!tw(t=e.then))&&t},Fw=function(e,t){var i,r,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,u=e.domain;try{a?(s||(2===t.rejection&&Hw(t),t.rejection=1),!0===a?i=o:(u&&u.enter(),i=a(o),u&&(u.exit(),n=!0)),i===e.promise?d(bw(\"Promise-chain cycle\")):(r=Qw(i))?Yy(r,i,c,d):c(i)):d(o)}catch(e){u&&!n&&u.exit(),d(e)}},Vw=function(e,t){e.notified||(e.notified=!0,dw((function(){for(var i,r=e.reactions;i=r.get();)Fw(i,e);e.notified=!1,t&&!e.rejection&&Gw(e)})))},jw=function(e,t,i){var r,n;Lw?((r=Nw.createEvent(\"Event\")).promise=t,r.reason=i,r.initEvent(e,!1,!0),Hy.dispatchEvent(r)):r={promise:t,reason:i},!kw&&(n=Hy[\"on\"+e])?n(r):e===Bw&&hw(\"Unhandled promise rejection\",i)},Gw=function(e){Yy(cw,Hy,(function(){var t,i=e.facade,r=e.value;if(Kw(e)&&(t=lw((function(){mw?Ow.emit(\"unhandledRejection\",r,i):jw(Bw,i,r)})),e.rejection=mw||Kw(e)?2:1,t.error))throw t.value}))},Kw=function(e){return 1!==e.rejection&&!e.parent},Hw=function(e){Yy(cw,Hy,(function(){var t=e.facade;mw?Ow.emit(\"rejectionHandled\",t):jw(\"rejectionhandled\",t,e.value)}))},Ww=function(e,t,i){return function(r){e(t,r,i)}},Yw=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,Vw(e,!0))},Jw=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw bw(\"Promise can't be resolved itself\");var r=Qw(t);r?dw((function(){var i={done:!1};try{Yy(r,t,Ww(Jw,i,e),Ww(Yw,i,e))}catch(t){Yw(i,t,e)}})):(e.value=t,e.state=1,Vw(e,!1))}catch(t){Yw({done:!1},t,e)}}};if(Uw&&(ww=(yw=function(e){rw(this,ww),ew(e),Yy(xy,this);var t=Sw(this);try{e(Ww(Jw,t),Ww(Yw,t))}catch(e){Yw(t,e)}}).prototype,(xy=function(e){vw(this,{type:Cw,done:!1,notified:!1,parent:!1,reactions:new pw,rejection:!1,state:0,value:void 0})}).prototype=Xy(ww,{then:function(e,t){var i=Tw(this),r=Dw(aw(this,yw));return i.parent=!0,r.ok=!tw(e)||e,r.fail=tw(t)&&t,r.domain=mw?Ow.domain:void 0,0==i.state?i.reactions.add(r):dw((function(){Fw(r,i)})),r.promise},catch:function(e){return this.then(void 0,e)}}),Qy=function(){var e=new xy,t=Sw(e);this.promise=e,this.resolve=Ww(Jw,t),this.reject=Ww(Yw,t)},Aw.f=Dw=function(e){return e===yw||e===Fy?new Qy(e):Pw(e)},tw(Jy)&&Rw!==Object.prototype)){Vy=Rw.then,Mw||(qy(Rw,\"then\",(function(e,t){var i=this;return new yw((function(e,t){Yy(Vy,i,e,t)})).then(e,t)}),{unsafe:!0}),qy(Rw,\"catch\",ww.catch,{unsafe:!0}));try{delete Rw.constructor}catch(e){}zy&&zy(Rw,ww)}Ky({global:!0,wrap:!0,forced:Uw},{Promise:yw}),Zy(yw,Cw,!1),$y(Cw),Fy=Wy(Cw),Ky({target:Cw,stat:!0,forced:Uw},{reject:function(e){var t=Dw(this);return Yy(t.reject,void 0,e),t.promise}}),Ky({target:Cw,stat:!0,forced:Uw},{resolve:function(e){return uw(this,e)}}),Ky({target:Cw,stat:!0,forced:xw},{all:function(e){var t=this,i=Dw(t),r=i.resolve,n=i.reject,o=lw((function(){var i=ew(t.resolve),o=[],s=0,a=1;ow(e,(function(e){var c=s++,d=!1;a++,Yy(i,t,e).then((function(e){d||(d=!0,o[c]=e,--a||r(o))}),n)})),--a||r(o)}));return o.error&&n(o.value),i.promise},race:function(e){var t=this,i=Dw(t),r=i.reject,n=lw((function(){var n=ew(t.resolve);ow(e,(function(e){Yy(n,t,e).then(i.resolve,r)}))}));return n.error&&r(n.value),i.promise}});var qw=Gr,Xw=lT,zw=n,Zw=K,$w=x,eb=bR,tb=By,ib=Ht.exports;if(qw({target:\"Promise\",proto:!0,real:!0,forced:!!Xw&&zw((function(){Xw.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=eb(this,Zw(\"Promise\")),i=$w(e);return this.then(i?function(i){return tb(t,e()).then((function(){return i}))}:e,i?function(i){return tb(t,e()).then((function(){throw i}))}:e)}}),$w(Xw)){var rb=Zw(\"Promise\").prototype.finally;Xw.prototype.finally!==rb&&ib(Xw.prototype,\"finally\",rb,{unsafe:!0})}function nb(e,t){const i=e&&e.navigator,r=e&&e.MediaStreamTrack;if(i.getUserMedia=function(e,t,r){Yh(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),i.mediaDevices.getUserMedia(e).then(t,r)},!(t.version>55&&\"autoGainControl\"in i.mediaDevices.getSupportedConstraints())){const e=function(e,t,i){t in e&&!(i in e)&&(e[i]=e[t],delete e[t])},t=i.mediaDevices.getUserMedia.bind(i.mediaDevices);if(i.mediaDevices.getUserMedia=function(i){return\"object\"==typeof i&&\"object\"==typeof i.audio&&(i=JSON.parse(JSON.stringify(i)),e(i.audio,\"autoGainControl\",\"mozAutoGainControl\"),e(i.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),t(i)},r&&r.prototype.getSettings){const t=r.prototype.getSettings;r.prototype.getSettings=function(){const i=t.apply(this,arguments);return e(i,\"mozAutoGainControl\",\"autoGainControl\"),e(i,\"mozNoiseSuppression\",\"noiseSuppression\"),i}}if(r&&r.prototype.applyConstraints){const t=r.prototype.applyConstraints;r.prototype.applyConstraints=function(i){return\"audio\"===this.kind&&\"object\"==typeof i&&(i=JSON.parse(JSON.stringify(i)),e(i,\"autoGainControl\",\"mozAutoGainControl\"),e(i,\"noiseSuppression\",\"mozNoiseSuppression\")),t.apply(this,[i])}}}}function ob(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function sb(e,t){if(\"object\"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach((function(t){const i=e.RTCPeerConnection.prototype[t],r={[t](){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),i.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=r[t]}));const i={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},r=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){const[e,n,o]=arguments;return r.apply(this,[e||null]).then(e=>{if(t.version<53&&!n)try{e.forEach(e=>{e.type=i[e.type]||e.type})}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach((t,r)=>{e.set(r,Object.assign({},t,{type:i[t.type]||t.type}))})}return e}).then(n,o)}}function ab(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpSender.prototype)return;const t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e});const i=e.RTCPeerConnection.prototype.addTrack;i&&(e.RTCPeerConnection.prototype.addTrack=function(){const e=i.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):l_.resolve(new Map)}}function cb(e){if(\"object\"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender)return;if(e.RTCRtpSender&&\"getStats\"in e.RTCRtpReceiver.prototype)return;const t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){const e=t.apply(this,[]);return e.forEach(e=>e._pc=this),e}),Gh(e,\"track\",e=>(e.receiver._pc=e.srcElement,e)),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function db(e){e.RTCPeerConnection&&!(\"removeStream\"in e.RTCPeerConnection.prototype)&&(e.RTCPeerConnection.prototype.removeStream=function(e){Yh(\"removeStream\",\"removeTrack\"),this.getSenders().forEach(t=>{t.track&&e.getTracks().includes(t.track)&&this.removeTrack(t)})})}function ub(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function hb(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];const e=arguments[1],i=e&&\"sendEncodings\"in e;i&&e.sendEncodings.forEach(e=>{if(\"rid\"in e){if(!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError(\"Invalid RID value provided.\")}if(\"scaleResolutionDownBy\"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError(\"scale_resolution_down_by must be >= 1.0\");if(\"maxFramerate\"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError(\"max_framerate must be >= 0.0\")});const r=t.apply(this,arguments);if(i){const{sender:t}=r,i=t.getParameters();(!(\"encodings\"in i)||1===i.encodings.length&&0===Object.keys(i.encodings[0]).length)&&(i.encodings=e.sendEncodings,t.sendEncodings=e.sendEncodings,this.setParametersPromises.push(t.setParameters(i).then(()=>{delete t.sendEncodings}).catch(()=>{delete t.sendEncodings})))}return r})}function Ab(e){if(\"object\"!=typeof e||!e.RTCRtpSender)return;const t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){const e=t.apply(this,arguments);return\"encodings\"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function lb(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?l_.all(this.setParametersPromises).then(()=>t.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):t.apply(this,arguments)}}function pb(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?l_.all(this.setParametersPromises).then(()=>t.apply(this,arguments)).finally(()=>{this.setParametersPromises=[]}):t.apply(this,arguments)}}var gb=Object.freeze({__proto__:null,shimOnTrack:ob,shimPeerConnection:sb,shimSenderGetStats:ab,shimReceiverGetStats:cb,shimRemoveStream:db,shimRTCDataChannel:ub,shimAddTransceiver:hb,shimGetParameters:Ab,shimCreateOffer:lb,shimCreateAnswer:pb,shimGetUserMedia:nb,shimGetDisplayMedia:function(e,t){e.navigator.mediaDevices&&\"getDisplayMedia\"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(i){if(!i||!i.video){const e=new DOMException(\"getDisplayMedia without video constraints is undefined\");return e.name=\"NotFoundError\",e.code=8,l_.reject(e)}return!0===i.video?i.video={mediaSource:t}:i.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(i)})}});function Eb(e){if(\"object\"==typeof e&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!(\"addStream\"in e.RTCPeerConnection.prototype)){const t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),this._localStreams.includes(e)||this._localStreams.push(e),e.getAudioTracks().forEach(i=>t.call(this,i,e)),e.getVideoTracks().forEach(i=>t.call(this,i,e))},e.RTCPeerConnection.prototype.addTrack=function(e){for(var i=arguments.length,r=new Array(i>1?i-1:0),n=1;n<i;n++)r[n-1]=arguments[n];return r&&r.forEach(e=>{this._localStreams?this._localStreams.includes(e)||this._localStreams.push(e):this._localStreams=[e]}),t.apply(this,arguments)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);const t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);const i=e.getTracks();this.getSenders().forEach(e=>{i.includes(e.track)&&this.removeTrack(e)})})}}function fb(e){if(\"object\"==typeof e&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!(\"onaddstream\"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=e=>{e.streams.forEach(e=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(e))return;this._remoteStreams.push(e);const t=new Event(\"addstream\");t.stream=e,this.dispatchEvent(t)})})}});const t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){const e=this;return this._onaddstreampoly||this.addEventListener(\"track\",this._onaddstreampoly=function(t){t.streams.forEach(t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);const i=new Event(\"addstream\");i.stream=t,e.dispatchEvent(i)})}),t.apply(e,arguments)}}}function mb(e){if(\"object\"!=typeof e||!e.RTCPeerConnection)return;const t=e.RTCPeerConnection.prototype,i=t.createOffer,r=t.createAnswer,n=t.setLocalDescription,o=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){const r=arguments.length>=2?arguments[2]:arguments[0],n=i.apply(this,[r]);return t?(n.then(e,t),l_.resolve()):n},t.createAnswer=function(e,t){const i=arguments.length>=2?arguments[2]:arguments[0],n=r.apply(this,[i]);return t?(n.then(e,t),l_.resolve()):n};let a=function(e,t,i){const r=n.apply(this,[e]);return i?(r.then(t,i),l_.resolve()):r};t.setLocalDescription=a,a=function(e,t,i){const r=o.apply(this,[e]);return i?(r.then(t,i),l_.resolve()):r},t.setRemoteDescription=a,a=function(e,t,i){const r=s.apply(this,[e]);return i?(r.then(t,i),l_.resolve()):r},t.addIceCandidate=a}function Ib(e){const t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){const e=t.mediaDevices,i=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>i(_b(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,i,r){t.mediaDevices.getUserMedia(e).then(i,r)}.bind(t))}function _b(e){return e&&void 0!==e.video?Object.assign({},e,{video:Xh(e.video)}):e}function Cb(e){if(!e.RTCPeerConnection)return;const t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,i){if(e&&e.iceServers){const t=[];for(let i=0;i<e.iceServers.length;i++){let r=e.iceServers[i];!r.hasOwnProperty(\"urls\")&&r.hasOwnProperty(\"url\")?(Yh(\"RTCIceServer.url\",\"RTCIceServer.urls\"),r=JSON.parse(JSON.stringify(r)),r.urls=r.url,delete r.url,t.push(r)):t.push(e.iceServers[i])}e.iceServers=t}return new t(e,i)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in t&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:()=>t.generateCertificate})}function Sb(e){\"object\"==typeof e&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get(){return{receiver:this.receiver}}})}function vb(e){const t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){void 0!==e.offerToReceiveAudio&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);const t=this.getTransceivers().find(e=>\"audio\"===e.receiver.track.kind);!1===e.offerToReceiveAudio&&t?\"sendrecv\"===t.direction?t.setDirection?t.setDirection(\"sendonly\"):t.direction=\"sendonly\":\"recvonly\"===t.direction&&(t.setDirection?t.setDirection(\"inactive\"):t.direction=\"inactive\"):!0!==e.offerToReceiveAudio||t||this.addTransceiver(\"audio\"),void 0!==e.offerToReceiveVideo&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);const i=this.getTransceivers().find(e=>\"video\"===e.receiver.track.kind);!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection?i.setDirection(\"sendonly\"):i.direction=\"sendonly\":\"recvonly\"===i.direction&&(i.setDirection?i.setDirection(\"inactive\"):i.direction=\"inactive\"):!0!==e.offerToReceiveVideo||i||this.addTransceiver(\"video\")}return t.apply(this,arguments)}}function Tb(e){\"object\"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}var Rb=Object.freeze({__proto__:null,shimLocalStreamsAPI:Eb,shimRemoteStreamsAPI:fb,shimCallbacksAPI:mb,shimGetUserMedia:Ib,shimConstraints:_b,shimRTCIceServerUrls:Cb,shimTrackEventTransceiver:Sb,shimCreateOfferLegacy:vb,shimAudioContext:Tb}),yb=\"\\t\\n\\v\\f\\r Â áââââââââââââ¯âã\\u2028\\u2029\\ufeff\",wb=$n,bb=_p,Nb=_n(\"\".replace),Ob=\"[\\t\\n\\v\\f\\r Â áââââââââââââ¯âã\\u2028\\u2029\\ufeff]\",Db=RegExp(\"^\"+Ob+Ob+\"*\"),Pb=RegExp(Ob+Ob+\"*$\"),Lb=function(e){return function(t){var i=bb(wb(t));return 1&e&&(i=Nb(i,Db,\"\")),2&e&&(i=Nb(i,Pb,\"\")),i}},kb={start:Lb(1),end:Lb(2),trim:Lb(3)},Bb=Rg.PROPER,Mb=ln,Ub=yb,xb=kb.trim;ka({target:\"String\",proto:!0,forced:function(e){return Mb((function(){return!!Ub[e]()||\"âÂá \"!==\"âÂá \"[e]()||Bb&&Ub[e].name!==e}))}(\"trim\")},{trim:function(){return xb(this)}});var Qb=ic(\"String\").trim,Fb=Cn,Vb=Qb,jb=String.prototype,Gb=function(e){var t=e.trim;return\"string\"==typeof e||e===jb||Fb(jb,e)&&t===jb.trim?Vb:t},Kb=d;Gr({target:\"URL\",proto:!0,enumerable:!0},{toJSON:function(){return Kb(URL.prototype.toString,this)}});var Hb={exports:{}};!function(e){var t={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};t.localCName=t.generateIdentifier(),t.splitLines=function(e){return Gb(e).call(e).split(\"\\n\").map((function(e){return Gb(e).call(e)}))},t.splitSections=function(e){return e.split(\"\\nm=\").map((function(e,t){var i;return Gb(i=t>0?\"m=\"+e:e).call(i)+\"\\r\\n\"}))},t.getDescription=function(e){var i=t.splitSections(e);return i&&i[0]},t.getMediaSections=function(e){var i=t.splitSections(e);return i.shift(),i},t.matchPrefix=function(e,i){return t.splitLines(e).filter((function(e){return 0===e.indexOf(i)}))},t.parseCandidate=function(e){for(var t,i={foundation:(t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \"))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":i.relatedAddress=t[r+1];break;case\"rport\":i.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":i.tcpType=t[r+1];break;case\"ufrag\":i.ufrag=t[r+1],i.usernameFragment=t[r+1];break;default:i[t[r]]=t[r+1]}return i},t.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var i=e.type;return t.push(\"typ\"),t.push(i),\"host\"!==i&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},t.parseIceOptions=function(e){return e.substr(14).split(\" \")},t.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),i={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),i.name=t[0],i.clockRate=parseInt(t[1],10),i.channels=3===t.length?parseInt(t[2],10):1,i.numChannels=i.channels,i},t.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var i=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==i?\"/\"+i:\"\")+\"\\r\\n\"},t.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},t.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},t.parseFmtp=function(e){for(var t,i={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),n=0;n<r.length;n++){var o,s;t=Gb(o=r[n]).call(o).split(\"=\"),i[Gb(s=t[0]).call(s)]=t[1]}return i},t.writeFmtp=function(e){var t=\"\",i=e.payloadType;if(void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach((function(t){e.parameters[t]?r.push(t+\"=\"+e.parameters[t]):r.push(t)})),t+=\"a=fmtp:\"+i+\" \"+r.join(\";\")+\"\\r\\n\"}return t},t.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},t.writeRtcpFb=function(e){var t=\"\",i=e.payloadType;return void 0!==e.preferredPayloadType&&(i=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((function(e){t+=\"a=rtcp-fb:\"+i+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"})),t},t.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),i={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(\":\",t);return r>-1?(i.attribute=e.substr(t+1,r-t-1),i.value=e.substr(r+1)):i.attribute=e.substr(t+1),i},t.parseSsrcGroup=function(e){var t=e.substr(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map((function(e){return parseInt(e,10)}))}},t.getMid=function(e){var i=t.matchPrefix(e,\"a=mid:\")[0];if(i)return i.substr(6)},t.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},t.getDtlsParameters=function(e,i){return{role:\"auto\",fingerprints:t.matchPrefix(e+i,\"a=fingerprint:\").map(t.parseFingerprint)}},t.writeDtlsParameters=function(e,t){var i=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach((function(e){i+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"})),i},t.parseCryptoLine=function(e){var t=e.substr(9).split(\" \");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},t.writeCryptoLine=function(e){return\"a=crypto:\"+e.tag+\" \"+e.cryptoSuite+\" \"+(\"object\"==typeof e.keyParams?t.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?\" \"+e.sessionParams.join(\" \"):\"\")+\"\\r\\n\"},t.parseCryptoKeyParams=function(e){if(0!==e.indexOf(\"inline:\"))return null;var t=e.substr(7).split(\"|\");return{keyMethod:\"inline\",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(\":\")[0]:void 0,mkiLength:t[2]?t[2].split(\":\")[1]:void 0}},t.writeCryptoKeyParams=function(e){return e.keyMethod+\":\"+e.keySalt+(e.lifeTime?\"|\"+e.lifeTime:\"\")+(e.mkiValue&&e.mkiLength?\"|\"+e.mkiValue+\":\"+e.mkiLength:\"\")},t.getCryptoParameters=function(e,i){return t.matchPrefix(e+i,\"a=crypto:\").map(t.parseCryptoLine)},t.getIceParameters=function(e,i){var r=t.matchPrefix(e+i,\"a=ice-ufrag:\")[0],n=t.matchPrefix(e+i,\"a=ice-pwd:\")[0];return r&&n?{usernameFragment:r.substr(12),password:n.substr(10)}:null},t.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},t.parseRtpParameters=function(e){for(var i={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=t.splitLines(e)[0].split(\" \"),n=3;n<r.length;n++){var o=r[n],s=t.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(s){var a=t.parseRtpMap(s),c=t.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(a.parameters=c.length?t.parseFmtp(c[0]):{},a.rtcpFeedback=t.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(t.parseRtcpFb),i.codecs.push(a),a.name.toUpperCase()){case\"RED\":case\"ULPFEC\":i.fecMechanisms.push(a.name.toUpperCase())}}}return t.matchPrefix(e,\"a=extmap:\").forEach((function(e){i.headerExtensions.push(t.parseExtmap(e))})),i},t.writeRtpDescription=function(e,i){var r=\"\";r+=\"m=\"+e+\" \",r+=i.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=i.codecs.map((function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType})).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",i.codecs.forEach((function(e){r+=t.writeRtpMap(e),r+=t.writeFmtp(e),r+=t.writeRtcpFb(e)}));var n=0;return i.codecs.forEach((function(e){e.maxptime>n&&(n=e.maxptime)})),n>0&&(r+=\"a=maxptime:\"+n+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",i.headerExtensions&&i.headerExtensions.forEach((function(e){r+=t.writeExtmap(e)})),r},t.parseRtpEncodingParameters=function(e){var i,r=[],n=t.parseRtpParameters(e),o=-1!==n.fecMechanisms.indexOf(\"RED\"),s=-1!==n.fecMechanisms.indexOf(\"ULPFEC\"),a=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"cname\"===e.attribute})),c=a.length>0&&a[0].ssrc,d=t.matchPrefix(e,\"a=ssrc-group:FID\").map((function(e){return e.substr(17).split(\" \").map((function(e){return parseInt(e,10)}))}));d.length>0&&d[0].length>1&&d[0][0]===c&&(i=d[0][1]),n.codecs.forEach((function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var t={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&i&&(t.rtx={ssrc:i}),r.push(t),o&&((t=JSON.parse(JSON.stringify(t))).fec={ssrc:c,mechanism:s?\"red+ulpfec\":\"red\"},r.push(t))}})),0===r.length&&c&&r.push({ssrc:c});var u=t.matchPrefix(e,\"b=\");return u.length&&(u=0===u[0].indexOf(\"b=TIAS:\")?parseInt(u[0].substr(7),10):0===u[0].indexOf(\"b=AS:\")?1e3*parseInt(u[0].substr(5),10)*.95-16e3:void 0,r.forEach((function(e){e.maxBitrate=u}))),r},t.parseRtcpParameters=function(e){var i={},r=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"cname\"===e.attribute}))[0];r&&(i.cname=r.value,i.ssrc=r.ssrc);var n=t.matchPrefix(e,\"a=rtcp-rsize\");i.reducedSize=n.length>0,i.compound=0===n.length;var o=t.matchPrefix(e,\"a=rtcp-mux\");return i.mux=o.length>0,i},t.parseMsid=function(e){var i,r=t.matchPrefix(e,\"a=msid:\");if(1===r.length)return{stream:(i=r[0].substr(7).split(\" \"))[0],track:i[1]};var n=t.matchPrefix(e,\"a=ssrc:\").map((function(e){return t.parseSsrcMedia(e)})).filter((function(e){return\"msid\"===e.attribute}));return n.length>0?{stream:(i=n[0].value.split(\" \"))[0],track:i[1]}:void 0},t.parseSctpDescription=function(e){var i,r=t.parseMLine(e),n=t.matchPrefix(e,\"a=max-message-size:\");n.length>0&&(i=parseInt(n[0].substr(19),10)),isNaN(i)&&(i=65536);var o=t.matchPrefix(e,\"a=sctp-port:\");if(o.length>0)return{port:parseInt(o[0].substr(12),10),protocol:r.fmt,maxMessageSize:i};if(t.matchPrefix(e,\"a=sctpmap:\").length>0){var s=t.matchPrefix(e,\"a=sctpmap:\")[0].substr(10).split(\" \");return{port:parseInt(s[0],10),protocol:s[1],maxMessageSize:i}}},t.writeSctpDescription=function(e,t){var i=[];return i=\"DTLS/SCTP\"!==e.protocol?[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.protocol+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctp-port:\"+t.port+\"\\r\\n\"]:[\"m=\"+e.kind+\" 9 \"+e.protocol+\" \"+t.port+\"\\r\\n\",\"c=IN IP4 0.0.0.0\\r\\n\",\"a=sctpmap:\"+t.port+\" \"+t.protocol+\" 65535\\r\\n\"],void 0!==t.maxMessageSize&&i.push(\"a=max-message-size:\"+t.maxMessageSize+\"\\r\\n\"),i.join(\"\")},t.generateSessionId=function(){return Math.random().toString().substr(2,21)},t.writeSessionBoilerplate=function(e,i,r){var n=void 0!==i?i:2;return\"v=0\\r\\no=\"+(r||\"thisisadapterortc\")+\" \"+(e||t.generateSessionId())+\" \"+n+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},t.writeMediaSection=function(e,i,r,n){var o=t.writeRtpDescription(e.kind,i);if(o+=t.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=t.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?o+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?o+=\"a=sendrecv\\r\\n\":e.rtpSender?o+=\"a=sendonly\\r\\n\":e.rtpReceiver?o+=\"a=recvonly\\r\\n\":o+=\"a=inactive\\r\\n\",e.rtpSender){var s=\"msid:\"+n.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";o+=\"a=\"+s,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+s,e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+s,o+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+t.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+t.localCName+\"\\r\\n\"),o},t.getDirection=function(e,i){for(var r=t.splitLines(e),n=0;n<r.length;n++)switch(r[n]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[n].substr(2)}return i?t.getDirection(i):\"sendrecv\"},t.getKind=function(e){return t.splitLines(e)[0].split(\" \")[0].substr(2)},t.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},t.parseMLine=function(e){var i=t.splitLines(e)[0].substr(2).split(\" \");return{kind:i[0],port:parseInt(i[1],10),protocol:i[2],fmt:i.slice(3).join(\" \")}},t.parseOLine=function(e){var i=t.matchPrefix(e,\"o=\")[0].substr(2).split(\" \");return{username:i[0],sessionId:i[1],sessionVersion:parseInt(i[2],10),netType:i[3],addressType:i[4],address:i[5]}},t.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;for(var i=t.splitLines(e),r=0;r<i.length;r++)if(i[r].length<2||\"=\"!==i[r].charAt(1))return!1;return!0},e.exports=t}(Hb);var Wb=Hb.exports;function Yb(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)return;const t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if(\"object\"==typeof e&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2)),e.candidate&&e.candidate.length){const i=new t(e),r=Wb.parseCandidate(e.candidate),n=Object.assign(i,r);return n.toJSON=function(){return{candidate:n.candidate,sdpMid:n.sdpMid,sdpMLineIndex:n.sdpMLineIndex,usernameFragment:n.usernameFragment}},n}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,Gh(e,\"icecandidate\",t=>(t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t))}function Jb(e,t){if(!e.RTCPeerConnection)return;\"sctp\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp}});const i=function(e){if(!e||!e.sdp)return!1;const t=Wb.splitSections(e.sdp);return t.shift(),t.some(e=>{const t=Wb.parseMLine(e);return t&&\"application\"===t.kind&&-1!==t.protocol.indexOf(\"SCTP\")})},r=function(e){const t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);if(null===t||t.length<2)return-1;const i=parseInt(t[1],10);return i!=i?-1:i},n=function(e){let i=65536;return\"firefox\"===t.browser&&(i=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),i},o=function(e,i){let r=65536;\"firefox\"===t.browser&&57===t.version&&(r=65535);const n=Wb.matchPrefix(e.sdp,\"a=max-message-size:\");return n.length>0?r=parseInt(n[0].substr(19),10):\"firefox\"===t.browser&&-1!==i&&(r=2147483637),r},s=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,\"chrome\"===t.browser&&t.version>=76){const{sdpSemantics:e}=this.getConfiguration();\"plan-b\"===e&&Object.defineProperty(this,\"sctp\",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(i(arguments[0])){const e=r(arguments[0]),t=n(e),i=o(arguments[0],e);let s;s=0===t&&0===i?Number.POSITIVE_INFINITY:0===t||0===i?Math.max(t,i):Math.min(t,i);const a={};Object.defineProperty(a,\"maxMessageSize\",{get:()=>s}),this._sctp=a}return s.apply(this,arguments)}}function qb(e){if(!e.RTCPeerConnection||!(\"createDataChannel\"in e.RTCPeerConnection.prototype))return;function t(e,t){const i=e.send;e.send=function(){const r=arguments[0],n=r.length||r.size||r.byteLength;if(\"open\"===e.readyState&&t.sctp&&n>t.sctp.maxMessageSize)throw new TypeError(\"Message too large (can send a maximum of \"+t.sctp.maxMessageSize+\" bytes)\");return i.apply(e,arguments)}}const i=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){const e=i.apply(this,arguments);return t(e,this),e},Gh(e,\"datachannel\",e=>(t(e.channel,e.target),e))}function Xb(e){if(!e.RTCPeerConnection||\"connectionState\"in e.RTCPeerConnection.prototype)return;const t=e.RTCPeerConnection.prototype;Object.defineProperty(t,\"connectionState\",{get(){return{completed:\"connected\",checking:\"connecting\"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,\"onconnectionstatechange\",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener(\"connectionstatechange\",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener(\"connectionstatechange\",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),[\"setLocalDescription\",\"setRemoteDescription\"].forEach(e=>{const i=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{const t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;const i=new Event(\"connectionstatechange\",e);t.dispatchEvent(i)}return e},this.addEventListener(\"iceconnectionstatechange\",this._connectionstatechangepoly)),i.apply(this,arguments)}})}function zb(e,t){if(!e.RTCPeerConnection)return;if(\"chrome\"===t.browser&&t.version>=71)return;if(\"safari\"===t.browser&&t.version>=605)return;const i=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf(\"\\na=extmap-allow-mixed\")){const i=t.sdp.split(\"\\n\").filter(e=>\"a=extmap-allow-mixed\"!==Gb(e).call(e)).join(\"\\n\");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:i}):t.sdp=i}return i.apply(this,arguments)}}function Zb(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;const i=e.RTCPeerConnection.prototype.addIceCandidate;i&&0!==i.length&&(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?(\"chrome\"===t.browser&&t.version<78||\"firefox\"===t.browser&&t.version<68||\"safari\"===t.browser)&&arguments[0]&&\"\"===arguments[0].candidate?l_.resolve():i.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),l_.resolve())})}var $b=Object.freeze({__proto__:null,shimRTCIceCandidate:Yb,shimMaxMessageSize:Jb,shimSendThrowTypeError:qb,shimConnectionState:Xb,removeExtmapAllowMixed:zb,shimAddIceCandidateNullOrEmpty:Zb});let eN,tN;!function(){let{window:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0};const i=Wh,r=Jh(e),n={browserDetails:r,commonShim:$b,extractVersion:jh,disableLog:Kh,disableWarnings:Hh};switch(r.browser){case\"chrome\":if(!$v||!zv||!t.shimChrome)return i(\"Chrome shim is not included in this adapter release.\"),n;if(null===r.version)return i(\"Chrome shim can not determine version, not shimming.\"),n;i(\"adapter.js shimming chrome.\"),n.browserShim=$v,Zb(e,r),Gv(e,r),Kv(e),zv(e,r),Hv(e),Xv(e,r),Wv(e),Yv(e),Jv(e),Zv(e,r),Yb(e),Xb(e),Jb(e,r),qb(e),zb(e,r);break;case\"firefox\":if(!gb||!sb||!t.shimFirefox)return i(\"Firefox shim is not included in this adapter release.\"),n;i(\"adapter.js shimming firefox.\"),n.browserShim=gb,Zb(e,r),nb(e,r),sb(e,r),ob(e),db(e),ab(e),cb(e),ub(e),hb(e),Ab(e),lb(e),pb(e),Yb(e),Xb(e),Jb(e,r),qb(e);break;case\"edge\":if(!AT||!uT||!t.shimEdge)return i(\"MS edge shim is not included in this adapter release.\"),n;i(\"adapter.js shimming edge.\"),n.browserShim=AT,cT(e),dT(e),uT(e,r),hT(e),Jb(e,r),qb(e);break;case\"safari\":if(!Rb||!t.shimSafari)return i(\"Safari shim is not included in this adapter release.\"),n;i(\"adapter.js shimming safari.\"),n.browserShim=Rb,Zb(e,r),Cb(e),vb(e),mb(e),Eb(e),fb(e),Sb(e),Ib(e),Tb(e),Yb(e),Jb(e,r),qb(e),zb(e,r);break;default:i(\"Unsupported browser!\")}}({window:\"undefined\"==typeof window?void 0:window}),function(e){e.WIN_10=\"Windows 10\",e.WIN_81=\"Windows 8.1\",e.WIN_8=\"Windows 8\",e.WIN_7=\"Windows 7\",e.WIN_VISTA=\"Windows Vista\",e.WIN_SERVER_2003=\"Windows Server 2003\",e.WIN_XP=\"Windows XP\",e.WIN_2000=\"Windows 2000\",e.ANDROID=\"Android\",e.OPEN_BSD=\"Open BSD\",e.SUN_OS=\"Sun OS\",e.LINUX=\"Linux\",e.IOS=\"iOS\",e.MAC_OS=\"Mac OS\",e.QNX=\"QNX\",e.UNIX=\"UNIX\",e.BEOS=\"BeOS\",e.OS_2=\"OS/2\",e.SEARCH_BOT=\"Search Bot\"}(eN||(eN={})),function(e){e.CHROME=\"Chrome\",e.SAFARI=\"Safari\",e.EDGE=\"Edge\",e.FIREFOX=\"Firefox\",e.OPERA=\"OPR\",e.QQ=\"QQBrowser\",e.WECHAT=\"MicroMessenger\"}(tN||(tN={}));var iN={exports:{}};!function(t,i){!function(e,r){var n=\"function\",o=\"undefined\",s=\"object\",a=\"string\",c=\"model\",d=\"name\",u=\"type\",h=\"vendor\",A=\"version\",l=\"architecture\",p=\"console\",g=\"mobile\",E=\"tablet\",f=\"smarttv\",m=\"wearable\",I=\"embedded\",_=\"Amazon\",C=\"Apple\",S=\"ASUS\",v=\"BlackBerry\",T=\"Firefox\",R=\"Google\",y=\"Huawei\",w=\"LG\",b=\"Microsoft\",N=\"Motorola\",O=\"Opera\",D=\"Samsung\",P=\"Sharp\",L=\"Sony\",k=\"Xiaomi\",B=\"Zebra\",M=\"Facebook\",U=function(e){for(var t={},i=0;i<e.length;i++)t[e[i].toUpperCase()]=e[i];return t},x=function(e,t){return typeof e===a&&-1!==Q(t).indexOf(Q(e))},Q=function(e){return e.toLowerCase()},F=function(e,t){if(typeof e===a)return e=e.replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\"),typeof t===o?e:e.substring(0,350)},V=function(e,t){for(var i,o,a,c,d,u,h=0;h<t.length&&!d;){var A=t[h],l=t[h+1];for(i=o=0;i<A.length&&!d;)if(d=A[i++].exec(e))for(a=0;a<l.length;a++)u=d[++o],typeof(c=l[a])===s&&c.length>0?2===c.length?typeof c[1]==n?this[c[0]]=c[1].call(this,u):this[c[0]]=c[1]:3===c.length?typeof c[1]!==n||c[1].exec&&c[1].test?this[c[0]]=u?u.replace(c[1],c[2]):r:this[c[0]]=u?c[1].call(this,u,c[2]):r:4===c.length&&(this[c[0]]=u?c[3].call(this,u.replace(c[1],c[2])):r):this[c]=u||r;h+=2}},j=function(e,t){for(var i in t)if(typeof t[i]===s&&t[i].length>0){for(var n=0;n<t[i].length;n++)if(x(t[i][n],e))return\"?\"===i?r:i}else if(x(t[i],e))return\"?\"===i?r:i;return e},G={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"},K={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[A,[d,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[A,[d,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[d,A],[/opios[\\/ ]+([\\w\\.]+)/i],[A,[d,\"Opera Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[A,[d,O]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[d,A],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[A,[d,\"UCBrowser\"]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[A,[d,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[A,[d,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[A,[d,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[A,[d,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[A,[d,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[d,/(.+)/,\"$1 Secure Browser\"],A],[/\\bfocus\\/([\\w\\.]+)/i],[A,[d,\"Firefox Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[A,[d,\"Opera Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[A,[d,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[A,[d,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[A,[d,\"Opera Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[A,[d,\"MIUI Browser\"]],[/fxios\\/([-\\w\\.]+)/i],[A,[d,T]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[d,\"360 Browser\"]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[d,/(.+)/,\"$1 Browser\"],A],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[d,/_/g,\" \"],A],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[d,A],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[d],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[d,M],A],[/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[d,A],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[A,[d,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[A,[d,\"Chrome Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[d,\"Chrome WebView\"],A],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[A,[d,\"Android Browser\"]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[d,A],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[A,[d,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[A,d],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[d,[A,j,{\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"}]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[d,A],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[d,\"Netscape\"],A],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[A,[d,\"Firefox Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i],[d,A]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[l,\"amd64\"]],[/(ia32(?=;))/i],[[l,Q]],[/((?:i[346]|x)86)[;\\)]/i],[[l,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[l,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[l,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[l,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[l,/ower/,\"\",Q]],[/(sun4\\w)[;\\)]/i],[[l,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[l,Q]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[c,[h,D],[u,E]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[c,[h,D],[u,g]],[/\\((ip(?:hone|od)[\\w ]*);/i],[c,[h,C],[u,g]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[c,[h,C],[u,E]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[c,[h,y],[u,E]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[c,[h,y],[u,g]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[c,/_/g,\" \"],[h,k],[u,g]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[c,/_/g,\" \"],[h,k],[u,E]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[c,[h,\"OPPO\"],[u,g]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[c,[h,\"Vivo\"],[u,g]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[c,[h,\"Realme\"],[u,g]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[c,[h,N],[u,g]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[c,[h,N],[u,E]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[c,[h,w],[u,E]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[c,[h,w],[u,g]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[c,[h,\"Lenovo\"],[u,E]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[c,/_/g,\" \"],[h,\"Nokia\"],[u,g]],[/(pixel c)\\b/i],[c,[h,R],[u,E]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[c,[h,R],[u,g]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[c,[h,L],[u,g]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[c,\"Xperia Tablet\"],[h,L],[u,E]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[c,[h,\"OnePlus\"],[u,g]],[/(alexa)webm/i,/(kf[a-z]{2}wi)( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[c,[h,_],[u,E]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[c,/(.+)/g,\"Fire Phone $1\"],[h,_],[u,g]],[/(playbook);[-\\w\\),; ]+(rim)/i],[c,h,[u,E]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[c,[h,v],[u,g]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[c,[h,S],[u,E]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[c,[h,S],[u,g]],[/(nexus 9)/i],[c,[h,\"HTC\"],[u,E]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\\w]*)/i],[h,[c,/_/g,\" \"],[u,g]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[c,[h,\"Acer\"],[u,E]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[c,[h,\"Meizu\"],[u,g]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[c,[h,P],[u,g]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[h,c,[u,g]],[/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[h,c,[u,E]],[/(surface duo)/i],[c,[h,b],[u,E]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[c,[h,\"Fairphone\"],[u,g]],[/(u304aa)/i],[c,[h,\"AT&T\"],[u,g]],[/\\bsie-(\\w*)/i],[c,[h,\"Siemens\"],[u,g]],[/\\b(rct\\w+) b/i],[c,[h,\"RCA\"],[u,E]],[/\\b(venue[\\d ]{2,7}) b/i],[c,[h,\"Dell\"],[u,E]],[/\\b(q(?:mv|ta)\\w+) b/i],[c,[h,\"Verizon\"],[u,E]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[c,[h,\"Barnes & Noble\"],[u,E]],[/\\b(tm\\d{3}\\w+) b/i],[c,[h,\"NuVision\"],[u,E]],[/\\b(k88) b/i],[c,[h,\"ZTE\"],[u,E]],[/\\b(nx\\d{3}j) b/i],[c,[h,\"ZTE\"],[u,g]],[/\\b(gen\\d{3}) b.+49h/i],[c,[h,\"Swiss\"],[u,g]],[/\\b(zur\\d{3}) b/i],[c,[h,\"Swiss\"],[u,E]],[/\\b((zeki)?tb.*\\b) b/i],[c,[h,\"Zeki\"],[u,E]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[h,\"Dragon Touch\"],c,[u,E]],[/\\b(ns-?\\w{0,9}) b/i],[c,[h,\"Insignia\"],[u,E]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[c,[h,\"NextBook\"],[u,E]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[h,\"Voice\"],c,[u,g]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[h,\"LvTel\"],c,[u,g]],[/\\b(ph-1) /i],[c,[h,\"Essential\"],[u,g]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[c,[h,\"Envizen\"],[u,E]],[/\\b(trio[-\\w\\. ]+) b/i],[c,[h,\"MachSpeed\"],[u,E]],[/\\btu_(1491) b/i],[c,[h,\"Rotor\"],[u,E]],[/(shield[\\w ]+) b/i],[c,[h,\"Nvidia\"],[u,E]],[/(sprint) (\\w+)/i],[h,c,[u,g]],[/(kin\\.[onetw]{3})/i],[[c,/\\./g,\" \"],[h,b],[u,g]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[c,[h,B],[u,E]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[c,[h,B],[u,g]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[h,c,[u,p]],[/droid.+; (shield) bui/i],[c,[h,\"Nvidia\"],[u,p]],[/(playstation [345portablevi]+)/i],[c,[h,L],[u,p]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[c,[h,b],[u,p]],[/smart-tv.+(samsung)/i],[h,[u,f]],[/hbbtv.+maple;(\\d+)/i],[[c,/^/,\"SmartTV\"],[h,D],[u,f]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[h,w],[u,f]],[/(apple) ?tv/i],[h,[c,\"Apple TV\"],[u,f]],[/crkey/i],[[c,\"Chromecast\"],[h,R],[u,f]],[/droid.+aft(\\w)( bui|\\))/i],[c,[h,_],[u,f]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[c,[h,P],[u,f]],[/(bravia[\\w ]+)( bui|\\))/i],[c,[h,L],[u,f]],[/(mitv-\\w{5}) bui/i],[c,[h,k],[u,f]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i],[[h,F],[c,F],[u,f]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[u,f]],[/((pebble))app/i],[h,c,[u,m]],[/droid.+; (glass) \\d/i],[c,[h,R],[u,m]],[/droid.+; (wt63?0{2,3})\\)/i],[c,[h,B],[u,m]],[/(quest( 2)?)/i],[c,[h,M],[u,m]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[h,[u,I]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[c,[u,g]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[c,[u,E]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[u,E]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[u,g]],[/(android[-\\w\\. ]{0,9});.+buil/i],[c,[h,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[A,[d,\"EdgeHTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[A,[d,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i],[d,A],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[A,d]],os:[[/microsoft (windows) (vista|xp)/i],[d,A],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[d,[A,j,G]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[d,\"Windows\"],[A,j,G]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/cfnetwork\\/.+darwin/i],[[A,/_/g,\".\"],[d,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[d,\"Mac OS\"],[A,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[A,d],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[d,A],[/\\(bb(10);/i],[A,[d,v]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[A,[d,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[A,[d,\"Firefox OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[A,[d,\"webOS\"]],[/crkey\\/([\\d\\.]+)/i],[A,[d,\"Chromecast\"]],[/(cros) [\\w]+ ([\\w\\.]+\\w)/i],[[d,\"Chromium OS\"],A],[/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[d,A],[/(sunos) ?([\\w\\.\\d]*)/i],[[d,\"Solaris\"],A],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,/(unix) ?([\\w\\.]*)/i],[d,A]]},H=function(t,i){if(typeof t===s&&(i=t,t=r),!(this instanceof H))return new H(t,i).getResult();var n=t||(typeof e!==o&&e.navigator&&e.navigator.userAgent?e.navigator.userAgent:\"\"),c=i?function(e,t){var i={};for(var r in e)t[r]&&t[r].length%2==0?i[r]=t[r].concat(e[r]):i[r]=e[r];return i}(K,i):K;return this.getBrowser=function(){var e={};return e.name=r,e.version=r,V.call(e,n,c.browser),e.major=function(e){return typeof e===a?e.replace(/[^\\d\\.]/g,\"\").split(\".\")[0]:r}(e.version),e},this.getCPU=function(){var e={};return e.architecture=r,V.call(e,n,c.cpu),e},this.getDevice=function(){var e={};return e.vendor=r,e.model=r,e.type=r,V.call(e,n,c.device),e},this.getEngine=function(){var e={};return e.name=r,e.version=r,V.call(e,n,c.engine),e},this.getOS=function(){var e={};return e.name=r,e.version=r,V.call(e,n,c.os),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return n},this.setUA=function(e){return n=typeof e===a&&e.length>350?F(e,350):e,this},this.setUA(n),this};H.VERSION=\"0.7.32\",H.BROWSER=U([d,A,\"major\"]),H.CPU=U([l]),H.DEVICE=U([c,h,u,p,g,f,E,m,I]),H.ENGINE=H.OS=U([d,A]),t.exports&&(i=t.exports=H),i.UAParser=H;var W=typeof e!==o&&(e.jQuery||e.Zepto);if(W&&!W.ua){var Y=new H;W.ua=Y.getResult(),W.ua.get=function(){return Y.getUA()},W.ua.set=function(e){Y.setUA(e);var t=Y.getResult();for(var i in t)W.ua[i]=t[i]}}}(\"object\"==typeof window?window:e)}(iN,iN.exports);const rN=new(0,iN.exports);let nN=rN.getResult();function oN(e){return e&&rN.setUA(e),nN=rN.getResult(),{name:sN(nN),version:aN(nN),os:cN(nN),osVersion:nN.os.version}}function sN(e){if(\"Blink\"===e.engine.name&&\"WeChat\"!==e.browser.name)return tN.CHROME;switch(e.browser.name){case\"Chrome Headless\":case\"Chrome\":case\"Chromium\":return tN.CHROME;case\"Safari\":case\"Mobile Safari\":return tN.SAFARI;case\"Edge\":return tN.EDGE;case\"Firefox\":return tN.FIREFOX;case\"QQBrowser\":return tN.QQ;case\"Opera\":return tN.OPERA;case\"WeChat\":return tN.WECHAT;default:return e.browser.name||\"\"}}function aN(e){let t;return t=\"Blink\"===e.engine.name?e.engine.version||\"\":e.browser.version||\"\",t.split(\".\")[0]}function cN(e){switch(e.os.name){case\"Windows\":return e.os.version?e.os.name+\" \"+e.os.version:e.os.name;default:return e.os.name||\"\"}}function dN(){return oN().os}function uN(){const e=oN();return!!(\"WebKit\"===nN.engine.name&&e.os===eN.MAC_OS&&navigator.maxTouchPoints&&navigator.maxTouchPoints>0&&e.name!==tN.SAFARI||EN()&&e.name!==tN.SAFARI)}function hN(){const e=oN();if(uN()){if(e.os===eN.MAC_OS)return!0;if(e.os===eN.IOS){const e=nN.os.version&&nN.os.version.split(\".\");if(e&&14===Number(e[0])&&e[1]&&Number(e[1])>=3)return!0;if(e&&Number(e[0])>14)return!0}}return!1}function AN(){return\"WebKit\"===nN.engine.name}function lN(){return oN().name===tN.CHROME}function pN(){return oN().name===tN.SAFARI}function gN(){return oN().name===tN.FIREFOX}function EN(){return oN().os===eN.IOS}function fN(){const e=oN();return!(e.name!==tN.CHROME||!e.osVersion)&&Number(e.version)<=90}function mN(){const e=oN();if(e.os!==eN.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return Number(t[0])<14||14===Number(t[0])&&Number(t[1])<=6}function IN(){const e=oN();if(e.os!==eN.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])}function _N(){const e=oN();if(e.os!==eN.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&0===Number(t[1])}function CN(){const e=oN();if(e.os!==eN.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=1}function SN(){const e=oN();if(e.os!==eN.IOS||!e.osVersion)return!1;const t=e.osVersion.split(\".\");return 15===Number(t[0])&&Number(t[1])>=2}function vN(){return pN()&&navigator.maxTouchPoints>0}function TN(){return oN().name===tN.WECHAT}function RN(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)&&window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1]<=35}function yN(){const e=oN();if(e.name===tN.EDGE||e.name===tN.SAFARI)return!1;return!!navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]./i)}function wN(){return oN().os===eN.ANDROID}function bN(){const e=oN();return\"Android\"===e.os&&(\"Chrome\"===e.name||e.name===tN.WECHAT||/chrome|chromium/i.test(navigator.userAgent))}var NN={exports:{}},ON=ka,DN=Dn,PN=ia.f;ON({target:\"Object\",stat:!0,forced:Object.defineProperty!==PN,sham:!DN},{defineProperty:PN});var LN=oo.Object,kN=NN.exports=function(e,t,i){return LN.defineProperty(e,t,i)};LN.defineProperty.sham&&(kN.sham=!0);var BN=NN.exports;function MN(e,t,i){return t in e?BN(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var UN,xN={exports:{}},QN=function(e,t){return function(){for(var i=new Array(arguments.length),r=0;r<i.length;r++)i[r]=arguments[r];return e.apply(t,i)}},FN=QN,VN=Object.prototype.toString,jN=(UN=Object.create(null),function(e){var t=VN.call(e);return UN[t]||(UN[t]=t.slice(8,-1).toLowerCase())});function GN(e){return e=e.toLowerCase(),function(t){return jN(t)===e}}function KN(e){return Array.isArray(e)}function HN(e){return void 0===e}var WN=GN(\"ArrayBuffer\");function YN(e){return null!==e&&\"object\"==typeof e}function JN(e){if(\"object\"!==jN(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var qN=GN(\"Date\"),XN=GN(\"File\"),zN=GN(\"Blob\"),ZN=GN(\"FileList\");function $N(e){return\"[object Function]\"===VN.call(e)}var eO=GN(\"URLSearchParams\");function tO(e,t){if(null!=e)if(\"object\"!=typeof e&&(e=[e]),KN(e))for(var i=0,r=e.length;i<r;i++)t.call(null,e[i],i,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var iO=function(e){return function(t){return e&&t instanceof e}}(\"undefined\"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array)),rO={isArray:KN,isArrayBuffer:WN,isBuffer:function(e){return null!==e&&!HN(e)&&null!==e.constructor&&!HN(e.constructor)&&\"function\"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){var t=\"[object FormData]\";return e&&(\"function\"==typeof FormData&&e instanceof FormData||VN.call(e)===t||$N(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){return\"undefined\"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&WN(e.buffer)},isString:function(e){return\"string\"==typeof e},isNumber:function(e){return\"number\"==typeof e},isObject:YN,isPlainObject:JN,isUndefined:HN,isDate:qN,isFile:XN,isBlob:zN,isFunction:$N,isStream:function(e){return YN(e)&&$N(e.pipe)},isURLSearchParams:eO,isStandardBrowserEnv:function(){return(\"undefined\"==typeof navigator||\"ReactNative\"!==navigator.product&&\"NativeScript\"!==navigator.product&&\"NS\"!==navigator.product)&&(\"undefined\"!=typeof window&&\"undefined\"!=typeof document)},forEach:tO,merge:function e(){var t={};function i(i,r){JN(t[r])&&JN(i)?t[r]=e(t[r],i):JN(i)?t[r]=e({},i):KN(i)?t[r]=i.slice():t[r]=i}for(var r=0,n=arguments.length;r<n;r++)tO(arguments[r],i);return t},extend:function(e,t,i){return tO(t,(function(t,r){e[r]=i&&\"function\"==typeof t?FN(t,i):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\\s+|\\s+$/g,\"\")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,i,r){e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,i&&Object.assign(e.prototype,i)},toFlatObject:function(e,t,i){var r,n,o,s={};t=t||{};do{for(n=(r=Object.getOwnPropertyNames(e)).length;n-- >0;)s[o=r[n]]||(t[o]=e[o],s[o]=!0);e=Object.getPrototypeOf(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:jN,kindOfTest:GN,endsWith:function(e,t,i){e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;var r=e.indexOf(t,i);return-1!==r&&r===i},toArray:function(e){if(!e)return null;var t=e.length;if(HN(t))return null;for(var i=new Array(t);t-- >0;)i[t]=e[t];return i},isTypedArray:iO,isFileList:ZN},nO=rO;function oO(e){return encodeURIComponent(e).replace(/%3A/gi,\":\").replace(/%24/g,\"$\").replace(/%2C/gi,\",\").replace(/%20/g,\"+\").replace(/%5B/gi,\"[\").replace(/%5D/gi,\"]\")}var sO=function(e,t,i){if(!t)return e;var r;if(i)r=i(t);else if(nO.isURLSearchParams(t))r=t.toString();else{var n=[];nO.forEach(t,(function(e,t){null!=e&&(nO.isArray(e)?t+=\"[]\":e=[e],nO.forEach(e,(function(e){nO.isDate(e)?e=e.toISOString():nO.isObject(e)&&(e=JSON.stringify(e)),n.push(oO(t)+\"=\"+oO(e))})))})),r=n.join(\"&\")}if(r){var o=e.indexOf(\"#\");-1!==o&&(e=e.slice(0,o)),e+=(-1===e.indexOf(\"?\")?\"?\":\"&\")+r}return e},aO=rO;function cO(){this.handlers=[]}cO.prototype.use=function(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1},cO.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},cO.prototype.forEach=function(e){aO.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var dO=cO,uO=rO,hO=rO;function AO(e,t,i,r,n){Error.call(this),this.message=e,this.name=\"AxiosError\",t&&(this.code=t),i&&(this.config=i),r&&(this.request=r),n&&(this.response=n)}hO.inherits(AO,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var lO=AO.prototype,pO={};[\"ERR_BAD_OPTION_VALUE\",\"ERR_BAD_OPTION\",\"ECONNABORTED\",\"ETIMEDOUT\",\"ERR_NETWORK\",\"ERR_FR_TOO_MANY_REDIRECTS\",\"ERR_DEPRECATED\",\"ERR_BAD_RESPONSE\",\"ERR_BAD_REQUEST\",\"ERR_CANCELED\"].forEach((function(e){pO[e]={value:e}})),Object.defineProperties(AO,pO),Object.defineProperty(lO,\"isAxiosError\",{value:!0}),AO.from=function(e,t,i,r,n,o){var s=Object.create(lO);return hO.toFlatObject(e,s,(function(e){return e!==Error.prototype})),AO.call(s,e.message,t,i,r,n),s.name=e.name,o&&Object.assign(s,o),s};var gO=AO,EO={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},fO=rO;var mO=function(e,t){t=t||new FormData;var i=[];function r(e){return null===e?\"\":fO.isDate(e)?e.toISOString():fO.isArrayBuffer(e)||fO.isTypedArray(e)?\"function\"==typeof Blob?new Blob([e]):Buffer.from(e):e}return function e(n,o){if(fO.isPlainObject(n)||fO.isArray(n)){if(-1!==i.indexOf(n))throw Error(\"Circular reference detected in \"+o);i.push(n),fO.forEach(n,(function(i,n){if(!fO.isUndefined(i)){var s,a=o?o+\".\"+n:n;if(i&&!o&&\"object\"==typeof i)if(fO.endsWith(n,\"{}\"))i=JSON.stringify(i);else if(fO.endsWith(n,\"[]\")&&(s=fO.toArray(i)))return void s.forEach((function(e){!fO.isUndefined(e)&&t.append(a,r(e))}));e(i,a)}})),i.pop()}else t.append(o,r(n))}(e),t},IO=gO,_O=rO,CO=_O.isStandardBrowserEnv()?{write:function(e,t,i,r,n,o){var s=[];s.push(e+\"=\"+encodeURIComponent(t)),_O.isNumber(i)&&s.push(\"expires=\"+new Date(i).toGMTString()),_O.isString(r)&&s.push(\"path=\"+r),_O.isString(n)&&s.push(\"domain=\"+n),!0===o&&s.push(\"secure\"),document.cookie=s.join(\"; \")},read:function(e){var t=document.cookie.match(new RegExp(\"(^|;\\\\s*)(\"+e+\")=([^;]*)\"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,\"\",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},SO=function(e){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(e)},vO=function(e,t){return t?e.replace(/\\/+$/,\"\")+\"/\"+t.replace(/^\\/+/,\"\"):e},TO=function(e,t){return e&&!SO(t)?vO(e,t):t},RO=rO,yO=[\"age\",\"authorization\",\"content-length\",\"content-type\",\"etag\",\"expires\",\"from\",\"host\",\"if-modified-since\",\"if-unmodified-since\",\"last-modified\",\"location\",\"max-forwards\",\"proxy-authorization\",\"referer\",\"retry-after\",\"user-agent\"],wO=rO,bO=wO.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement(\"a\");function r(e){var r=e;return t&&(i.setAttribute(\"href\",r),r=i.href),i.setAttribute(\"href\",r),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,\"\"):\"\",host:i.host,search:i.search?i.search.replace(/^\\?/,\"\"):\"\",hash:i.hash?i.hash.replace(/^#/,\"\"):\"\",hostname:i.hostname,port:i.port,pathname:\"/\"===i.pathname.charAt(0)?i.pathname:\"/\"+i.pathname}}return e=r(window.location.href),function(t){var i=wO.isString(t)?r(t):t;return i.protocol===e.protocol&&i.host===e.host}}():function(){return!0},NO=gO;function OO(e){NO.call(this,null==e?\"canceled\":e,NO.ERR_CANCELED),this.name=\"CanceledError\"}rO.inherits(OO,NO,{__CANCEL__:!0});var DO=OO,PO=rO,LO=function(e,t,i){var r=i.config.validateStatus;i.status&&r&&!r(i.status)?t(new IO(\"Request failed with status code \"+i.status,[IO.ERR_BAD_REQUEST,IO.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i)):e(i)},kO=CO,BO=sO,MO=TO,UO=function(e){var t,i,r,n={};return e?(RO.forEach(e.split(\"\\n\"),(function(e){if(r=e.indexOf(\":\"),t=RO.trim(e.substr(0,r)).toLowerCase(),i=RO.trim(e.substr(r+1)),t){if(n[t]&&yO.indexOf(t)>=0)return;n[t]=\"set-cookie\"===t?(n[t]?n[t]:[]).concat([i]):n[t]?n[t]+\", \"+i:i}})),n):n},xO=bO,QO=EO,FO=gO,VO=DO,jO=function(e){var t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);return t&&t[1]||\"\"},GO=function(e){return new Promise((function(t,i){var r,n=e.data,o=e.headers,s=e.responseType;function a(){e.cancelToken&&e.cancelToken.unsubscribe(r),e.signal&&e.signal.removeEventListener(\"abort\",r)}PO.isFormData(n)&&PO.isStandardBrowserEnv()&&delete o[\"Content-Type\"];var c=new XMLHttpRequest;if(e.auth){var d=e.auth.username||\"\",u=e.auth.password?unescape(encodeURIComponent(e.auth.password)):\"\";o.Authorization=\"Basic \"+btoa(d+\":\"+u)}var h=MO(e.baseURL,e.url);function A(){if(c){var r=\"getAllResponseHeaders\"in c?UO(c.getAllResponseHeaders()):null,n={data:s&&\"text\"!==s&&\"json\"!==s?c.response:c.responseText,status:c.status,statusText:c.statusText,headers:r,config:e,request:c};LO((function(e){t(e),a()}),(function(e){i(e),a()}),n),c=null}}if(c.open(e.method.toUpperCase(),BO(h,e.params,e.paramsSerializer),!0),c.timeout=e.timeout,\"onloadend\"in c?c.onloadend=A:c.onreadystatechange=function(){c&&4===c.readyState&&(0!==c.status||c.responseURL&&0===c.responseURL.indexOf(\"file:\"))&&setTimeout(A)},c.onabort=function(){c&&(i(new FO(\"Request aborted\",FO.ECONNABORTED,e,c)),c=null)},c.onerror=function(){i(new FO(\"Network Error\",FO.ERR_NETWORK,e,c,c)),c=null},c.ontimeout=function(){var t=e.timeout?\"timeout of \"+e.timeout+\"ms exceeded\":\"timeout exceeded\",r=e.transitional||QO;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),i(new FO(t,r.clarifyTimeoutError?FO.ETIMEDOUT:FO.ECONNABORTED,e,c)),c=null},PO.isStandardBrowserEnv()){var l=(e.withCredentials||xO(h))&&e.xsrfCookieName?kO.read(e.xsrfCookieName):void 0;l&&(o[e.xsrfHeaderName]=l)}\"setRequestHeader\"in c&&PO.forEach(o,(function(e,t){void 0===n&&\"content-type\"===t.toLowerCase()?delete o[t]:c.setRequestHeader(t,e)})),PO.isUndefined(e.withCredentials)||(c.withCredentials=!!e.withCredentials),s&&\"json\"!==s&&(c.responseType=e.responseType),\"function\"==typeof e.onDownloadProgress&&c.addEventListener(\"progress\",e.onDownloadProgress),\"function\"==typeof e.onUploadProgress&&c.upload&&c.upload.addEventListener(\"progress\",e.onUploadProgress),(e.cancelToken||e.signal)&&(r=function(e){c&&(i(!e||e&&e.type?new VO:e),c.abort(),c=null)},e.cancelToken&&e.cancelToken.subscribe(r),e.signal&&(e.signal.aborted?r():e.signal.addEventListener(\"abort\",r))),n||(n=null);var p=jO(h);p&&-1===[\"http\",\"https\",\"file\"].indexOf(p)?i(new FO(\"Unsupported protocol \"+p+\":\",FO.ERR_BAD_REQUEST,e)):c.send(n)}))},KO=rO,HO=function(e,t){uO.forEach(e,(function(i,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=i,delete e[r])}))},WO=gO,YO=mO,JO={\"Content-Type\":\"application/x-www-form-urlencoded\"};function qO(e,t){!KO.isUndefined(e)&&KO.isUndefined(e[\"Content-Type\"])&&(e[\"Content-Type\"]=t)}var XO,zO={transitional:EO,adapter:((\"undefined\"!=typeof XMLHttpRequest||\"undefined\"!=typeof process&&\"[object process]\"===Object.prototype.toString.call(process))&&(XO=GO),XO),transformRequest:[function(e,t){if(HO(t,\"Accept\"),HO(t,\"Content-Type\"),KO.isFormData(e)||KO.isArrayBuffer(e)||KO.isBuffer(e)||KO.isStream(e)||KO.isFile(e)||KO.isBlob(e))return e;if(KO.isArrayBufferView(e))return e.buffer;if(KO.isURLSearchParams(e))return qO(t,\"application/x-www-form-urlencoded;charset=utf-8\"),e.toString();var i,r=KO.isObject(e),n=t&&t[\"Content-Type\"];if((i=KO.isFileList(e))||r&&\"multipart/form-data\"===n){var o=this.env&&this.env.FormData;return YO(i?{\"files[]\":e}:e,o&&new o)}return r||\"application/json\"===n?(qO(t,\"application/json\"),function(e,t,i){if(KO.isString(e))try{return(t||JSON.parse)(e),KO.trim(e)}catch(e){if(\"SyntaxError\"!==e.name)throw e}return(i||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||zO.transitional,i=t&&t.silentJSONParsing,r=t&&t.forcedJSONParsing,n=!i&&\"json\"===this.responseType;if(n||r&&KO.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(n){if(\"SyntaxError\"===e.name)throw WO.from(e,WO.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:\"XSRF-TOKEN\",xsrfHeaderName:\"X-XSRF-TOKEN\",maxContentLength:-1,maxBodyLength:-1,env:{FormData:null},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:\"application/json, text/plain, */*\"}}};KO.forEach([\"delete\",\"get\",\"head\"],(function(e){zO.headers[e]={}})),KO.forEach([\"post\",\"put\",\"patch\"],(function(e){zO.headers[e]=KO.merge(JO)}));var ZO=zO,$O=rO,eD=ZO,tD=function(e){return!(!e||!e.__CANCEL__)},iD=rO,rD=function(e,t,i){var r=this||eD;return $O.forEach(i,(function(i){e=i.call(r,e,t)})),e},nD=tD,oD=ZO,sD=DO;function aD(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new sD}var cD=rO,dD=function(e,t){t=t||{};var i={};function r(e,t){return cD.isPlainObject(e)&&cD.isPlainObject(t)?cD.merge(e,t):cD.isPlainObject(t)?cD.merge({},t):cD.isArray(t)?t.slice():t}function n(i){return cD.isUndefined(t[i])?cD.isUndefined(e[i])?void 0:r(void 0,e[i]):r(e[i],t[i])}function o(e){if(!cD.isUndefined(t[e]))return r(void 0,t[e])}function s(i){return cD.isUndefined(t[i])?cD.isUndefined(e[i])?void 0:r(void 0,e[i]):r(void 0,t[i])}function a(i){return i in t?r(e[i],t[i]):i in e?r(void 0,e[i]):void 0}var c={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:a};return cD.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=c[e]||n,r=t(e);cD.isUndefined(r)&&t!==a||(i[e]=r)})),i},uD=\"0.27.2\",hD=uD,AD=gO,lD={};[\"object\",\"boolean\",\"number\",\"function\",\"string\",\"symbol\"].forEach((function(e,t){lD[e]=function(i){return typeof i===e||\"a\"+(t<1?\"n \":\" \")+e}}));var pD={};lD.transitional=function(e,t,i){function r(e,t){return\"[Axios v\"+hD+\"] Transitional option '\"+e+\"'\"+t+(i?\". \"+i:\"\")}return function(i,n,o){if(!1===e)throw new AD(r(n,\" has been removed\"+(t?\" in \"+t:\"\")),AD.ERR_DEPRECATED);return t&&!pD[n]&&(pD[n]=!0,console.warn(r(n,\" has been deprecated since v\"+t+\" and will be removed in the near future\"))),!e||e(i,n,o)}};var gD=rO,ED=sO,fD=dO,mD=function(e){return aD(e),e.headers=e.headers||{},e.data=rD.call(e,e.data,e.headers,e.transformRequest),e.headers=iD.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),iD.forEach([\"delete\",\"get\",\"head\",\"post\",\"put\",\"patch\",\"common\"],(function(t){delete e.headers[t]})),(e.adapter||oD.adapter)(e).then((function(t){return aD(e),t.data=rD.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return nD(t)||(aD(e),t&&t.response&&(t.response.data=rD.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},ID=dD,_D=TO,CD={assertOptions:function(e,t,i){if(\"object\"!=typeof e)throw new AD(\"options must be an object\",AD.ERR_BAD_OPTION_VALUE);for(var r=Object.keys(e),n=r.length;n-- >0;){var o=r[n],s=t[o];if(s){var a=e[o],c=void 0===a||s(a,o,e);if(!0!==c)throw new AD(\"option \"+o+\" must be \"+c,AD.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new AD(\"Unknown option \"+o,AD.ERR_BAD_OPTION)}},validators:lD},SD=CD.validators;function vD(e){this.defaults=e,this.interceptors={request:new fD,response:new fD}}vD.prototype.request=function(e,t){\"string\"==typeof e?(t=t||{}).url=e:t=e||{},(t=ID(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method=\"get\";var i=t.transitional;void 0!==i&&CD.assertOptions(i,{silentJSONParsing:SD.transitional(SD.boolean),forcedJSONParsing:SD.transitional(SD.boolean),clarifyTimeoutError:SD.transitional(SD.boolean)},!1);var r=[],n=!0;this.interceptors.request.forEach((function(e){\"function\"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var o,s=[];if(this.interceptors.response.forEach((function(e){s.push(e.fulfilled,e.rejected)})),!n){var a=[mD,void 0];for(Array.prototype.unshift.apply(a,r),a=a.concat(s),o=Promise.resolve(t);a.length;)o=o.then(a.shift(),a.shift());return o}for(var c=t;r.length;){var d=r.shift(),u=r.shift();try{c=d(c)}catch(e){u(e);break}}try{o=mD(c)}catch(e){return Promise.reject(e)}for(;s.length;)o=o.then(s.shift(),s.shift());return o},vD.prototype.getUri=function(e){e=ID(this.defaults,e);var t=_D(e.baseURL,e.url);return ED(t,e.params,e.paramsSerializer)},gD.forEach([\"delete\",\"get\",\"head\",\"options\"],(function(e){vD.prototype[e]=function(t,i){return this.request(ID(i||{},{method:e,url:t,data:(i||{}).data}))}})),gD.forEach([\"post\",\"put\",\"patch\"],(function(e){function t(t){return function(i,r,n){return this.request(ID(n||{},{method:e,headers:t?{\"Content-Type\":\"multipart/form-data\"}:{},url:i,data:r}))}}vD.prototype[e]=t(),vD.prototype[e+\"Form\"]=t(!0)}));var TD=vD,RD=DO;function yD(e){if(\"function\"!=typeof e)throw new TypeError(\"executor must be a function.\");var t;this.promise=new Promise((function(e){t=e}));var i=this;this.promise.then((function(e){if(i._listeners){var t,r=i._listeners.length;for(t=0;t<r;t++)i._listeners[t](e);i._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){i.subscribe(e),t=e})).then(e);return r.cancel=function(){i.unsubscribe(t)},r},e((function(e){i.reason||(i.reason=new RD(e),t(i.reason))}))}yD.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},yD.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},yD.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},yD.source=function(){var e;return{token:new yD((function(t){e=t})),cancel:e}};var wD=yD,bD=rO,ND=rO,OD=QN,DD=TD,PD=dD;var LD=function e(t){var i=new DD(t),r=OD(DD.prototype.request,i);return ND.extend(r,DD.prototype,i),ND.extend(r,i),r.create=function(i){return e(PD(t,i))},r}(ZO);LD.Axios=DD,LD.CanceledError=DO,LD.CancelToken=wD,LD.isCancel=tD,LD.VERSION=uD,LD.toFormData=mO,LD.AxiosError=gO,LD.Cancel=LD.CanceledError,LD.all=function(e){return Promise.all(e)},LD.spread=function(e){return function(t){return e.apply(null,t)}},LD.isAxiosError=function(e){return bD.isObject(e)&&!0===e.isAxiosError},xN.exports=LD,xN.exports.default=LD;var kD=xN.exports;class BD{constructor(e){MN(this,\"logger\",void 0),MN(this,\"prefixLists\",[]),this.logger=e}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.debug(...this.prefixLists,...t)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.info(...this.prefixLists,...t)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.warning(...this.prefixLists,...t)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.logger.error(...this.prefixLists,...t)}prefix(e){return this.prefixLists.push(e),this}popPrefix(){return this.prefixLists.pop(),this}}class MD{constructor(){MN(this,\"_events\",{}),MN(this,\"addListener\",this.on)}getListeners(e){return this._events[e]?this._events[e].map(e=>e.listener):[]}on(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const i=this._events[e],r=this._indexOfListener(i,t);-1!==r&&i.splice(r,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map(e=>e);for(var i=arguments.length,r=new Array(i>1?i-1:0),n=1;n<i;n++)r[n-1]=arguments[n];for(let i=0;i<t.length;i+=1){const n=t[i];n.once&&this.off(e,n.listener),n.listener.apply(this,r||[])}}_indexOfListener(e,t){let i=e.length;for(;i--;)if(e[i].listener===t)return i;return-1}}const UD=new class extends MD{reportLogUploadError(e){this.emit(\"REPORT_LOG_UPLOAD\",e)}};let xD;!function(e){e.UNEXPECTED_ERROR=\"UNEXPECTED_ERROR\",e.UNEXPECTED_RESPONSE=\"UNEXPECTED_RESPONSE\",e.TIMEOUT=\"TIMEOUT\",e.INVALID_PARAMS=\"INVALID_PARAMS\",e.NOT_READABLE=\"NOT_READABLE\",e.NOT_SUPPORTED=\"NOT_SUPPORTED\",e.INVALID_OPERATION=\"INVALID_OPERATION\",e.OPERATION_ABORTED=\"OPERATION_ABORTED\",e.WEB_SECURITY_RESTRICT=\"WEB_SECURITY_RESTRICT\",e.EXCHANGE_SDP_FAILED=\"EXCHANGE_SDP_FAILED\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.NETWORK_TIMEOUT=\"NETWORK_TIMEOUT\",e.NETWORK_RESPONSE_ERROR=\"NETWORK_RESPONSE_ERROR\",e.API_INVOKE_TIMEOUT=\"API_INVOKE_TIMEOUT\",e.ENUMERATE_DEVICES_FAILED=\"ENUMERATE_DEVICES_FAILED\",e.DEVICE_NOT_FOUND=\"DEVICE_NOT_FOUND\",e.ELECTRON_IS_NULL=\"ELECTRON_IS_NULL\",e.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR=\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",e.CHROME_PLUGIN_NO_RESPONSE=\"CHROME_PLUGIN_NO_RESPONSE\",e.CHROME_PLUGIN_NOT_INSTALL=\"CHROME_PLUGIN_NOT_INSTALL\",e.MEDIA_OPTION_INVALID=\"MEDIA_OPTION_INVALID\",e.PERMISSION_DENIED=\"PERMISSION_DENIED\",e.CONSTRAINT_NOT_SATISFIED=\"CONSTRAINT_NOT_SATISFIED\",e.TRACK_IS_DISABLED=\"TRACK_IS_DISABLED\",e.GET_VIDEO_ELEMENT_VISIBLE_ERROR=\"GET_VIDEO_ELEMENT_VISIBLE_ERROR\",e.SHARE_AUDIO_NOT_ALLOWED=\"SHARE_AUDIO_NOT_ALLOWED\",e.LOW_STREAM_ENCODING_ERROR=\"LOW_STREAM_ENCODING_ERROR\",e.SET_ENCODING_PARAMETER_ERROR=\"SET_ENCODING_PARAMETER_ERROR\",e.TRACK_STATE_UNREACHABLE=\"TRACK_STATE_UNREACHABLE\",e.INVALID_UINT_UID_FROM_STRING_UID=\"INVALID_UINT_UID_FROM_STRING_UID\",e.CAN_NOT_GET_PROXY_SERVER=\"CAN_NOT_GET_PROXY_SERVER\",e.CAN_NOT_GET_GATEWAY_SERVER=\"CAN_NOT_GET_GATEWAY_SERVER\",e.VOID_GATEWAY_ADDRESS=\"VOID_GATEWAY_ADDRESS\",e.UID_CONFLICT=\"UID_CONFLICT\",e.MULTI_UNILBS_RESPONSE_ERROR=\"MULTI_UNILBS_RESPONSE_ERROR\",e.UPDATE_TICKET_FAILED=\"UPDATE_TICKET_FAILED\",e.INVALID_LOCAL_TRACK=\"INVALID_LOCAL_TRACK\",e.INVALID_TRACK=\"INVALID_TRACK\",e.SENDER_NOT_FOUND=\"SENDER_NOT_FOUND\",e.CREATE_OFFER_FAILED=\"CREATE_OFFER_FAILED\",e.SET_ANSWER_FAILED=\"SET_ANSWER_FAILED\",e.ICE_FAILED=\"ICE_FAILED\",e.PC_CLOSED=\"PC_CLOSED\",e.SENDER_REPLACE_FAILED=\"SENDER_REPLACE_FAILED\",e.GET_LOCAL_CAPABILITIES_FAILED=\"GET_LOCAL_CAPABILITIES_FAILED\",e.GET_LOCAL_CONNECTION_PARAMS_FAILED=\"GET_LOCAL_CONNECTION_PARAMS_FAILED\",e.SUBSCRIBE_FAILED=\"SUBSCRIBE_FAILED\",e.UNSUBSCRIBE_FAILED=\"UNSUBSCRIBE_FAILED\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NO_ICE_CANDIDATE=\"NO_ICE_CANDIDATE\",e.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS=\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",e.EXIST_DISABLED_VIDEO_TRACK=\"EXIST_DISABLED_VIDEO_TRACK\",e.INVALID_REMOTE_USER=\"INVALID_REMOTE_USER\",e.REMOTE_USER_IS_NOT_PUBLISHED=\"REMOTE_USER_IS_NOT_PUBLISHED\",e.CUSTOM_REPORT_SEND_FAILED=\"CUSTOM_REPORT_SEND_FAILED\",e.CUSTOM_REPORT_FREQUENCY_TOO_HIGH=\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",e.FETCH_AUDIO_FILE_FAILED=\"FETCH_AUDIO_FILE_FAILED\",e.READ_LOCAL_AUDIO_FILE_ERROR=\"READ_LOCAL_AUDIO_FILE_ERROR\",e.DECODE_AUDIO_FILE_FAILED=\"DECODE_AUDIO_FILE_FAILED\",e.WS_ABORT=\"WS_ABORT\",e.WS_DISCONNECT=\"WS_DISCONNECT\",e.WS_ERR=\"WS_ERR\",e.LIVE_STREAMING_TASK_CONFLICT=\"LIVE_STREAMING_TASK_CONFLICT\",e.LIVE_STREAMING_INVALID_ARGUMENT=\"LIVE_STREAMING_INVALID_ARGUMENT\",e.LIVE_STREAMING_INTERNAL_SERVER_ERROR=\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",e.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED=\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",e.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED=\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",e.LIVE_STREAMING_CDN_ERROR=\"LIVE_STREAMING_CDN_ERROR\",e.LIVE_STREAMING_INVALID_RAW_STREAM=\"LIVE_STREAMING_INVALID_RAW_STREAM\",e.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT=\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",e.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE=\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",e.LIVE_STREAMING_WARN_FREQUENT_REQUEST=\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",e.WEBGL_INTERNAL_ERROR=\"WEBGL_INTERNAL_ERROR\",e.BEAUTY_PROCESSOR_INTERNAL_ERROR=\"BEAUTY_PROCESSOR_INTERNAL_ERROR\",e.CROSS_CHANNEL_WAIT_STATUS_ERROR=\"CROSS_CHANNEL_WAIT_STATUS_ERROR\",e.CROSS_CHANNEL_FAILED_JOIN_SRC=\"CROSS_CHANNEL_FAILED_JOIN_SEC\",e.CROSS_CHANNEL_FAILED_JOIN_DEST=\"CROSS_CHANNEL_FAILED_JOIN_DEST\",e.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST=\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",e.CROSS_CHANNEL_SERVER_ERROR_RESPONSE=\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",e.METADATA_OUT_OF_RANGE=\"METADATA_OUT_OF_RANGE\",e.LOCAL_AEC_ERROR=\"LOCAL_AEC_ERROR\",e.INVALID_PLUGIN=\"INVALID_PLUGIN\",e.DISCONNECT_P2P=\"DISCONNECT_P2P\",e.INIT_WEBSOCKET_TIMEOUT=\"INIT_WEBSOCKET_TIMEOUT\",e.CONVERTING_IMAGEDATA_TO_BLOB_FAILED=\"CONVERTING_IMAGEDATA_TO_BLOB_FAILED\",e.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED=\"CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED\",e.INIT_DATACHANNEL_TIMEOUT=\"INIT_DATACHANNEL_TIMEOUT\",e.DATACHANNEL_CONNECTION_TIMEOUT=\"DATACHANNEL_CONNECTION_TIMEOUT\"}(xD||(xD={}));class QD extends Error{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",i=arguments.length>2?arguments[2]:void 0;super(t),MN(this,\"code\",void 0),MN(this,\"message\",void 0),MN(this,\"data\",void 0),MN(this,\"name\",\"AgoraRTCException\"),this.code=e,this.message=\"AgoraRTCError \".concat(this.code,\": \").concat(t),this.data=i}toString(){return this.data?\"data: \".concat(JSON.stringify(this.data),\"\\n\").concat(this.stack):\"\".concat(this.stack)}print(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"error\";return\"error\"===e&&JD.error(this.toString()),\"warning\"===e&&JD.warning(this.toString()),this}throw(){throw this.print(),this}}const FD={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1e4};function VD(e,t){const i=Math.floor(t.timeout*Math.pow(t.timeoutFactor,e));return Math.min(t.maxRetryTimeout,i)}function jD(e,t,i,r){const n=Object.assign({},FD,r);let o=n.timeout;const s=async()=>{await function(e){return new l_(t=>{window.setTimeout(t,e)})}(o),o*=n.timeoutFactor,o=Math.min(n.maxRetryTimeout,o)};let a=!1;const c=new l_(async(r,o)=>{t=t||(()=>!1),i=i||(()=>!0);for(let c=0;c<n.maxRetryCount;c+=1){if(a)return o(new QD(xD.OPERATION_ABORTED));try{const i=await e();if(!t(i,c))return r(i);if(c+1===n.maxRetryCount)return r(i);await s()}catch(e){if(!i(e,c))return o(e);if(c+1===n.maxRetryCount)return o(e);await s()}}});return c.cancel=()=>a=!0,c}function GD(){const e=new Date;return e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}function KD(){const e=new Date,t=/((\\d+:){2}\\d+)/.exec((new Date).toUTCString());return t?(null==t?void 0:t[0])+\":\"+e.getUTCMilliseconds():e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}const HD={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},WD=Date.now(),YD=e=>{for(const t in HD)if(Object.prototype.hasOwnProperty.call(HD,t)&&HD[t]===e)return t;return\"DEFAULT\"};const JD=new class{constructor(){MN(this,\"proxyServerURL\",void 0),MN(this,\"logLevel\",HD.DEBUG),MN(this,\"uploadState\",\"collecting\"),MN(this,\"uploadLogWaitingList\",[]),MN(this,\"uploadLogUploadingList\",[]),MN(this,\"uploadErrorCount\",0),MN(this,\"currentLogID\",0),MN(this,\"url\",void 0),MN(this,\"extLog\",(e,t)=>{this.appendLogToWaitingList(e,...t)})}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[HD.DEBUG].concat(t);this.log.apply(this,r)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[HD.INFO].concat(t);this.log.apply(this,r)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[HD.WARNING].concat(t);this.log.apply(this,r)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[HD.ERROR].concat(t);this.log.apply(this,r)}upload(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[HD.DEBUG].concat(t);this.uploadLog.apply(this,r)}setLogLevel(e){e=Math.min(Math.max(0,e),4),this.logLevel=e}enableLogUpload(){PP(\"UPLOAD_LOG\",!0)}disableLogUpload(){PP(\"UPLOAD_LOG\",!1),this.uploadLogUploadingList=[],this.uploadLogWaitingList=[]}setProxyServer(e){this.proxyServerURL=e}prefix(e){return new BD(this).prefix(e)}log(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-WD<100)return void setTimeout(()=>{this.log(...t)},Date.now()-WD);const r=Math.max(0,Math.min(4,t[0]));if(t[0]=GD()+\" Agora-SDK [\".concat(YD(r),\"]:\"),this.appendLogToWaitingList(r,...t),r<this.logLevel)return;const n=GD()+\" %cAgora-SDK [\".concat(YD(r),\"]:\");let o=[];if(!LP(\"USE_NEW_LOG\"))switch(r){case HD.DEBUG:o=[n,\"color: #64B5F6;\"].concat(t.slice(1)),console.log.apply(console,o);break;case HD.INFO:o=[n,\"color: #1E88E5; font-weight: bold;\"].concat(t.slice(1)),console.log.apply(console,o);break;case HD.WARNING:o=[n,\"color: #FB8C00; font-weight: bold;\"].concat(t.slice(1)),console.warn.apply(console,o);break;case HD.ERROR:o=[n,\"color: #B00020; font-weight: bold;\"].concat(t.slice(1)),console.error.apply(console,o)}}uploadLog(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(Date.now()-WD<100)return void setTimeout(()=>{this.uploadLog(...t)},Date.now()-WD);const r=Math.max(0,Math.min(4,t[0]));t[0]=GD()+\" Agora-SDK [\".concat(YD(r),\"]:\"),this.appendLogToWaitingList(r,...t)}appendLogToWaitingList(e){if(!LP(\"UPLOAD_LOG\"))return;for(var t=arguments.length,i=new Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];Array.isArray(i[0])?i[0][0]=KD()+\" Agora-SDK [\".concat(YD(e),\"]:\"):i[0]=KD()+\" Agora-SDK [\".concat(YD(e),\"]:\");let n=\"\";i.forEach(e=>{\"object\"==typeof e&&(e=JSON.stringify(e)),n+=\"\".concat(e,\" \")}),this.uploadLogWaitingList.push({payload_str:n,log_level:e,log_item_id:this.currentLogID++}),\"uploading\"===this.uploadState&&0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}startUpload(){this.uploadState=\"uploading\",0===this.uploadLogUploadingList.length&&this.uploadLogInterval()}async uploadLogs(){const e=this.uploadLogUploadingList,t={sdk_version:CP,process_id:LP(\"PROCESS_ID\"),payload:JSON.stringify(e)};return jD(async()=>{const e=await kD.post(this.url||(this.proxyServerURL?\"https://\".concat(this.proxyServerURL,\"/ls/?h=\").concat(LP(\"LOG_UPLOAD_SERVER\"),\"&p=443&d=upload/v1\"):\"https://\".concat(LP(\"LOG_UPLOAD_SERVER\"),\"/upload/v1\")),t,{responseType:\"text\"});if(\"OK\"!==e.data){const t=new Error(\"unexpected upload log response\");throw t.response=e,t}},()=>(this.uploadLogUploadingList=[],!1),e=>(e.response?UD.reportLogUploadError({status:e.response.status,data:e.response.data,headers:e.response.headers,message:e.message}):e.request?UD.reportLogUploadError({status:e.request.status,message:e.message}):UD.reportLogUploadError({status:-1,message:e.message}),!0),{timeout:LP(\"UPLOAD_LOG_REQUEST_RETRY_INTERVAL\"),maxRetryTimeout:LP(\"UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL\")})}uploadLogInterval(){0===this.uploadLogUploadingList.length&&0===this.uploadLogWaitingList.length||(0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=this.uploadLogWaitingList.splice(0,LP(\"UPLOAD_LOG_LENGTH_EACH_TIME\"))),this.uploadLogs().then(()=>{this.uploadErrorCount=0,this.uploadLogWaitingList.length>0&&window.setTimeout(()=>this.uploadLogInterval(),LP(\"UPLOAD_LOG_INTERVAL\"))}).catch(e=>{this.uploadErrorCount+=1,this.uploadErrorCount<2?window.setTimeout(()=>this.uploadLogInterval(),LP(\"UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1\")):window.setTimeout(()=>this.uploadLogInterval(),LP(\"UPLOAD_LOG_RETRY_INTERVAL_V1\"))}))}},qD={debug:console.log,info:console.log,warning:console.warn,error:console.error},XD={debug:\"color: #64B5F6;\",info:\"color: #1E88E5; font-weight: bold;\",warning:\"color: #FB8C00; font-weight: bold;\",error:\"color: #B00020; font-weight: bold;\"},zD={debug:0,info:1,warning:2,error:3},ZD=[];let $D,eP=0,tP=0,iP=!1;function rP(){const e=new Date;return[e.getTime(),e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()]}function nP(e){if(!LP(\"UPLOAD_LOG\"))return;let t;switch(e.type){case JL.MISC:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.msg]];break;case JL.INTERNAL_EVENT:case JL.PUBLIC_EVENT:case JL.WEB_EVENT:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.event,e.msg]];break;case JL.INTERNAL_API:case JL.PUBLIC_API:case JL.WEB_API:t=[e.timestamp,e.level,e.type,e.module,e.instanceId,[e.api,e.args,e.result]]}ZD.push(t)}function oP(e,t){const[i,r]=rP(),n=\"warning\",o=\"\".concat(r,\" %cAgora-SDK [\").concat(n,\"] [INTERNAL API]:\"),s={[JL.WEB_API]:\"logWebAPI\",[JL.PUBLIC_API]:\"logPublicAPI\",[JL.INTERNAL_API]:\"logInternalAPI\",[JL.WEB_EVENT]:\"logWebEvent\",[JL.PUBLIC_EVENT]:\"logPublicEvent\",[JL.INTERNAL_EVENT]:\"logInternalEvent\",[JL.MISC]:\"logMisc\"}[e],a=[o,XD.warning,\"Log.\".concat(s),t];LP(\"USE_NEW_LOG\")&&(aP(n)&&qD.warning.apply(console,a),nP({timestamp:i,level:n,module:\"Log\",instanceId:void 0,type:JL.INTERNAL_API,api:s,args:void 0,result:t.toString()}))}function sP(e){if(Array.isArray(e)){let[t,i]=e;return t||(t=\"Global\"),{module:t,instanceId:i}}let t,i;if(\"string\"!=typeof e.__moduleName)throw new Error(\"Cannot get __moduleName from log instance.\");t=e.__moduleName;try{i=e.__instanceId}catch(e){throw new Error(\"Cannot get __instanceId from log instance.\")}return{module:t,instanceId:i}}function aP(e){return zD[e]>=tP}function cP(e,t,i,r,n,o){if(e===JL.PUBLIC_API||e===JL.WEB_API||e===JL.INTERNAL_API)try{const{module:s,instanceId:a}=sP(i);n=n&&JSON.stringify(n),o=o instanceof Error?o.toString():o&&JSON.stringify(o);const[c,d]=rP(),u=[\"\".concat(d,\" %cAgora-SDK [\").concat(t,\"] [\").concat({[JL.PUBLIC_API]:\"PUBLIC API\",[JL.WEB_API]:\"WEB API\",[JL.INTERNAL_API]:\"INTERNAL API\"}[e],\"]:\"),XD[t],\"\".concat(s).concat(a?\"<\".concat(a,\">\"):\"\",\".\").concat(r),n,o];LP(\"USE_NEW_LOG\")&&(aP(t)&&qD[t].apply(console,u),nP({timestamp:c,level:t,module:s,instanceId:a,type:e,api:r,args:n,result:o}))}catch(t){oP(e,t)}}function dP(e,t,i,r,n){if(e===JL.WEB_EVENT||e===JL.INTERNAL_EVENT||e===JL.PUBLIC_EVENT)try{const{module:o,instanceId:s}=sP(i);\"string\"!=typeof n&&(n=n instanceof Error?n.toString():JSON.stringify(n));const[a,c]=rP(),d=[\"\".concat(c,\" %cAgora-SDK [\").concat(t,\"] [\").concat({[JL.WEB_EVENT]:\"WEB EVENT\",[JL.PUBLIC_EVENT]:\"PUBLIC EVENT\",[JL.INTERNAL_EVENT]:\"INTERNAL EVENT\"}[e],\"]:\"),XD[t],\"\".concat(o).concat(s?\"<\".concat(s,\">\"):\"\",\".on(\").concat(r,\")\"),n||\"\"];LP(\"USE_NEW_LOG\")&&(aP(t)&&qD[t].apply(console,d),nP({timestamp:a,level:t,module:o,instanceId:s,type:e,event:r,msg:n}))}catch(t){oP(e,t)}}function uP(e){$D=e}function hP(e,t,i){try{const{module:r,instanceId:n}=sP(t),[o,s]=rP(),a=[\"\".concat(s,\" %cAgora-SDK [\").concat(e,\"] [MISC]:\"),XD[e],\"\".concat(r).concat(n?\"<\".concat(n,\">\"):\"\"),'\"'.concat(i,'\"')];LP(\"USE_NEW_LOG\")&&(aP(e)&&qD[e].apply(console,a),nP({timestamp:o,level:e,module:r,instanceId:n,type:JL.MISC,msg:i}))}catch(e){gP(\"warning\",[\"log\"],\"logMisc\",void 0,e)}}function AP(e,t,i,r){dP(JL.INTERNAL_EVENT,e,t,i,r)}function lP(e,t,i,r){dP(JL.PUBLIC_EVENT,e,t,i,r)}function pP(e,t,i,r){dP(JL.WEB_EVENT,e,t,i,r)}function gP(e,t,i,r,n){cP(JL.INTERNAL_API,e,t,i,r,n)}function EP(e,t,i,r,n){cP(JL.WEB_API,e,t,i,r,n)}function fP(e,t,i,r,n){cP(JL.PUBLIC_API,e,t,i,r,n)}function mP(e,t){return function(i){return class extends i{get __moduleName(){return e}get __instanceId(){if(t){if(\"function\"==typeof this[t])return this[t]();{const e=t.split(\".\");return e.length>0?cc(e).call(e,(e,t)=>{try{return e?e[t]:e}catch(e){return}},this):this[t]}}}}}}async function IP(e){if(!e&&iP)return;if(iP=!0,!LP(\"UPLOAD_LOG\"))return void setTimeout(()=>IP(!0),LP(\"UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF\"));if(0===ZD.length)return void setTimeout(()=>IP(!0),LP(\"UPLOAD_LOG_INTERVAL\"));const t=ZD.slice(0,LP(\"UPLOAD_LOG_LENGTH_EACH_TIME\")),i={sdk_version:CP,log_version:LP(\"LOG_VERSION\"),process_id:LP(\"PROCESS_ID\"),index:eP,logs:JSON.stringify(t)};await jD(async()=>{const e=await kD.post($D?\"https://\".concat($D,\"/ls/?h=\").concat(LP(\"LOG_UPLOAD_SERVER\"),\"&p=443&d=upload/v1\"):\"https://\".concat(LP(\"LOG_UPLOAD_SERVER\"),\"/upload/v1\"),i,{responseType:\"text\"});if(\"OK\"!==e.data)throw new Error(\"Log service response error \".concat(e.data));return e},void 0,void 0,{timeout:LP(\"UPLOAD_LOG_REQUEST_RETRY_INTERVAL\"),maxRetryTimeout:LP(\"UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL\")}),ZD.splice(0,LP(\"UPLOAD_LOG_LENGTH_EACH_TIME\")),eP+=t.length,setTimeout(()=>IP(!0),LP(\"UPLOAD_LOG_INTERVAL\"))}const _P=\"v4.15.1-0-g31e59714-dirty(12/2/2022, 5:43:26 PM)\",CP=function(e){if(e.match(/[0-9]+\\.[0-9]+\\.[0-9]+$/))return e;const t=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-alpha\\.([0-9]+)/);if(t&&t[1]&&t[2]){const e=t[1],i=t[2];return\"\".concat(e,\".\").concat(i)}const i=e.match(/([0-9]+\\.[0-9]+\\.[0-9]+)\\-special\\.([0-9]+)/);if(i&&i[1]&&i[2]){const e=i[1],t=i[2];return\"\".concat(e,\".\").concat(100*(Number(t)+1))}return\"4.0.0.999\"}(\"4.15.1\"),SP=function(){try{return!0===JSON.parse(\"true\")}catch(e){return!0}}(),vP=function(){const e=\"us\".concat(\"erna\",\"me\"),t=\"pa\".concat(\"sswo\",\"rd\"),i=[\"t\",\"s\",\"t\"];i.splice(1,0,\"e\");const r=i.join(\"\"),n=[];for(let e=0;e<6;e++)n.push(\"1\");const o=n.join(\"\"),s={};return s[e]=r,s[t]=o,Object.assign(s,{turnServerURL:\"\",tcpport:3433,udpport:3478,forceturn:!1})}();window.DEFAULT_TURN_CONFIG=vP;const TP={\"90p\":UP(160,90),\"90p_1\":UP(160,90),\"120p\":UP(160,120,15,30,65),\"120p_1\":UP(160,120,15,30,65),\"120p_3\":UP(120,120,15,30,50),\"120p_4\":UP(212,120),\"180p\":UP(320,180,15,30,140),\"180p_1\":UP(320,180,15,30,140),\"180p_3\":UP(180,180,15,30,100),\"180p_4\":UP(240,180,15,30,120),\"240p\":UP(320,240,15,40,200),\"240p_1\":UP(320,240,15,40,200),\"240p_3\":UP(240,240,15,40,140),\"240p_4\":UP(424,240,15,40,220),\"360p\":UP(640,360,15,80,400),\"360p_1\":UP(640,360,15,80,400),\"360p_3\":UP(360,360,15,80,260),\"360p_4\":UP(640,360,30,80,600),\"360p_6\":UP(360,360,30,80,400),\"360p_7\":UP(480,360,15,80,320),\"360p_8\":UP(480,360,30,80,490),\"360p_9\":UP(640,360,15,80,800),\"360p_10\":UP(640,360,24,80,800),\"360p_11\":UP(640,360,24,80,1e3),\"480p\":UP(640,480,15,100,500),\"480p_1\":UP(640,480,15,100,500),\"480p_2\":UP(640,480,30,100,1e3),\"480p_3\":UP(480,480,15,100,400),\"480p_4\":UP(640,480,30,100,750),\"480p_6\":UP(480,480,30,100,600),\"480p_8\":UP(848,480,15,100,610),\"480p_9\":UP(848,480,30,100,930),\"480p_10\":UP(640,480,10,100,400),\"720p\":UP(1280,720,15,120,1130),\"720p_1\":UP(1280,720,15,120,1130),\"720p_2\":UP(1280,720,30,120,2e3),\"720p_3\":UP(1280,720,30,120,1710),\"720p_5\":UP(960,720,15,120,910),\"720p_6\":UP(960,720,30,120,1380),\"1080p\":UP(1920,1080,15,120,2080),\"1080p_1\":UP(1920,1080,15,120,2080),\"1080p_2\":UP(1920,1080,30,120,3e3),\"1080p_3\":UP(1920,1080,30,120,3150),\"1080p_5\":UP(1920,1080,60,120,4780),\"1440p\":UP(2560,1440,30,120,4850),\"1440p_1\":UP(2560,1440,30,120,4850),\"1440p_2\":UP(2560,1440,60,120,7350),\"4k\":UP(3840,2160,30,120,8910),\"4k_1\":UP(3840,2160,30,120,8910),\"4k_3\":UP(3840,2160,60,120,13500)},RP={\"480p\":xP(640,480,5),\"480p_1\":xP(640,480,5),\"480p_2\":xP(640,480,30),\"480p_3\":xP(640,480,15),\"720p\":xP(1280,720,5),\"720p_1\":xP(1280,720,5),\"720p_2\":xP(1280,720,30),\"720p_3\":xP(1280,720,15),\"1080p\":xP(1920,1080,5),\"1080p_1\":xP(1920,1080,5),\"1080p_2\":xP(1920,1080,30),\"1080p_3\":xP(1920,1080,15)},yP={\"1SL1TL\":QP(1,1),\"3SL3TL\":QP(3,3),\"2SL3TL\":QP(2,3)};function wP(e){return\"string\"==typeof e?Object.assign({},TP[e]):e}function bP(e){return\"string\"==typeof e?Object.assign({},RP[e]):e}function NP(e){return\"string\"==typeof e?Object.assign({},yP[e]):e}const OP={speech_low_quality:MP(16e3,!1),speech_standard:MP(32e3,!1,18),music_standard:MP(48e3,!1),standard_stereo:MP(48e3,!0,56),high_quality:MP(48e3,!1,128),high_quality_stereo:MP(48e3,!0,192)};function DP(e){return\"string\"==typeof e?Object.assign({},OP[e]):e}function PP(e,t,i){Object.keys(kP).includes(e)&&(!i&&Object.keys(BP).includes(e)||(kP[e]=t))}function LP(e){return kP[e]}const kP={PROCESS_ID:\"\",ENCRYPT_AES:!0,AREAS:[\"CHINA\",\"GLOBAL\"],WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\",\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\",\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-web-2.ap.sd-rtn.com\",\"cds-ap-web-3.agora.io\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-web-2.ap.sd-rtn.com\",\"sua-ap-web-3.agora.io\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-web-2.ap.sd-rtn.com\",\"uap-ap-web-3.agora.io\",\"uap-web-4.ap.sd-rtn.com\"],LOG_UPLOAD_SERVER:\"logservice.agora.io\",EVENT_REPORT_DOMAIN:\"statscollector-1.agora.io\",EVENT_REPORT_BACKUP_DOMAIN:\"web-2.statscollector.sd-rtn.com\",ENABLE_EVENT_REPORT:!0,GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:\"\",LIVE_STREAMING_ADDRESS:\"\",HTTP_CONNECT_TIMEOUT:5e3,SIGNAL_REQUEST_TIMEOUT:1e4,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],SUBSCRIBE_TCC:!0,PING_PONG_TIME_OUT:10,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:3e3,CONFIG_DISTRIBUTE_INTERVAL:3e5,ENABLE_CONFIG_DISTRIBUTE:!0,CANDIDATE_TIMEOUT:5e3,SHOW_REPORT_INVOKER_LOG:!1,JOIN_EXTEND:\"\",PUB_EXTEND:\"\",SUB_EXTEND:\"\",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2e3,AJAX_REQUEST_CONCURRENT:3,REPORT_APP_SCENARIO:void 0,GATEWAY_DOMAINS:[\"edge.agora.io\",\"edge.sd-rtn.com\"],WORKER_DOMAIN:\"edge.agora.io\",TURN_DOMAIN:\"edge.agora.io\",EVENT_REPORT_RETRY:!0,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3e3,AUDIO_VOLUME_INDICATION_INTERVAL:2e3,VOLUME_VOICE_WEIGHT:10,GET_VOLUME_OF_MUTED_AUDIO_TRACK:!1,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:\"webnginx-proxy.agora.io\",PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\",\"webrtc-cloud-proxy.agora.io\"],CUSTOM_PUB_ANSWER_MODIFIER:null,CUSTOM_SUB_ANSWER_MODIFIER:null,CUSTOM_PUB_OFFER_MODIFIER:null,CUSTOM_SUB_OFFER_MODIFIER:null,DSCP_TYPE:\"high\",REMOVE_NEW_CODECS:!0,FRAGEMENT_LENGTH:3,WEBSOCKET_COMPRESS:!1,SIMULCAST:!1,PRELOAD_MEDIA_COUNT:0,USE_RTX:!1,CHECK_VIDEO_VISIBLE_INTERVAL:3e4,ENUMERATE_DEVICES_INTERVAL:!1,ENUMERATE_DEVICES_INTERVAL_TIME:1e4,USE_NEW_TOKEN:!1,CLOSE_AFB_FOR_LOCAL_AP:!0,JOIN_WITH_FALLBACK_SIGNAL_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY:!0,JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE:!1,JOIN_WITH_FALLBACK_PROXY_PENDING_DURATION:2e3,USE_TURN_SERVER_OF_GATEWAY:!1,H264_PROFILE_LEVEL_ID:\"\",USE_NEW_LOG:!1,LOG_VERSION:3,MEDIA_DEVICE_CONSTRAINTS:null,ENCRYPT_PROXY_USERNAME_AND_PSW:!0,SDP_LOGGING:!1,CSP_DETECTED_HOSTNAME_LIST:[\"agora.io\",\"sd-rtn.com\"],REMOTE_AUDIO_TRACK_USES_WEB_AUDIO:!1,LOCAL_AUDIO_TRACK_USES_WEB_AUDIO:!0,BITRATE_ADAPTER_TYPE:\"STANDARD_BITRATE\",AI_DENOISER_PARAMETERS:{},ADJUST_3A_FROM_PLUGINS:!0,RAISE_H264_BASELINE_PRIORITY:!0,FILTER_SEND_H264_BASELINE:!1,ENABLE_PUBLISHED_USER_LIST:!0,MAX_SUBSCRIPTION:50,X_GOOGLE_START_BITRATE:void 0,NEW_REPORT_SERVER:!1,NEW_REPORT_SERVER_DOMAINS:[\"data-reporting.agora.io\",\"data-reporting.agora.io\"],VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT:3e5,VIDEO_INSPECT_INTERVAL_MINIMUM:1e3,VIDEO_INSPECT_QUALITY_RATIO:.9,VIDEO_INSPECT_WORKER_MANAGER_HOST:\"edge.agora.io\",VIDEO_INSPECT_WORKER_MANAGER_PORT:\"\",VIDEO_INSPECT_WORKER_PORT:\"\",SHOW_VIDEO_INSPECT_WORKER_MESSAGE:!1,STATS_COLLECTOR_PORT:443,FORCE_TURN_TCP:!1,SUBSCRIBE_AUDIO_FILTER_TOPN:void 0,ENABLE_PUBLISH_AUDIO_FILTER:void 0,WEBAUDIO_INIT_OPTIONS:void 0,FILTER_VIDEO_FEC:!0,FILTER_AUDIO_FEC:!1,CHROME_DUAL_STREAM_USE_ENCODING:!0,EXTENSION_USAGE_UPLOAD_INTERVAL:1e4,ICE_RESTART:!0,ENABLE_USER_LICENSE_CHECK:!0,SIGNAL_CHANNEL:0,TRANSMITTER_INITIAL_RTT:30,TRANSMITTER_INITIAL_RTO:30,TRANSMITTER_MAX_BATCH_ACK_COUNT:2,TRANSMITTER_MAX_RTO:500,DATACHANNEL_COMPRESS:!0,FINGERPRINT:null,DC_JOIN_WITH_FAILBACK:5e3,DISABLE_WEBAUDIO:!1,ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,FILEPATH_LENMAX:255,DUALSTREAM_OPERATION_CHECK:!0,MEDIA_ELEMENT_EXISTS_DEPTH:3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,STATS_FILTER:{transportId:!0,googTrackId:!0},UPLOAD_LOG_INTERVAL:3e3,UPLOAD_LOG_REQUEST_RETRY_INTERVAL:2e3,UPLOAD_LOG_REQUEST_MAX_RETRY_INTERVAL:2e4,UPLOAD_LOG_TRY_INTERVAL_WHILE_OFF:5e3,UPLOAD_LOG_RETRY_INTERVAL_V1:1e4,UPLOAD_LOG_TWICE_RETRY_INTERVAL_V1:200,UPLOAD_LOG_LENGTH_EACH_TIME:10,APP_TYPE:0,SPATIALIZER_PARAMETERS:{}},BP={};function MP(e,t,i){return{sampleRate:e,stereo:t,bitrate:i}}function UP(e,t,i,r,n){return{width:e,height:t,frameRate:i,bitrateMin:r,bitrateMax:n}}function xP(e,t,i,r,n){return{width:{max:e},height:{max:t},frameRate:i,bitrateMin:r,bitrateMax:n}}function QP(e,t){return{numSpatialLayers:e,numTemporalLayers:t}}SP||(kP.WEBCS_DOMAIN=[\"ap-web-1-oversea.agora.io\",\"ap-web-1-north-america.agora.io\"],kP.WEBCS_DOMAIN_BACKUP_LIST=[\"ap-web-2-oversea.agora.io\",\"ap-web-2-north-america.agora.io\"],kP.PROXY_CS=[\"proxy-ap-web-oversea.agora.io\",\"proxy-ap-web-america.agora.io\"],kP.CDS_AP=[\"cds-ap-web-oversea.agora.io\",\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],kP.ACCOUNT_REGISTER=[\"sua-ap-web-oversea.agora.io\",\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],kP.UAP_AP=[\"uap-ap-web-oversea.agora.io\",\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],kP.LOG_UPLOAD_SERVER=\"logservice-oversea.agora.io\",kP.EVENT_REPORT_DOMAIN=\"statscollector-1-oversea.agora.io\",kP.EVENT_REPORT_BACKUP_DOMAIN=\"statscollector-2-oversea.agora.io\",kP.PROXY_SERVER_TYPE3=\"webrtc-cloud-proxy.agora.io\",kP.AREAS=[\"NORTH_AMERICA\",\"OVERSEA\"]);const FP=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],VP=[],jP=[];var GP=ws,KP=ia,HP=Vn,WP=function(e,t,i){var r=GP(t);r in e?KP.f(e,r,HP(0,i)):e[r]=i},YP=TA,JP=Va,qP=WP,XP=vn.Array,zP=Math.max,ZP=function(e,t,i){for(var r=JP(e),n=YP(t,r),o=YP(void 0===i?r:i,r),s=XP(zP(o-n,0)),a=0;n<o;n++,a++)qP(s,a,e[n]);return s.length=a,s},$P=ZP,eL=Math.floor,tL=function(e,t){var i=e.length,r=eL(i/2);return i<8?iL(e,t):rL(e,tL($P(e,0,r),t),tL($P(e,r),t),t)},iL=function(e,t){for(var i,r,n=e.length,o=1;o<n;){for(r=o,i=e[o];r&&t(e[r-1],i)>0;)e[r]=e[--r];r!==o++&&(e[r]=i)}return e},rL=function(e,t,i,r){for(var n=t.length,o=i.length,s=0,a=0;s<n||a<o;)e[s+a]=s<n&&a<o?r(t[s],i[a])<=0?t[s++]:i[a++]:s<n?t[s++]:i[a++];return e},nL=tL,oL=Ao.match(/firefox\\/(\\d+)/i),sL=!!oL&&+oL[1],aL=/MSIE|Trident/.test(Ao),cL=Ao.match(/AppleWebKit\\/(\\d+)\\./),dL=!!cL&&+cL[1],uL=ka,hL=_n,AL=Bo,lL=zo,pL=Va,gL=_p,EL=ln,fL=nL,mL=Xa,IL=sL,_L=aL,CL=Io,SL=dL,vL=[],TL=hL(vL.sort),RL=hL(vL.push),yL=EL((function(){vL.sort(void 0)})),wL=EL((function(){vL.sort(null)})),bL=mL(\"sort\"),NL=!EL((function(){if(CL)return CL<70;if(!(IL&&IL>3)){if(_L)return!0;if(SL)return SL<603;var e,t,i,r,n=\"\";for(e=65;e<76;e++){switch(t=String.fromCharCode(e),e){case 66:case 69:case 70:case 72:i=3;break;case 68:case 71:i=4;break;default:i=2}for(r=0;r<47;r++)vL.push({k:t+r,v:i})}for(vL.sort((function(e,t){return t.v-e.v})),r=0;r<vL.length;r++)t=vL[r].k.charAt(0),n.charAt(n.length-1)!==t&&(n+=t);return\"DGBEFHACIJK\"!==n}}));uL({target:\"Array\",proto:!0,forced:yL||!wL||!bL||!NL},{sort:function(e){void 0!==e&&AL(e);var t=lL(this);if(NL)return void 0===e?TL(t):TL(t,e);var i,r,n=[],o=pL(t);for(r=0;r<o;r++)r in t&&RL(n,t[r]);for(fL(n,function(e){return function(t,i){return void 0===i?-1:void 0===t?1:void 0!==e?+e(t,i)||0:gL(t)>gL(i)?1:-1}}(e)),i=n.length,r=0;r<i;)t[r]=n[r++];for(;r<o;)delete t[r++];return t}});var OL=ic(\"Array\").sort,DL=Cn,PL=OL,LL=Array.prototype,kL=function(e){var t=e.sort;return e===LL||DL(LL,e)&&t===LL.sort?PL:t};function BL(e,t){if(\"boolean\"!=typeof e)throw new QD(xD.INVALID_PARAMS,\"Invalid \".concat(t,\": The value is of the boolean type.\"))}function ML(e,t,i){if(i.includes(e))return;throw new QD(xD.INVALID_PARAMS,\"\".concat(t,\" can only be set as \").concat(JSON.stringify(i)))}function UL(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e4,n=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(e<i||e>r||n&&!HL(e)){throw new QD(xD.INVALID_PARAMS,\"invalid \".concat(t,\": the value range is [\").concat(i,\", \").concat(r,\"]. integer only\"))}}function xL(e,t){if(\"number\"!=typeof e){if(!(e.min||e.max||e.ideal||e.exact)){throw new QD(xD.INVALID_PARAMS,\"\".concat(t,\" is not a valid ConstrainLong\"))}void 0!==e.min&&UL(e.min,\"\".concat(t,\".min\"),0,1/0),void 0!==e.max&&UL(e.max,\"\".concat(t,\".max\"),1,1/0),void 0!==e.exact&&UL(e.exact,\"\".concat(t,\".exact\"),1,1/0),void 0!==e.ideal&&UL(e.ideal,\"\".concat(t,\".ideal\"),1,1/0)}else UL(e,t,1,1/0)}function QL(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:255,n=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];if(null==e)throw new QD(xD.INVALID_PARAMS,\"\".concat(t||\"param\",\" cannot be empty\"));if(!KL(e,i,r,n))throw new QD(xD.INVALID_PARAMS,\"Invalid \".concat(t||\"string param\",\": Length of the string: [\").concat(i,\",\").concat(r,\"].\").concat(n?\" ASCII characters only.\":\"\"))}function FL(e,t){if(!Array.isArray(e))throw new QD(xD.INVALID_PARAMS,\"\".concat(t,\" should be an array\"))}function VL(e){if(\"string\"!=typeof e||!/^[a-zA-Z0-9 \\!\\#\\$\\%\\&\\(\\)\\+\\-\\:\\;\\<\\=\\.\\>\\?\\@\\[\\]\\^\\_\\{\\}\\|\\~\\,]{1,64}$/.test(e))throw JD.error(\"Invalid Channel Name \".concat(e)),new QD(xD.INVALID_PARAMS,\"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,\")}function jL(e){if(!(t=e,\"number\"==typeof t&&Math.floor(t)===t&&0<=t&&t<=4294967295||KL(e,1,255)))throw JD.error(\"Invalid UID \".concat(e,\" \").concat(typeof e)),new QD(xD.INVALID_PARAMS,\"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]\");var t;\"string\"==typeof e&&JD.warning(\"You input a string as the user ID, to ensure better end-user experience, Agora highly suggests not using a string as the user ID.\")}function GL(e){return null==e}function KL(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:255,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];return\"string\"==typeof e&&e.length<=i&&e.length>=t&&(!r||WL(e))}function HL(e){return\"number\"==typeof e&&e%1==0}function WL(e){if(\"string\"!=typeof e)return!1;for(let t=0;t<e.length;t+=1){const i=e.charCodeAt(t);if(i<0||i>255)return!1}return!0}let YL,JL,qL;!function(e){e.FREE=\"free\",e.UPLOADING=\"uploading\"}(YL||(YL={})),function(e){e[e.MISC=0]=\"MISC\",e[e.INTERNAL_EVENT=1]=\"INTERNAL_EVENT\",e[e.PUBLIC_EVENT=2]=\"PUBLIC_EVENT\",e[e.WEB_EVENT=3]=\"WEB_EVENT\",e[e.INTERNAL_API=4]=\"INTERNAL_API\",e[e.WEB_API=5]=\"WEB_API\",e[e.PUBLIC_API=6]=\"PUBLIC_API\"}(JL||(JL={})),function(e){e.NONE=\"none\",e.INIT=\"init\",e.CANPLAY=\"canplay\",e.PLAYING=\"playing\",e.PAUSED=\"paused\",e.SUSPEND=\"suspend\",e.STALLED=\"stalled\",e.WAITING=\"waiting\",e.ERROR=\"error\",e.DESTROYED=\"destroyed\",e.ABORT=\"abort\",e.ENDED=\"ended\",e.EMPTIED=\"emptied\",e.LOADEDDATA=\"loadeddata\"}(qL||(qL={}));const XL={uninit:100,none:110,init:120,loadeddata:130,canplay:200,playing:210,paused:220,suspend:300,stalled:310,waiting:320,error:330,destroyed:340,abort:350,ended:360,emptied:370};function zL(e){return QL(e.reportId,\"params.reportId\",0,100,!1),QL(e.category,\"params.category\",0,100,!1),QL(e.event,\"params.event\",0,100,!1),QL(e.label,\"params.label\",0,100,!1),UL(e.value,\"params.value\",Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,!1),!0}const ZL={sid:\"\",lts:0,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};let $L,ek,tk,ik,rk,nk,ok,sk,ak,ck,dk,uk,hk,Ak,lk,pk,gk,Ek,fk,mk,Ik,_k,Ck,Sk;function vk(e){return UL(e.timeout,\"config.timeout\",0,1e5),UL(e.timeoutFactor,\"config.timeoutFactor\",0,100,!1),UL(e.maxRetryCount,\"config.maxRetryConfig\",0,1/0),UL(e.maxRetryTimeout,\"config.maxRetryTimeout\",0,1/0),!0}function Tk(e){return ML(e.codec,\"config.codec\",[\"vp8\",\"vp9\",\"av1\",\"h264\"]),ML(e.mode,\"config.mode\",[\"rtc\",\"live\"]),void 0!==e.audioCodec&&ML(e.audioCodec,\"config.audioCodec\",[\"opus\",\"pcmu\",\"pcma\",\"g722\"]),void 0!==e.proxyServer&&QL(e.proxyServer,\"config.proxyServer\",1,1e4),void 0!==e.turnServer&&yk(e.turnServer),void 0!==e.httpRetryConfig&&vk(e.httpRetryConfig),void 0!==e.websocketRetryConfig&&vk(e.websocketRetryConfig),!0}function Rk(e){if(!Array.isArray(e)||e.length<1)return!1;try{e.forEach(e=>{if(!e.urls)throw Error()})}catch(e){return!1}return!0}function yk(e){return QL(e.turnServerURL,\"turnServerURL\"),QL(e.username,\"username\"),QL(e.password,\"password\"),e.udpport&&UL(e.udpport,\"udpport\",1,99999,!0),e.forceturn&&BL(e.forceturn,\"forceturn\"),e.security&&BL(e.security,\"security\"),e.tcpport&&UL(e.tcpport,\"tcpport\",1,99999,!0),!0}function wk(e){return void 0!==e.level&&ML(e.level,\"level\",[1,2,3]),!0}!function(e){e.PUBLISH=\"publish\",e.SUBSCRIBE=\"subscribe\",e.WS_COMPRESSOR_INIT=\"ws_compressor_init\",e.SESSION_INIT=\"session_init\",e.JOIN_CHOOSE_SERVER=\"join_choose_server\",e.REQ_USER_ACCOUNT=\"req_user_account\",e.JOIN_GATEWAY=\"join_gateway\",e.REJOIN_GATEWAY=\"rejoin_gateway\",e.STREAM_SWITCH=\"stream_switch\",e.REQUEST_PROXY_WORKER_MANAGER=\"request_proxy_worker_manager\",e.REQUEST_PROXY_APPCENTER=\"request_proxy_appcenter\",e.FIRST_VIDEO_RECEIVED=\"first_video_received\",e.FIRST_AUDIO_RECEIVED=\"first_audio_received\",e.FIRST_VIDEO_DECODE=\"first_video_decode\",e.FIRST_AUDIO_DECODE=\"first_audio_decode\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_UPDATE_STREAM=\"on_update_stream\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.USER_ANALYTICS=\"req_user_analytics\"}($L||($L={})),function(e){e.SESSION=\"io.agora.pb.Wrtc.Session\",e.JOIN_CHOOSE_SERVER=\"io.agora.pb.Wrtc.JoinChooseServer\",e.REQ_USER_ACCOUNT=\"io.agora.pb.Wrtc.ReqUserAccount\",e.JOIN_GATEWAY=\"io.agora.pb.Wrtc.JoinGateway\",e.RE_JOIN_GATEWAY=\"io.agora.pb.Wrtc.ReJoinGateway\",e.PUBLISH=\"io.agora.pb.Wrtc.Publish\",e.SUBSCRIBE=\"io.agora.pb.Wrtc.Subscribe\",e.WS_COMPRESSOR_INIT=\"io.agora.pb.Wrtc.WsCompressorInit\",e.STREAM_SWITCH=\"io.agora.pb.Wrtc.StreamSwitch\",e.AUDIO_SENDING_STOPPED=\"io.agora.pb.Wrtc.AudioSendingStopped\",e.VIDEO_SENDING_STOPPED=\"io.agora.pb.Wrtc.VideoSendingStopped\",e.REQUEST_PROXY_APPCENTER=\"io.agora.pb.Wrtc.RequestProxyAppCenter\",e.REQUEST_PROXY_WORKER_MANAGER=\"io.agora.pb.Wrtc.RequestProxyWorkerManager\",e.API_INVOKE=\"io.agora.pb.Wrtc.ApiInvoke\",e.FIRST_VIDEO_RECEIVED=\"io.agora.pb.Wrtc.FirstVideoReceived\",e.FIRST_AUDIO_RECEIVED=\"io.agora.pb.Wrtc.FirstAudioReceived\",e.FIRST_VIDEO_DECODE=\"io.agora.pb.Wrtc.FirstVideoDecode\",e.FIRST_AUDIO_DECODE=\"io.agora.pb.Wrtc.FirstAudioDecode\",e.ON_ADD_AUDIO_STREAM=\"io.agora.pb.Wrtc.OnAddAudioStream\",e.ON_ADD_VIDEO_STREAM=\"io.agora.pb.Wrtc.OnAddVideoStream\",e.ON_UPDATE_STREAM=\"io.agora.pb.Wrtc.OnUpdateStream\",e.ON_REMOVE_STREAM=\"io.agora.pb.Wrtc.OnRemoveStream\",e.JOIN_CHANNEL_TIMEOUT=\"io.agora.pb.Wrtc.JoinChannelTimeout\",e.PEER_PUBLISH_STATUS=\"io.agora.pb.Wrtc.PeerPublishStatus\",e.WORKER_EVENT=\"io.agora.pb.Wrtc.WorkerEvent\",e.AP_WORKER_EVENT=\"io.agora.pb.Wrtc.APWorkerEvent\",e.JOIN_WEB_PROXY_AP=\"io.agora.pb.Wrtc.JoinWebProxyAP\",e.WEBSOCKET_QUIT=\"io.agora.pb.Wrtc.WebSocketQuit\",e.USER_ANALYTICS=\"io.agora.pb.Wrtc.UserAnalytics\",e.AUTOPLAY_FAILED=\"io.agora.pb.Wrtc.AutoplayFailed\"}(ek||(ek={})),function(e){e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\"}(tk||(tk={})),function(e){e[e.SESSION=26]=\"SESSION\",e[e.JOIN_CHOOSE_SERVER=27]=\"JOIN_CHOOSE_SERVER\",e[e.REQ_USER_ACCOUNT=196]=\"REQ_USER_ACCOUNT\",e[e.JOIN_GATEWAY=28]=\"JOIN_GATEWAY\",e[e.PUBLISH=30]=\"PUBLISH\",e[e.SUBSCRIBE=29]=\"SUBSCRIBE\",e[e.WS_COMPRESSOR_INIT=9430]=\"WS_COMPRESSOR_INIT\",e[e.STREAM_SWITCH=32]=\"STREAM_SWITCH\",e[e.AUDIO_SENDING_STOPPED=33]=\"AUDIO_SENDING_STOPPED\",e[e.VIDEO_SENDING_STOPPED=34]=\"VIDEO_SENDING_STOPPED\",e[e.REQUEST_PROXY_APPCENTER=35]=\"REQUEST_PROXY_APPCENTER\",e[e.REQUEST_PROXY_WORKER_MANAGER=36]=\"REQUEST_PROXY_WORKER_MANAGER\",e[e.API_INVOKE=41]=\"API_INVOKE\",e[e.FIRST_VIDEO_RECEIVED=348]=\"FIRST_VIDEO_RECEIVED\",e[e.FIRST_AUDIO_RECEIVED=349]=\"FIRST_AUDIO_RECEIVED\",e[e.FIRST_VIDEO_DECODE=350]=\"FIRST_VIDEO_DECODE\",e[e.FIRST_AUDIO_DECODE=351]=\"FIRST_AUDIO_DECODE\",e[e.ON_ADD_AUDIO_STREAM=352]=\"ON_ADD_AUDIO_STREAM\",e[e.ON_ADD_VIDEO_STREAM=353]=\"ON_ADD_VIDEO_STREAM\",e[e.ON_UPDATE_STREAM=356]=\"ON_UPDATE_STREAM\",e[e.ON_REMOVE_STREAM=355]=\"ON_REMOVE_STREAM\",e[e.JOIN_CHANNEL_TIMEOUT=407]=\"JOIN_CHANNEL_TIMEOUT\",e[e.PEER_PUBLISH_STATUS=408]=\"PEER_PUBLISH_STATUS\",e[e.WORKER_EVENT=156]=\"WORKER_EVENT\",e[e.AP_WORKER_EVENT=160]=\"AP_WORKER_EVENT\",e[e.JOIN_WEB_PROXY_AP=700]=\"JOIN_WEB_PROXY_AP\",e[e.WEBSOCKET_QUIT=671]=\"WEBSOCKET_QUIT\",e[e.USER_ANALYTICS=1e4]=\"USER_ANALYTICS\",e[e.AUTOPLAY_FAILED=9178]=\"AUTOPLAY_FAILED\"}(ik||(ik={})),function(e){e.CREATE_CLIENT=\"createClient\",e.CHECK_SYSTEM_REQUIREMENTS=\"checkSystemRequirements\",e.SET_AREA=\"setArea\",e.CHECK_VIDEO_TRACK_IS_ACTIVE=\"checkVideoTrackIsActive\",e.CHECK_AUDIO_TRACK_IS_ACTIVE=\"checkAudioTrackIsActive\",e.CREATE_MIC_AUDIO_TRACK=\"createMicrophoneAudioTrack\",e.CREATE_CUSTOM_AUDIO_TRACK=\"createCustomAudioTrack\",e.CREATE_BUFFER_AUDIO_TRACK=\"createBufferSourceAudioTrack\",e.CREATE_CAM_VIDEO_TRACK=\"createCameraVideoTrack\",e.CREATE_CUSTOM_VIDEO_TRACK=\"createCustomVideoTrack\",e.CREATE_MIC_AND_CAM_TRACKS=\"createMicrophoneAndCameraTracks\",e.CREATE_SCREEN_VIDEO_TRACK=\"createScreenVideoTrack\",e.SET_ENCRYPTION_CONFIG=\"Client.setEncryptionConfig\",e.START_PROXY_SERVER=\"Client.startProxyServer\",e.STOP_PROXY_SERVER=\"Client.stopProxyServer\",e.SET_PROXY_SERVER=\"Client.setProxyServer\",e.SET_TURN_SERVER=\"Client.setTurnServer\",e.SET_CLIENT_ROLE=\"Client.setClientRole\",e.SET_LOW_STREAM_PARAMETER=\"Client.setLowStreamParameter\",e.ENABLE_DUAL_STREAM=\"Client.enableDualStream\",e.DISABLE_DUAL_STREAM=\"Client.disableDualStream\",e.JOIN=\"Client.join\",e.LEAVE=\"Client.leave\",e.PUBLISH=\"Client.publish\",e.UNPUBLISH=\"Client.unpublish\",e.SUBSCRIBE=\"Client.subscribe\",e.MASS_SUBSCRIBE=\"Client.massSubscribe\",e.MASS_UNSUBSCRIBE=\"Client.massUnsubscribe\",e.UNSUBSCRIBE=\"Client.unsubscribe\",e.RENEW_TOKEN=\"Client.renewToken\",e.SET_REMOTE_VIDEO_STREAM_TYPE=\"Client.setRemoteVideoStreamType\",e.SET_STREAM_FALLBACK_OPTION=\"Client.setStreamFallbackOption\",e.ENABLE_AUDIO_VOLUME_INDICATOR=\"Client.enableAudioVolumeIndicator\",e.SEND_CUSTOM_REPORT_MESSAGE=\"Client.sendCustomReportMessage\",e.INSPECT_VIDEO_CONTENT=\"Client.inspectVideoContent\",e.STOP_INSPECT_VIDEO_CONTENT=\"Client.stopInspectVideoContent\",e.JOIN_FALLBACK_TO_PROXY=\"Client._joinFallbackToProxy\",e.DATACHANNEL_FAILBACK=\"Client._datachannelFailback\",e.ON_LIVE_STREAM_WARNING=\"Client.onLiveStreamWarning\",e.ON_LIVE_STREAM_ERROR=\"Client.onLiveStreamingError\",e.START_LIVE_STREAMING=\"Client.startLiveStreaming\",e.SET_LIVE_TRANSCODING=\"Client.setLiveTranscoding\",e.STOP_LIVE_STREAMING=\"Client.stopLiveStreaming\",e.ADD_INJECT_STREAM_URL=\"Client.addInjectStreamUrl\",e.REMOVE_INJECT_STREAM_URL=\"Client.removeInjectStreamUrl\",e.START_CHANNEL_MEDIA_RELAY=\"Client.startChannelMediaRelay\",e.UPDATE_CHANNEL_MEDIA_RELAY=\"Client.updateChannelMediaRelay\",e.STOP_CHANNEL_MEDIA_RELAY=\"Client.stopChannelMediaRelay\",e.REQUEST_CONFIG_DISTRIBUTE=\"_config-distribute-request\",e.SET_CONFIG_DISTRIBUTE=\"_configDistribute\",e.LOCAL_TRACK_SET_MUTED=\"LocalTrack.setMute\",e.LOCAL_AUDIO_TRACK_PLAY=\"LocalAudioTrack.play\",e.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT=\"LocalAudioTrack.playInElement\",e.LOCAL_AUDIO_TRACK_STOP=\"LocalAudioTrack.stop\",e.LOCAL_AUDIO_TRACK_SET_VOLUME=\"LocalAudioTrack.setVolume\",e.MIC_AUDIO_TRACK_SET_DEVICE=\"MicrophoneAudioTrack.setDevice\",e.BUFFER_AUDIO_TRACK_START=\"BufferSourceAudioTrack.startProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_STOP=\"BufferSourceAudioTrack.stopProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_PAUSE=\"BufferSourceAudioTrack.pauseProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_RESUME=\"BufferSourceAudioTrack.resumeProcessAudioBuffer\",e.BUFFER_AUDIO_TRACK_SEEK=\"BufferSourceAudioTrack.seekAudioBuffer\",e.LOCAL_VIDEO_TRACK_PLAY=\"LocalVideoTrack.play\",e.LOCAL_VIDEO_TRACK_STOP=\"LocalVideoTrack.stop\",e.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"LocalVideoTrack.getVideoElementVisibleStatus\",e.LOCAL_VIDEO_TRACK_BEAUTY=\"LocalVideoTrack.setBeautyEffect\",e.CAM_VIDEO_TRACK_SET_DEVICE=\"CameraVideoTrack.setDevice\",e.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG=\"CameraVideoTrack.setEncoderConfiguration\",e.REMOTE_VIDEO_TRACK_PLAY=\"RemoteVideoTrack.play\",e.REMOTE_VIDEO_TRACK_STOP=\"RemoteVideoTrack.stop\",e.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE=\"RemoteVideoTrack.getVideoElementVisibleStatus\",e.REMOTE_AUDIO_TRACK_PLAY=\"RemoteAudioTrack.play\",e.REMOTE_AUDIO_TRACK_STOP=\"RemoteAudioTrack.stop\",e.REMOTE_AUDIO_SET_VOLUME=\"RemoteAudioTrack.setVolume\",e.REMOTE_AUDIO_SET_OUTPUT_DEVICE=\"RemoteAudioTrack.setOutputDevice\",e.GET_MEDIA_STREAM_TRACK=\"Track.getMediaStreamTrack\",e.STREAM_TYPE_CHANGE=\"streamTypeChange\",e.CONNECTION_STATE_CHANGE=\"connectionStateChange\",e.LOAD_CONFIG_FROM_LOCALSTORAGE=\"loadConfigFromLocalStorage\"}(rk||(rk={})),function(e){e.TRACER=\"tracer\"}(nk||(nk={})),function(e){e.IDLE=\"IDLE\",e.INITING=\"INITING\",e.INITEND=\"INITEND\"}(ok||(ok={})),function(e){e.STATE_CHANGE=\"state_change\",e.RECORDING_DEVICE_CHANGED=\"recordingDeviceChanged\",e.PLAYOUT_DEVICE_CHANGED=\"playoutDeviceChanged\",e.CAMERA_DEVICE_CHANGED=\"cameraDeviceChanged\"}(sk||(sk={})),function(e){e[e.ACCESS_POINT=101]=\"ACCESS_POINT\",e[e.UNILBS=201]=\"UNILBS\",e[e.STRING_UID_ALLOCATOR=901]=\"STRING_UID_ALLOCATOR\"}(ak||(ak={})),function(e){e[e.IIIEGAL_APPID=1]=\"IIIEGAL_APPID\",e[e.IIIEGAL_UID=2]=\"IIIEGAL_UID\",e[e.INTERNAL_ERROR=3]=\"INTERNAL_ERROR\"}(ck||(ck={})),function(e){e[e.INVALID_VENDOR_KEY=5]=\"INVALID_VENDOR_KEY\",e[e.INVALID_CHANNEL_NAME=7]=\"INVALID_CHANNEL_NAME\",e[e.INTERNAL_ERROR=8]=\"INTERNAL_ERROR\",e[e.NO_AUTHORIZED=9]=\"NO_AUTHORIZED\",e[e.DYNAMIC_KEY_TIMEOUT=10]=\"DYNAMIC_KEY_TIMEOUT\",e[e.NO_ACTIVE_STATUS=11]=\"NO_ACTIVE_STATUS\",e[e.DYNAMIC_KEY_EXPIRED=13]=\"DYNAMIC_KEY_EXPIRED\",e[e.STATIC_USE_DYNAMIC_KEY=14]=\"STATIC_USE_DYNAMIC_KEY\",e[e.DYNAMIC_USE_STATIC_KEY=15]=\"DYNAMIC_USE_STATIC_KEY\",e[e.USER_OVERLOAD=16]=\"USER_OVERLOAD\",e[e.FORBIDDEN_REGION=18]=\"FORBIDDEN_REGION\",e[e.CANNOT_MEET_AREA_DEMAND=19]=\"CANNOT_MEET_AREA_DEMAND\"}(dk||(dk={})),function(e){e[e.NO_FLAG_SET=100]=\"NO_FLAG_SET\",e[e.FLAG_SET_BUT_EMPTY=101]=\"FLAG_SET_BUT_EMPTY\",e[e.INVALID_FALG_SET=102]=\"INVALID_FALG_SET\",e[e.FLAG_SET_BUT_NO_RE=103]=\"FLAG_SET_BUT_NO_RE\",e[e.INVALID_SERVICE_ID=104]=\"INVALID_SERVICE_ID\",e[e.NO_SERVICE_AVAILABLE=200]=\"NO_SERVICE_AVAILABLE\",e[e.NO_SERVICE_AVAILABLE_P2P=201]=\"NO_SERVICE_AVAILABLE_P2P\",e[e.NO_SERVICE_AVAILABLE_VOICE=202]=\"NO_SERVICE_AVAILABLE_VOICE\",e[e.NO_SERVICE_AVAILABLE_WEBRTC=203]=\"NO_SERVICE_AVAILABLE_WEBRTC\",e[e.NO_SERVICE_AVAILABLE_CDS=204]=\"NO_SERVICE_AVAILABLE_CDS\",e[e.NO_SERVICE_AVAILABLE_CDN=205]=\"NO_SERVICE_AVAILABLE_CDN\",e[e.NO_SERVICE_AVAILABLE_TDS=206]=\"NO_SERVICE_AVAILABLE_TDS\",e[e.NO_SERVICE_AVAILABLE_REPORT=207]=\"NO_SERVICE_AVAILABLE_REPORT\",e[e.NO_SERVICE_AVAILABLE_APP_CENTER=208]=\"NO_SERVICE_AVAILABLE_APP_CENTER\",e[e.NO_SERVICE_AVAILABLE_ENV0=209]=\"NO_SERVICE_AVAILABLE_ENV0\",e[e.NO_SERVICE_AVAILABLE_VOET=210]=\"NO_SERVICE_AVAILABLE_VOET\",e[e.NO_SERVICE_AVAILABLE_STRING_UID=211]=\"NO_SERVICE_AVAILABLE_STRING_UID\",e[e.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]=\"NO_SERVICE_AVAILABLE_WEBRTC_UNILBS\",e[e.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]=\"NO_SERVICE_AVAILABLE_UNILBS_FLV\"}(uk||(uk={})),function(e){e[e.K_TIMESTAMP_EXPIRED=2]=\"K_TIMESTAMP_EXPIRED\",e[e.K_CHANNEL_PERMISSION_INVALID=3]=\"K_CHANNEL_PERMISSION_INVALID\",e[e.K_CERTIFICATE_INVALID=4]=\"K_CERTIFICATE_INVALID\",e[e.K_CHANNEL_NAME_EMPTY=5]=\"K_CHANNEL_NAME_EMPTY\",e[e.K_CHANNEL_NOT_FOUND=6]=\"K_CHANNEL_NOT_FOUND\",e[e.K_TICKET_INVALID=7]=\"K_TICKET_INVALID\",e[e.K_CHANNEL_CONFLICTED=8]=\"K_CHANNEL_CONFLICTED\",e[e.K_SERVICE_NOT_READY=9]=\"K_SERVICE_NOT_READY\",e[e.K_SERVICE_TOO_HEAVY=10]=\"K_SERVICE_TOO_HEAVY\",e[e.K_UID_BANNED=14]=\"K_UID_BANNED\",e[e.K_IP_BANNED=15]=\"K_IP_BANNED\",e[e.K_CHANNEL_BANNED=16]=\"K_CHANNEL_BANNED\",e[e.WARN_NO_AVAILABLE_CHANNEL=103]=\"WARN_NO_AVAILABLE_CHANNEL\",e[e.WARN_LOOKUP_CHANNEL_TIMEOUT=104]=\"WARN_LOOKUP_CHANNEL_TIMEOUT\",e[e.WARN_LOOKUP_CHANNEL_REJECTED=105]=\"WARN_LOOKUP_CHANNEL_REJECTED\",e[e.WARN_OPEN_CHANNEL_TIMEOUT=106]=\"WARN_OPEN_CHANNEL_TIMEOUT\",e[e.WARN_OPEN_CHANNEL_REJECTED=107]=\"WARN_OPEN_CHANNEL_REJECTED\",e[e.WARN_REQUEST_DEFERRED=108]=\"WARN_REQUEST_DEFERRED\",e[e.ERR_DYNAMIC_KEY_TIMEOUT=109]=\"ERR_DYNAMIC_KEY_TIMEOUT\",e[e.ERR_NO_AUTHORIZED=110]=\"ERR_NO_AUTHORIZED\",e[e.ERR_VOM_SERVICE_UNAVAILABLE=111]=\"ERR_VOM_SERVICE_UNAVAILABLE\",e[e.ERR_NO_CHANNEL_AVAILABLE_CODE=112]=\"ERR_NO_CHANNEL_AVAILABLE_CODE\",e[e.ERR_MASTER_VOCS_UNAVAILABLE=114]=\"ERR_MASTER_VOCS_UNAVAILABLE\",e[e.ERR_INTERNAL_ERROR=115]=\"ERR_INTERNAL_ERROR\",e[e.ERR_NO_ACTIVE_STATUS=116]=\"ERR_NO_ACTIVE_STATUS\",e[e.ERR_INVALID_UID=117]=\"ERR_INVALID_UID\",e[e.ERR_DYNAMIC_KEY_EXPIRED=118]=\"ERR_DYNAMIC_KEY_EXPIRED\",e[e.ERR_STATIC_USE_DYANMIC_KE=119]=\"ERR_STATIC_USE_DYANMIC_KE\",e[e.ERR_DYNAMIC_USE_STATIC_KE=120]=\"ERR_DYNAMIC_USE_STATIC_KE\",e[e.ERR_NO_VOCS_AVAILABLE=2e3]=\"ERR_NO_VOCS_AVAILABLE\",e[e.ERR_NO_VOS_AVAILABLE=2001]=\"ERR_NO_VOS_AVAILABLE\",e[e.ERR_JOIN_CHANNEL_TIMEOUT=2002]=\"ERR_JOIN_CHANNEL_TIMEOUT\",e[e.ERR_REPEAT_JOIN_CHANNEL=2003]=\"ERR_REPEAT_JOIN_CHANNEL\",e[e.ERR_JOIN_BY_MULTI_IP=2004]=\"ERR_JOIN_BY_MULTI_IP\",e[e.ERR_NOT_JOINED=2011]=\"ERR_NOT_JOINED\",e[e.ERR_REPEAT_JOIN_REQUEST=2012]=\"ERR_REPEAT_JOIN_REQUEST\",e[e.ERR_INVALID_VENDOR_KEY=2013]=\"ERR_INVALID_VENDOR_KEY\",e[e.ERR_INVALID_CHANNEL_NAME=2014]=\"ERR_INVALID_CHANNEL_NAME\",e[e.ERR_INVALID_STRINGUID=2015]=\"ERR_INVALID_STRINGUID\",e[e.ERR_TOO_MANY_USERS=2016]=\"ERR_TOO_MANY_USERS\",e[e.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]=\"ERR_SET_CLIENT_ROLE_TIMEOUT\",e[e.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]=\"ERR_SET_CLIENT_ROLE_NO_PERMISSION\",e[e.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]=\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",e[e.ERR_PUBLISH_REQUEST_INVALID=2020]=\"ERR_PUBLISH_REQUEST_INVALID\",e[e.ERR_SUBSCRIBE_REQUEST_INVALID=2021]=\"ERR_SUBSCRIBE_REQUEST_INVALID\",e[e.ERR_NOT_SUPPORTED_MESSAGE=2022]=\"ERR_NOT_SUPPORTED_MESSAGE\",e[e.ERR_ILLEAGAL_PLUGIN=2023]=\"ERR_ILLEAGAL_PLUGIN\",e[e.ERR_REJOIN_TOKEN_INVALID=2024]=\"ERR_REJOIN_TOKEN_INVALID\",e[e.ERR_REJOIN_USER_NOT_JOINED=2025]=\"ERR_REJOIN_USER_NOT_JOINED\",e[e.ERR_INVALID_OPTIONAL_INFO=2027]=\"ERR_INVALID_OPTIONAL_INFO\",e[e.ILLEGAL_AES_PASSWORD=2028]=\"ILLEGAL_AES_PASSWORD\",e[e.ILLEGAL_CLIENT_ROLE_LEVEL=2029]=\"ILLEGAL_CLIENT_ROLE_LEVEL\",e[e.ERR_TOO_MANY_BROADCASTERS=2031]=\"ERR_TOO_MANY_BROADCASTERS\",e[e.ERR_TOO_MANY_SUBSCRIBERS=2032]=\"ERR_TOO_MANY_SUBSCRIBERS\",e[e.ERR_LICENSE_MISSING=32769]=\"ERR_LICENSE_MISSING\",e[e.ERR_LICENSE_EXPIRED=32771]=\"ERR_LICENSE_EXPIRED\",e[e.ERR_LICENSE_MINUTES_EXCEEDED=32773]=\"ERR_LICENSE_MINUTES_EXCEEDED\",e[e.ERR_LICENSE_PERIOD_INVALID=32774]=\"ERR_LICENSE_PERIOD_INVALID\",e[e.ERR_LICENSE_MULTIPLE_SDK_SERVICE=32778]=\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",e[e.ERR_LICENSE_ILLEGAL=32783]=\"ERR_LICENSE_ILLEGAL\",e[e.ERR_TEST_RECOVER=9e3]=\"ERR_TEST_RECOVER\",e[e.ERR_TEST_TRYNEXT=9001]=\"ERR_TEST_TRYNEXT\",e[e.ERR_TEST_RETRY=9002]=\"ERR_TEST_RETRY\"}(hk||(hk={})),function(e){e[e.AUDIENCE_LEVEL_LOW_LATENCY=1]=\"AUDIENCE_LEVEL_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_ULTRA_LOW_LATENCY=2]=\"AUDIENCE_LEVEL_ULTRA_LOW_LATENCY\",e[e.AUDIENCE_LEVEL_SYNC_LATENCY=3]=\"AUDIENCE_LEVEL_SYNC_LATENCY\"}(Ak||(Ak={})),function(e){e.LEAVE=\"LEAVE\",e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.UID_BANNED=\"UID_BANNED\",e.IP_BANNED=\"IP_BANNED\",e.CHANNEL_BANNED=\"CHANNEL_BANNED\",e.FALLBACK=\"FALLBACK\",e.LICENSE_MISSING=\"LICENSE_MISSING\",e.LICENSE_EXPIRED=\"LICENSE_EXPIRED\",e.LICENSE_MINUTES_EXCEEDED=\"LICENSE_MINUTES_EXCEEDED\",e.LICENSE_PERIOD_INVALID=\"LICENSE_PERIOD_INVALID\",e.LICENSE_MULTIPLE_SDK_SERVICE=\"LICENSE_MULTIPLE_SDK_SERVICE\",e.LICENSE_ILLEGAL=\"LICENSE_ILLEGAL\"}(lk||(lk={})),function(e){e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.MEDIA_RECONNECT_START=\"media-reconnect-start\",e.MEDIA_RECONNECT_END=\"media-reconnect-end\",e.IS_USING_CLOUD_PROXY=\"is-using-cloud-proxy\",e.USER_JOINED=\"user-joined\",e.USER_LEAVED=\"user-left\",e.USER_PUBLISHED=\"user-published\",e.USER_UNPUBLISHED=\"user-unpublished\",e.USER_INFO_UPDATED=\"user-info-updated\",e.CLIENT_BANNED=\"client-banned\",e.CHANNEL_MEDIA_RELAY_STATE=\"channel-media-relay-state\",e.CHANNEL_MEDIA_RELAY_EVENT=\"channel-media-relay-event\",e.VOLUME_INDICATOR=\"volume-indicator\",e.CRYPT_ERROR=\"crypt-error\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"token-privilege-will-expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"token-privilege-did-expire\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGED=\"stream-type-changed\",e.STREAM_FALLBACK=\"stream-fallback\",e.RECEIVE_METADATA=\"receive-metadata\",e.STREAM_MESSAGE=\"stream-message\",e.LIVE_STREAMING_ERROR=\"live-streaming-error\",e.LIVE_STREAMING_WARNING=\"live-streaming-warning\",e.INJECT_STREAM_STATUS=\"stream-inject-status\",e.EXCEPTION=\"exception\",e.ERROR=\"error\",e.P2P_LOST=\"p2p_lost\",e.JOIN_FALLBACK_TO_PROXY=\"join-fallback-to-proxy\",e.CHANNEL_FALLBACK_TO_WEBSOCKET=\"channel-fallback-to-websocket\",e.MEDIA_CONNECTION_TYPE_CHANGE=\"media-connection-type-change\",e.PUBLISHED_USER_LIST=\"published-user-list\",e.CONTENT_INSPECT_CONNECTION_STATE_CHANGE=\"content-inspect-connection-state-change\",e.CONTENT_INSPECT_ERROR=\"content-inspect-error\",e.CONTENT_INSPECT_RESULT=\"content-inspect-result\"}(pk||(pk={})),function(e){e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\"}(gk||(gk={})),function(e){e.CONNECTING=\"connecting\",e.CONNECTED=\"connected\",e.RECONNECTING=\"reconnecting\",e.CLOSED=\"closed\"}(Ek||(Ek={})),function(e){e.WS_CONNECTED=\"ws_connected\",e.WS_RECONNECTING=\"ws_reconnecting\",e.WS_CLOSED=\"ws_closed\",e.WS_RECONNECT_WAITTING_FINISH=\"ws_reconnect_waitting_finish\",e.WS_RECONNECT_CREATE_CONNECTION=\"ws_reconnect_create_connection\",e.ON_BINARY_DATA=\"on_binary_data\",e.REQUEST_RECOVER=\"request_recover\",e.REQUEST_JOIN_INFO=\"request_join_info\",e.REQUEST_REJOIN_INFO=\"req_rejoin_info\",e.IS_P2P_DISCONNECTED=\"is_p2p_dis\",e.DISCONNECT_P2P=\"dis_p2p\",e.ABORT_P2P_EXECUTION=\"abort_p2p_execution\",e.NEED_RENEW_SESSION=\"need-sid\",e.REPORT_JOIN_GATEWAY=\"report_join_gateway\",e.REQUEST_TIMEOUT=\"request_timeout\",e.REQUEST_SUCCESS=\"request_success\",e.JOIN_RESPONSE=\"join_response\",e.DATACHANNEL_PRECONNECT=\"datachannel_preconnect\",e.DATACHANNEL_CONNECTING=\"datachannel_connecting\",e.DATACHANNEL_FAILBACK=\"datachannel_failback\"}(fk||(fk={})),function(e){e.PING=\"ping\",e.PING_BACK=\"ping_back\",e.JOIN=\"join_v3\",e.REJOIN=\"rejoin_v3\",e.LEAVE=\"leave\",e.SET_CLIENT_ROLE=\"set_client_role\",e.PUBLISH=\"publish\",e.UNPUBLISH=\"unpublish\",e.SUBSCRIBE=\"subscribe\",e.SUBSCRIBE_STREAMS=\"subscribe_streams\",e.UNSUBSCRIBE=\"unsubscribe\",e.UNSUBSCRIBE_STREAMS=\"unsubscribe_streams\",e.SUBSCRIBE_CHANGE=\"subscribe_change\",e.TRAFFIC_STATS=\"traffic_stats\",e.RENEW_TOKEN=\"renew_token\",e.SWITCH_VIDEO_STREAM=\"switch_video_stream\",e.DEFAULT_VIDEO_STREAM=\"default_video_stream\",e.SET_FALLBACK_OPTION=\"set_fallback_option\",e.GATEWAY_INFO=\"gateway_info\",e.CONTROL=\"control\",e.SEND_METADATA=\"send_metadata\",e.DATA_STREAM=\"data_stream\",e.PICK_SVC_LAYER=\"pick_svc_layer\",e.RESTART_ICE=\"restart_ice\",e.CONNECT_PC=\"connect_pc\",e.SET_VIDEO_PROFILE=\"set_video_profile\",e.SET_PARAMETER=\"set_parameter\"}(mk||(mk={})),function(e){e.PUBLISH_STATS=\"publish_stats\",e.PUBLISH_RELATED_STATS=\"publish_related_stats\",e.SUBSCRIBE_STATS=\"subscribe_stats\",e.SUBSCRIBE_RELATED_STATS=\"subscribe_related_stats\",e.WS_INFLATE_DATA_LENGTH=\"ws_inflate_data_length\",e.DENOISER_STATS=\"denoiser_stats\",e.TRANSPORT_STATS=\"transport_stats\",e.EXTENSION_USAGE_STATS=\"extension_usage_stats\"}(Ik||(Ik={})),function(e){e.ON_USER_ONLINE=\"on_user_online\",e.ON_USER_OFFLINE=\"on_user_offline\",e.ON_STREAM_FALLBACK_UPDATE=\"on_stream_fallback_update\",e.ON_PUBLISH_STREAM=\"on_publish_stream\",e.ON_UPLINK_STATS=\"on_uplink_stats\",e.ON_P2P_LOST=\"on_p2p_lost\",e.ON_REMOVE_STREAM=\"on_remove_stream\",e.ON_ADD_AUDIO_STREAM=\"on_add_audio_stream\",e.ON_ADD_VIDEO_STREAM=\"on_add_video_stream\",e.ON_TOKEN_PRIVILEGE_WILL_EXPIRE=\"on_token_privilege_will_expire\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"on_token_privilege_did_expire\",e.ON_USER_BANNED=\"on_user_banned\",e.ON_USER_LICENSE_BANNED=\"on_user_license_banned\",e.ON_NOTIFICATION=\"on_notification\",e.ON_CRYPT_ERROR=\"on_crypt_error\",e.MUTE_AUDIO=\"mute_audio\",e.MUTE_VIDEO=\"mute_video\",e.UNMUTE_AUDIO=\"unmute_audio\",e.UNMUTE_VIDEO=\"unmute_video\",e.ON_P2P_OK=\"on_p2p_ok\",e.RECEIVE_METADATA=\"receive_metadata\",e.ON_DATA_STREAM=\"on_data_stream\",e.ENABLE_LOCAL_VIDEO=\"enable_local_video\",e.DISABLE_LOCAL_VIDEO=\"disable_local_video\",e.ENABLE_LOCAL_AUDIO=\"enable_local_audio\",e.DISABLE_LOCAL_AUDIO=\"disable_local_audio\",e.ON_PUBLISHED_USER_LIST=\"on_published_user_list\"}(_k||(_k={})),function(e){e.CONNECTION_STATE_CHANGE=\"CONNECTION_STATE_CHANGE\",e.NEED_ANSWER=\"NEED_ANSWER\",e.NEED_RENEGOTIATE=\"NEED_RENEGOTIATE\",e.P2P_LOST=\"P2P_LOST\",e.GATEWAY_P2P_LOST=\"GATEWAY_P2P_LOST\",e.NEED_UNPUB=\"NEED_UNPUB\",e.NEED_UNSUB=\"NEED_UNSUB\",e.NEED_UPLOAD=\"NEED_UPLOAD\",e.NEED_CONTROL=\"NEED_CONTROL\",e.START_RECONNECT=\"START_RECONNECT\",e.END_RECONNECT=\"END_RECONNECT\",e.NEED_SIGNAL_RTT=\"NEED_SIGNAL_RTT\"}(Ck||(Ck={})),function(e){e.AUDIO_SOURCE_STATE_CHANGE=\"audio_source_state_change\",e.RECEIVE_TRACK_BUFFER=\"receive_track_buffer\",e.ON_AUDIO_BUFFER=\"on_audio_buffer\",e.UPDATE_SOURCE=\"update_source\"}(Sk||(Sk={}));const bk={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0,currentPacketLossRate:0},Nk={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,totalDuration:0,totalFreezeTime:0,currentPacketLossRate:0},Ok={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1},Dk={uplinkNetworkQuality:0,downlinkNetworkQuality:0},Pk={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,currentPacketLossRate:0,publishDuration:-1};let Lk,kk,Bk;!function(e){e.CONNECTED=\"websocket:connected\",e.RECONNECTING=\"websocket:reconnecting\",e.WILL_RECONNECT=\"websocket:will_reconnect\",e.CLOSED=\"websocket:closed\",e.FAILED=\"websocket:failed\",e.ON_MESSAGE=\"websocket:on_message\",e.REQUEST_NEW_URLS=\"websocket:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"websocket:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"websocket:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"websocket:on_token_privilege_did_expire\"}(Lk||(Lk={})),function(e){e.TRANSCODE=\"mix_streaming\",e.RAW=\"raw_streaming\",e.INJECT=\"inject_streaming\"}(kk||(kk={})),function(e){e[e.INJECT_STREAM_STATUS_START_SUCCESS=0]=\"INJECT_STREAM_STATUS_START_SUCCESS\",e[e.INJECT_STREAM_STATUS_START_ALREADY_EXISTS=1]=\"INJECT_STREAM_STATUS_START_ALREADY_EXISTS\",e[e.INJECT_STREAM_STATUS_START_UNAUTHORIZED=2]=\"INJECT_STREAM_STATUS_START_UNAUTHORIZED\",e[e.INJECT_STREAM_STATUS_START_TIMEOUT=3]=\"INJECT_STREAM_STATUS_START_TIMEOUT\",e[e.INJECT_STREAM_STATUS_START_FAILED=4]=\"INJECT_STREAM_STATUS_START_FAILED\",e[e.INJECT_STREAM_STATUS_STOP_SUCCESS=5]=\"INJECT_STREAM_STATUS_STOP_SUCCESS\",e[e.INJECT_STREAM_STATUS_STOP_NOT_FOUND=6]=\"INJECT_STREAM_STATUS_STOP_NOT_FOUND\",e[e.INJECT_STREAM_STATUS_STOP_UNAUTHORIZED=7]=\"INJECT_STREAM_STATUS_STOP_UNAUTHORIZED\",e[e.INJECT_STREAM_STATUS_STOP_TIMEOUT=8]=\"INJECT_STREAM_STATUS_STOP_TIMEOUT\",e[e.INJECT_STREAM_STATUS_STOP_FAILED=9]=\"INJECT_STREAM_STATUS_STOP_FAILED\",e[e.INJECT_STREAM_STATUS_BROKEN=10]=\"INJECT_STREAM_STATUS_BROKEN\"}(Bk||(Bk={}));const Mk={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,audioChannel:0},Uk={x:0,y:0,width:160,height:160,zOrder:255,alpha:1};function xk(e,t){QL(e.url,\"\".concat(t,\".url\"),1,1e3,!1),GL(e.x)||UL(e.x,\"\".concat(t,\".x\"),0,1e4),GL(e.y)||UL(e.y,\"\".concat(t,\".y\"),0,1e4),GL(e.width)||UL(e.width,\"\".concat(t,\".width\"),0,1e4),GL(e.height)||UL(e.height,\"\".concat(t,\".height\"),0,1e4),GL(e.zOrder)||UL(e.zOrder,\"\".concat(t,\".zOrder\"),0,255),GL(e.alpha)||UL(e.alpha,\"\".concat(t,\".alpha\"),0,1,!1)}const Qk={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:\"\"},Fk={audioBitrate:48,audioChannels:2,audioVolume:100,audioSampleRate:48e3,height:0,width:0,videoBitrate:400,videoFramerate:15,videoGop:30};let Vk,jk,Gk,Kk,Hk,Wk,Yk,Jk,qk,Xk,zk,Zk,$k,eB,tB,iB,rB,nB;function oB(e){if(!e.channelName)throw new QD(xD.INVALID_PARAMS,\"invalid channelName in info\");if(!e.uid||\"number\"!=typeof e.uid)throw new QD(xD.INVALID_PARAMS,\"invalid uid in info, uid must be a number\");return e.token&&QL(e.token,\"info.token\",1,2047),jL(e.uid),VL(e.channelName),!0}function sB(e){return ML(e,\"mediaSource\",[\"screen\",\"window\",\"application\"]),!0}!function(e){e.WARNING=\"@live_uap-warning\",e.ERROR=\"@line_uap-error\",e.PUBLISH_STREAM_STATUS=\"@live_uap-publish-status\",e.INJECT_STREAM_STATUS=\"@live_uap-inject-status\",e.WORKER_STATUS=\"@live_uap-worker-status\",e.REQUEST_NEW_ADDRESS=\"@live_uap-request-address\"}(Vk||(Vk={})),function(e){e.REQUEST_WORKER_MANAGER_LIST=\"@live_req_worker_manager\"}(jk||(jk={})),function(e){e[e.LIVE_STREAM_RESPONSE_SUCCEED=200]=\"LIVE_STREAM_RESPONSE_SUCCEED\",e[e.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]=\"LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM\",e[e.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=450]=\"LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_BAD_STREAM=451]=\"LIVE_STREAM_RESPONSE_BAD_STREAM\",e[e.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]=\"LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]=\"LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST\",e[e.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]=\"LIVE_STREAM_RESPONSE_NOT_AUTHORIZED\",e[e.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]=\"LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE\",e[e.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=429]=\"LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN\",e[e.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]=\"LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH\",e[e.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]=\"LIVE_STREAM_RESPONSE_NOT_SUPPORTED\",e[e.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]=\"LIVE_STREAM_RESPONSE_MAX_STREAM_NUM\",e[e.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]=\"LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR\",e[e.LIVE_STREAM_RESPONSE_WORKER_LOST=501]=\"LIVE_STREAM_RESPONSE_WORKER_LOST\",e[e.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=502]=\"LIVE_STREAM_RESPONSE_RESOURCE_LIMIT\",e[e.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]=\"LIVE_STREAM_RESPONSE_WORKER_QUIT\",e[e.ERROR_FAIL_SEND_MESSAGE=504]=\"ERROR_FAIL_SEND_MESSAGE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT\",e[e.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]=\"PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH\",e[e.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=33]=\"PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN\"}(Gk||(Gk={})),function(e){e.CONNECT_FAILED=\"connect failed\",e.CONNECT_TIMEOUT=\"connect timeout\",e.WS_DISCONNECTED=\"websocket disconnected\",e.REQUEST_TIMEOUT=\"request timeout\",e.REQUEST_FAILED=\"request failed\",e.WAIT_STATUS_TIMEOUT=\"wait status timeout\",e.WAIT_STATUS_ERROR=\"wait status error\",e.BAD_STATE=\"bad state\",e.WS_ABORT=\"ws abort\",e.AP_REQUEST_TIMEOUT=\"AP request timeout\",e.AP_JSON_PARSE_ERROR=\"AP json parse error\",e.AP_REQUEST_ERROR=\"AP request error\",e.AP_REQUEST_ABORT=\"AP request abort\"}(Kk||(Kk={})),function(e){e[e.SetSdkProfile=0]=\"SetSdkProfile\",e[e.SetSourceChannel=1]=\"SetSourceChannel\",e[e.SetSourceUserId=2]=\"SetSourceUserId\",e[e.SetDestChannel=3]=\"SetDestChannel\",e[e.StartPacketTransfer=4]=\"StartPacketTransfer\",e[e.StopPacketTransfer=5]=\"StopPacketTransfer\",e[e.UpdateDestChannel=6]=\"UpdateDestChannel\",e[e.Reconnect=7]=\"Reconnect\",e[e.SetVideoProfile=8]=\"SetVideoProfile\"}(Hk||(Hk={})),function(e){e.NETWORK_DISCONNECTED=\"NETWORK_DISCONNECTED\",e.NETWORK_CONNECTED=\"NETWORK_CONNECTED\",e.PACKET_JOINED_SRC_CHANNEL=\"PACKET_JOINED_SRC_CHANNEL\",e.PACKET_JOINED_DEST_CHANNEL=\"PACKET_JOINED_DEST_CHANNEL\",e.PACKET_SENT_TO_DEST_CHANNEL=\"PACKET_SENT_TO_DEST_CHANNEL\",e.PACKET_RECEIVED_VIDEO_FROM_SRC=\"PACKET_RECEIVED_VIDEO_FROM_SRC\",e.PACKET_RECEIVED_AUDIO_FROM_SRC=\"PACKET_RECEIVED_AUDIO_FROM_SRC\",e.PACKET_UPDATE_DEST_CHANNEL=\"PACKET_UPDATE_DEST_CHANNEL\",e.PACKET_UPDATE_DEST_CHANNEL_REFUSED=\"PACKET_UPDATE_DEST_CHANNEL_REFUSED\",e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE=\"PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE\"}(Wk||(Wk={})),function(e){e.RELAY_STATE_IDLE=\"RELAY_STATE_IDLE\",e.RELAY_STATE_CONNECTING=\"RELAY_STATE_CONNECTING\",e.RELAY_STATE_RUNNING=\"RELAY_STATE_RUNNING\",e.RELAY_STATE_FAILURE=\"RELAY_STATE_FAILURE\"}(Yk||(Yk={})),function(e){e.RELAY_OK=\"RELAY_OK\",e.SERVER_CONNECTION_LOST=\"SERVER_CONNECTION_LOST\",e.SRC_TOKEN_EXPIRED=\"SRC_TOKEN_EXPIRED\",e.DEST_TOKEN_EXPIRED=\"DEST_TOKEN_EXPIRED\"}(Jk||(Jk={})),function(e){e.High=\"high\",e.Low=\"low\",e.Audio=\"audio\",e.Screen=\"screen\",e.ScreenLow=\"screen_low\"}(qk||(qk={})),function(e){e.DISCONNECT=\"disconnect\",e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.NETWORK_QUALITY=\"network-quality\",e.STREAM_TYPE_CHANGE=\"stream-type-change\",e.IS_P2P_DISCONNECTED=\"is-p2p-dis\",e.DISCONNECT_P2P=\"dis-p2p\",e.REQUEST_NEW_GATEWAY_LIST=\"req-gate-url\",e.NEED_RENEW_SESSION=\"need-sid\",e.REQUEST_P2P_CONNECTION_PARAMS=\"request-p2p-connection-params\",e.JOIN_RESPONSE=\"join-response\",e.REQUEST_DC_CONNECTION_PARAMS=\"request-dc-connection-params\",e.RESET_CONNECTION_EVENTS=\"reset-connection-events\",e.DATACHANNEL_PRECONNECT=\"datachannel_preconnect\",e.DATACHANNEL_FAILBACK=\"datachannel_failback\"}(Xk||(Xk={})),function(e){e[e.Nothing=0]=\"Nothing\",e[e.Audio=1]=\"Audio\",e[e.LwoVideo=2]=\"LwoVideo\",e[e.Video=4]=\"Video\",e[e.Data=8]=\"Data\"}(zk||(zk={})),function(e){e.NEED_RENEGOTIATE=\"@need_renegotiate\",e.NEED_REPLACE_TRACK=\"@need_replace_track\",e.NEED_CLOSE=\"@need_close\",e.NEED_ENABLE_TRACK=\"@need_enable_track\",e.NEED_DISABLE_TRACK=\"@need_disable_track\",e.NEED_SESSION_ID=\"@need_sid\",e.SET_OPTIMIZATION_MODE=\"@set_optimization_mode\",e.GET_STATS=\"@get_stats\",e.GET_LOW_VIDEO_TRACK=\"@get_low_video_track\",e.NEED_RESET_REMOTE_SDP=\"@need_reset_remote_sdp\",e.NEED_UPDATE_VIDEO_ENCODER=\"@need_update_video_encoder\",e.NEED_MUTE_TRACK=\"@need_mute_track\",e.NEED_UNMUTE_TRACK=\"@need_unmute_track\"}(Zk||(Zk={})),function(e){e.SCREEN_TRACK=\"screen_track\",e.LOW_STREAM=\"low_stream\"}($k||($k={})),function(e){e[e.HIGH_STREAM=0]=\"HIGH_STREAM\",e[e.LOW_STREAM=1]=\"LOW_STREAM\"}(eB||(eB={})),function(e){e[e.DISABLE=0]=\"DISABLE\",e[e.LOW_STREAM=1]=\"LOW_STREAM\",e[e.AUDIO_ONLY=2]=\"AUDIO_ONLY\"}(tB||(tB={})),function(e){e.SOURCE_STATE_CHANGE=\"source-state-change\",e.TRACK_ENDED=\"track-ended\",e.BEAUTY_EFFECT_OVERLOAD=\"beauty-effect-overload\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\",e.CLOSED=\"closed\"}(iB||(iB={})),function(e){e.FIRST_FRAME_DECODED=\"first-frame-decoded\",e.VIDEO_ELEMENT_VISIBLE_STATUS=\"video-element-visible-status\"}(rB||(rB={})),function(e){e.CHINA=\"CHINA\",e.ASIA=\"ASIA\",e.NORTH_AMERICA=\"NORTH_AMERICA\",e.EUROPE=\"EUROPE\",e.JAPAN=\"JAPAN\",e.INDIA=\"INDIA\",e.KOREA=\"KOREA\",e.HKMC=\"HKMC\",e.US=\"US\",e.OCEANIA=\"OCEANIA\",e.SOUTH_AMERICA=\"SOUTH_AMERICA\",e.AFRICA=\"AFRICA\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\"}(nB||(nB={}));const aB=[nB.AFRICA,nB.ASIA,nB.CHINA,nB.EUROPE,nB.GLOBAL,nB.INDIA,nB.JAPAN,nB.NORTH_AMERICA,nB.OCEANIA,nB.OVERSEA,nB.SOUTH_AMERICA];let cB;!function(e){e.CHINA=\"CN\",e.ASIA=\"AS\",e.NORTH_AMERICA=\"NA\",e.EUROPE=\"EU\",e.JAPAN=\"JP\",e.INDIA=\"IN\",e.KOREA=\"KR\",e.HKMC=\"HK\",e.US=\"US\",e.OCEANIA=\"OC\",e.SOUTH_AMERICA=\"SA\",e.AFRICA=\"AF\",e.OVERSEA=\"OVERSEA\",e.GLOBAL=\"GLOBAL\"}(cB||(cB={}));const dB={CHINA:{},ASIA:{CODE:cB.ASIA,WEBCS_DOMAIN:[\"ap-web-1-asia.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-asia.agora.io\"],PROXY_CS:[\"proxy-ap-web-asia.agora.io\"],CDS_AP:[\"cds-ap-web-asia.agora.io\",\"cds-ap-web-asia2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-asia.agora.io\",\"sua-ap-web-asia2.agora.io\"],UAP_AP:[\"uap-ap-web-asia.agora.io\",\"uap-ap-web-asia2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-asia.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-asia.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-asia.agora.io\"],PROXY_SERVER_TYPE3:[\"southeast-asia.webrtc-cloud-proxy.sd-rtn.com\"]},NORTH_AMERICA:{CODE:cB.NORTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-north-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-north-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-america.agora.io\"],CDS_AP:[\"cds-ap-web-america.agora.io\",\"cds-ap-web-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-america.agora.io\",\"sua-ap-web-america2.agora.io\"],UAP_AP:[\"uap-ap-web-america.agora.io\",\"uap-ap-web-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-north-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-north-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-north-america.agora.io\"],PROXY_SERVER_TYPE3:[\"east-usa.webrtc-cloud-proxy.sd-rtn.com\"]},EUROPE:{CODE:cB.EUROPE,WEBCS_DOMAIN:[\"ap-web-1-europe.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-europe.agora.io\"],PROXY_CS:[\"proxy-ap-web-europe.agora.io\"],CDS_AP:[\"cds-ap-web-europe.agora.io\",\"cds-ap-web-europe2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-europe.agora.io\",\"sua-ap-web-europe.agora.io\"],UAP_AP:[\"uap-ap-web-europe.agora.io\",\"uap-ap-web-europe2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-europe.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-europe.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-europe.agora.io\"],PROXY_SERVER_TYPE3:[\"europe.webrtc-cloud-proxy.sd-rtn.com\"]},JAPAN:{CODE:cB.JAPAN,WEBCS_DOMAIN:[\"ap-web-1-japan.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-japan.agora.io\"],PROXY_CS:[\"proxy-ap-web-japan.agora.io\"],CDS_AP:[\"cds-ap-web-japan.agora.io\",\"cds-ap-web-japan2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-japan.agora.io\",\"sua-ap-web-japan2.agora.io\"],UAP_AP:[\"uap-ap-web-japan.agora.io\",\"\\tuap-ap-web-japan2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-japan.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-japan.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-japan.agora.io\"],PROXY_SERVER_TYPE3:[\"japan.webrtc-cloud-proxy.sd-rtn.com\"]},INDIA:{CODE:cB.INDIA,WEBCS_DOMAIN:[\"ap-web-1-india.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-india.agora.io\"],PROXY_CS:[\"proxy-ap-web-india.agora.io\"],CDS_AP:[\"cds-ap-web-india.agora.io\",\"cds-ap-web-india2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-india.agora.io\",\"sua-ap-web-india2.agora.io\"],UAP_AP:[\"uap-ap-web-india.agora.io\",\"uap-ap-web-india2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-india.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-india.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-india.agora.io\"],PROXY_SERVER_TYPE3:[\"india.webrtc-cloud-proxy.sd-rtn.com\"]},KOREA:{CODE:cB.KOREA,WEBCS_DOMAIN:[\"ap-web-1-korea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-korea.agora.io\"],PROXY_CS:[\"proxy-ap-web-korea.agora.io\"],CDS_AP:[\"cds-ap-web-korea.agora.io\",\"cds-ap-web-korea2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-korea.agora.io\",\"sua-ap-web-korea2.agora.io\"],UAP_AP:[\"uap-ap-web-korea.agora.io\",\"uap-ap-web-korea2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-korea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-korea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-korea.agora.io\"],PROXY_SERVER_TYPE3:[\"korea.webrtc-cloud-proxy.sd-rtn.com\"]},HKMC:{CODE:cB.HKMC,WEBCS_DOMAIN:[\"ap-web-1-hkmc.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-hkmc.agora.io\"],PROXY_CS:[\"proxy-ap-web-hkmc.agora.io\"],CDS_AP:[\"cds-ap-web-hkmc.agora.io\",\"cds-ap-web-hkmc2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-hkmc.agora.io\",\"sua-ap-web-hkmc2.agora.io\"],UAP_AP:[\"uap-ap-web-hkmc.agora.io\",\"uap-ap-web-hkmc2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-hkmc.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-hkmc.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-hkmc.agora.io\"],PROXY_SERVER_TYPE3:[\"hkmc.webrtc-cloud-proxy.sd-rtn.com\"]},US:{CODE:cB.US,WEBCS_DOMAIN:[\"ap-web-1-us.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-us.agora.io\"],PROXY_CS:[\"proxy-ap-web-us.agora.io\"],CDS_AP:[\"cds-ap-web-us.agora.io\",\"cds-ap-web-us2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-us.agora.io\",\"sua-ap-web-us2.agora.io\"],UAP_AP:[\"uap-ap-web-us.agora.io\",\"uap-ap-web-us2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-us.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-us.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-us.agora.io\"],PROXY_SERVER_TYPE3:[\"us.webrtc-cloud-proxy.sd-rtn.com\"]},OVERSEA:{CODE:cB.OVERSEA,WEBCS_DOMAIN:[\"ap-web-1-oversea.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oversea.agora.io\"],PROXY_CS:[\"proxy-ap-web-oversea.agora.io\"],CDS_AP:[\"cds-ap-web-oversea.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oversea.agora.io\"],UAP_AP:[\"uap-ap-web-oversea.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oversea.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oversea.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oversea.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.agora.io\"]},GLOBAL:{CODE:cB.GLOBAL,WEBCS_DOMAIN:[\"webrtc2-ap-web-1.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-ap-web-3.agora.io\"],PROXY_CS:[\"ap-proxy-1.agora.io\",\"ap-proxy-2.agora.io\"],CDS_AP:[\"cds-ap-web-1.agora.io\",\"cds-ap-web-3.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-1.agora.io\",\"sua-ap-web-3.agora.io\"],UAP_AP:[\"uap-ap-web-1.agora.io\",\"uap-ap-web-3.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice.agora.io\"],PROXY_SERVER_TYPE3:[\"webrtc-cloud-proxy.sd-rtn.com\"]},OCEANIA:{CODE:cB.OCEANIA,WEBCS_DOMAIN:[\"ap-web-1-oceania.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-oceania.agora.io\"],PROXY_CS:[\"proxy-ap-web-oceania.agora.io\"],CDS_AP:[\"cds-ap-web-oceania.agora.io\",\"cds-ap-web-oceania2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-oceania.agora.io\",\"sua-ap-web-oceania2.agora.io\"],UAP_AP:[\"uap-ap-web-oceania.agora.io\",\"uap-ap-web-oceania2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-oceania.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-oceania.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-oceania.agora.io\"],PROXY_SERVER_TYPE3:[\"oceania.webrtc-cloud-proxy.sd-rtn.com\"]},SOUTH_AMERICA:{CODE:cB.SOUTH_AMERICA,WEBCS_DOMAIN:[\"ap-web-1-south-america.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-south-america.agora.io\"],PROXY_CS:[\"proxy-ap-web-south-america.agora.io\"],CDS_AP:[\"cds-ap-web-south-america.agora.io\",\"cds-ap-web-south-america2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-south-america.agora.io\",\"sua-ap-web-south-america2.agora.io\"],UAP_AP:[\"uap-ap-web-south-america.agora.io\",\"uap-ap-web-south-america2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-south-america.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-south-america.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-america.agora.io\"],PROXY_SERVER_TYPE3:[\"south-america.webrtc-cloud-proxy.sd-rtn.com\"]},AFRICA:{CODE:cB.AFRICA,WEBCS_DOMAIN:[\"ap-web-1-africa.agora.io\"],WEBCS_DOMAIN_BACKUP_LIST:[\"ap-web-2-africa.agora.io\"],PROXY_CS:[\"proxy-ap-web-africa.agora.io\"],CDS_AP:[\"cds-ap-web-africa.agora.io\",\"cds-ap-web-africa2.agora.io\"],ACCOUNT_REGISTER:[\"sua-ap-web-africa.agora.io\",\"sua-ap-web-africa2.agora.io\"],UAP_AP:[\"uap-ap-web-africa.agora.io\",\"uap-ap-web-africa2.agora.io\"],EVENT_REPORT_DOMAIN:[\"statscollector-1-africa.agora.io\"],EVENT_REPORT_BACKUP_DOMAIN:[\"statscollector-2-africa.agora.io\"],LOG_UPLOAD_SERVER:[\"logservice-south-africa.agora.io\"],PROXY_SERVER_TYPE3:[\"africa.webrtc-cloud-proxy.sd-rtn.com\"]}};let uB,hB,AB,lB,pB,gB,EB,fB,mB,IB,_B,CB,SB,vB,TB;SP&&(dB.CHINA={CODE:cB.CHINA,WEBCS_DOMAIN:[\"webrtc2-2.ap.sd-rtn.com\"],WEBCS_DOMAIN_BACKUP_LIST:[\"webrtc2-4.ap.sd-rtn.com\"],PROXY_CS:[\"proxy-web.ap.sd-rtn.com\"],CDS_AP:[\"cds-web-2.ap.sd-rtn.com\",\"cds-web-4.ap.sd-rtn.com\"],ACCOUNT_REGISTER:[\"sua-web-2.ap.sd-rtn.com\",\"sua-web-4.ap.sd-rtn.com\"],UAP_AP:[\"uap-web-2.ap.sd-rtn.com\",\"uap-web-4.ap.sd-rtn.com\"],EVENT_REPORT_DOMAIN:[\"web-3.statscollector.sd-rtn.com\"],EVENT_REPORT_BACKUP_DOMAIN:[\"web-4.statscollector.sd-rtn.com\"],LOG_UPLOAD_SERVER:[\"logservice-china.agora.io\"],PROXY_SERVER_TYPE3:[\"east-cn.webrtc-cloud-proxy.sd-rtn.com\"]}),function(e){e.UPDATE_BITRATE_LIMIT=\"update_bitrate_limit\"}(uB||(uB={}));class RB extends MD{constructor(e,t){super(),MN(this,\"onICEConnectionStateChange\",void 0),MN(this,\"onConnectionStateChange\",void 0),MN(this,\"onDTLSTransportStateChange\",void 0),MN(this,\"onDTLSTransportError\",void 0),MN(this,\"onICETransportStateChange\",void 0),MN(this,\"onFirstAudioReceived\",void 0),MN(this,\"onFirstVideoReceived\",void 0),MN(this,\"onFirstAudioDecoded\",void 0),MN(this,\"onFirstVideoDecoded\",void 0),MN(this,\"onFirstVideoDecodedTimeout\",void 0),MN(this,\"onSelectedLocalCandidateChanged\",void 0),MN(this,\"onSelectedRemoteCandidateChanged\",void 0)}}!function(e){e.SEND=\"sendonly\",e.RECV=\"recvonly\",e.SENDRECV=\"sendrecv\",e.INACTIVE=\"inactive\"}(hB||(hB={})),function(e){e.VIDEO=\"video\",e.AUDIO=\"audio\"}(AB||(AB={})),function(e){e.LocalVideoTrack=\"videoTrack\",e.LocalAudioTrack=\"audioTrack\",e.LocalVideoLowTrack=\"videoLowTrack\"}(lB||(lB={})),function(e){e.New=\"new\",e.Connected=\"connected\",e.Reconnecting=\"reconnecting\",e.Disconnected=\"disconnected\"}(pB||(pB={})),function(e){e.StateChange=\"stateChange\",e.IceConnectionStateChange=\"iceConnectionStateChange\",e.RequestMuteLocal=\"requestMuteLocal\",e.RequestUnmuteLocal=\"requestUnmuteLocal\",e.RequestRePublish=\"requestRePublish\",e.RequestReSubscribe=\"requestReSubscribe\",e.RequestUploadStats=\"requestUploadStats\",e.MediaReconnectStart=\"MediaReconnectStart\",e.MediaReconnectEnd=\"MediaReconnectEnd\",e.NeedSignalRTT=\"NeedSignalRTT\",e.RequestRestartICE=\"RequestRestartIce\",e.PeerConnectionStateChange=\"PeerConnectionStateChange\",e.RequestReconnect=\"RequestReconnect\",e.RequestReconnectPC=\"RequestReconnectPC\",e.RequestUnpublishForReconnectPC=\"RequestUnpublishForReconnectPC\",e.P2PLost=\"P2PLost\",e.UpdateVideoEncoder=\"UpdateVideoEncoder\",e.ConnectionTypeChange=\"ConnectionTypeChange\",e.RequestLowStreamParameter=\"RequestLowStreamParameter\",e.QueryClientConnectionState=\"QueryClientConnectionState\"}(gB||(gB={})),function(e){e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\"}(EB||(EB={})),function(e){e.NETWORK_STATE_CHANGE=\"NETWORK_STATE_CHANGE\",e.ONLINE=\"ONLINE\",e.OFFLINE=\"OFFLINE\"}(fB||(fB={})),function(e){e.ON_TRACK=\"on_track\",e.ON_NODE=\"on_node\"}(mB||(mB={})),function(e){e.REQUEST_UPDATE_CONSTRAINTS=\"request_update_constraints\",e.REQUEST_CONSTRAINTS=\"request_constraints\"}(IB||(IB={})),function(e){e.CONNECTING=\"CONNECTING\",e.RECONNECTING=\"RECONNECTING\",e.CONNECTED=\"CONNECTED\",e.CLOSED=\"CLOSED\"}(_B||(_B={})),function(e){e[e.CONNECT_AP=0]=\"CONNECT_AP\",e[e.AP_CONNECTED=1]=\"AP_CONNECTED\",e[e.CONNECT_WORKER_MANAGER=2]=\"CONNECT_WORKER_MANAGER\",e[e.WORKER_MANAGER_CONNECTED=3]=\"WORKER_MANAGER_CONNECTED\",e[e.GET_WORKER_MANAGER_RESPONSE=4]=\"GET_WORKER_MANAGER_RESPONSE\",e[e.CONNECT_WORKER=5]=\"CONNECT_WORKER\",e[e.WORKER_CONNECTED=6]=\"WORKER_CONNECTED\",e[e.CLOSED=7]=\"CLOSED\"}(CB||(CB={})),function(e){e.CONNECTION_STATE_CHANGE=\"connection-state-change\",e.STATE_CHANGE=\"state-change\",e.INSPECT_RESULT=\"inspect-result\",e.CLIENT_LOCAL_VIDEO_TRACK=\"client-local-video-track\",e.REQUEST_NEW_WORKER_URL=\"request-new-worker-url\"}(SB||(SB={})),function(e){e.NETWORK_ERROR=\"NETWORK_ERROR\",e.SERVER_ERROR=\"SERVER_ERROR\",e.MULTI_IP=\"MULTI_IP\",e.TIMEOUT=\"TIMEOUT\",e.OFFLINE=\"OFFLINE\",e.LEAVE=\"LEAVE\",e.P2P_FAILED=\"P2P_FAILED\",e.FALLBACK=\"FALLBACK\"}(vB||(vB={})),function(e){e.CONNECTED=\"transmitter:connected\",e.RECONNECTING=\"transmitter:reconnecting\",e.WILL_RECONNECT=\"transmitter:will_reconnect\",e.CLOSED=\"transmitter:closed\",e.FAILED=\"transmitter:failed\",e.ON_MESSAGE=\"transmitter:on_message\",e.REQUEST_NEW_URLS=\"transmitter:request_new_urls\",e.RECONNECT_WAITTING_FINISH=\"transmitter:reconnect_waitting_finish\",e.RECONNECT_CREATE_CONNECTION=\"transmitter:reconnect_create_connection\",e.ON_TOKEN_PRIVILEGE_DID_EXPIRE=\"transmitter:on_token_privilege_did_expire\",e.TO_CONNECT_DATACHANNEL=\"transmitter:to_connect_datachannel\",e.FAILBACK=\"transmitter:failback\"}(TB||(TB={}));const yB={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1,supportDualStreamEncoding:!1,supportDataChannel:!1};function wB(){return yB}var bB=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof DataView,NB=Hi,OB=Zi,DB=i.RangeError,PB=function(e){if(void 0===e)return 0;var t=NB(e),i=OB(t);if(t!==i)throw DB(\"Wrong length or index\");return i},LB=i.Array,kB=Math.abs,BB=Math.pow,MB=Math.floor,UB=Math.log,xB=Math.LN2,QB={pack:function(e,t,i){var r,n,o,s=LB(i),a=8*i-t-1,c=(1<<a)-1,d=c>>1,u=23===t?BB(2,-24)-BB(2,-77):0,h=e<0||0===e&&1/e<0?1:0,A=0;for((e=kB(e))!=e||e===1/0?(n=e!=e?1:0,r=c):(r=MB(UB(e)/xB),e*(o=BB(2,-r))<1&&(r--,o*=2),(e+=r+d>=1?u/o:u*BB(2,1-d))*o>=2&&(r++,o/=2),r+d>=c?(n=0,r=c):r+d>=1?(n=(e*o-1)*BB(2,t),r+=d):(n=e*BB(2,d-1)*BB(2,t),r=0));t>=8;)s[A++]=255&n,n/=256,t-=8;for(r=r<<t|n,a+=t;a>0;)s[A++]=255&r,r/=256,a-=8;return s[--A]|=128*h,s},unpack:function(e,t){var i,r=e.length,n=8*r-t-1,o=(1<<n)-1,s=o>>1,a=n-7,c=r-1,d=e[c--],u=127&d;for(d>>=7;a>0;)u=256*u+e[c--],a-=8;for(i=u&(1<<-a)-1,u>>=-a,a+=t;a>0;)i=256*i+e[c--],a-=8;if(0===u)u=1-s;else{if(u===o)return i?NaN:d?-1/0:1/0;i+=BB(2,t),u-=s}return(d?-1:1)*i*BB(2,u-t)}},FB=Pe,VB=qi,jB=er,GB=ct,KB=Tt,HB=E,WB=qi,YB=er,JB=function(e,t,i){var r=GB(t);r in e?KB.f(e,r,HB(0,i)):e[r]=i},qB=i.Array,XB=Math.max,zB=function(e,t,i){for(var r=YB(e),n=WB(t,r),o=WB(void 0===i?r:i,r),s=qB(XB(o-n,0)),a=0;n<o;n++,a++)JB(s,a,e[n]);return s.length=a,s},ZB=i,$B=S,eM=o,tM=bB,iM=Di,rM=Kt,nM=gT,oM=n,sM=m_,aM=Hi,cM=Zi,dM=PB,uM=QB,hM=jd,AM=lu,lM=ji.f,pM=Tt.f,gM=function(e){for(var t=FB(this),i=jB(t),r=arguments.length,n=VB(r>1?arguments[1]:void 0,i),o=r>2?arguments[2]:void 0,s=void 0===o?i:VB(o,i);s>n;)t[n++]=e;return t},EM=zB,fM=$d,mM=iM.PROPER,IM=iM.CONFIGURABLE,_M=Ri.get,CM=Ri.set,SM=\"ArrayBuffer\",vM=\"DataView\",TM=\"Wrong index\",RM=ZB.ArrayBuffer,yM=RM,wM=yM&&yM.prototype,bM=ZB.DataView,NM=bM&&bM.prototype,OM=Object.prototype,DM=ZB.Array,PM=ZB.RangeError,LM=$B(gM),kM=$B([].reverse),BM=uM.pack,MM=uM.unpack,UM=function(e){return[255&e]},xM=function(e){return[255&e,e>>8&255]},QM=function(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]},FM=function(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]},VM=function(e){return BM(e,23,4)},jM=function(e){return BM(e,52,8)},GM=function(e,t){pM(e.prototype,t,{get:function(){return _M(this)[t]}})},KM=function(e,t,i,r){var n=dM(i),o=_M(e);if(n+t>o.byteLength)throw PM(TM);var s=_M(o.buffer).bytes,a=n+o.byteOffset,c=EM(s,a,a+t);return r?c:kM(c)},HM=function(e,t,i,r,n,o){var s=dM(i),a=_M(e);if(s+t>a.byteLength)throw PM(TM);for(var c=_M(a.buffer).bytes,d=s+a.byteOffset,u=r(+n),h=0;h<t;h++)c[d+h]=u[o?h:t-h-1]};if(tM){var WM=mM&&RM.name!==SM;if(oM((function(){RM(1)}))&&oM((function(){new RM(-1)}))&&!oM((function(){return new RM,new RM(1.5),new RM(NaN),WM&&!IM})))WM&&IM&&rM(RM,\"name\",SM);else{(yM=function(e){return sM(this,wM),new RM(dM(e))}).prototype=wM;for(var YM,JM=lM(RM),qM=0;JM.length>qM;)(YM=JM[qM++])in yM||rM(yM,YM,RM[YM]);wM.constructor=yM}AM&&hM(NM)!==OM&&AM(NM,OM);var XM=new bM(new yM(2)),zM=$B(NM.setInt8);XM.setInt8(0,2147483648),XM.setInt8(1,2147483649),!XM.getInt8(0)&&XM.getInt8(1)||nM(NM,{setInt8:function(e,t){zM(this,e,t<<24>>24)},setUint8:function(e,t){zM(this,e,t<<24>>24)}},{unsafe:!0})}else wM=(yM=function(e){sM(this,wM);var t=dM(e);CM(this,{bytes:LM(DM(t),0),byteLength:t}),eM||(this.byteLength=t)}).prototype,NM=(bM=function(e,t,i){sM(this,NM),sM(e,wM);var r=_M(e).byteLength,n=aM(t);if(n<0||n>r)throw PM(\"Wrong offset\");if(n+(i=void 0===i?r-n:cM(i))>r)throw PM(\"Wrong length\");CM(this,{buffer:e,byteLength:i,byteOffset:n}),eM||(this.buffer=e,this.byteLength=i,this.byteOffset=n)}).prototype,eM&&(GM(yM,\"byteLength\"),GM(bM,\"buffer\"),GM(bM,\"byteLength\"),GM(bM,\"byteOffset\")),nM(NM,{getInt8:function(e){return KM(this,1,e)[0]<<24>>24},getUint8:function(e){return KM(this,1,e)[0]},getInt16:function(e){var t=KM(this,2,e,arguments.length>1?arguments[1]:void 0);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=KM(this,2,e,arguments.length>1?arguments[1]:void 0);return t[1]<<8|t[0]},getInt32:function(e){return FM(KM(this,4,e,arguments.length>1?arguments[1]:void 0))},getUint32:function(e){return FM(KM(this,4,e,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(e){return MM(KM(this,4,e,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(e){return MM(KM(this,8,e,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(e,t){HM(this,1,e,UM,t)},setUint8:function(e,t){HM(this,1,e,UM,t)},setInt16:function(e,t){HM(this,2,e,xM,t,arguments.length>2?arguments[2]:void 0)},setUint16:function(e,t){HM(this,2,e,xM,t,arguments.length>2?arguments[2]:void 0)},setInt32:function(e,t){HM(this,4,e,QM,t,arguments.length>2?arguments[2]:void 0)},setUint32:function(e,t){HM(this,4,e,QM,t,arguments.length>2?arguments[2]:void 0)},setFloat32:function(e,t){HM(this,4,e,VM,t,arguments.length>2?arguments[2]:void 0)},setFloat64:function(e,t){HM(this,8,e,jM,t,arguments.length>2?arguments[2]:void 0)}});fM(yM,SM),fM(bM,vM);var ZM={ArrayBuffer:yM,DataView:bM},$M=Gr,eU=S,tU=n,iU=Ot,rU=qi,nU=Zi,oU=bR,sU=ZM.ArrayBuffer,aU=ZM.DataView,cU=aU.prototype,dU=eU(sU.prototype.slice),uU=eU(cU.getUint8),hU=eU(cU.setUint8);$M({target:\"ArrayBuffer\",proto:!0,unsafe:!0,forced:tU((function(){return!new sU(2).slice(1,void 0).byteLength}))},{slice:function(e,t){if(dU&&void 0===t)return dU(iU(this),e);for(var i=iU(this).byteLength,r=rU(e,i),n=rU(void 0===t?i:t,i),o=new(oU(this,sU))(nU(n-r)),s=new aU(this),a=new aU(o),c=0;r<n;)hU(a,c++,uU(s,r++));return o}});var AU,lU,pU,gU={exports:{}},EU=bB,fU=o,mU=i,IU=x,_U=F,CU=Be,SU=fc,vU=he,TU=Kt,RU=Ht.exports,yU=Tt.f,wU=H,bU=jd,NU=lu,OU=ze,DU=Fe,PU=mU.Int8Array,LU=PU&&PU.prototype,kU=mU.Uint8ClampedArray,BU=kU&&kU.prototype,MU=PU&&bU(PU),UU=LU&&bU(LU),xU=Object.prototype,QU=mU.TypeError,FU=OU(\"toStringTag\"),VU=DU(\"TYPED_ARRAY_TAG\"),jU=DU(\"TYPED_ARRAY_CONSTRUCTOR\"),GU=EU&&!!NU&&\"Opera\"!==SU(mU.opera),KU=!1,HU={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},WU={BigInt64Array:8,BigUint64Array:8},YU=function(e){if(!_U(e))return!1;var t=SU(e);return CU(HU,t)||CU(WU,t)};for(AU in HU)(pU=(lU=mU[AU])&&lU.prototype)?TU(pU,jU,lU):GU=!1;for(AU in WU)(pU=(lU=mU[AU])&&lU.prototype)&&TU(pU,jU,lU);if((!GU||!IU(MU)||MU===Function.prototype)&&(MU=function(){throw QU(\"Incorrect invocation\")},GU))for(AU in HU)mU[AU]&&NU(mU[AU],MU);if((!GU||!UU||UU===xU)&&(UU=MU.prototype,GU))for(AU in HU)mU[AU]&&NU(mU[AU].prototype,UU);if(GU&&bU(BU)!==UU&&NU(BU,UU),fU&&!CU(UU,FU))for(AU in KU=!0,yU(UU,FU,{get:function(){return _U(this)?this[VU]:void 0}}),HU)mU[AU]&&TU(mU[AU],VU,AU);var JU={NATIVE_ARRAY_BUFFER_VIEWS:GU,TYPED_ARRAY_CONSTRUCTOR:jU,TYPED_ARRAY_TAG:KU&&VU,aTypedArray:function(e){if(YU(e))return e;throw QU(\"Target is not a typed array\")},aTypedArrayConstructor:function(e){if(IU(e)&&(!NU||wU(MU,e)))return e;throw QU(vU(e)+\" is not a typed array constructor\")},exportTypedArrayMethod:function(e,t,i,r){if(fU){if(i)for(var n in HU){var o=mU[n];if(o&&CU(o.prototype,e))try{delete o.prototype[e]}catch(i){try{o.prototype[e]=t}catch(e){}}}UU[e]&&!i||RU(UU,e,i?t:GU&&LU[e]||t,r)}},exportTypedArrayStaticMethod:function(e,t,i){var r,n;if(fU){if(NU){if(i)for(r in HU)if((n=mU[r])&&CU(n,e))try{delete n[e]}catch(e){}if(MU[e]&&!i)return;try{return RU(MU,e,i?t:GU&&MU[e]||t)}catch(e){}}for(r in HU)!(n=mU[r])||n[e]&&!i||RU(n,e,t)}},isView:function(e){if(!_U(e))return!1;var t=SU(e);return\"DataView\"===t||CU(HU,t)||CU(WU,t)},isTypedArray:YU,TypedArray:MU,TypedArrayPrototype:UU},qU=i,XU=n,zU=iR,ZU=JU.NATIVE_ARRAY_BUFFER_VIEWS,$U=qU.ArrayBuffer,ex=qU.Int8Array,tx=!ZU||!XU((function(){ex(1)}))||!XU((function(){new ex(-1)}))||!zU((function(e){new ex,new ex(null),new ex(1.5),new ex(e)}),!0)||XU((function(){return 1!==new ex(new $U(2),1,void 0).length})),ix=F,rx=Math.floor,nx=Number.isInteger||function(e){return!ix(e)&&isFinite(e)&&rx(e)===e},ox=Hi,sx=i.RangeError,ax=function(e){var t=ox(e);if(t<0)throw sx(\"The argument can't be less than 0\");return t},cx=i.RangeError,dx=function(e,t){var i=ax(e);if(i%t)throw cx(\"Wrong offset\");return i},ux=IT,hx=d,Ax=TR,lx=Pe,px=er,gx=BT,Ex=bT,fx=vT,mx=JU.aTypedArrayConstructor,Ix=y,_x=i,Cx=Array.isArray||function(e){return\"Array\"==Ix(e)},Sx=_R,vx=F,Tx=ze(\"species\"),Rx=_x.Array,yx=function(e){var t;return Cx(e)&&(t=e.constructor,(Sx(t)&&(t===Rx||Cx(t.prototype))||vx(t)&&null===(t=t[Tx]))&&(t=void 0)),void 0===t?Rx:t},wx=IT,bx=P,Nx=Pe,Ox=er,Dx=function(e,t){return new(yx(e))(0===t?0:t)},Px=S([].push),Lx=function(e){var t=1==e,i=2==e,r=3==e,n=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,u,h){for(var A,l,p=Nx(c),g=bx(p),E=wx(d,u),f=Ox(g),m=0,I=h||Dx,_=t?I(c,f):i||s?I(c,0):void 0;f>m;m++)if((a||m in g)&&(l=E(A=g[m],m,p),e))if(t)_[m]=l;else if(l)switch(e){case 3:return!0;case 5:return A;case 6:return m;case 2:Px(_,A)}else switch(e){case 4:return!1;case 7:Px(_,A)}return o?-1:r||n?n:_}},kx={forEach:Lx(0),map:Lx(1),filter:Lx(2),some:Lx(3),every:Lx(4),find:Lx(5),findIndex:Lx(6),filterReject:Lx(7)},Bx=Gr,Mx=i,Ux=d,xx=o,Qx=tx,Fx=JU,Vx=ZM,jx=m_,Gx=E,Kx=Kt,Hx=nx,Wx=Zi,Yx=PB,Jx=dx,qx=ct,Xx=Be,zx=fc,Zx=F,$x=de,eQ=zc,tQ=H,iQ=lu,rQ=ji.f,nQ=function(e){var t,i,r,n,o,s,a=Ax(this),c=lx(e),d=arguments.length,u=d>1?arguments[1]:void 0,h=void 0!==u,A=Ex(c);if(A&&!fx(A))for(s=(o=gx(c,A)).next,c=[];!(n=hx(s,o)).done;)c.push(n.value);for(h&&d>2&&(u=ux(u,arguments[2])),i=px(c),r=new(mx(a))(i),t=0;i>t;t++)r[t]=h?u(c[t],t):c[t];return r},oQ=kx.forEach,sQ=WS,aQ=Tt,cQ=r,dQ=dh,uQ=Ri.get,hQ=Ri.set,AQ=aQ.f,lQ=cQ.f,pQ=Math.round,gQ=Mx.RangeError,EQ=Vx.ArrayBuffer,fQ=EQ.prototype,mQ=Vx.DataView,IQ=Fx.NATIVE_ARRAY_BUFFER_VIEWS,_Q=Fx.TYPED_ARRAY_CONSTRUCTOR,CQ=Fx.TYPED_ARRAY_TAG,SQ=Fx.TypedArray,vQ=Fx.TypedArrayPrototype,TQ=Fx.aTypedArrayConstructor,RQ=Fx.isTypedArray,yQ=\"BYTES_PER_ELEMENT\",wQ=\"Wrong length\",bQ=function(e,t){TQ(e);for(var i=0,r=t.length,n=new e(r);r>i;)n[i]=t[i++];return n},NQ=function(e,t){AQ(e,t,{get:function(){return uQ(this)[t]}})},OQ=function(e){var t;return tQ(fQ,e)||\"ArrayBuffer\"==(t=zx(e))||\"SharedArrayBuffer\"==t},DQ=function(e,t){return RQ(e)&&!$x(t)&&t in e&&Hx(+t)&&t>=0},PQ=function(e,t){return t=qx(t),DQ(e,t)?Gx(2,e[t]):lQ(e,t)},LQ=function(e,t,i){return t=qx(t),!(DQ(e,t)&&Zx(i)&&Xx(i,\"value\"))||Xx(i,\"get\")||Xx(i,\"set\")||i.configurable||Xx(i,\"writable\")&&!i.writable||Xx(i,\"enumerable\")&&!i.enumerable?AQ(e,t,i):(e[t]=i.value,e)};xx?(IQ||(cQ.f=PQ,aQ.f=LQ,NQ(vQ,\"buffer\"),NQ(vQ,\"byteOffset\"),NQ(vQ,\"byteLength\"),NQ(vQ,\"length\")),Bx({target:\"Object\",stat:!0,forced:!IQ},{getOwnPropertyDescriptor:PQ,defineProperty:LQ}),gU.exports=function(e,t,i){var r=e.match(/\\d+$/)[0]/8,n=e+(i?\"Clamped\":\"\")+\"Array\",o=\"get\"+e,s=\"set\"+e,a=Mx[n],c=a,d=c&&c.prototype,u={},h=function(e,t){AQ(e,t,{get:function(){return function(e,t){var i=uQ(e);return i.view[o](t*r+i.byteOffset,!0)}(this,t)},set:function(e){return function(e,t,n){var o=uQ(e);i&&(n=(n=pQ(n))<0?0:n>255?255:255&n),o.view[s](t*r+o.byteOffset,n,!0)}(this,t,e)},enumerable:!0})};IQ?Qx&&(c=t((function(e,t,i,n){return jx(e,d),dQ(Zx(t)?OQ(t)?void 0!==n?new a(t,Jx(i,r),n):void 0!==i?new a(t,Jx(i,r)):new a(t):RQ(t)?bQ(c,t):Ux(nQ,c,t):new a(Yx(t)),e,c)})),iQ&&iQ(c,SQ),oQ(rQ(a),(function(e){e in c||Kx(c,e,a[e])})),c.prototype=d):(c=t((function(e,t,i,n){jx(e,d);var o,s,a,u=0,A=0;if(Zx(t)){if(!OQ(t))return RQ(t)?bQ(c,t):Ux(nQ,c,t);o=t,A=Jx(i,r);var l=t.byteLength;if(void 0===n){if(l%r)throw gQ(wQ);if((s=l-A)<0)throw gQ(wQ)}else if((s=Wx(n)*r)+A>l)throw gQ(wQ);a=s/r}else a=Yx(t),o=new EQ(s=a*r);for(hQ(e,{buffer:o,byteOffset:A,byteLength:s,length:a,view:new mQ(o)});u<a;)h(e,u++)})),iQ&&iQ(c,SQ),d=c.prototype=eQ(vQ)),d.constructor!==c&&Kx(d,\"constructor\",c),Kx(d,_Q,c),CQ&&Kx(d,CQ,n),u[n]=c,Bx({global:!0,forced:c!=a,sham:!IQ},u),yQ in c||Kx(c,yQ,r),yQ in d||Kx(d,yQ,r),sQ(n)}):gU.exports=function(){},(0,gU.exports)(\"Uint8\",(function(e){return function(t,i,r){return e(this,t,i,r)}}));var kQ=er,BQ=Hi,MQ=JU.aTypedArray;(0,JU.exportTypedArrayMethod)(\"at\",(function(e){var t=MQ(this),i=kQ(t),r=BQ(e),n=r>=0?r:i+r;return n<0||n>=i?void 0:t[n]}));var UQ=i,xQ=d,QQ=JU,FQ=er,VQ=dx,jQ=Pe,GQ=n,KQ=UQ.RangeError,HQ=UQ.Int8Array,WQ=HQ&&HQ.prototype,YQ=WQ&&WQ.set,JQ=QQ.aTypedArray,qQ=QQ.exportTypedArrayMethod,XQ=!GQ((function(){var e=new Uint8ClampedArray(2);return xQ(YQ,e,{length:1,0:3},1),3!==e[1]})),zQ=XQ&&QQ.NATIVE_ARRAY_BUFFER_VIEWS&&GQ((function(){var e=new HQ(2);return e.set(1),e.set(\"2\",1),0!==e[0]||2!==e[1]}));qQ(\"set\",(function(e){JQ(this);var t=VQ(arguments.length>1?arguments[1]:void 0,1),i=jQ(e);if(XQ)return xQ(YQ,this,i,t);var r=this.length,n=FQ(i),o=0;if(n+t>r)throw KQ(\"Wrong length\");for(;o<n;)this[t+o]=i[o++]}),!XQ||zQ);var ZQ=zB,$Q=Math.floor,eF=function(e,t){var i=e.length,r=$Q(i/2);return i<8?tF(e,t):iF(e,eF(ZQ(e,0,r),t),eF(ZQ(e,r),t),t)},tF=function(e,t){for(var i,r,n=e.length,o=1;o<n;){for(r=o,i=e[o];r&&t(e[r-1],i)>0;)e[r]=e[--r];r!==o++&&(e[r]=i)}return e},iF=function(e,t,i,r){for(var n=t.length,o=i.length,s=0,a=0;s<n||a<o;)e[s+a]=s<n&&a<o?r(t[s],i[a])<=0?t[s++]:i[a++]:s<n?t[s++]:i[a++];return e},rF=eF,nF=W.match(/firefox\\/(\\d+)/i),oF=!!nF&&+nF[1],sF=/MSIE|Trident/.test(W),aF=W.match(/AppleWebKit\\/(\\d+)\\./),cF=!!aF&&+aF[1],dF=i,uF=S,hF=n,AF=ge,lF=rF,pF=JU,gF=oF,EF=sF,fF=$,mF=cF,IF=dF.Array,_F=pF.aTypedArray,CF=pF.exportTypedArrayMethod,SF=dF.Uint16Array,vF=SF&&uF(SF.prototype.sort),TF=!(!vF||hF((function(){vF(new SF(2),null)}))&&hF((function(){vF(new SF(2),{})}))),RF=!!vF&&!hF((function(){if(fF)return fF<74;if(gF)return gF<67;if(EF)return!0;if(mF)return mF<602;var e,t,i=new SF(516),r=IF(516);for(e=0;e<516;e++)t=e%4,i[e]=515-e,r[e]=e-2*t+3;for(vF(i,(function(e,t){return(e/4|0)-(t/4|0)})),e=0;e<516;e++)if(i[e]!==r[e])return!0}));CF(\"sort\",(function(e){return void 0!==e&&AF(e),RF?vF(this,e):lF(_F(this),function(e){return function(t,i){return void 0!==e?+e(t,i)||0:i!=i?-1:t!=t?1:0===t&&0===i?1/t>0&&1/i<0?1:-1:t>i}}(e))}),!RF||TF);var yF=WS,wF=\"ArrayBuffer\",bF=ZM.ArrayBuffer;let NF;Gr({global:!0,forced:i.ArrayBuffer!==bF},{ArrayBuffer:bF}),yF(wF),function(e){e[e.CHOOSE_SERVER=11]=\"CHOOSE_SERVER\",e[e.CLOUD_PROXY=18]=\"CLOUD_PROXY\",e[e.CLOUD_PROXY_5=20]=\"CLOUD_PROXY_5\",e[e.CLOUD_PROXY_FALLBACK=26]=\"CLOUD_PROXY_FALLBACK\"}(NF||(NF={}));var OF=Hn,DF=Array.isArray||function(e){return\"Array\"==OF(e)},PF=vn,LF=DF,kF=ZE,BF=no,MF=Es(\"species\"),UF=PF.Array,xF=function(e){var t;return LF(e)&&(t=e.constructor,(kF(t)&&(t===UF||LF(t.prototype))||BF(t)&&null===(t=t[MF]))&&(t=void 0)),void 0===t?UF:t},QF=function(e,t){return new(xF(e))(0===t?0:t)},FF=ta,VF=zn,jF=zo,GF=Va,KF=QF,HF=_n([].push),WF=function(e){var t=1==e,i=2==e,r=3==e,n=4==e,o=6==e,s=7==e,a=5==e||o;return function(c,d,u,h){for(var A,l,p=jF(c),g=VF(p),E=FF(d,u),f=GF(g),m=0,I=h||KF,_=t?I(c,f):i||s?I(c,0):void 0;f>m;m++)if((a||m in g)&&(l=E(A=g[m],m,p),e))if(t)_[m]=l;else if(l)switch(e){case 3:return!0;case 5:return A;case 6:return m;case 2:HF(_,A)}else switch(e){case 4:return!1;case 7:HF(_,A)}return o?-1:r||n?n:_}},YF={forEach:WF(0),map:WF(1),filter:WF(2),some:WF(3),every:WF(4),find:WF(5),findIndex:WF(6),filterReject:WF(7)},JF=YF.forEach,qF=Xa(\"forEach\")?[].forEach:function(e){return JF(this,e,arguments.length>1?arguments[1]:void 0)};ka({target:\"Array\",proto:!0,forced:[].forEach!=qF},{forEach:qF});var XF=ic(\"Array\").forEach,zF=Vl,ZF=es,$F=Cn,eV=XF,tV=Array.prototype,iV={DOMTokenList:!0,NodeList:!0},rV=function(e){var t=e.forEach;return e===tV||$F(tV,e)&&t===tV.forEach||ZF(iV,zF(e))?eV:t},nV=zo,oV=el;ka({target:\"Object\",stat:!0,forced:ln((function(){oV(1)}))},{keys:function(e){return oV(nV(e))}});var sV=oo.Object.keys,aV=ac,cV=ka,dV=DF,uV=_n([].reverse),hV=[1,2];cV({target:\"Array\",proto:!0,forced:String(hV)===String(hV.reverse())},{reverse:function(){return dV(this)&&(this.length=this.length),uV(this)}});var AV=ic(\"Array\").reverse,lV=Cn,pV=AV,gV=Array.prototype,EV=function(e){var t=e.reverse;return e===gV||lV(gV,e)&&t===gV.reverse?pV:t},fV=ln,mV=Io,IV=Es(\"species\"),_V=function(e){return mV>=51||!fV((function(){var t=[];return(t.constructor={})[IV]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},CV=ka,SV=vn,vV=DF,TV=ZE,RV=no,yV=TA,wV=Va,bV=io,NV=WP,OV=Es,DV=af,PV=_V(\"slice\"),LV=OV(\"species\"),kV=SV.Array,BV=Math.max;CV({target:\"Array\",proto:!0,forced:!PV},{slice:function(e,t){var i,r,n,o=bV(this),s=wV(o),a=yV(e,s),c=yV(void 0===t?s:t,s);if(vV(o)&&(i=o.constructor,(TV(i)&&(i===kV||vV(i.prototype))||RV(i)&&null===(i=i[LV]))&&(i=void 0),i===kV||void 0===i))return DV(o,a,c);for(r=new(void 0===i?kV:i)(BV(c-a,0)),n=0;a<c;a++,n++)a in o&&NV(r,n,o[a]);return r.length=n,r}});var MV=ic(\"Array\").slice,UV=Cn,xV=MV,QV=Array.prototype,FV=function(e){var t=e.slice;return e===QV||UV(QV,e)&&t===QV.slice?xV:t};function VV(e,t,i,r,n){var o,s,a,c={};return rV(o=sV(r)).call(o,(function(e){c[e]=r[e]})),c.enumerable=!!c.enumerable,c.configurable=!!c.configurable,(\"value\"in c||c.initializer)&&(c.writable=!0),c=aV(s=EV(a=FV(i).call(i)).call(a)).call(s,(function(i,r){return r(e,t,i)||i}),c),n&&void 0!==c.initializer&&(c.value=c.initializer?c.initializer.call(n):void 0,c.initializer=void 0),void 0===c.initializer&&(BN(e,t,c),c=null),c}var jV=ic(\"Array\").keys,GV=Vl,KV=es,HV=Cn,WV=jV,YV=Array.prototype,JV={DOMTokenList:!0,NodeList:!0},qV=function(e){var t=e.keys;return e===YV||HV(YV,e)&&t===YV.keys||KV(JV,GV(e))?WV:t};function XV(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function zV(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?XV(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):XV(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let ZV=0,$V=0;function ej(e,t,i,r){return new l_((n,o)=>{t.timeout=t.timeout||LP(\"HTTP_CONNECT_TIMEOUT\"),t.responseType=t.responseType||\"json\",t.data&&!i?(t.data=JSON.stringify(t.data),ZV+=fK(t.data)):i&&(t.data.size?ZV+=t.data.size:t.data instanceof FormData?ZV+=function(e){let t=0;/DingTalk/i.test(navigator.userAgent)&&e.realFormData&&(e=e.realFormData);return e.forEach(e=>{t+=\"string\"==typeof e?fK(e):e.size}),t+138}(t.data):ZV+=fK(JSON.stringify(t.data))),t.headers=t.headers||{},t.headers[\"Content-Type\"]=t.headers[\"Content-Type\"]||\"application/json\",t.method=\"POST\",t.url=e,kD.request(t).then(e=>{\"string\"==typeof e.data?$V+=fK(e.data):e.data instanceof ArrayBuffer||e.data instanceof Uint8Array?$V+=e.data.byteLength:$V+=fK(JSON.stringify(e.data)),r&&n({data:e.data,headers:e.headers}),n(e.data)}).catch(e=>{kD.isCancel(e)?o(new QD(xD.OPERATION_ABORTED,\"cancel token canceled\")):\"ECONNABORTED\"===e.code?o(new QD(xD.NETWORK_TIMEOUT,e.message)):e.response?o(new QD(xD.NETWORK_RESPONSE_ERROR,e.response.status)):o(new QD(xD.NETWORK_ERROR,e.message))})})}async function tj(e,t){const i=new Blob([t.data],{type:\"buffer\"});return await ej(e,zV(zV({},t),{},{data:i,headers:{\"Content-Type\":\"application/octet-stream\"}}),!0)}const ij=new class extends MD{set networkState(e){JD.info(\"[\".concat(this._moduleName,\"]\")+\"network state changed, \"+this._networkState+\" -> \"+e),this.emit(fB.NETWORK_STATE_CHANGE,e,this._networkState),e===EB.ONLINE?this.emit(fB.ONLINE):e===EB.OFFLINE&&(this.onlineWaiter=new l_(e=>{this.once(fB.ONLINE,()=>{this.onlineWaiter=void 0,e(EB.ONLINE)})}),this.emit(fB.OFFLINE)),this._networkState=e}get networkState(){return this._networkState}constructor(){super(),MN(this,\"_moduleName\",\"network-indicator\"),MN(this,\"_networkState\",EB.ONLINE),MN(this,\"onlineWaiter\",void 0),window.addEventListener(\"online\",()=>{this.networkState=EB.ONLINE}),window.addEventListener(\"offline\",()=>{this.networkState=EB.OFFLINE})}};let rj=!1;const nj=new class extends MD{constructor(){super(...arguments),MN(this,\"onAutoplayFailed\",void 0),MN(this,\"onAudioAutoplayFailed\",void 0)}};function oj(){if(oN(),!rj){const e=t=>{t.preventDefault(),rj=!1,bN()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0))};rj=!0,bN()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),JD.info(\"detect media autoplay failed, document: https://docs.agora.io/cn/Voice/autoplay_policy_web_ng?platform=Web\"),nj.onAutoplayFailed?nj.onAutoplayFailed():nj.onAudioAutoplayFailed?JD.warning(\"AgoraRTC.onAudioAutoplayFailed has been deprecated in favor of AgoraRTC.onAutoplayFailed.\\n\\n  Please refer to the Agora document to migrate the newer API, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"):JD.warning(\"We have detected a media autoplay failed event, and found out that you haven't implemented AgoraRTC.onAutoplayFailed callback yet.\\n\\n  It will cause audio/video element not playing automatically on some browsers without user interaction, possibly hurting user experiences.\\n\\n  Please refer to the Agora document to properly handle autoplay failed event, https://docs.agora.io/en/Voice/autoplay_policy_web_ng?platform=Web .\"),nj.emit(\"autoplay-failed\")}}function sj(e){return(new TextEncoder).encode(e)}const aj=function(e,t){const i=new Uint8Array(e.byteLength+t.byteLength);return i.set(new Uint8Array(e),0),i.set(new Uint8Array(t),e.byteLength),i};const cj=async e=>function(e,t){let i=\"\";return new Uint8Array(e).forEach(e=>{i+=e.toString(t).padStart(2,\"0\")}),i}(await crypto.subtle.digest(\"SHA-256\",sj(e)),16);var dj;function uj(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function hj(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?uj(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):uj(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function Aj(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{report:pj};return function(t,i,r){const n=t[i];if(\"function\"==typeof n){const o=\"AgoraRTCClient\"===t.constructor.name?\"Client\":t.constructor.name;r.value=function(){for(var t=arguments.length,r=new Array(t),s=0;s<t;s++)r[s]=arguments[s];const a=e.report.reportApiInvoke(this._sessionId||null,{name:\"\".concat(o,\".\").concat(i),options:r,tag:nk.TRACER,reportResult:e.reportResult});try{const t=n.apply(this,r);return a.onSuccess(e.reportResult&&t),t}catch(e){throw a.onError(e),e}}}return r}}function lj(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{report:pj};return function(t,i,r){const n=r.value;if(\"function\"==typeof n){let o;o=e.className?e.className:\"AgoraRTCClient\"===t.constructor.name?\"Client\":t.constructor.name,r.value=async function(){let t;for(var r=arguments.length,s=new Array(r),a=0;a<r;a++)s[a]=arguments[a];try{s.length>0&&(JSON.stringify(s),t=s)}catch(e){JD.warning(\"arguments for method \".concat(o,\".\").concat(i,\" not serializable from apiInvoke.\")),t=[]}const c=(e.report||pj).reportApiInvoke(this._sessionId||null,{name:\"\".concat(o,\".\").concat(i),options:t,tag:nk.TRACER});try{const e=await n.apply(this,s);return c.onSuccess(),e}catch(e){throw c.onError(e),e}}}return r}}const pj=new(mP(\"AgoraRTCEventReport\")(dj=class{constructor(){MN(this,\"baseInfoMap\",new Map),MN(this,\"proxyServer\",void 0),MN(this,\"clientList\",VP),MN(this,\"eventUploadTimer\",void 0),MN(this,\"setSessionIdTimer\",void 0),MN(this,\"url\",void 0),MN(this,\"backupUrl\",void 0),MN(this,\"_appId\",void 0),MN(this,\"keyEventUploadPendingItems\",[]),MN(this,\"normalEventUploadPendingItems\",[]),MN(this,\"apiInvokeUploadPendingItems\",[]),MN(this,\"apiInvokeCount\",0),MN(this,\"ltsList\",[]),MN(this,\"lastSendNormalEventTime\",Date.now()),MN(this,\"customReportCounterTimer\",void 0),MN(this,\"customReportCount\",0),MN(this,\"extApiInvoke\",async e=>{for(const t of e){const e=hj(hj({},t),{},{sid:null,invokeId:++this.apiInvokeCount,tag:nk.TRACER});this.sendApiInvoke(e)}}),this.eventUploadTimer=window.setInterval(this.doSend.bind(this),LP(\"EVENT_REPORT_SEND_INTERVAL\")),this.setSessionIdTimer=window.setInterval(this.appendSessionId.bind(this),LP(\"EVENT_REPORT_SEND_INTERVAL\"))}adjustSessionStartTime(e){if(!this.baseInfoMap.has(e)&&!this.baseInfoMap.get(e))return JD.error(\"adjust session \".concat(e,\" start time, sid is not exist or info is undefined\")),void gP(\"error\",this,\"adjustSessionStartTime\",\"adjust session \".concat(e,\" start time, sid is not exist or info is undefined\"));const t=this.baseInfoMap.get(e),i=Date.now(),r=t.startTime;t.startTime=i,JD.debug(\"rewrite session \".concat(e,\" startTime: \").concat(i,\" , \").concat(i-r,\"ms\")),gP(\"debug\",this,\"adjustSessionStartTime\",void 0,\"rewrite session \".concat(e,\" startTime: \").concat(i,\" , \").concat(i-r,\"ms\")),this.baseInfoMap.set(e,t)}setAppId(e){this._appId=e}reportApiInvoke(e,t,i){t.timeout=t.timeout||6e4,t.reportResult=void 0===t.reportResult||t.reportResult;const r=Date.now();this.apiInvokeCount+=1;const n=this.apiInvokeCount,o=()=>({tag:t.tag,invokeId:n,sid:e,name:t.name,apiInvokeTime:r,options:t.options,states:t.states||null}),s=!!LP(\"SHOW_REPORT_INVOKER_LOG\");s&&JD.info(\"\".concat(t.name,\" start\"),t.options);let a=!1;mK(t.timeout).then(()=>{a||(this.sendApiInvoke(hj(hj({},o()),{},{error:xD.API_INVOKE_TIMEOUT,success:!1})),JD.debug(\"\".concat(t.name,\" timeout\")))});const c=new QD(xD.UNEXPECTED_ERROR,\"\".concat(t.name,\": this api invoke is end\"));return{onSuccess:e=>{const r=()=>{if(a)throw c;return a=!0,this.sendApiInvoke(hj(hj({},o()),{},{success:!0},t.reportResult&&{result:e})),s&&JD.info(\"\".concat(t.name,\" onSuccess\")),e};return i?xK(r,t.name+\"Success\",i,()=>a=!0):r()},onError:e=>{const r=()=>{if(a)throw e;a=!0,this.sendApiInvoke(hj(hj({},o()),{},{success:!1,error:e})),s&&JD.info(\"\".concat(t.name,\" onFailure\"),e.toString())};return i?xK(r,t.name+\"Error\",i,()=>a=!0):r()}}}sessionInit(e,t){if(this.baseInfoMap.has(e))return;const i=Date.now(),r=this.createBaseInfo(e,i);r.cname=t.cname;const n=Object.assign({},{willUploadConsoleLog:LP(\"UPLOAD_LOG\"),maxTouchPoints:navigator.maxTouchPoints,areaVersion:SP?\"global\":\"oversea\",areas:LP(\"AREAS\")&&LP(\"AREAS\").join(\",\")},t.extend),o=Date.now(),s=hj(hj({},r),{},{eventType:$L.SESSION_INIT,appid:t.appid,browser:navigator.userAgent,build:_P,lts:o,elapse:o-i,extend:JSON.stringify(n),mode:t.mode,process:LP(\"PROCESS_ID\"),appType:LP(\"APP_TYPE\"),success:!0,version:CP});this.send({type:ek.SESSION,data:s},!0)}joinChooseServer(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.JOIN_CHOOSE_SERVER,lts:n,eventElapse:n-t.lts,chooseServerAddr:t.csAddr,errorCode:t.ec,elapse:n-i.startTime,success:t.succ,chooseServerAddrList:JSON.stringify(t.serverList),uid:t.uid?parseInt(t.uid):null,cid:t.cid?parseInt(t.cid):null,chooseServerIp:t.csIp||\"\",opid:t.opid,unilbsServerIds:t.unilbsServerIds,extend:t.extend||void 0,isHttp3:t.isHttp3});this.send({type:ek.JOIN_CHOOSE_SERVER,data:o},!0)}reqUserAccount(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.REQ_USER_ACCOUNT,lts:n,success:t.success,serverAddress:t.serverAddr,stringUid:t.stringUid,uid:t.uid,errorCode:t.errorCode,elapse:n-i.startTime,eventElapse:n-t.lts,extend:JSON.stringify(t.extend)});this.send({type:ek.REQ_USER_ACCOUNT,data:o},!0)}joinGateway(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info;t.vid&&(r.vid=t.vid),r.uid=t.uid,r.cid=t.cid;const n=Date.now(),{firstSuccess:o,avoidJoinStartTime:s,isProxy:a,addr:c}=t,d=n-(o&&s?s:i.startTime),u=hj(hj({},r),{},{eventType:$L.JOIN_GATEWAY,lts:n,gatewayAddr:t.addr,success:t.succ,errorCode:t.ec,elapse:d,eventElapse:n-t.lts,firstSuccess:o,signalChannel:t.signalChannel}),h=u.success?1:0;if(t.succ&&(i.lastJoinSuccessTime=n),o)this.send({type:ek.JOIN_GATEWAY,data:u},!0);else{let e;if(c)if(a){const t=c.match(/h=(\\d{1,3}-){3}\\d{1,3}/g),i=c.match(/p=[0-9]{1,6}/g);e={isSuccess:h,gatewayIp:t&&t.length?t[0].split(\"=\")[1].replace(/-/g,\".\"):\"\",port:i&&i.length?i[0].split(\"=\")[1]:\"\",isProxy:a?1:0}}else{const t=c.match(/wss:\\/\\/(\\d{1,3}-){3}\\d{1,3}/g),i=c.match(/:[0-9]{1,6}/g);e={isSuccess:h,gatewayIp:t&&t.length?t[0].split(\"//\")[1].replace(/-/g,\".\"):\"\",port:i&&i.length?i[0].split(\":\")[1]:\"\",isProxy:a?1:0}}else e={isSuccess:h,gatewayIp:\"\",port:\"\",isProxy:a?1:0};delete u.success,delete u.eventType,delete u.firstSuccess,u.vid=Number(u.vid);const t=Object.assign({},u,e,{eventType:$L.REJOIN_GATEWAY});this.send({type:ek.RE_JOIN_GATEWAY,data:t},!0)}}joinChannelTimeout(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=Date.now(),n=hj(hj({},i.info),{},{lts:r,timeout:t,elapse:r-i.startTime});this.send({type:ek.JOIN_CHANNEL_TIMEOUT,data:n},!0)}publish(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.PUBLISH,lts:n,eventElapse:t.eventElapse,elapse:n-i.startTime,success:t.succ,errorCode:t.ec,videoName:t.videoName,audioName:t.audioName,screenName:t.screenName,screenshare:t.screenshare,audio:t.audio,video:t.video,p2pid:t.p2pid,publishRequestid:t.publishRequestid});this.send({type:ek.PUBLISH,data:o},!0)}subscribe(e,t,i){const r=this.baseInfoMap.get(e);if(!r)return;const n=r.info,o=Date.now(),s=hj(hj({},n),{},{eventType:$L.SUBSCRIBE,lts:o,eventElapse:t.eventElapse,elapse:o-r.startTime,success:t.succ,errorCode:t.ec,video:t.video,audio:t.audio,subscribeRequestid:t.subscribeRequestid,p2pid:t.p2pid},i&&{extend:JSON.stringify({isMassSubscribe:!0})});\"string\"==typeof t.peerid?s.peerSuid=t.peerid:s.peer=t.peerid,this.send({type:ek.SUBSCRIBE,data:s},!0)}wsCompressorInit(e){var t;const i=[...qV(t=this.baseInfoMap).call(t)],r=i.length?i[0]:\"UnableToGetSid\",n=this.baseInfoMap.get(r);if(!n)return;const o=n.info,s=Date.now(),a=hj(hj({},o),{},{eventType:$L.WS_COMPRESSOR_INIT,lts:s,eventElapse:e.eventElapse,elapse:s-n.startTime,status:e.status?1:2});this.send({type:ek.WS_COMPRESSOR_INIT,data:a},!0)}firstRemoteVideoDecode(e,t,i,r){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=hj(hj(hj({},o),r),{},{elapse:s-n.startTime,eventType:t,lts:s,firstDecodeFrame:Math.max(s-n.startTime,0),apEnd:Math.max(r.apEnd-n.startTime,0),apStart:Math.max(r.apStart-n.startTime,0),joinGwEnd:Math.max(r.joinGwEnd-n.startTime,0),joinGwStart:Math.max(r.joinGwStart-n.startTime,0),pcEnd:Math.max(r.pcEnd-n.startTime,0),pcStart:Math.max(r.pcStart-n.startTime,0),subscriberEnd:Math.max(r.subscriberEnd-n.startTime,0),subscriberStart:Math.max(r.subscriberStart-n.startTime,0),videoAddNotify:Math.max(r.videoAddNotify-n.startTime,0)});this.send({type:i,data:a},!0)}firstRemoteFrame(e,t,i,r){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=hj(hj(hj({},o),r),{},{elapse:s-n.startTime,eventType:t,lts:s});this.send({type:i,data:a},!0)}onGatewayStream(e,t,i,r){const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=hj(hj(hj({},o),r),{},{eventType:t,lts:s});this.send({type:i,data:a},!0)}streamSwitch(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.STREAM_SWITCH,lts:n,isDual:t.isdual,elapse:n-i.startTime,success:t.succ});this.send({type:ek.STREAM_SWITCH,data:o},!0)}requestProxyAppCenter(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.REQUEST_PROXY_APPCENTER,lts:n,eventElapse:n-t.lts,elapse:n-i.startTime,APAddr:t.APAddr,workerManagerList:t.workerManagerList,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:ek.REQUEST_PROXY_APPCENTER,data:o},!0)}requestProxyWorkerManager(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{eventType:$L.REQUEST_PROXY_WORKER_MANAGER,lts:n,eventElapse:n-t.lts,elapse:n-i.startTime,workerManagerAddr:t.workerManagerAddr,response:t.response,errorCode:t.ec,success:t.succ});this.send({type:ek.REQUEST_PROXY_WORKER_MANAGER,data:o},!0)}setProxyServer(e){this.proxyServer=e,e?JD.debug(\"reportProxyServerurl: \".concat(e)):JD.debug(\"disable reportProxyServerurl: \".concat(e)),gP(\"debug\",this,\"setProxyServer\",e)}peerPublishStatus(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj({},r),{},{subscribeElapse:t.subscribeElapse,peer:t.peer,peerPublishDuration:Math.max(t.audioPublishDuration,t.videoPublishDuration),audiotag:t.audioPublishDuration>0?1:-1,videotag:t.videoPublishDuration>0?1:-1,lts:n,elapse:n-i.startTime,joinChannelSuccessElapse:n-(i.lastJoinSuccessTime||n),peerPublishDurationVideo:t.videoPublishDuration,peerPublishDurationAudio:t.audioPublishDuration});this.send({type:ek.PEER_PUBLISH_STATUS,data:o},!0)}workerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now();(function(e,t,i){const r=e[t];if(!r||\"string\"!=typeof r)return[e];e[t]=\"\";const n=fK(JSON.stringify(e));let o=0;const s=[];let a=0;for(let c=0;c<r.length;c++)a+=r.charCodeAt(c)<=127?1:3,a<=i-n||(s[s.length]=EK(EK({},e),{},{[t]:r.substring(o,c)}),o=c,a=r.charCodeAt(c)<=127?1:3);o!==r.length-1&&(s[s.length]=EK(EK({},e),{},{[t]:r.substring(o)}));return s})(hj(hj(hj({},r),t),{},{elapse:n-i.startTime,lts:n,productType:\"WebRTC\"}),\"payload\",1300).forEach(e=>this.send({type:ek.WORKER_EVENT,data:e},!0))}apworkerEvent(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj(hj({},r),t),{},{elapse:n-i.startTime,lts:n});this.send({type:ek.AP_WORKER_EVENT,data:o},!0)}joinWebProxyAP(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj(hj({},r),t),{},{elapse:n-i.startTime,lts:n,extend:t.extend||void 0});this.send({type:ek.JOIN_WEB_PROXY_AP,data:o},!0)}WebSocketQuit(e,t){const i=this.baseInfoMap.get(e);if(!i)return;const r=i.info,n=Date.now(),o=hj(hj(hj({},r),t),{},{elapse:n-i.startTime,lts:n});this.send({type:ek.WEBSOCKET_QUIT,data:o},!0)}async sendCustomReportMessage(e,t){if(this.customReportCount+=t.length,this.customReportCount>LP(\"CUSTOM_REPORT_LIMIT\"))throw new QD(xD.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval(()=>{this.customReportCount=0},5e3));const i=t.map(t=>({type:ek.USER_ANALYTICS,data:hj({sid:e},t)}));try{LP(\"NEW_REPORT_SERVER\")?await this.postDataToStatsCollector2(i):await this.postDataToStatsCollector(i)}catch(e){throw JD.error(\"send custom report message failed\",e.toString()),new QD(xD.CUSTOM_REPORT_SEND_FAILED,e.message)}}autoplayFailed(e,t,i,r){if(!e)return;const n=this.baseInfoMap.get(e);if(!n)return;const o=n.info,s=Date.now(),a=hj(hj({},o),{},{vid:void 0===o.vid?0:Number(o.vid),lts:s,elapse:s-n.startTime,cbRegistered:nj.onAutoplayFailed||nj.onAudioAutoplayFailed?1:-1,errorMsg:i,mediaType:t,trackId:r,extend:void 0});this.send({type:ek.AUTOPLAY_FAILED,data:a},!0)}sendApiInvoke(e){const t=LP(\"NOT_REPORT_EVENT\");if(e.tag&&t.includes&&t.includes(e.tag))return!1;if(null===e.sid)return this.apiInvokeUploadPendingItems.push(e),!1;const i=this.baseInfoMap.get(e.sid);if(!i)return this.apiInvokeUploadPendingItems.push(e),!1;const{cname:r,uid:n,cid:o}=i.info;e.lts=e.lts||Date.now();let s=void 0;if(e.error)if(e.error instanceof QD){const{code:t,message:i}=e.error;s=t||(i||e.error.toString())}else s=e.error.toString();const a={invokeId:e.invokeId,sid:e.sid,cname:r,cid:o,uid:n,lts:e.lts,success:e.success,elapse:e.lts-i.startTime,execElapse:e.lts-e.apiInvokeTime,apiName:e.name,options:e.options?JSON.stringify(e.options):void 0,execStates:e.states?JSON.stringify(e.states):void 0,execResult:e.result?JSON.stringify(e.result):void 0,errorCode:e.error?s:void 0,errorMsg:e.error?JSON.stringify(e.error):void 0};return this.send({type:ek.API_INVOKE,data:a},!1),!0}appendSessionId(){this.clientList.forEach(e=>{if(e._sessionId){const t=this.apiInvokeUploadPendingItems.length;for(let i=0;i<t;i++){const t=this.apiInvokeUploadPendingItems.shift();t&&(t.sid=e._sessionId,this.sendApiInvoke(Object.assign({},t)))}}})}send(e,t){if(t)return this.keyEventUploadPendingItems.push(e),void this.sendItems(this.keyEventUploadPendingItems,!0);this.normalEventUploadPendingItems.push(e),this.normalEventUploadPendingItems.length>LP(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&this.normalEventUploadPendingItems.splice(0,1),this.normalEventUploadPendingItems.length>=10&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){this.keyEventUploadPendingItems.length>0&&this.sendItems(this.keyEventUploadPendingItems,!0),this.normalEventUploadPendingItems.length>0&&Date.now()-this.lastSendNormalEventTime>=5e3&&this.sendItems(this.normalEventUploadPendingItems,!1)}sendItems(e,t){const i=[],r=[];for(;e.length;){const t=e.shift();i.length<20?i.push(t):r.push(t)}e.push(...r);for(const e of[...i]){var n;if(-1!==this.ltsList.indexOf(e.data.lts))e.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(e.data.lts);else this.ltsList.push(e.data.lts),kL(n=this.ltsList).call(n,(e,t)=>e-t)}t||(this.lastSendNormalEventTime=Date.now());return LP(\"ENABLE_EVENT_REPORT\")?(i.length&&(LP(\"NEW_REPORT_SERVER\")?this.postDataToStatsCollector2(i):this.postDataToStatsCollector(i)).catch((e=>i=>{LP(\"EVENT_REPORT_RETRY\")&&(t?this.keyEventUploadPendingItems=this.keyEventUploadPendingItems.concat(e):(this.normalEventUploadPendingItems=this.normalEventUploadPendingItems.concat(e),this.normalEventUploadPendingItems.length>LP(\"NORMAL_EVENT_QUEUE_CAPACITY\")&&(this.normalEventUploadPendingItems.splice(0,this.normalEventUploadPendingItems.length-LP(\"NORMAL_EVENT_QUEUE_CAPACITY\")),JD.warning(\"report: drop normal events\"))))})(i)),e):e}async postDataToStatsCollector2(e){ij.networkState===EB.OFFLINE&&await l_.race([ij.onlineWaiter,mK(2*FD.maxRetryTimeout)]);const t=e=>{let t=new Uint8Array;return e.forEach(e=>{const i=sj(JSON.stringify(e.data)),r=new ArrayBuffer(5),n=(e=>{let t=0;return Object.entries(ek).forEach(i=>{let[r,n]=i;n===e.type&&(t=ik[r])}),t})(e),o=new DataView(r);o.setUint16(0,i.byteLength,!0),o.setUint8(2,255&n),o.setUint8(3,n>>>8&255),o.setUint8(4,n>>>16&255),t=aj(t,new Uint8Array(r)),t=aj(t,i)}),t},i=\"event\";let r=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(LP(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"&p=443&d=\").concat(i):\"https://\".concat(LP(\"NEW_REPORT_SERVER_DOMAINS\")[0],\"/\").concat(i);for(let n=0;n<2;n+=1){1===n&&(r=this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(LP(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"&p=443&d=\").concat(i):\"https://\".concat(LP(\"NEW_REPORT_SERVER_DOMAINS\")[1],\"/\").concat(i));try{await ej(r,{timeout:1e4,data:t(e),headers:hj(hj({token:\"32f24ab2ddb74f508aa9286c356cec84\",biz:\"webrtc\",sendts:Math.round(Date.now()/1e3),debug:\"false\"},this._appId&&{appid:this._appId}),{},{\"Content-Type\":\"application/octet-stream\"})},!0)}catch(e){if(1===n)throw e;continue}return}}async postDataToStatsCollector(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const i={msgType:\"EventMessages\",sentTs:Math.round(Date.now()/1e3),payloads:e.map(e=>JSON.stringify(e)),vid:(e=>{const t=e&&e.data.sid&&this.baseInfoMap.get(e.data.sid);return t&&t.info.vid&&+t.info.vid||0})(e[0])};ij.networkState===EB.OFFLINE&&await l_.race([ij.onlineWaiter,mK(2*FD.maxRetryTimeout)]);const r=t?\"/events/proto-raws\":\"/events/messages\";let n=this.url||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(LP(\"EVENT_REPORT_DOMAIN\"),\"&p=\").concat(LP(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(r):\"https://\".concat(LP(\"EVENT_REPORT_DOMAIN\"),\":\").concat(LP(\"STATS_COLLECTOR_PORT\")).concat(r));for(let e=0;e<2;e+=1){1===e&&(n=this.backupUrl||(this.proxyServer?\"https://\".concat(this.proxyServer,\"/rs/?h=\").concat(LP(\"EVENT_REPORT_BACKUP_DOMAIN\"),\"&p=\").concat(LP(\"STATS_COLLECTOR_PORT\"),\"&d=\").concat(r):\"https://\".concat(LP(\"EVENT_REPORT_BACKUP_DOMAIN\"),\":\").concat(LP(\"STATS_COLLECTOR_PORT\")).concat(r)));try{t?await tj(n,{timeout:1e4,data:i}):await ej(n,{timeout:1e4,data:i})}catch(t){if(1===e)throw t;continue}return}}createBaseInfo(e,t){const i=Object.assign({},ZL);return i.sid=e,this.baseInfoMap.set(e,{info:i,startTime:t}),i}reportResourceTiming(e,t){const i=performance.getEntriesByName(e),r=i[i.length-1];r&&this.reportApiInvoke(t,{name:\"Client.resourceTiming\",options:r,tag:nk.TRACER}).onSuccess()}})||dj);UD.on(\"REPORT_LOG_UPLOAD\",e=>{e.networkState=ij.networkState,pj.reportApiInvoke(null,{name:\"logUploadError\",options:e,tag:nk.TRACER})});class gj extends MD{constructor(e,t){super(),MN(this,\"trackMediaType\",void 0),MN(this,\"_ID\",void 0),MN(this,\"_hints\",[]),MN(this,\"_isClosed\",!1),MN(this,\"_originMediaStreamTrack\",void 0),MN(this,\"_mediaStreamTrack\",void 0),MN(this,\"_external\",{}),this._ID=t||_K(8,\"track-\"),this._originMediaStreamTrack=e,this._mediaStreamTrack=e,function(e){jP.includes(e)||jP.push(e)}(this)}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(e){if(!e){const e=pj.reportApiInvoke(null,{name:rk.GET_MEDIA_STREAM_TRACK,options:[],tag:nk.TRACER});this._mediaStreamTrack&&\"string\"==typeof this._mediaStreamTrack.label?e.onSuccess(this._mediaStreamTrack.label):e.onSuccess(\"\")}return this._mediaStreamTrack}getMediaStreamTrackSettings(){return this.getMediaStreamTrack(!0).getSettings()}close(){this._isClosed=!0,function(e){const t=jP.indexOf(e);-1!==t&&jP.splice(t,1)}(this),this.emit(iB.CLOSED)}}let Ej=1;class fj{constructor(e){MN(this,\"lockingPromise\",l_.resolve()),MN(this,\"locks\",0),MN(this,\"name\",\"\"),MN(this,\"lockId\",void 0),this.lockId=Ej++,e&&(this.name=e),JD.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is created.\"))}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1,JD.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\"));const i=new l_(i=>{t=()=>{this.locks-=1,JD.debug(\"[lock-\".concat(this.name,\"-\").concat(this.lockId,\"] is not locked, current queue \").concat(this.locks,\". \").concat(\"string\"==typeof e?e:\"\")),i()}}),r=this.lockingPromise.then(()=>t);return this.lockingPromise=this.lockingPromise.then(()=>i),r}}function mj(e,t){return function(i,r,n){const o=n.value;if(\"function\"!=typeof o)throw new Error(\"Cannot use mutex on object property.\");return n.value=async function(){const i=this[t];if(!i)throw new Error(\"mutex property key \".concat(t,\" doesn't exist on \").concat(e));const n=await i.lock(\"From \".concat(e,\".\").concat(r));try{for(var s=arguments.length,a=new Array(s),c=0;c<s;c++)a[c]=arguments[c];return await o.apply(this,a)}finally{n()}},n}}class Ij extends gj{get muted(){return this._muted}get enabled(){return this._enabled}constructor(e,t){super(e,t),MN(this,\"_enabled\",!0),MN(this,\"_muted\",!1),MN(this,\"_isClosed\",!1),MN(this,\"_enabledMutex\",void 0),MN(this,\"processor\",void 0),MN(this,\"processorContext\",void 0),MN(this,\"_handleTrackEnded\",()=>{this.onTrackEnded()}),this._enabledMutex=new fj(\"\".concat(t)),e.addEventListener(\"ended\",this._handleTrackEnded)}getTrackLabel(){return this._originMediaStreamTrack.label}close(){this._isClosed||(this.stop(),this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=null,JD.debug(\"[\".concat(this.getTrackId(),\"] close\")),gP(\"debug\",this,\"close\"),this.emit(Zk.NEED_CLOSE),super.close())}async _updateOriginMediaStreamTrack(e,t){e!==this._originMediaStreamTrack&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop(),e.addEventListener(\"ended\",this._handleTrackEnded),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await yK(this,Zk.NEED_REPLACE_TRACK,this),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}))}_getDefaultPlayerConfig(){return{}}onTrackEnded(){JD.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),pP(\"debug\",[\"MediaStreamTrack\",this.getTrackId()],\"ended\"),this.emit(iB.TRACK_ENDED)}stateCheck(e,t){if(JD.debug(\"check track state, [muted: \".concat(this._muted,\", enabled: \").concat(this._enabled,\"] to [\").concat(e,\": \").concat(t,\"]\")),gP(\"debug\",this,\"stateCheck\",{stateName:e,state:t,muted:this._muted,enabled:this._enabled}),BL(t,e),this._enabled&&this._muted&&\"enabled\"===e&&!1===t)throw new QD(xD.TRACK_STATE_UNREACHABLE,\"cannot set enabled while the track is muted\").print();if(!this._enabled&&!this._muted&&\"muted\"===e&&!0===t)throw new QD(xD.TRACK_STATE_UNREACHABLE,\"cannot set muted while the track is disabled\").print()}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}let _j;function Cj(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}(0,gU.exports)(\"Float32\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),function(e){e.IOS_15_INTERRUPTION_START=\"ios15-interruption-start\",e.IOS_15_INTERRUPTION_END=\"ios15-interruption-end\",e.IOS_INTERRUPTION_START=\"ios-interruption-start\",e.IOS_INTERRUPTION_END=\"ios-interruption-end\",e.STATE_CHANGE=\"state-change\"}(_j||(_j={}));const Sj=window.AudioContext||window.webkitAudioContext;let vj=null;const Tj=new class extends MD{constructor(){super(...arguments),MN(this,\"prevState\",void 0),MN(this,\"curState\",void 0),MN(this,\"currentTime\",void 0),MN(this,\"currentTimeStuckAt\",void 0),MN(this,\"interruptDetectorTrack\",void 0),MN(this,\"onLocalAudioTrackMute\",()=>{JD.info(\"ios15-interruption-start\"),AP(\"info\",[\"WebAudio\"],\"ios15-interruption-start\"),this.emit(_j.IOS_15_INTERRUPTION_START)}),MN(this,\"onLocalAudioTrackUnmute\",async()=>{JD.info(\"ios15-interruption-end\"),AP(\"info\",[\"WebAudio\"],\"ios15-interruption-end\"),\"running\"!==this.curState||this.duringInterruption?JD.info(\"ios15-interruption-end-canceled\"):(vj&&await vj.suspend(),this.emit(_j.IOS_15_INTERRUPTION_END))})}get duringInterruption(){return\"running\"===this.prevState&&\"interrupted\"===this.curState}bindInterruptDetectorTrack(e){JD.debug(\"webaudio bindInterruptDetectorTrack \".concat(e.getTrackId())),gP(\"debug\",[\"WebAudio\"],\"bindInterruptDetectorTrack\",e.getTrackId()),this.interruptDetectorTrack||(this.interruptDetectorTrack=e,this.interruptDetectorTrack._mediaStreamTrack.onmute=this.onLocalAudioTrackMute,this.interruptDetectorTrack._mediaStreamTrack.onunmute=this.onLocalAudioTrackUnmute)}unbindInterruptDetectorTrack(e){JD.debug(\"webaudio unbindInterruptDetectorTrack \".concat(e.getTrackId())),gP(\"debug\",[\"WebAudio\"],\"unbindInterruptDetectorTrack\",e.getTrackId()),this.interruptDetectorTrack&&this.interruptDetectorTrack===e&&(this.interruptDetectorTrack._mediaStreamTrack&&(this.interruptDetectorTrack._mediaStreamTrack.onmute=null,this.interruptDetectorTrack._mediaStreamTrack.onunmute=null),this.interruptDetectorTrack=void 0)}};function Rj(){if(!Sj)return JD.error(\"your browser is not support web audio\"),void hP(\"error\",[\"WebAudio\"],\"your browser is not support web audio\");JD.info(\"create audio context\"),EP(\"info\",[\"WebAudio\"],\"WebAudioContext\");const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Cj(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Cj(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},LP(\"WEBAUDIO_INIT_OPTIONS\"));JD.debug(\"audio context init option:\",JSON.stringify(e)),vj=new Sj(e),Tj.curState=vj.state,vj.onstatechange=()=>{Tj.prevState=Tj.curState,Tj.curState=vj?vj.state:void 0,(EN()||vN())&&\"running\"===Tj.prevState&&\"interrupted\"===Tj.curState&&(JD.info(\"ios-interruption-start\"),AP(\"info\",[\"AudioState\"],\"ios-interruption-start\"),Tj.emit(_j.IOS_INTERRUPTION_START)),(EN()||vN())&&\"interrupted\"===Tj.prevState&&\"running\"===Tj.curState&&(JD.info(\"ios-interruption-end\"),AP(\"info\",[\"AudioState\"],\"ios-interruption-end\"),Tj.emit(_j.IOS_INTERRUPTION_END)),Tj.prevState!==Tj.curState&&(JD.debug(\"AudioContext State Change\",\"\".concat(Tj.prevState,\"=>\").concat(Tj.curState)),pP(\"debug\",[\"AudioContext\",void 0],\"statechange\",\"\".concat(Tj.prevState,\"=>\").concat(Tj.curState)),Tj.emit(_j.STATE_CHANGE))},setInterval(()=>{var e;const t=null===(e=vj)||void 0===e?void 0:e.currentTime;if(Tj.currentTime!==t)Tj.currentTimeStuckAt&&(JD.debug(\"AudioContext current time resume at \".concat(t)),Tj.currentTimeStuckAt=void 0),Tj.currentTime=t;else{if(t!==Tj.currentTimeStuckAt){pj.reportApiInvoke(null,{name:\"WEB_AUDIO_CURRENT_TIME_STUCK\",options:{currentTime:t},tag:nk.TRACER}).onSuccess(),JD.warning(\"AudioContext current time stuck at \".concat(t))}Tj.currentTimeStuckAt=t}},5e3),async function(e){const t=[\"click\",\"contextmenu\",\"auxclick\",\"dblclick\",\"mousedown\",\"mouseup\",\"touchend\",\"keydown\",\"keyup\"];let i,r=!1,n=!1,o=!1;function s(t){\"running\"===e.state?a(!1):EN()||vN()?\"suspended\"===e.state&&(a(!0),t&&e.resume().then(d,d)):\"closed\"!==e.state&&(a(!0),t&&e.resume().then(d,d))}function a(e){if(r!==e){r=e;for(let i=0,r=t;i<r.length;i+=1){const t=r[i];e?window.addEventListener(t,u,{capture:!0,passive:!0}):window.removeEventListener(t,u,{capture:!0,passive:!0})}}}function c(){s(!0)}function d(){s(!1)}function u(){s(!0)}function h(e){if(!o)if(i.paused)if(e){A(!1),o=!0;let e=void 0;try{e=i.play(),e?e.then(l,l):(i.addEventListener(\"playing\",l),i.addEventListener(\"abort\",l),i.addEventListener(\"error\",l))}catch(e){l()}}else A(!0);else A(!1)}function A(e){if(n!==e){n=e;for(let i=0,r=t;i<r.length;i++){const t=r[i];e?window.addEventListener(t,p,{capture:!0,passive:!0}):window.removeEventListener(t,p,{capture:!0,passive:!0})}}}function l(){i.removeEventListener(\"playing\",l),i.removeEventListener(\"abort\",l),i.removeEventListener(\"error\",l),o=!1,h(!1)}function p(){h(!0)}if(EN()){const t=e.createMediaStreamDestination(),r=document.createElement(\"div\");r.innerHTML=\"<audio x-webkit-airplay='deny'></audio>\",i=r.children.item(0),i.controls=!1,i.disableRemotePlayback=!0,i.preload=\"auto\",i.srcObject=t.stream,h(!0)}Tj.on(_j.STATE_CHANGE,c),s(!1)}(vj)}function yj(){if(!vj){if(Rj(),!vj)throw new QD(xD.NOT_SUPPORTED,\"can not create audio context\");return vj}return vj}function wj(e){if(function(){if(null!==bj)return bj;const e=yj(),t=e.createBufferSource(),i=e.createGain(),r=e.createGain();t.connect(i),t.connect(r),t.disconnect(i);let n=!1;try{t.disconnect(i)}catch(e){n=!0}return t.disconnect(),bj=n,n}())return;gP(\"debug\",[\"WebAudio\"],\"polyfillAudioNode\");const t=e.connect,i=e.disconnect;e.connect=(i,r,n)=>(e._inputNodes||(e._inputNodes=[]),e._inputNodes.includes(i)||(i instanceof AudioNode?(e._inputNodes.push(i),t.call(e,i,r,n)):t.call(e,i,r)),e),e.disconnect=(r,n,o)=>{i.call(e),r?NK(e._inputNodes,r):e._inputNodes=[];for(const i of e._inputNodes)t.call(e,i)}}let bj=null;function Nj(e,t){let i=!1;const r=1/t;if(LP(\"DISABLE_WEBAUDIO\")){const t=window.setInterval(()=>{i?window.clearInterval(t):e(performance.now()/1e3)},1e3*r)}else{const t=yj();let n=t.createGain();n.gain.value=0,n.connect(t.destination);const o=()=>{if(i)return void(n=null);const s=t.createOscillator();s.onended=o,s.connect(n),s.start(0),s.stop(t.currentTime+r),e(t.currentTime)};o()}return()=>{i=!0}}const Oj=JD.prefix(\"[inject-node]\");class Dj{constructor(){MN(this,\"nodeLists\",[]),MN(this,\"prevNode\",void 0),MN(this,\"nextNode\",void 0)}get firstNode(){return this.nodeLists[0]}get lastNode(){return this.nodeLists[this.nodeLists.length-1]}get isActive(){return!!this.nodeLists.length}get isConnected(){return!(!this.prevNode||!this.nextNode)}connect(e,t){Oj.debug(\"connect audio node, current list:\"+this.nodeLists.length),this.nodeLists.length?(this.prevNode&&this.prevNode.disconnect(),e.connect(this.firstNode),this.nextNode&&this.lastNode&&this.lastNode.disconnect(),this.lastNode.connect(t),this.nodeLists.forEach((e,t)=>{const i=this.nodeLists[t+1];i&&e.connect(i)})):e.connect(t),this.nextNode=t,this.prevNode=e}disconnect(){var e;Oj.debug(\"disconnect audio node, current list:\"+this.nodeLists.length),this.nodeLists.forEach(e=>{e.disconnect()}),null===(e=this.prevNode)||void 0===e||e.disconnect(),this.prevNode=void 0,this.nextNode=void 0}addNode(e){Oj.debug(\"add node in inject node, current list:\",this.nodeLists.length),this.prevNode&&this.nextNode?(this.firstNode||(Oj.debug(\"new node is the first node\"),this.prevNode.disconnect(),this.prevNode.connect(e),e.connect(this.nextNode)),this.nextNode&&this.lastNode&&(this.lastNode.disconnect(this.nextNode),this.lastNode.connect(e),e.connect(this.nextNode)),this.nodeLists.push(e)):Oj.debug(\"add node is called before inject node connected\")}removeNode(e){Oj.debug(\"remove node in inject node, current list:\",this.nodeLists.length);const t=this.nodeLists.indexOf(e);if(-1===t)return void Oj.debug(\"$[inject-node] cannot find the node to be removed\");const i=this.nodeLists[t+1],r=this.nodeLists[t-1];0===t&&this.prevNode&&this.nextNode&&(this.prevNode.disconnect(e),i?this.prevNode.connect(i):this.prevNode.connect(this.nextNode)),t===this.nodeLists.length-1&&this.nextNode&&r&&(r.disconnect(e),r.connect(this.nextNode)),0!==t&&t!==this.nodeLists.length-1&&(r.disconnect(e),r.connect(i)),Oj.debug(\"remove node in inject node success, current list:\",this.nodeLists.length)}}class Pj{constructor(){MN(this,\"context\",void 0),MN(this,\"analyserNode\",void 0),MN(this,\"sourceNode\",void 0),this.context=yj(),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4}updateSource(e){if(e!==this.sourceNode){if(this.sourceNode)try{this.sourceNode.disconnect(this.analyserNode)}catch(e){}this.sourceNode=e,null==e||e.connect(this.analyserNode)}}getVolumeLevel(){if(!this.sourceNode)return 0;if(!this.context||EN()||vN()||\"running\"!==this.context.state&&this.context.resume(),!this.analyserNode)return 0;const e=new Float32Array(this.analyserNode.fftSize);if(this.analyserNode.getFloatTimeDomainData)this.analyserNode.getFloatTimeDomainData(e);else{const t=new Uint8Array(this.analyserNode.fftSize);this.analyserNode.getByteTimeDomainData(t);for(let i=0;i<e.length;++i)e[i]=t[i]/128-1}const t=cc(e).call(e,(e,t)=>e+t*t,0)/e.length;return Math.max(10*Math.log10(t)+100,0)/100}getAnalyserNode(){return this.analyserNode}rebuildAnalyser(){try{var e,t;null===(e=this.sourceNode)||void 0===e||e.disconnect(this.analyserNode),this.analyserNode=this.context.createAnalyser(),this.analyserNode.fftSize=2048,this.analyserNode.smoothingTimeConstant=.4,null===(t=this.sourceNode)||void 0===t||t.connect(this.analyserNode)}catch(e){JD.warning(\"rebuild analyser node failed.\")}}destroy(){this.updateSource(void 0)}}class Lj extends MD{get processSourceNode(){return this.sourceNode}set processedNode(e){var t;if(!this.isDestroyed&&this._processedNode!==e){try{var i;null===(i=this.sourceNode)||void 0===i||i.disconnect(this.outputNode)}catch(e){}null===(t=this._processedNode)||void 0===t||t.disconnect(),this._processedNode=e,this.connect()}}get processedNode(){return this._processedNode}constructor(){super(),MN(this,\"outputNode\",void 0),MN(this,\"outputTrack\",void 0),MN(this,\"isPlayed\",!1),MN(this,\"sourceNode\",void 0),MN(this,\"context\",void 0),MN(this,\"audioBufferNode\",void 0),MN(this,\"destNode\",void 0),MN(this,\"injectNode\",void 0),MN(this,\"audioOutputLevel\",0),MN(this,\"volumeLevelAnalyser\",void 0),MN(this,\"_processedNode\",void 0),MN(this,\"playNode\",void 0),MN(this,\"isDestroyed\",!1),MN(this,\"onNoAudioInput\",void 0),MN(this,\"isNoAudioInput\",!1),MN(this,\"_noAudioInputCount\",0),this.context=yj(),this.playNode=this.context.destination,this.outputNode=this.context.createGain(),wj(this.outputNode),this.injectNode=new Dj,this.volumeLevelAnalyser=new Pj}startGetAudioBuffer(e){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(e),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=e=>{this.emit(Sk.ON_AUDIO_BUFFER,function(e){for(let t=0;t<e.outputBuffer.numberOfChannels;t+=1){const i=e.outputBuffer.getChannelData(t);for(let e=0;e<i.length;e+=1)i[e]=0}return e.inputBuffer}(e))})}stopGetAudioBuffer(){this.audioBufferNode&&(this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!wB().webAudioMediaStreamDest)throw new QD(xD.NOT_SUPPORTED,\"your browser is not support audio processor\");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(e){\"running\"!==this.context.state&&DK(()=>{Tj.emit(\"autoplay-failed\")}),this.isPlayed=!0,this.playNode=e||this.context.destination,this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(e){}this.isPlayed=!1}getAccurateVolumeLevel(){return this.volumeLevelAnalyser.getVolumeLevel()}async checkHasAudioInput(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(e>5)return this.isNoAudioInput=!0,this.onNoAudioInput&&this.onNoAudioInput(),!1;EN()||vN()?\"suspended\"===this.context.state&&this.context.resume():\"running\"!==this.context.state&&this.context.resume();const t=this.volumeLevelAnalyser.getAnalyserNode();let i;t.getFloatTimeDomainData?(i=new Float32Array(t.fftSize),t.getFloatTimeDomainData(i)):(i=new Uint8Array(t.fftSize),t.getByteTimeDomainData(i));let r=!1;for(let e=0;e<i.length;e++)0!==i[e]&&(r=!0);return r?(this.isNoAudioInput=!1,!0):(await mK(200),await this.checkHasAudioInput(e?e+1:1)&&r)}getAudioVolume(){return this.outputNode.gain.value}setVolume(e){this.outputNode.gain.setValueAtTime(e,this.context.currentTime)}destroy(){this.disconnect(),this.stop(),this.isDestroyed=!0,this.onNoAudioInput=void 0}injectAudioNode(e){this.injectNode.addNode(e)}removeAudioNode(e){this.injectNode.removeNode(e)}disconnect(){var e,t;null===(e=this.processedNode)||void 0===e||e.disconnect(),null===(t=this.sourceNode)||void 0===t||t.disconnect(),this.outputNode&&this.outputNode.disconnect()}connect(){var e;this.processedNode?null===(e=this.processedNode)||void 0===e||e.connect(this.outputNode):this.sourceNode&&this.sourceNode.connect(this.outputNode);this.volumeLevelAnalyser.updateSource(this.outputNode)}}class kj extends Lj{get isFreeze(){return!1}constructor(e,t,i){var r;if(super(),MN(this,\"sourceNode\",void 0),MN(this,\"track\",void 0),MN(this,\"clonedTrack\",void 0),MN(this,\"audioElement\",void 0),MN(this,\"isCurrentTrackCloned\",!1),MN(this,\"isRemoteTrack\",!1),MN(this,\"originVolumeLevelAnalyser\",void 0),MN(this,\"rebuildWebAudio\",async()=>{if(JD.debug(\"ready to rebuild web audio, state:\",this.context.state),this.isNoAudioInput&&await this.checkHasAudioInput(),!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener(\"click\",this.rebuildWebAudio,!0),void JD.debug(\"rebuild web audio success, current volume status\",this.getAccurateVolumeLevel());this.context.resume().then(()=>JD.info(\"resume success\")),JD.debug(\"rebuild web audio because of ios 12 bugs\"),this.disconnect();const e=this.track;this.track=this.track.clone(),this.isCurrentTrackCloned?e.stop():this.isCurrentTrackCloned=!0;const t=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(t),wj(this.sourceNode),this.volumeLevelAnalyser.rebuildAnalyser();const i=this.outputNode.gain.value;this.outputNode=this.context.createGain(),this.outputNode.gain.setValueAtTime(i,this.context.currentTime),wj(this.outputNode),this.emit(Sk.UPDATE_SOURCE),this.connect(),this.audioElement.srcObject=t,this.isPlayed&&this.play(this.playNode),this.checkHasAudioInput()}),\"audio\"!==e.kind)throw new QD(xD.UNEXPECTED_ERROR);this.track=e;const n=new MediaStream([this.track]);if(this.isRemoteTrack=!!t,this.sourceNode=this.context.createMediaStreamSource(n),wj(this.sourceNode),i){const e=i.clone();e.enabled=!0,this.clonedTrack=e,JD.debug(\"create an unmuted track \".concat(e.id,\" from the original track \").concat(i.id,\" to get the volume\"));const t=this.context.createMediaStreamSource(new MediaStream([e]));wj(t),this.originVolumeLevelAnalyser=new Pj,this.originVolumeLevelAnalyser.updateSource(t)}this.connect(),this.audioElement=document.createElement(\"audio\"),this.audioElement.srcObject=n;const o=oN();t&&o.os===eN.IOS&&Number(null===(r=o.osVersion)||void 0===r?void 0:r.split(\".\")[0])<15&&(Tj.on(_j.STATE_CHANGE,()=>{\"suspended\"===this.context.state?document.body.addEventListener(\"click\",this.rebuildWebAudio,!0):\"running\"===this.context.state&&this.rebuildWebAudio()}),this.checkHasAudioInput().then(e=>{e||document.body.addEventListener(\"click\",this.rebuildWebAudio,!0)}))}updateTrack(e){this.sourceNode.disconnect(),this.track=e,this.isCurrentTrackCloned=!1;const t=new MediaStream([e]);this.sourceNode=this.context.createMediaStreamSource(t),wj(this.sourceNode),this.processedNode||this.sourceNode.connect(this.outputNode),this.emit(Sk.UPDATE_SOURCE),this.audioElement.srcObject=t}destroy(){var e;this.audioElement.srcObject=null,this.audioElement.remove(),Tj.off(\"state-change\",this.rebuildWebAudio),null===(e=this.originVolumeLevelAnalyser)||void 0===e||e.destroy(),this.clonedTrack=void 0,super.destroy()}createMediaStreamSourceNode(e){return this.context.createMediaStreamSource(new MediaStream([e]))}updateOriginTrack(e){const t=e.clone();t.enabled=!0,this.clonedTrack&&(this.clonedTrack.stop(),this.clonedTrack=t),JD.debug(\"create an unmuted track \".concat(t.id,\" from the original track \").concat(e.id,\" to get the volume\"));const i=this.context.createMediaStreamSource(new MediaStream([t]));wj(i),this.originVolumeLevelAnalyser&&this.originVolumeLevelAnalyser.updateSource(i)}getOriginVolumeLevel(){return this.originVolumeLevelAnalyser?this.originVolumeLevelAnalyser.getVolumeLevel():this.getAccurateVolumeLevel()}}async function Bj(e,t){const i=(e,t)=>e?\"number\"!=typeof e?e.max||e.exact||e.ideal||e.min||t:e:t,r={audio:!1,video:{mandatory:{chromeMediaSource:\"desktop\",chromeMediaSourceId:e,maxHeight:i(t.height,1080),maxWidth:i(t.width,1920)}}};return t.frameRate&&\"number\"!=typeof t.frameRate?(r.video.mandatory.maxFrameRate=t.frameRate.max,r.video.mandatory.minFrameRate=t.frameRate.min):\"number\"==typeof t.frameRate&&(r.video.mandatory.maxFrameRate=t.frameRate),await navigator.mediaDevices.getUserMedia(r)}async function Mj(e){const t=await Uj(e.mediaSource),i=await function(e){return new l_((t,i)=>{const r=document.createElement(\"div\");r.innerText=\"share screen\",r.setAttribute(\"style\",\"text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;\");const n=document.createElement(\"div\");n.setAttribute(\"style\",\"width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;\");const o=document.createElement(\"div\");o.innerText=\"Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.\",o.setAttribute(\"style\",\"height: 12%;\");const s=document.createElement(\"div\");s.setAttribute(\"style\",\"width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;\");const a=document.createElement(\"div\");a.setAttribute(\"style\",\"text-align: right; padding: 16px 0;\");const c=document.createElement(\"button\");c.innerHTML=\"cancel\",c.setAttribute(\"style\",\"width: 85px;\"),c.onclick=()=>{document.body.removeChild(d);const e=new Error(\"NotAllowedError\");e.name=\"NotAllowedError\",i(e)},a.appendChild(c),n.appendChild(o),n.appendChild(s),n.appendChild(a);const d=document.createElement(\"div\");d.setAttribute(\"style\",\"position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);\"),d.appendChild(r),d.appendChild(n),document.body.appendChild(d),e.map(e=>{if(e.id){const i=document.createElement(\"div\");i.setAttribute(\"style\",\"width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;\");let r=e.thumbnail;const{width:n}=r.getSize();n>1920&&(r=r.resize({width:1920})),i.innerHTML='<div style=\"height: 120px; display: table-cell; vertical-align: middle;\"><img style=\"width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\" src='+r.toDataURL()+' /></div><span style=\"\\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\">'+(e.name.replace(/[\\u00A0-\\u9999<>\\&]/g,(function(e){return\"&#\"+e.charCodeAt(0)+\";\"}))+\"</span>\"),i.onclick=()=>{document.body.removeChild(d),t(e.id)},s.appendChild(i)}})})}(t);return await Bj(i,e)}async function Uj(e){let t=[\"window\",\"screen\"];\"application\"!==e&&\"window\"!==e||(t=[\"window\"]),\"screen\"===e&&(t=[\"screen\"]);const i=Qj();if(!i)throw new QD(xD.ELECTRON_IS_NULL);let r=null;try{var n;r=(null===(n=i.desktopCapturer)||void 0===n?void 0:n.getSources({types:t}))||i.ipcRenderer.invoke(\"DESKTOP_CAPTURER_GET_SOURCES\",{types:t})}catch(e){r=null}r&&r.then||(r=new l_((e,r)=>{i.desktopCapturer.getSources({types:t},(t,i)=>{t?r(t):e(i)})}));try{return await r}catch(e){throw new QD(xD.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,e.toString())}}let xj=null;function Qj(){if(xj)return xj;try{return xj=window.require(\"electron\"),xj}catch(e){return null}}const Fj=new fj(\"safari\");let Vj=!1,jj=!1;async function Gj(e,t){let i=0,r=null;for(;i<2;)try{r=await Kj(e,t,i>0);break}catch(r){if(r instanceof QD)throw JD.error(\"[\".concat(t,\"] \").concat(r.toString())),gP(\"error\",[],\"getLocalStream\",{config:e,id:t},r.toString()),r;const n=Hj(r.name||r.code||r,r.message);if(n.code===xD.MEDIA_OPTION_INVALID){JD.debug(\"[\".concat(t,\"] detect media option invalid, retry\")),hP(\"debug\",[],\"[\".concat(t,\"] detect media option invalid, retry\")),i+=1,await mK(500);continue}throw JD.error(\"[\".concat(t,\"] \").concat(n.toString())),gP(\"error\",[],\"getLocalStream\",{config:e,id:t},n.toString()),n}if(!r)throw new QD(xD.UNEXPECTED_ERROR,\"can not find stream after getUserMedia\");return r}async function Kj(e,t,i){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new QD(xD.NOT_SUPPORTED,\"can not find getUserMedia\");i&&(e.video&&(delete e.video.width,delete e.video.height),e.screen&&(delete e.screen.width,delete e.screen.height));const r=wB(),n=new MediaStream;if(e.audioSource&&n.addTrack(e.audioSource),e.videoSource&&n.addTrack(e.videoSource),!e.audio&&!e.video&&!e.screen)return JD.debug(\"Using Video Source/ Audio Source\"),hP(\"debug\",[],\"Using Video Source/ Audio Source\"),n;if(e.screen)if(Qj())if(e.screen.sourceId){Wj(n,await Bj(e.screen.sourceId,e.screen))}else{Wj(n,await Mj(e.screen))}else if(lN()&&e.screen.extensionId&&e.screen.mandatory){if(!r.getStreamFromExtension)throw new QD(xD.NOT_SUPPORTED,\"This browser does not support screen sharing\");JD.debug(\"[\".concat(t,'] Screen access on chrome stable, looking for extension\"')),hP(\"debug\",[],\"[\".concat(t,'] Screen access on chrome stable, looking for extension\"'));const i=await(o=e.screen.extensionId,s=t,new l_((e,t)=>{try{chrome.runtime.sendMessage(o,{getStream:!0},i=>{if(!i||!i.streamId)return JD.error(\"[\".concat(s,\"] No response from Chrome Plugin. Plugin not installed properly\"),i),gP(\"error\",[],\"getSourceIdFromExtension\",{extensionId:o,streamId:s},\"No response from Chrome Plugin. Plugin not installed properly, \".concat(i)),void t(new QD(xD.CHROME_PLUGIN_NO_RESPONSE,\"No response from Chrome Plugin. Plugin not installed properly\"));e(i.streamId)})}catch(e){JD.error(\"[\".concat(s,\"] AgoraRTC screensharing plugin is not accessible(\").concat(o,\")\"),e.toString()),gP(\"error\",[],\"getSourceIdFromExtension\",{extensionId:o,streamId:s},\"AgoraRTC screensharing plugin is not accessible(\".concat(o,\"), \").concat(e.toString())),t(new QD(xD.CHROME_PLUGIN_NOT_INSTALL))}}));e.screen.mandatory.chromeMediaSourceId=i;Wj(n,await navigator.mediaDevices.getUserMedia({video:{mandatory:e.screen.mandatory}}))}else if(r.getDisplayMedia){e.screen.mediaSource&&sB(e.screen.mediaSource);const i={width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate,displaySurface:\"screen\"===e.screen.mediaSource?\"monitor\":e.screen.mediaSource};JD.debug(\"[\".concat(t,\"] getDisplayMedia:\"),JSON.stringify({video:i,audio:!!e.screenAudio})),EP(\"debug\",[\"mediaDevices\",t],\"getDisplayMedia\",{video:i,audio:!!e.screenAudio,trackId:t});Wj(n,await navigator.mediaDevices.getDisplayMedia({video:i,audio:!!e.screenAudio}))}else{if(!gN())throw JD.error(\"[\".concat(t,\"] This browser does not support screenSharing\")),new QD(xD.NOT_SUPPORTED,\"This browser does not support screen sharing\");{e.screen.mediaSource&&sB(e.screen.mediaSource);const i={video:{mediaSource:e.screen.mediaSource,width:e.screen.width,height:e.screen.height,frameRate:e.screen.frameRate}};JD.debug(\"[\".concat(t,\"] getUserMedia: \").concat(JSON.stringify(i))),EP(\"debug\",[\"mediaDevices\",t],\"getUserMedia\",i);Wj(n,await navigator.mediaDevices.getUserMedia(i))}}var o,s;if(!e.video&&!e.audio)return n;let a={video:e.video,audio:e.audio},c=LP(\"MEDIA_DEVICE_CONSTRAINTS\");if(c)try{\"string\"==typeof c&&(c=JSON.parse(c)),a=function e(t,i){if(!FK(t)||!FK(i))return i;if(Array.isArray(t)&&!Array.isArray(i)||!Array.isArray(t)&&Array.isArray(i))return i;if(Array.isArray(i)&&Array.isArray(t)){const r=[...t];for(let n=0;n<i.length;n++)r[n]=e(t[n],i[n]);return r}{const r=EK({},t);for(const n in i)Object.prototype.hasOwnProperty.call(i,n)&&(Object.prototype.hasOwnProperty.call(t,n)?r[n]=e(t[n],i[n]):r[n]=i[n]);return r}}(a,c),hP(\"debug\",[\"mediaDevices\",t],\"merge configConstraints \".concat(JSON.stringify(c)))}catch(e){}JD.debug(\"[\".concat(t,\"] GetUserMedia\"),JSON.stringify(a)),EP(\"debug\",[\"mediaDevices\",t],\"getUserMedia\",a),oN();let d,u=null;(pN()||EN()||uN())&&(u=await Fj.lock());try{d=await navigator.mediaDevices.getUserMedia(a)}catch(e){throw u&&u(),e}return a.audio&&(Vj=!0),a.video&&(jj=!0),Wj(n,d),u&&u(),n}function Hj(e,t){switch(e){case\"Starting video failed\":case\"OverconstrainedError\":case\"TrackStartError\":return new QD(xD.MEDIA_OPTION_INVALID,\"\".concat(e,\": \").concat(t));case\"NotFoundError\":case\"DevicesNotFoundError\":return new QD(xD.DEVICE_NOT_FOUND,\"\".concat(e,\": \").concat(t));case\"NotSupportedError\":return new QD(xD.NOT_SUPPORTED,\"\".concat(e,\": \").concat(t));case\"NotReadableError\":return new QD(xD.NOT_READABLE,\"\".concat(e,\": \").concat(t));case\"InvalidStateError\":case\"NotAllowedError\":case\"PERMISSION_DENIED\":case\"PermissionDeniedError\":return new QD(xD.PERMISSION_DENIED,\"\".concat(e,\": \").concat(t));case\"ConstraintNotSatisfiedError\":return new QD(xD.CONSTRAINT_NOT_SATISFIED,\"\".concat(e,\": \").concat(t));default:return JD.error(\"getUserMedia unexpected error\",e),gP(\"error\",[],\"handleGetUserMediaError\",void 0,e),new QD(xD.UNEXPECTED_ERROR,\"\".concat(e,\": \").concat(t))}}function Wj(e,t){const i=e.getVideoTracks()[0],r=e.getAudioTracks()[0],n=t.getVideoTracks()[0],o=t.getAudioTracks()[0];o&&(r&&e.removeTrack(r),e.addTrack(o)),n&&(i&&e.removeTrack(i),e.addTrack(n))}const Yj=new class extends MD{get state(){return this._state}set state(e){e!==this._state&&(this.emit(sk.STATE_CHANGE,e),this._state=e)}constructor(){super(),MN(this,\"_state\",ok.IDLE),MN(this,\"isAccessMicrophonePermission\",!1),MN(this,\"isAccessCameraPermission\",!1),MN(this,\"lastAccessMicrophonePermission\",!1),MN(this,\"lastAccessCameraPermission\",!1),MN(this,\"checkdeviceMatched\",!1),MN(this,\"deviceInfoMap\",new Map),this.init().then(()=>{navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener(\"devicechange\",this.updateDevicesInfo.bind(this)),window.setInterval(()=>{(LP(\"ENUMERATE_DEVICES_INTERVAL\")||wN()&&yN())&&this.updateDevicesInfo()},LP(\"ENUMERATE_DEVICES_INTERVAL_TIME\"))}).catch(e=>JD.error(e.toString()))}async enumerateDevices(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices){return new QD(xD.NOT_SUPPORTED,\"enumerateDevices() not supported.\").throw()}const r=await navigator.mediaDevices.enumerateDevices(),n=this.checkMediaDeviceInfoIsOk(r);let o=!this.isAccessMicrophonePermission&&e,s=!this.isAccessCameraPermission&&t;n.audio&&(o=!1),n.video&&(s=!1);let a=null,c=null,d=null;if(!i&&(o||s)){if(Fj.isLocked){JD.debug(\"[device manager] wait GUM lock\");(await Fj.lock())(),JD.debug(\"[device manager] GUM unlock\")}if(Vj&&(o=!1,this.isAccessMicrophonePermission=!0),jj&&(s=!1,this.isAccessCameraPermission=!0),JD.debug(\"[device manager] check media device permissions\",e,t,o,s),o&&s){try{d=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===xD.PERMISSION_DENIED)throw t;JD.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0,this.isAccessMicrophonePermission=!0}else if(o){try{a=await navigator.mediaDevices.getUserMedia({audio:e})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===xD.PERMISSION_DENIED)throw t;JD.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessMicrophonePermission=!0}else if(s){try{c=await navigator.mediaDevices.getUserMedia({video:t})}catch(e){const t=Hj(e.name||e.code||e,e.message);if(t.code===xD.PERMISSION_DENIED)throw t;JD.warning(\"getUserMedia failed in getDevices\",t)}this.isAccessCameraPermission=!0}JD.debug(\"[device manager] mic permission\",e,\"cam permission\",t)}try{const e=await navigator.mediaDevices.enumerateDevices();return a&&a.getTracks().forEach(e=>e.stop()),c&&c.getTracks().forEach(e=>e.stop()),d&&d.getTracks().forEach(e=>e.stop()),a=null,c=null,d=null,e}catch(e){a&&a.getTracks().forEach(e=>e.stop()),c&&c.getTracks().forEach(e=>e.stop()),d&&d.getTracks().forEach(e=>e.stop()),a=null,c=null,d=null;return new QD(xD.ENUMERATE_DEVICES_FAILED,e.toString()).throw()}}async getRecordingDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter(e=>\"audioinput\"===e.kind)}async getCamerasDevices(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!1,!0,e)).filter(e=>\"videoinput\"===e.kind)}async getSpeakers(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(await this.enumerateDevices(!0,!1,e)).filter(e=>\"audiooutput\"===e.kind)}searchDeviceIdByName(e){let t=null;return this.deviceInfoMap.forEach(i=>{i.device.label===e&&(t=i.device.deviceId)}),t}async getDeviceById(e){const t=(await this.enumerateDevices(!0,!0,!0)).find(t=>t.deviceId===e);if(!t)throw new QD(xD.DEVICE_NOT_FOUND,\"deviceId: \".concat(e));return t}async init(){this.state=ok.INITING;try{await this.updateDevicesInfo(),this.state=ok.INITEND}catch(e){if(JD.warning(\"Device Detection functionality cannot start properly.\",e.toString()),this.state=ok.IDLE,!function(){if(\"boolean\"==typeof isSecureContext)return isSecureContext;return\"https:\"===location.protocol||\"file:\"===location.protocol||\"localhost\"===location.hostname||\"127.0.0.1\"===location.hostname||\"::1\"===location.hostname}()){new QD(xD.WEB_SECURITY_RESTRICT,\"Your context is limited by web security, please try using https protocol or localhost.\").throw()}throw e}}async updateDevicesInfo(){const e=await this.enumerateDevices(!0,!0,!0),t=Date.now(),i=[];if(e[0]&&e[0].label&&!1===this.checkdeviceMatched){this.checkdeviceMatched=!0;const t=e.find(e=>\"audioinput\"===e.kind&&\"default\"===e.deviceId),i=e.find(e=>\"audiooutput\"===e.kind&&\"default\"===e.deviceId);t&&i?i.groupId===t.groupId?JD.debug(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is the same group\")):JD.warning(\"[device-check] default input \".concat(t.label,\" and output \").concat(i.label,\" is not the same group\")):JD.debug(\"[device-check] default input or output not found\")}const r=this.checkMediaDeviceInfoIsOk(e);if(e.forEach(e=>{if(!e.deviceId)return;const r=this.deviceInfoMap.get(\"\".concat(e.kind,\"_\").concat(e.deviceId));if(\"ACTIVE\"!==(r?r.state:\"INACTIVE\")){const r={initAt:t,updateAt:t,device:e,state:\"ACTIVE\"};this.deviceInfoMap.set(\"\".concat(e.kind,\"_\").concat(e.deviceId),r),i.push(r)}r&&(r.updateAt=t)}),this.deviceInfoMap.forEach((e,r)=>{\"ACTIVE\"===e.state&&e.updateAt!==t&&(e.state=\"INACTIVE\",i.push(e))}),this.state!==ok.INITEND)return r.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(r.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));i.forEach(e=>{switch(e.device.kind){case\"audioinput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(sk.RECORDING_DEVICE_CHANGED,e);break;case\"videoinput\":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&this.emit(sk.CAMERA_DEVICE_CHANGED,e);break;case\"audiooutput\":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(sk.PLAYOUT_DEVICE_CHANGED,e)}}),r.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),r.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(e){const t=e.filter(e=>\"audioinput\"===e.kind),i=e.filter(e=>\"videoinput\"===e.kind),r={audio:!1,video:!1};for(const e of t)if(e.label&&e.deviceId){r.audio=!0;break}for(const e of i)if(e.label&&e.deviceId){r.video=!0;break}return r}};var Jj;let qj=mP(\"AudioElementPlayCenter\")(Jj=class{constructor(){MN(this,\"onAutoplayFailed\",void 0),MN(this,\"elementMap\",new Map),MN(this,\"elementStateMap\",new Map),MN(this,\"elementsNeedToResume\",[]),MN(this,\"sinkIdMap\",new Map),MN(this,\"autoResumeAfterInterruption\",()=>{Array.from(this.elementMap.entries()).forEach(e=>{let[t,i]=e;const r=this.elementStateMap.get(t),n=i.srcObject.getAudioTracks()[0];IN()?n&&\"live\"===n.readyState&&\"running\"===Tj.curState&&(JD.debug(\"auto resume after interruption for iOS 15\"),hP(\"debug\",[\"AudioElementPlayCenter\",t],\"auto resume after interruption for iOS15\"),i.pause(),i.play()):r&&\"paused\"===r&&n&&\"live\"===n.readyState&&\"running\"===Tj.curState&&(JD.debug(\"auto resume after interruption for iOS\"),hP(\"debug\",[\"AudioElementPlayCenter\",t],\"auto resume after interruption for iOS\"),i.play())})}),MN(this,\"autoResumeAfterInterruptionOnIOS15\",()=>{Array.from(this.elementMap.entries()).forEach(e=>{let[t,i]=e;const r=i.srcObject.getAudioTracks()[0];r&&\"live\"===r.readyState&&(JD.debug(\"auto resume after interruption inside autoResumeAfterInterruptionOnIOS15\"),gP(\"debug\",[\"AudioElementPlayCenter\",t],\"autoResumeAfterInterruptionOnIOS15\"),i.pause(),i.play())})}),this.autoResumeAudioElement(),Tj.on(_j.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Tj.on(_j.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15),Tj.on(_j.STATE_CHANGE,()=>{EN()&&\"suspended\"===Tj.prevState&&\"running\"===Tj.curState&&this.autoResumeAfterInterruption()})}async setSinkID(e,t){const i=this.elementMap.get(e);if(this.sinkIdMap.set(e,t),i)try{await i.setSinkId(t)}catch(e){throw new QD(xD.PERMISSION_DENIED,\"can not set sink id: \"+e.toString())}}play(e,t,i,r){if(this.elementMap.has(t))return;const n=document.createElement(\"audio\");n.autoplay=!0,n.srcObject=new MediaStream([e]),this.bindAudioElementEvents(t,n),this.elementMap.set(t,n),this.elementStateMap.set(t,qL.INIT),this.setVolume(t,i);const o=this.sinkIdMap.get(t);if(o)try{n.setSinkId(o).catch(e=>{JD.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString()),EP(\"warning\",[\"HTMLAudioElement\",t],\"setSinkId\",e.toString())})}catch(e){JD.warning(\"[\".concat(t,\"] set sink id failed\"),e.toString())}const s=n.play();s&&s.then&&s.catch(e=>{r&&pj.autoplayFailed(r,\"audio\",e.message,t),JD.warning(\"audio element play warning\",e.toString()),EP(\"warning\",[\"HTMLAudioElement\",t],\"play\",e.toString()),this.elementMap.has(t)&&\"NotAllowedError\"===e.name&&(JD.warning(\"detected audio element autoplay failed\"),gP(\"warning\",[\"AudioElementPlayCenter\",t],\"play\",e.toString()),this.elementsNeedToResume.push(n),DK(()=>{this.onAutoplayFailed&&this.onAutoplayFailed(),oj()}))})}updateTrack(e,t){const i=this.elementMap.get(e);i&&(i.srcObject=new MediaStream([t]))}isPlaying(e){return this.elementMap.has(e)}setVolume(e,t){const i=this.elementMap.get(e);i&&(t=Math.max(0,Math.min(100,t)),i.volume=t/100)}stop(e){const t=this.elementMap.get(e);if(this.sinkIdMap.delete(e),!t)return;const i=this.elementsNeedToResume.indexOf(t);this.elementsNeedToResume.splice(i,1),t.srcObject=null,t.remove(),this.elementMap.delete(e),this.elementStateMap.delete(e)}bindAudioElementEvents(e,t){Xj.forEach(i=>{t.addEventListener(i,t=>{const i=this.elementStateMap.get(e),r=\"pause\"===t.type?\"paused\":t.type;JD.debug(\"[\".concat(e,\"] audio-element-status change \").concat(i,\" => \").concat(r)),pP(\"debug\",[\"HTMLAudioElement\",e],\"statusChange\",\"\".concat(i,\" => \").concat(r)),this.elementStateMap.set(e,r)})})}getPlayerState(e){return this.elementStateMap.get(e)||\"uninit\"}autoResumeAudioElement(){const e=()=>{this.elementsNeedToResume.forEach(e=>{e.play().then(e=>{JD.debug(\"Auto resume audio element success\"),gP(\"debug\",[\"AudioElementPlayCenter\"],\"autoResumeAudioElement\")}).catch(e=>{JD.warning(\"Auto resume audio element failed!\",e),gP(\"warning\",[\"AudioElementPlayCenter\"],\"autoResumeAudioElement\",e.toString())})}),this.elementsNeedToResume=[]};new l_(e=>{document.body?e():window.addEventListener(\"load\",()=>e())}).then(()=>{bN()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0))})}})||Jj;const Xj=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\"],zj=new qj;function Zj(){return function(e,t,i){const r=i.value;return\"function\"==typeof r&&(i.value=function(){this._isClosed&&new QD(xD.INVALID_OPERATION,\"[\".concat(this.getTrackId(),\"] cannot operate a closed track\")).print(\"warning\");for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const n=r.apply(this,t);return n instanceof l_?new l_((e,t)=>{n.then(e).catch(t)}):n}),i}}var $j,eG,tG,iG,rG,nG,oG,sG,aG,cG,dG,uG,hG,AG,lG,pG,gG,EG,fG,mG,IG,_G,CG,SG,vG,TG,RG,yG,wG,bG,NG=ic(\"Array\").values,OG=Vl,DG=es,PG=Cn,LG=NG,kG=Array.prototype,BG={DOMTokenList:!0,NodeList:!0},MG=function(e){var t=e.values;return e===kG||PG(kG,e)&&t===kG.values||DG(BG,OG(e))?LG:t};function UG(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function xG(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?UG(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):UG(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class QG extends MD{constructor(e){super(),MN(this,\"name\",\"VideoProcessorDestination\"),MN(this,\"ID\",\"0\"),MN(this,\"_source\",void 0),MN(this,\"videoContext\",void 0),MN(this,\"inputTrack\",void 0),this.videoContext=e}get kind(){return\"video\"}get enabled(){return!0}pipe(){throw new QD(xD.NOT_SUPPORTED,\"VideoProcessor cannot pipe to any other Processor\")}unpipe(){throw new QD(xD.NOT_SUPPORTED,\"VideoProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}updateInput(e){if(e.context!==this.videoContext)throw new Error(\"ProcessorContext passed to VideoTrack.processorDestination doesn't match it's belonging VideoTrack's context.\\nProbably you are making pipeline like this:\\nvideoTrack1.pipe(processor).pipe(videoTrack2.processorDestination).\");e.track&&e.track!==this.inputTrack&&(this.videoContext.chained=!0,this.inputTrack=e.track,this.emit(mB.ON_TRACK,e.track))}reset(){this.inputTrack=void 0,this.videoContext.chained=!1,this.emit(mB.ON_TRACK,void 0)}}class FG extends MD{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t){super(),MN(this,\"constraintsMap\",new Map),MN(this,\"statsRegistry\",[]),MN(this,\"usageRegistry\",[]),MN(this,\"trackId\",void 0),MN(this,\"direction\",void 0),MN(this,\"_chained\",!1),this.trackId=e,this.direction=t}async getConstraints(){return await RK(this,IB.REQUEST_CONSTRAINTS)}async requestApplyConstraints(e,t){var i;return JD.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),yK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return JD.info(\"processor \".concat(e.name,\" requestRevertConstraints for \").concat(this.trackId)),this.constraintsMap.delete(e),yK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find(i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t)||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex(i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t);-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:r,cb:n}of this.statsRegistry)try{const o=n();e.push({processorID:t,processorName:i,type:r,stats:o})}catch(e){JD.error(new QD(xD.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find(t=>t.processorID===e.ID&&t.processorName===e.name)||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex(t=>t.processorID===e.ID&&t.processorName===e.name);-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof l_&&(i=await i),e.push(xG(xG({},i),{},{direction:this.direction}))}catch(e){JD.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class VG extends MD{constructor(e){super(),MN(this,\"name\",\"AudioProcessorDestination\"),MN(this,\"ID\",\"0\"),MN(this,\"inputTrack\",void 0),MN(this,\"inputNode\",void 0),MN(this,\"audioProcessorContext\",void 0),MN(this,\"_source\",void 0),this.audioProcessorContext=e}get kind(){return\"audio\"}get enabled(){return!0}pipe(){throw new QD(xD.NOT_SUPPORTED,\"AudioProcessorDestination cannot pipe to any other Processor\")}unpipe(){throw new QD(xD.NOT_SUPPORTED,\"AudioProcessor cannot unpipe to any other Processor\")}enable(){}disable(){}reset(){this.inputTrack=void 0,this.inputNode=void 0,this.audioProcessorContext.chained=!1,this.emit(mB.ON_TRACK,void 0),this.emit(mB.ON_NODE,void 0)}updateInput(e){if(e.context!==this.audioProcessorContext)throw new Error(\"ProcessorContext passed to AudioTrack.processorDestination doesn't match it's belonging AudioTrack's context.\\n        Probably you are making pipeline like this: audioTrack1.pipe(processor).pipe(audioTrack2.processorDestination).\");e.track&&this.inputTrack!==e.track&&(this.audioProcessorContext.chained=!0,this.inputTrack=e.track,this.emit(mB.ON_TRACK,this.inputTrack)),e.node&&this.inputNode!==e.node&&(this.audioProcessorContext.chained=!0,this.inputNode=e.node,this.emit(mB.ON_NODE,this.inputNode))}}class jG extends MD{set chained(e){this._chained=e}get chained(){return this._chained}constructor(e,t,i){super(),MN(this,\"constraintsMap\",new Map),MN(this,\"statsRegistry\",[]),MN(this,\"audioContext\",void 0),MN(this,\"trackId\",void 0),MN(this,\"direction\",void 0),MN(this,\"usageRegistry\",[]),MN(this,\"_chained\",!1),this.audioContext=e,this.trackId=t,this.direction=i}async getConstraints(){return RK(this,IB.REQUEST_CONSTRAINTS)}getAudioContext(){return this.audioContext}async requestApplyConstraints(e,t){var i;return JD.info(\"processor \".concat(t.name,\" requestApplyConstraints for \").concat(this.trackId)),e&&this.constraintsMap.set(t,e),yK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(i=this.constraintsMap).call(i)))}async requestRevertConstraints(e){var t;if(this.constraintsMap.has(e))return this.constraintsMap.delete(e),yK(this,IB.REQUEST_UPDATE_CONSTRAINTS,Array.from(MG(t=this.constraintsMap).call(t)))}registerStats(e,t,i){this.statsRegistry.find(i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t)||this.statsRegistry.push({processorName:e.name,processorID:e.ID,type:t,cb:i})}unregisterStats(e,t){const i=this.statsRegistry.findIndex(i=>i.processorID===e.ID&&i.processorName===e.name&&i.type===t);-1!==i&&this.statsRegistry.splice(i,1)}gatherStats(){const e=[];for(const{processorID:t,processorName:i,type:r,cb:n}of this.statsRegistry)try{const o=n();e.push({processorID:t,processorName:i,type:r,stats:o})}catch(e){JD.error(new QD(xD.UNEXPECTED_ERROR,e.message))}return e}registerUsage(e,t){this.usageRegistry.find(t=>t.processorID===e.ID&&t.processorName===e.name)||this.usageRegistry.push({processorID:e.ID,processorName:e.name,cb:t})}unregisterUsage(e){const t=this.usageRegistry.findIndex(t=>t.processorID===e.ID&&t.processorName===e.name);-1!==t&&this.usageRegistry.splice(t,1)}async gatherUsage(){const e=[];if(!this.chained)return[];for(const{cb:t}of this.usageRegistry)try{let i=t();i instanceof l_&&(i=await i),e.push(xG(xG({},i),{},{direction:this.direction}))}catch(e){JD.error(\"gather extension usage error\",e)}return e}getDirection(){return this.direction}}class GG extends MD{get isPlayed(){return!0}get isFreeze(){return!1}constructor(){super(),MN(this,\"context\",void 0),MN(this,\"processSourceNode\",void 0),MN(this,\"outputTrack\",void 0),MN(this,\"processedNode\",void 0),MN(this,\"clonedTrack\",void 0),MN(this,\"outputNode\",void 0),this.outputNode=new KG}setVolume(){}createOutputTrack(){throw new QD(xD.NOT_SUPPORTED,\"can not create output MediaStreamTrack when WebAudio disabled\")}getOriginVolumeLevel(){return 0}getAccurateVolumeLevel(){return 0}stopGetAudioBuffer(){}startGetAudioBuffer(){}play(){}stop(){}destroy(){}updateTrack(){}updateOriginTrack(){}createMediaStreamSourceNode(){}}class KG{disconnect(){}connect(){}}function HG(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function WG(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?HG(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):HG(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let YG=($j=mP(\"LocalAudioTrack\",\"getTrackId\"),eG=Zj(),tG=mj(\"LocalAudioTrack\",\"_enabledMutex\"),iG=lj({className:\"LocalAudioTrack\"}),rG=Zj(),nG=mj(\"LocalAudioTrack\",\"_enabledMutex\"),oG=lj({className:\"LocalAudioTrack\"}),sG=Zj(),aG=Zj(),cG=Zj(),dG=Zj(),uG=Zj(),$j((VV((AG=class extends Ij{get isPlaying(){return this._useAudioElement?zj.isPlaying(this.getTrackId()):this._source.isPlayed}constructor(e,t,i,r){super(e,i),MN(this,\"trackMediaType\",\"audio\"),MN(this,\"_encoderConfig\",void 0),MN(this,\"_source\",void 0),MN(this,\"_enabled\",!0),MN(this,\"_volume\",100),MN(this,\"_useAudioElement\",!1),MN(this,\"_bypassWebAudio\",!1),MN(this,\"processor\",void 0),MN(this,\"processorContext\",void 0),MN(this,\"processorDestination\",void 0),MN(this,\"_getOriginVolumeLevel\",void 0),this._encoderConfig=t,this._getOriginVolumeLevel=!!r,LP(\"DISABLE_WEBAUDIO\")?(this._source=new GG,this._useAudioElement=!0,this._bypassWebAudio=!0):(this._source=new kj(e,!1,this._getOriginVolumeLevel?e:void 0),LP(\"LOCAL_AUDIO_TRACK_USES_WEB_AUDIO\")||(this._useAudioElement=!0)),this.processorContext=new jG(this._source.context,this.getTrackId(),\"local\"),this.processorDestination=new VG(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(Sk.UPDATE_SOURCE,()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})})}setVolume(e){UL(e,\"volume\",0,1e3);const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_AUDIO_TRACK_SET_VOLUME,options:[this.getTrackId(),e]},300);this._volume=e,this._source.setVolume(e/100),this._useAudioElement&&zj.setVolume(this.getTrackId(),e);try{if(this._bypassWebAudio)return JD.debug(\"[\".concat(this.getTrackId(),\"] setVolume returned because no pass through WebAudio.\")),void t.onSuccess();const e=this._source.createOutputTrack();this._mediaStreamTrack!==e&&(this._mediaStreamTrack=e,yK(this,Zk.NEED_REPLACE_TRACK,this).then(()=>{JD.debug(\"[\".concat(this.getTrackId(),\"] replace web audio track success\")),hP(\"debug\",this,\"replace web audio track success\")}).catch(e=>{JD.warning(\"[\".concat(this.getTrackId(),\"] replace web audio track failed\"),e),hP(\"warning\",this,\"replace web audio track failed \".concat(e.toString()))}))}catch(e){}t.onSuccess()}getVolumeLevel(){return this._muted&&this.enabled&&this._getOriginVolumeLevel?this._source.getOriginVolumeLevel():this._source.getAccurateVolumeLevel()}async setPlaybackDevice(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),e]});if(!this._useAudioElement)throw new QD(xD.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");try{await zj.setSinkID(this.getTrackId(),e)}catch(e){throw t.onError(e),e}t.onSuccess()}async setEnabled(e,t,i){return this._setEnabled(e,t,i)}async _setEnabled(e,t,i){if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(JD.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),gP(\"info\",this,\"setEnabled\",e),e){this._originMediaStreamTrack.enabled=!0;try{i||(this._enabled=!0),await yK(this,Zk.NEED_ENABLE_TRACK,this),JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled to \").concat(e,\" success\")),gP(\"info\",this,\"setEnabled\",e,\"success\")}catch(t){throw i||(this._enabled=!1),JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}}else{this._originMediaStreamTrack.enabled=!1,i||(this._enabled=!1);try{await yK(this,Zk.NEED_DISABLE_TRACK,this)}catch(t){throw i||(this._enabled=!0),JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),t.toString()),gP(\"info\",this,\"setEnabled\",e,t.toString()),t}}}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,JD.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),gP(\"debug\",this,\"setMuted\",e),e?await yK(this,Zk.NEED_MUTE_TRACK,this):await yK(this,Zk.NEED_UNMUTE_TRACK,this))}getStats(){kK(()=>{JD.warning(\"[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead\"),hP(\"warning\",this,\"LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead\")},\"localAudioTrackGetStatsWarning\");const e=wK(this,Zk.GET_STATS);return e||WG({},bk)}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(Sk.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(Sk.ON_AUDIO_BUFFER),this._source.on(Sk.ON_AUDIO_BUFFER,t=>e(t))}play(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});JD.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),gP(\"debug\",this,\"play\"),this._useAudioElement?(JD.debug(\"[\".concat(this.getTrackId(),\"] start audio playback in element\")),hP(\"debug\",this,\"start audio playback in element\"),zj.play(this._mediaStreamTrack,this.getTrackId(),this._volume)):this._source.play(),e.onSuccess()}stop(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_AUDIO_TRACK_STOP,options:[this.getTrackId()]});JD.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),gP(\"debug\",this,\"stop\"),this._useAudioElement?zj.stop(this.getTrackId()):this._source.stop(),e.onSuccess()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe(),this._source.destroy()}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];JD.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),gP(\"debug\",this,\"_updatePlayerSource\"),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&zj.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(e,t){this._originMediaStreamTrack!==e&&(this._originMediaStreamTrack.removeEventListener(\"ended\",this._handleTrackEnded),e.addEventListener(\"ended\",this._handleTrackEnded),t&&this._originMediaStreamTrack.stop(),this._originMediaStreamTrack=e,this._muted&&(this._originMediaStreamTrack.enabled=!1),this.processor&&this.processor.updateInput({track:e,context:this.processorContext}),this._mediaStreamTrack!==this._source.outputTrack?(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await yK(this,Zk.NEED_REPLACE_TRACK,this)):this._source.updateTrack(this._originMediaStreamTrack),this._getOriginVolumeLevel&&this._source.updateOriginTrack(e))}renewMediaStreamTrack(e){return l_.resolve(void 0)}pipe(e){if(this._bypassWebAudio)throw new QD(xD.INVALID_OPERATION,\"Can not process AudioTrack when bypassWebAudio set to true.\");if(this.processor===e)return e;if(e._source)throw new QD(xD.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(mB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e),await yK(this,Zk.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await yK(this,Zk.NEED_REPLACE_TRACK,this))}),this.processorDestination.on(mB.ON_NODE,e=>{this._source.processedNode=e})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(mB.ON_TRACK),this.processorDestination.removeAllListeners(mB.ON_NODE)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(IB.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(IB.REQUEST_CONSTRAINTS)}}).prototype,\"setPlaybackDevice\",[eG],Object.getOwnPropertyDescriptor(AG.prototype,\"setPlaybackDevice\"),AG.prototype),VV(AG.prototype,\"setEnabled\",[tG,iG,rG],Object.getOwnPropertyDescriptor(AG.prototype,\"setEnabled\"),AG.prototype),VV(AG.prototype,\"setMuted\",[nG,oG,sG],Object.getOwnPropertyDescriptor(AG.prototype,\"setMuted\"),AG.prototype),VV(AG.prototype,\"getStats\",[aG],Object.getOwnPropertyDescriptor(AG.prototype,\"getStats\"),AG.prototype),VV(AG.prototype,\"setAudioFrameCallback\",[cG],Object.getOwnPropertyDescriptor(AG.prototype,\"setAudioFrameCallback\"),AG.prototype),VV(AG.prototype,\"play\",[dG],Object.getOwnPropertyDescriptor(AG.prototype,\"play\"),AG.prototype),VV(AG.prototype,\"stop\",[uG],Object.getOwnPropertyDescriptor(AG.prototype,\"stop\"),AG.prototype),hG=AG))||hG),JG=(lG=mP(\"MicrophoneAudioTrack\",\"getTrackId\"),pG=Zj(),gG=mj(\"MicrophoneAudioTrack\",\"_enabledMutex\"),EG=lj({className:\"MicrophoneAudioTrack\"}),fG=Zj(),lG((VV((IG=class extends YG{constructor(e,t,i,r){super(e,t.encoderConfig?DP(t.encoderConfig):{},r,LP(\"GET_VOLUME_OF_MUTED_AUDIO_TRACK\")),MN(this,\"_config\",void 0),MN(this,\"_deviceName\",\"default\"),MN(this,\"_constraints\",void 0),MN(this,\"_originalConstraints\",void 0),MN(this,\"_enabled\",!0),fP(\"info\",this,\"constructor\",{trackId:r,deviceId:e.label,constraints:i}),this._config=t,this._constraints=i,this._originalConstraints=i,this._deviceName=e.label,\"boolean\"==typeof t.bypassWebAudio&&(this._bypassWebAudio=t.bypassWebAudio),IN()&&Tj.bindInterruptDetectorTrack(this),this.bindProcessorContextEvents()}async setDevice(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.MIC_AUDIO_TRACK_SET_DEVICE,options:[this.getTrackId(),e]});if(JD.info(\"[\".concat(this.getTrackId(),\"] start set device to \").concat(e)),gP(\"info\",this,\"setDevice\",e),this._enabled)try{const t=await Yj.getDeviceById(e),i={};i.audio=WG({},this._constraints),i.audio.deviceId={exact:e},this._originMediaStreamTrack.stop();let r=null;try{r=await Gj(i,this.getTrackId())}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),t.toString()),gP(\"error\",this,\"setDevice\",e,t.toString()),r=await Gj({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(r.getAudioTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(r.getAudioTracks()[0],!1),this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(i){throw t.onError(i),JD.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),i.toString()),gP(\"error\",this,\"setDevice\",e,i.toString()),i}else try{const t=await Yj.getDeviceById(e);this._deviceName=t.label,this._config.microphoneId=e,this._constraints.deviceId={exact:e}}catch(i){throw t.onError(i),JD.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),i.toString()),gP(\"error\",this,\"setDevice\",e,i.toString()),i}t.onSuccess(),JD.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e,\" success\")),gP(\"info\",this,\"setDevice\",e,\"success\")}async setEnabled(e,t,i){if(t)return JD.debug(\"[\".concat(this.getTrackId(),\"] setEnabled false (do not close microphone)\")),hP(\"debug\",this,\"setEnabled false (do not close microphone)\"),await super._setEnabled(e);if(!i){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(JD.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),gP(\"info\",this,\"setEnabled\",e),!e){var r;this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),null===(r=this._source.clonedTrack)||void 0===r||r.stop(),i||(this._enabled=!1);try{await yK(this,Zk.NEED_DISABLE_TRACK,this)}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled false failed\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}return}const n=WG({},this._constraints),o=Yj.searchDeviceIdByName(this._deviceName);o&&!n.deviceId&&(n.deviceId=o);try{i||(this._enabled=!0);const e=await Gj({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),await yK(this,Zk.NEED_ENABLE_TRACK,this)}catch(t){throw i||(this._enabled=!1),JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled true failed\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled success\")),gP(\"info\",this,\"setEnabled\",e,\"success\")}close(){super.close(),IN()&&Tj.unbindInterruptDetectorTrack(this)}onTrackEnded(){if((EN()||vN())&&this._enabled&&!this._isClosed&&Tj.duringInterruption){const e=async()=>{Tj.off(_j.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(JD.debug(\"[\".concat(this.getTrackId(),\"] try capture microphone media device for interrupted iOS device.\")),hP(\"debug\",this,\"try capture microphone media device for interrupted iOS device\"),await this.setEnabled(!1),await this.setEnabled(!0))};Tj.on(_j.IOS_INTERRUPTION_END,e)}else JD.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),pP(\"debug\",[\"MediaStreamTrack\",this.getTrackId()],\"ended\"),this.emit(iB.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=Yj.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId=i),this._constraints=t,this._enabled){this._originMediaStreamTrack.stop();const e=await Gj({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!0)}}bindProcessorContextEvents(){this.processorContext.on(IB.REQUEST_UPDATE_CONSTRAINTS,async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}}),this.processorContext.on(IB.REQUEST_CONSTRAINTS,async e=>{e(this._originMediaStreamTrack.getSettings())})}}).prototype,\"setDevice\",[pG],Object.getOwnPropertyDescriptor(IG.prototype,\"setDevice\"),IG.prototype),VV(IG.prototype,\"setEnabled\",[gG,EG,fG],Object.getOwnPropertyDescriptor(IG.prototype,\"setEnabled\"),IG.prototype),mG=IG))||mG),qG=(_G=mP(\"BufferSourceAudioTrack\",\"getTrackId\"),CG=Zj(),SG=Zj(),vG=Zj(),TG=Zj(),RG=Zj(),_G((VV((wG=class extends YG{constructor(e,t,i,r){super(t.createOutputTrack(),i,r),MN(this,\"source\",void 0),MN(this,\"_bufferSource\",void 0),fP(\"info\",this,\"constructor\",{trackId:r}),this.source=e,this._bufferSource=t,this._bufferSource.on(Sk.AUDIO_SOURCE_STATE_CHANGE,e=>{this.emit(iB.SOURCE_STATE_CHANGE,e)});try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.BUFFER_AUDIO_TRACK_START,options:[this.getTrackId(),e,this.duration]});e&&this._bufferSource.updateOptions(e),this._bufferSource.startProcessAudioBuffer(),t.onSuccess()}pauseProcessAudioBuffer(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.BUFFER_AUDIO_TRACK_PAUSE,options:[this.getTrackId()]});this._bufferSource.pauseProcessAudioBuffer(),e.onSuccess()}seekAudioBuffer(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.BUFFER_AUDIO_TRACK_SEEK,options:[this.getTrackId()]});this._bufferSource.seekAudioBuffer(e),t.onSuccess()}resumeProcessAudioBuffer(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.BUFFER_AUDIO_TRACK_RESUME,options:[this.getTrackId()]});this._bufferSource.resumeProcessAudioBuffer(),e.onSuccess()}stopProcessAudioBuffer(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.BUFFER_AUDIO_TRACK_STOP,options:[this.getTrackId()]});this._bufferSource.stopProcessAudioBuffer(),e.onSuccess()}}).prototype,\"startProcessAudioBuffer\",[CG],Object.getOwnPropertyDescriptor(wG.prototype,\"startProcessAudioBuffer\"),wG.prototype),VV(wG.prototype,\"pauseProcessAudioBuffer\",[SG],Object.getOwnPropertyDescriptor(wG.prototype,\"pauseProcessAudioBuffer\"),wG.prototype),VV(wG.prototype,\"seekAudioBuffer\",[vG],Object.getOwnPropertyDescriptor(wG.prototype,\"seekAudioBuffer\"),wG.prototype),VV(wG.prototype,\"resumeProcessAudioBuffer\",[TG],Object.getOwnPropertyDescriptor(wG.prototype,\"resumeProcessAudioBuffer\"),wG.prototype),VV(wG.prototype,\"stopProcessAudioBuffer\",[RG],Object.getOwnPropertyDescriptor(wG.prototype,\"stopProcessAudioBuffer\"),wG.prototype),yG=wG))||yG),XG=mP(\"MixingAudioTrack\",\"getTrackId\")(bG=class extends YG{get isActive(){for(const e of this.trackList)if(e._enabled&&!e._isClosed&&!e.muted)return!0;return!1}constructor(){const e=yj().createMediaStreamDestination();super(e.stream.getAudioTracks()[0],void 0,_K(8,\"track-mix-\")),MN(this,\"trackList\",void 0),MN(this,\"destNode\",void 0);try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(e){}this.destNode=e,this.trackList=[]}hasAudioTrack(e){return-1!==this.trackList.indexOf(e)}addAudioTrack(e){if(-1!==this.trackList.indexOf(e))return JD.debug(\"track \".concat(e.getTrackId(),\" is already added\")),void hP(\"debug\",this,\"track already added\");JD.debug(\"add \".concat(e.getTrackId(),\" to mixing track\")),gP(\"debug\",this,\"addAudioTrack\",e.getTrackId()),e._source.outputNode.connect(this.destNode),this.trackList.push(e),this.updateEncoderConfig()}removeAudioTrack(e){if(-1!==this.trackList.indexOf(e)){JD.debug(\"remove \".concat(e.getTrackId(),\" from mixing track\")),gP(\"debug\",this,\"removeAudioTrack\",e.getTrackId());try{e._source.outputNode.disconnect(this.destNode)}catch(e){}NK(this.trackList,e),this.updateEncoderConfig()}}updateEncoderConfig(){const e={};this.trackList.forEach(t=>{t._encoderConfig&&((t._encoderConfig.bitrate||0)>(e.bitrate||0)&&(e.bitrate=t._encoderConfig.bitrate),(t._encoderConfig.sampleRate||0)>(e.sampleRate||0)&&(e.sampleRate=t._encoderConfig.sampleRate),(t._encoderConfig.sampleSize||0)>(e.sampleSize||0)&&(e.sampleSize=t._encoderConfig.sampleSize),t._encoderConfig.stereo&&(e.stereo=!0))}),this._encoderConfig=e}})||bG;class zG extends MD{constructor(){super(...arguments),MN(this,\"resultStorage\",new Map)}setLocalAudioStats(e,t,i){this.record(\"AUDIO_INPUT_LEVEL_TOO_LOW\",e,this.checkAudioInputLevel(i,t)),this.record(\"SEND_AUDIO_BITRATE_TOO_LOW\",e,this.checkSendAudioBitrate(i,t))}setLocalVideoStats(e,t,i){this.record(\"SEND_VIDEO_BITRATE_TOO_LOW\",e,this.checkSendVideoBitrate(i,t)),this.record(\"FRAMERATE_INPUT_TOO_LOW\",e,this.checkFramerateInput(i,t)),this.record(\"FRAMERATE_SENT_TOO_LOW\",e,this.checkFramerateSent(i))}setRemoteAudioStats(e,t){const i=e.getUserId();this.record(\"AUDIO_OUTPUT_LEVEL_TOO_LOW\",i,this.checkAudioOutputLevel(t))}setRemoteVideoStats(e,t){const i=e.getUserId();this.record(\"RECV_VIDEO_DECODE_FAILED\",i,this.checkVideoDecode(t))}record(e,t,i){this.resultStorage.has(e)||this.resultStorage.set(e,{result:[],isPrevNormal:!0});const r=this.resultStorage.get(e);if(r&&(r.result.push(i),r.result.length>=5)){const i=r.result.includes(!0);r.isPrevNormal&&!i&&this.emit(\"exception\",ZG[e],e,t),!r.isPrevNormal&&i&&this.emit(\"exception\",ZG[e]+2e3,e+\"_RECOVER\",t),r.isPrevNormal=i,r.result=[]}}checkAudioOutputLevel(e){return!(e.receiveBitrate>0&&0===e.receiveLevel)}checkAudioInputLevel(e,t){return t instanceof XG&&!t.isActive||(!!t.muted||0!==e.sendVolumeLevel)}checkFramerateInput(e,t){let i=null;t._encoderConfig&&t._encoderConfig.frameRate&&(i=aK(t._encoderConfig.frameRate));const r=e.captureFrameRate;return!i||!r||!(i>10&&r<5||i<10&&i>=5&&r<=1)}checkFramerateSent(e){return!(e.captureFrameRate&&e.sendFrameRate&&e.captureFrameRate>5&&e.sendFrameRate<=1)}checkSendVideoBitrate(e,t){return!!t.muted||0!==e.sendBitrate}checkSendAudioBitrate(e,t){return t instanceof XG&&!t.isActive||(!!t.muted||0!==e.sendBitrate)}checkVideoDecode(e){return 0===e.receiveBitrate||0!==e.decodeFrameRate}}const ZG={FRAMERATE_INPUT_TOO_LOW:1001,FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};const $G=new class{markSubscribeStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t))}markPublishStart(e,t){performance.mark(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t))}measureFromSubscribeStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/subscribe-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}measureFromPublishStart(e,t){const i=performance.getEntriesByName(\"agora-web-sdk/\".concat(e,\"/publish-\").concat(t));if(i.length>0){const e=i[i.length-1];return Math.round(performance.now()-e.startTime)}return 0}};function eK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function tK(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?eK(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):eK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class iK{constructor(e){MN(this,\"store\",void 0),MN(this,\"onStatsException\",void 0),MN(this,\"onUploadPublishDuration\",void 0),MN(this,\"localStats\",new Map),MN(this,\"remoteStats\",new Map),MN(this,\"updateStatsInterval\",void 0),MN(this,\"trafficStats\",void 0),MN(this,\"trafficStatsPeerList\",[]),MN(this,\"uplinkStats\",void 0),MN(this,\"exceptionMonitor\",void 0),MN(this,\"p2pChannel\",void 0),MN(this,\"updateStats\",()=>{this.p2pChannel&&(this.updateRemoteStats(this.p2pChannel),this.updateLocalStats(this.p2pChannel))}),this.store=e,this.updateStatsInterval=window.setInterval(this.updateStats,1e3),this.exceptionMonitor=new zG,this.exceptionMonitor.on(\"exception\",(e,t,i)=>{this.onStatsException&&this.onStatsException(e,t,i)})}reset(){this.localStats=new Map,this.remoteStats=new Map,this.trafficStats=void 0,this.trafficStatsPeerList=[],this.uplinkStats=void 0}getLocalAudioTrackStats(){return this.localStats.get(lB.LocalAudioTrack)||tK({},bk)}getLocalVideoTrackStats(){return this.localStats.get(lB.LocalVideoTrack)||tK({},Nk)}getRemoteAudioTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find(t=>t.peer_uid===e);return i&&(t.publishDuration=i.B_ppad+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var r;const n=null===(r=this.remoteStats.get(e))||void 0===r?void 0:r.audioStats;n&&(i[e]=t(e,n))}else Array.from(this.remoteStats.entries()).forEach(e=>{let[r,{audioStats:n}]=e;n&&(i[r]=t(r,n))});return i}getRemoteNetworkQualityStats(e){const t={};if(e){var i;const r=null===(i=this.remoteStats.get(e))||void 0===i?void 0:i.networkStats;r&&(t[e]=r)}else Array.from(this.remoteStats.entries()).forEach(e=>{let[i,{networkStats:r}]=e;r&&(t[i]=r)});return t}getRemoteVideoTrackStats(e){const t=(e,t)=>{if(!this.trafficStats)return t;const i=this.trafficStats.peer_delay.find(t=>t.peer_uid===e);return i&&(t.publishDuration=i.B_ppvd+(Date.now()-this.trafficStats.timestamp)),t},i={};if(e){var r;const n=null===(r=this.remoteStats.get(e))||void 0===r?void 0:r.videoStats;n&&(i[e]=t(e,n))}else Array.from(this.remoteStats.entries()).forEach(e=>{let[r,{videoStats:n}]=e;n&&(i[r]=t(r,n))});return i}getRTCStats(){let e=0,t=0,i=0,r=0;const n=this.localStats.get(lB.LocalAudioTrack);n&&(e+=n.sendBytes,t+=n.sendBitrate);const o=this.localStats.get(lB.LocalVideoTrack);o&&(e+=o.sendBytes,t+=o.sendBitrate);const s=this.localStats.get(lB.LocalVideoLowTrack);s&&(e+=s.sendBytes,t+=s.sendBitrate),this.remoteStats.forEach(e=>{let{audioStats:t,videoStats:n}=e;t&&(i+=t.receiveBytes,r+=t.receiveBitrate),n&&(i+=n.receiveBytes,r+=n.receiveBitrate)});let a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:t,SendBytes:e,RecvBytes:i,RecvBitrate:r,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1e3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}addLocalStats(e){this.localStats.set(e,void 0)}removeLocalStats(e){e?this.localStats.delete(e):this.localStats.clear()}addRemoteStats(e){this.remoteStats.set(e,{})}removeRemoteStats(e){e?this.remoteStats.delete(e):this.remoteStats.clear()}addP2PChannel(e){this.p2pChannel=e}updateTrafficStats(e){e.peer_delay=e.peer_delay.filter(e=>void 0!==e.B_ppad||void 0!==e.B_ppvd);e.peer_delay.filter(e=>-1===this.trafficStatsPeerList.indexOf(e.peer_uid)).forEach(e=>{var t;const i=null===(t=this.p2pChannel)||void 0===t?void 0:t.getRemoteMedia(e.peer_uid),r=null!=i&&i.videoSSRC?$G.measureFromSubscribeStart(this.store.clientId,i.videoSSRC):0,n=null!=i&&i.audioSSRC?$G.measureFromSubscribeStart(this.store.clientId,i.audioSSRC):0;void 0!==e.B_ppad&&void 0!==e.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(e.peer_uid,e.B_ppad,e.B_ppvd,r>n?r:n),this.trafficStatsPeerList.push(e.peer_uid))}),this.trafficStats=e}updateUplinkStats(e){this.uplinkStats&&this.uplinkStats.B_fir!==e.B_fir&&JD.debug(\"[\".concat(this.store.clientId,\"]: Period fir changes to \").concat(e.B_fir)),this.uplinkStats=e}static isRemoteVideoFreeze(e,t,i){if(!e)return!1;const r=!!i&&t.framesDecodeFreezeTime>i.framesDecodeFreezeTime,n=!i||t.framesDecodeCount>i.framesDecodeCount;return r||!n}static isRemoteAudioFreeze(e){return!!e&&e._isFreeze()}isLocalVideoFreeze(e){return!(!e.inputFrame||!e.sentFrame)&&(e.inputFrame.frameRate>5&&e.sentFrame.frameRate<3)}updateLocalStats(e){Array.from(this.localStats.entries()).forEach(t=>{let[i,r]=t;switch(i){case lB.LocalVideoTrack:case lB.LocalVideoLowTrack:{const t=r,n=tK({},Nk),o=e.getStats(),s=e.getLocalMedia(i);if(o){const i=o.videoSend.find(e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId));if(i){const r=e.getLocalVideoSize(),o=e.getEncoderConfig(lB.LocalVideoTrack);\"H264\"!==i.codec&&\"VP8\"!==i.codec&&\"VP9\"!==i.codec&&\"AV1X\"!==i.codec&&\"AV1\"!==i.codec||(n.codecType=i.codec),n.sendBytes=i.bytes,n.sendBitrate=t?8*Math.max(0,n.sendBytes-t.sendBytes):0,i.inputFrame?(n.captureFrameRate=i.inputFrame.frameRate,n.captureResolutionHeight=i.inputFrame.height,n.captureResolutionWidth=i.inputFrame.width):r&&(n.captureResolutionWidth=r.width,n.captureResolutionHeight=r.height),i.sentFrame?(n.sendFrameRate=i.sentFrame.frameRate,n.sendResolutionHeight=i.sentFrame.height,n.sendResolutionWidth=i.sentFrame.width):r&&(n.sendResolutionWidth=r.width,n.sendResolutionHeight=r.height),i.avgEncodeMs&&(n.encodeDelay=i.avgEncodeMs),o&&o.bitrateMax&&(n.targetSendBitrate=1e3*o.bitrateMax),n.sendPackets=i.packets,n.sendPacketsLost=i.packetsLost,n.totalDuration=t?t.totalDuration+1:1,n.totalFreezeTime=t?t.totalFreezeTime:0,this.isLocalVideoFreeze(i)&&(n.totalFreezeTime+=1)}this.trafficStats&&(n.sendPacketsLost=this.trafficStats.B_pvlr4/100)}this.localStats.set(i,n),n&&s&&this.exceptionMonitor.setLocalVideoStats(this.store.uid,s.track,n);break}case lB.LocalAudioTrack:{const t=r,n=tK({},bk),o=e.getStats(),s=e.getLocalMedia(i);if(o){const i=o.audioSend.find(e=>e.ssrc===(null==s?void 0:s.ssrcs[0].ssrcId));if(i){if(\"opus\"!==i.codec&&\"aac\"!==i.codec&&\"PCMU\"!==i.codec&&\"PCMA\"!==i.codec&&\"G722\"!==i.codec||(n.codecType=i.codec),i.inputLevel)n.sendVolumeLevel=Math.round(32767*i.inputLevel);else{const t=e.getLocalAudioVolume();t&&(n.sendVolumeLevel=Math.round(32767*t))}n.sendBytes=i.bytes,n.sendPackets=i.packets,n.sendPacketsLost=i.packetsLost,n.sendBitrate=t?8*Math.max(0,n.sendBytes-t.sendBytes):0}}this.trafficStats&&(n.sendPacketsLost=this.trafficStats.B_pvlr4/100),this.localStats.set(lB.LocalAudioTrack,n),n&&s&&this.exceptionMonitor.setLocalAudioStats(this.store.uid,s.track,n);break}}})}updateRemoteStats(e){Array.from(this.remoteStats.entries()).forEach(t=>{let[i,{videoStats:r,audioStats:n,videoPcStats:o}]=t;const s=n,a=r,c=o,d=tK({},Ok),u=tK({},Pk),h=tK({},Dk),{audioTrack:A,videoTrack:l,audioSSRC:p,videoSSRC:g}=e.getRemoteMedia(i),E=e.getStats(),f=null==E?void 0:E.audioRecv.find(e=>e.ssrc===p),m=null==E?void 0:E.videoRecv.find(e=>e.ssrc===g),I=this.trafficStats&&this.trafficStats.peer_delay.find(e=>e.peer_uid===i);if(f&&(\"opus\"!==f.codec&&\"aac\"!==f.codec&&\"PCMU\"!==f.codec&&\"PCMA\"!==f.codec&&\"G722\"!==f.codec||(d.codecType=f.codec),f.outputLevel?d.receiveLevel=Math.round(32767*f.outputLevel):A&&(d.receiveLevel=Math.round(32767*A.getVolumeLevel())),d.receiveBytes=f.bytes,d.receivePackets=f.packets,d.receivePacketsLost=f.packetsLost,d.packetLossRate=d.receivePacketsLost/(d.receivePackets+d.receivePacketsLost),d.receiveBitrate=s?8*Math.max(0,d.receiveBytes-s.receiveBytes):0,d.totalDuration=s?s.totalDuration+1:1,d.totalFreezeTime=s?s.totalFreezeTime:0,d.freezeRate=d.totalFreezeTime/d.totalDuration,d.receiveDelay=f.jitterBufferMs,d.totalDuration>10&&iK.isRemoteAudioFreeze(A)&&(d.totalFreezeTime+=1)),m){\"H264\"!==m.codec&&\"VP8\"!==m.codec&&\"VP9\"!==m.codec&&\"AV1X\"!==m.codec&&\"AV1\"!==m.codec||(u.codecType=m.codec),u.receiveBytes=m.bytes,u.receiveBitrate=a?8*Math.max(0,u.receiveBytes-a.receiveBytes):0,u.decodeFrameRate=m.decodeFrameRate<0?0:m.decodeFrameRate,u.renderFrameRate=m.decodeFrameRate<0?0:m.decodeFrameRate,m.outputFrame&&(u.renderFrameRate=m.outputFrame.frameRate),m.receivedFrame?(u.receiveFrameRate=m.receivedFrame.frameRate,u.receiveResolutionHeight=m.receivedFrame.height,u.receiveResolutionWidth=m.receivedFrame.width):l&&(u.receiveResolutionHeight=l._videoHeight||0,u.receiveResolutionWidth=l._videoWidth||0),void 0!==m.framesRateFirefox&&(u.receiveFrameRate=Math.round(m.framesRateFirefox)),u.receivePackets=m.packets,u.receivePacketsLost=m.packetsLost,u.packetLossRate=u.receivePacketsLost/(u.receivePackets+u.receivePacketsLost),u.totalDuration=a?a.totalDuration+1:1,u.totalFreezeTime=a?a.totalFreezeTime:0,u.receiveDelay=m.jitterBufferMs||0;const t=!!g&&e.getRemoteVideoIsReady(g);l&&t&&iK.isRemoteVideoFreeze(l,m,c)&&(u.totalFreezeTime+=1),u.freezeRate=u.totalFreezeTime/u.totalDuration}I&&(d.end2EndDelay=I.B_ad,u.end2EndDelay=I.B_vd,d.transportDelay=I.B_ed,u.transportDelay=I.B_ed,d.currentPacketLossRate=I.B_ealr4/100,u.currentPacketLossRate=I.B_evlr4/100,h.uplinkNetworkQuality=I.B_punq?I.B_punq:0,h.downlinkNetworkQuality=I.B_pdnq?I.B_pdnq:0),this.remoteStats.set(i,{audioStats:d,videoStats:u,videoPcStats:m,networkStats:h}),A&&this.exceptionMonitor.setRemoteAudioStats(A,d),l&&this.exceptionMonitor.setRemoteVideoStats(l,u)})}}function rK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function nK(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?rK(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):rK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function oK(e){return e.match(/^[\\.\\:\\d]+$/)?\"\".concat(e.replace(/[^\\d]/g,\"-\"),\".\").concat(LP(\"TURN_DOMAIN\")):(JD.info(\"Cannot recognized as IP address \".concat(e,\". Used As Host instead\")),e)}function sK(e,t){var i,r;const n=LP(\"GATEWAY_DOMAINS\");let o=n[1]&&-1!==t.indexOf(n[1])?1:0;e.addresses=e.addresses||[];const s=e.addresses.map(e=>e.domain_prefix?{address:\"\".concat(e.domain_prefix,\".\").concat(n[o++%n.length],\":\").concat(e.port)}:e.ip.match(/^[\\.\\:\\d]+$/)?{ip:e.ip,port:e.port,address:\"\".concat(e.ip.replace(/[^\\d]/g,\"-\"),\".\").concat(n[o++%n.length],\":\").concat(e.port)}:(JD.info(\"Cannot recognized as IP address \".concat(e.ip,\". Used As Host instead\")),{ip:e.ip,port:e.port,address:\"\".concat(e.ip,\":\").concat(e.port)}));if(null!==(i=e.detail)&&void 0!==i&&i[18]&&\"string\"==typeof(null===(r=e.detail)||void 0===r?void 0:r[18])){const t=e.detail[18],i=null==t?void 0:t.split(\";\");for(let e=0;e<i.length;e++){var a;const t=Gb(a=i[e]).call(a);s[e]&&t&&(s[e].ip6=t)}}return{gatewayAddrs:s,uid:e.uid,cid:e.cid,cert:e.cert,vid:e.detail&&e.detail[8],uni_lbs_ip:e.detail&&e.detail[1],res:e,csIp:e.detail&&e.detail[502]}}function aK(e){return\"number\"==typeof e?e:e.exact||e.ideal||e.max||e.min||0}function cK(e){const t=e._encoderConfig;if(!t)return{};const i={resolution:t.width&&t.height?\"\".concat(aK(t.width),\"x\").concat(aK(t.height)):void 0,maxVideoBW:t.bitrateMax,minVideoBW:t.bitrateMin};return\"number\"==typeof t.frameRate?(i.maxFrameRate=t.frameRate,i.minFrameRate=t.frameRate):t.frameRate&&(i.maxFrameRate=t.frameRate.max||t.frameRate.ideal||t.frameRate.exact||t.frameRate.min,i.minFrameRate=t.frameRate.min||t.frameRate.ideal||t.frameRate.exact||t.frameRate.max),i}function dK(e,t,i){var r;const n=t.videoSend.find(t=>t.ssrc===e);if(!n)return null;const o=null==i||null===(r=i.videoSend.find(t=>t.ssrc===e))||void 0===r?void 0:r.inputFrame,s={id:_K(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:n.ssrc.toString()};return n.inputFrame&&(o&&n.inputFrame.height===o.height||(s.A_fhi=n.inputFrame.height?n.inputFrame.height.toString():\"0\"),o&&n.inputFrame.width===o.width||(s.A_fwi=n.inputFrame.width?n.inputFrame.width.toString():\"0\"),o&&n.inputFrame.frameRate===o.frameRate||(s.A_fri=n.inputFrame.frameRate?n.inputFrame.frameRate.toString():\"0\")),s}function uK(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0}function hK(e,t){let i,r,n=void 0;switch(t){case NF.CHOOSE_SERVER:i=4096,r=\"choose server\";break;case NF.CLOUD_PROXY:i=1048576,r=\"proxy\";break;case NF.CLOUD_PROXY_5:i=4194304,r=\"proxy5\";break;case NF.CLOUD_PROXY_FALLBACK:i=4194310,r=\"proxy fallback\";break;default:throw new QD(xD.UNEXPECTED_ERROR,\"multi unlibs response transformer get unknown service id\",{csIp:e.detail&&e.detail[502],retry:!1})}if(e.response_body.forEach(t=>{t.buffer&&t.buffer.flag===i&&(n={code:t.buffer.code,addresses:(t.buffer.edges_services||[]).map(e=>nK(nK({},e),{},{ticket:t.buffer.cert})),server_ts:e.enter_ts,uid:t.buffer.uid,cid:t.buffer.cid,cname:t.buffer.cname,detail:nK(nK({},t.buffer.detail),e.detail),flag:t.buffer.flag,opid:e.opid,cert:t.buffer.cert})}),!n)throw new QD(xD.MULTI_UNILBS_RESPONSE_ERROR,\"cannot parse response \".concat(r,\" from multi unilbs response\"),{csIp:e.detail&&e.detail[502]});return n}async function AK(e,t){return await l_.all(e.addresses.map(async e=>({address:oK(e.ip),tcpport:e.port,udpport:e.port,username:t&&LP(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?t.toString():vP.username,password:t&&LP(\"ENCRYPT_PROXY_USERNAME_AND_PSW\")&&window.isSecureContext?await cj(t.toString()):vP.password})))}function lK(e,t){const i=t._videoWidth||t.getMediaStreamTrack(!0).getSettings().width;return i||JD.warning(\"cannot get original video track's width, default scale down 4 times for low stream\"),i?i/aK(e.width):4}function pK(e){let{candidateType:t,relayProtocol:i,type:r,address:n,port:o,protocol:s}=e;return\"local-candidate\"===r?{candidateType:t,relayProtocol:i,protocol:s}:{candidateType:t,relayProtocol:i,address:n,port:o,protocol:s}}function gK(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function EK(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?gK(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):gK(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function fK(e){return window.TextEncoder?(new TextEncoder).encode(e).length:e.length}function mK(e){return new l_(t=>{window.setTimeout(t,e)})}function IK(e){const t=new QD(xD.TIMEOUT,\"timeout\");return new l_((i,r)=>{window.setTimeout(()=>r(t),e)})}function _K(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const i=Math.random().toString(16).substr(2,e).toLowerCase();return i.length===e?\"\".concat(t).concat(i):\"\".concat(t).concat(i)+_K(e-i.length,\"\")}function CK(){return _K(32,\"\").toUpperCase()}const SK=()=>{};function vK(e){return new l_((t,i)=>{let r=!1;const n=document.createElement(\"video\");n.setAttribute(\"autoplay\",\"\"),n.setAttribute(\"muted\",\"\"),n.muted=!0,n.autoplay=!0,n.setAttribute(\"playsinline\",\"\"),n.setAttribute(\"style\",\"position: fixed; top: 0; left: 0; width: 1px; height: 1px\"),document.body.appendChild(n);const o=EN()?\"canplay\":\"playing\";n.addEventListener(o,()=>{const e=n.videoWidth,i=n.videoHeight;!e&&gN()||(r=!0,n.srcObject=null,n.remove(),t([e,i]))}),n.srcObject=new MediaStream([e]),n.play().catch(SK),setTimeout(()=>{r||(n.srcObject=null,n.remove(),t([n.videoWidth,n.videoHeight]))},4e3)})}function TK(e){return l_.all(e.map(e=>e.then(e=>{throw e},e=>e))).then(e=>{throw e},e=>e)}function RK(e,t){for(var i=arguments.length,r=new Array(i>2?i-2:0),n=2;n<i;n++)r[n-2]=arguments[n];return 0===e.getListeners(t).length?l_.reject(new QD(xD.UNEXPECTED_ERROR,\"can not emit promise\")):new l_((i,n)=>{e.emit(t,...r,i,n)})}function yK(e,t){if(0===e.getListeners(t).length)return l_.resolve();for(var i=arguments.length,r=new Array(i>2?i-2:0),n=2;n<i;n++)r[n-2]=arguments[n];return RK(e,t,...r)}function wK(e,t){if(0===e.getListeners(t).length)return null;for(var i=arguments.length,r=new Array(i>2?i-2:0),n=2;n<i;n++)r[n-2]=arguments[n];return bK(e,t,...r)}function bK(e,t){let i=null,r=null;for(var n=arguments.length,o=new Array(n>2?n-2:0),s=2;s<n;s++)o[s-2]=arguments[s];if(e.emit(t,...o,e=>{i=e},e=>{r=e}),null!==r)throw r;if(null===i)throw new QD(xD.UNEXPECTED_ERROR,\"handler is not sync\");return i}function NK(e,t){const i=e.indexOf(t);-1!==i&&e.splice(i,1)}function OK(e){const t=[];return e.forEach(e=>{-1===t.indexOf(e)&&t.push(e)}),t}function DK(e){l_.resolve().then(e)}function PK(e){return JSON.parse(JSON.stringify(e))}const LK={};function kK(e,t){LK[t]||(LK[t]=!0,e())}function BK(e){const t=window.atob(e),i=new Uint8Array(new ArrayBuffer(t.length));for(let e=0;e<t.length;e+=1)i[e]=t.charCodeAt(e);return i}function MK(e){let t=\"\";for(let i=0;i<e.length;i+=1)t+=String.fromCharCode(e[i]);return window.btoa(t)}const UK=new class{constructor(){MN(this,\"fnMap\",new Map)}throttleByKey(e,t,i,r){for(var n=arguments.length,o=new Array(n>4?n-4:0),s=4;s<n;s++)o[s-4]=arguments[s];if(this.fnMap.has(t)){const n=this.fnMap.get(t);if(n.threshold!==i){n.fn(...n.args),clearTimeout(n.timer);const s=window.setTimeout(()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)},i);this.fnMap.set(t,{fn:e,threshold:i,timer:s,args:o,skipFn:r})}else n.skipFn&&n.skipFn(...n.args),this.fnMap.set(t,EK(EK({},n),{},{fn:e,args:o,skipFn:r}))}else{const n=window.setTimeout(()=>{const e=this.fnMap.get(t);e&&e.fn(...e.args),this.fnMap.delete(t)},i);this.fnMap.set(t,{fn:e,threshold:i,timer:n,args:o,skipFn:r})}}},xK=UK.throttleByKey.bind(UK),QK=async e=>{let{fragementLength:t,referenceList:i,asyncMapHandler:r,allFailedhandler:n,promisesCollector:o}=e,s=0;const a=t;let c,d=0;const u=async()=>{const e=(()=>{const e=s*a,t=e+a;return i.slice(e,t).map(r)})();o&&o.push(...e);try{c=await TK(e)}catch(e){if(d+=a,s++,!(d>=i.length))return void await u();n(e)}e.forEach(e=>e.cancel())};return await u(),c};function FK(e){return\"object\"==typeof e&&null!==e&&!(e instanceof RegExp)}var VK=ln,jK=Es(\"iterator\"),GK=!VK((function(){var e=new URL(\"b?a=1&b=2&c=3\",\"http://a\"),t=e.searchParams,i=\"\";return e.pathname=\"c%20d\",t.forEach((function(e,r){t.delete(\"b\"),i+=r+e})),!e.toJSON||!t.sort||\"http://a/c%20d?a=1&c=3\"!==e.href||\"3\"!==t.get(\"c\")||\"a=1\"!==String(new URLSearchParams(\"?a=1\"))||!t[jK]||\"a\"!==new URL(\"https://a@b\").username||\"b\"!==new URLSearchParams(new URLSearchParams(\"a=b\")).get(\"a\")||\"xn--e1aybc\"!==new URL(\"http://ÑÐµÑÑ\").host||\"#%D0%B1\"!==new URL(\"http://a#Ð±\").hash||\"a1c3\"!==i||\"x\"!==new URL(\"http://x\",void 0).host})),KK=Dn,HK=_n,WK=kn,YK=ln,JK=el,qK=FA,XK=Bn,zK=zo,ZK=zn,$K=Object.assign,eH=Object.defineProperty,tH=HK([].concat),iH=!$K||YK((function(){if(KK&&1!==$K({b:1},$K(eH({},\"a\",{enumerable:!0,get:function(){eH(this,\"b\",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},i=Symbol(),r=\"abcdefghijklmnopqrst\";return e[i]=7,r.split(\"\").forEach((function(e){t[e]=e})),7!=$K({},e)[i]||JK($K({},t)).join(\"\")!=r}))?function(e,t){for(var i=zK(e),r=arguments.length,n=1,o=qK.f,s=XK.f;r>n;)for(var a,c=ZK(arguments[n++]),d=o?tH(JK(c),o(c)):JK(c),u=d.length,h=0;u>h;)a=d[h++],KK&&!WK(s,c,a)||(i[a]=c[a]);return i}:$K,rH=ca,nH=rp,oH=ta,sH=kn,aH=zo,cH=function(e,t,i,r){try{return r?t(rH(i)[0],i[1]):t(i)}catch(t){nH(e,\"throw\",t)}},dH=Dl,uH=ZE,hH=Va,AH=WP,lH=$l,pH=Wl,gH=vn.Array,EH=_n,fH=2147483647,mH=/[^\\0-\\u007E]/,IH=/[.\\u3002\\uFF0E\\uFF61]/g,_H=\"Overflow: input needs wider integers to process\",CH=vn.RangeError,SH=EH(IH.exec),vH=Math.floor,TH=String.fromCharCode,RH=EH(\"\".charCodeAt),yH=EH([].join),wH=EH([].push),bH=EH(\"\".replace),NH=EH(\"\".split),OH=EH(\"\".toLowerCase),DH=function(e){return e+22+75*(e<26)},PH=function(e,t,i){var r=0;for(e=i?vH(e/700):e>>1,e+=vH(e/t);e>455;)e=vH(e/35),r+=36;return vH(r+36*e/(e+38))},LH=function(e){var t,i,r=[],n=(e=function(e){for(var t=[],i=0,r=e.length;i<r;){var n=RH(e,i++);if(n>=55296&&n<=56319&&i<r){var o=RH(e,i++);56320==(64512&o)?wH(t,((1023&n)<<10)+(1023&o)+65536):(wH(t,n),i--)}else wH(t,n)}return t}(e)).length,o=128,s=0,a=72;for(t=0;t<e.length;t++)(i=e[t])<128&&wH(r,TH(i));var c=r.length,d=c;for(c&&wH(r,\"-\");d<n;){var u=fH;for(t=0;t<e.length;t++)(i=e[t])>=o&&i<u&&(u=i);var h=d+1;if(u-o>vH((fH-s)/h))throw CH(_H);for(s+=(u-o)*h,o=u,t=0;t<e.length;t++){if((i=e[t])<o&&++s>fH)throw CH(_H);if(i==o){for(var A=s,l=36;;){var p=l<=a?1:l>=a+26?26:l-a;if(A<p)break;var g=A-p,E=36-p;wH(r,TH(DH(p+g%E))),A=vH(g/E),l+=36}wH(r,TH(DH(A))),a=PH(s,h,d==c),s=0,d++}}s++,o++}return yH(r,\"\")},kH=vn.TypeError,BH=ka,MH=vn,UH=ho,xH=kn,QH=_n,FH=GK,VH=wg,jH=vE,GH=Hg,KH=Zg,HH=Ig,WH=OE,YH=Nn,JH=es,qH=ta,XH=Vl,zH=ca,ZH=no,$H=_p,eW=_l,tW=Vn,iW=$l,rW=Wl,nW=function(e,t){if(e<t)throw kH(\"Not enough arguments\");return e},oW=nL,sW=Es(\"iterator\"),aW=\"URLSearchParams\",cW=\"URLSearchParamsIterator\",dW=HH.set,uW=HH.getterFor(aW),hW=HH.getterFor(cW),AW=UH(\"fetch\"),lW=UH(\"Request\"),pW=UH(\"Headers\"),gW=lW&&lW.prototype,EW=pW&&pW.prototype,fW=MH.RegExp,mW=MH.TypeError,IW=MH.decodeURIComponent,_W=MH.encodeURIComponent,CW=QH(\"\".charAt),SW=QH([].join),vW=QH([].push),TW=QH(\"\".replace),RW=QH([].shift),yW=QH([].splice),wW=QH(\"\".split),bW=QH(\"\".slice),NW=/\\+/g,OW=Array(4),DW=function(e){return OW[e-1]||(OW[e-1]=fW(\"((?:%[\\\\da-f]{2}){\"+e+\"})\",\"gi\"))},PW=function(e){try{return IW(e)}catch(t){return e}},LW=function(e){var t=TW(e,NW,\" \"),i=4;try{return IW(t)}catch(e){for(;i;)t=TW(t,DW(i--),PW);return t}},kW=/[!'()~]|%20/g,BW={\"!\":\"%21\",\"'\":\"%27\",\"(\":\"%28\",\")\":\"%29\",\"~\":\"%7E\",\"%20\":\"+\"},MW=function(e){return BW[e]},UW=function(e){return TW(_W(e),kW,MW)},xW=KH((function(e,t){dW(this,{type:cW,iterator:iW(uW(e).entries),kind:t})}),\"Iterator\",(function(){var e=hW(this),t=e.kind,i=e.iterator.next(),r=i.value;return i.done||(i.value=\"keys\"===t?r.key:\"values\"===t?r.value:[r.key,r.value]),i}),!0),QW=function(e){this.entries=[],this.url=null,void 0!==e&&(ZH(e)?this.parseObject(e):this.parseQuery(\"string\"==typeof e?\"?\"===CW(e,0)?bW(e,1):e:$H(e)))};QW.prototype={type:aW,bindURL:function(e){this.url=e,this.update()},parseObject:function(e){var t,i,r,n,o,s,a,c=rW(e);if(c)for(i=(t=iW(e,c)).next;!(r=xH(i,t)).done;){if(o=(n=iW(zH(r.value))).next,(s=xH(o,n)).done||(a=xH(o,n)).done||!xH(o,n).done)throw mW(\"Expected sequence with length 2\");vW(this.entries,{key:$H(s.value),value:$H(a.value)})}else for(var d in e)JH(e,d)&&vW(this.entries,{key:d,value:$H(e[d])})},parseQuery:function(e){if(e)for(var t,i,r=wW(e,\"&\"),n=0;n<r.length;)(t=r[n++]).length&&(i=wW(t,\"=\"),vW(this.entries,{key:LW(RW(i)),value:LW(SW(i,\"=\"))}))},serialize:function(){for(var e,t=this.entries,i=[],r=0;r<t.length;)e=t[r++],vW(i,UW(e.key)+\"=\"+UW(e.value));return SW(i,\"&\")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var FW=function(){WH(this,VW);var e=arguments.length>0?arguments[0]:void 0;dW(this,new QW(e))},VW=FW.prototype;if(jH(VW,{append:function(e,t){nW(arguments.length,2);var i=uW(this);vW(i.entries,{key:$H(e),value:$H(t)}),i.updateURL()},delete:function(e){nW(arguments.length,1);for(var t=uW(this),i=t.entries,r=$H(e),n=0;n<i.length;)i[n].key===r?yW(i,n,1):n++;t.updateURL()},get:function(e){nW(arguments.length,1);for(var t=uW(this).entries,i=$H(e),r=0;r<t.length;r++)if(t[r].key===i)return t[r].value;return null},getAll:function(e){nW(arguments.length,1);for(var t=uW(this).entries,i=$H(e),r=[],n=0;n<t.length;n++)t[n].key===i&&vW(r,t[n].value);return r},has:function(e){nW(arguments.length,1);for(var t=uW(this).entries,i=$H(e),r=0;r<t.length;)if(t[r++].key===i)return!0;return!1},set:function(e,t){nW(arguments.length,1);for(var i,r=uW(this),n=r.entries,o=!1,s=$H(e),a=$H(t),c=0;c<n.length;c++)(i=n[c]).key===s&&(o?yW(n,c--,1):(o=!0,i.value=a));o||vW(n,{key:s,value:a}),r.updateURL()},sort:function(){var e=uW(this);oW(e.entries,(function(e,t){return e.key>t.key?1:-1})),e.updateURL()},forEach:function(e){for(var t,i=uW(this).entries,r=qH(e,arguments.length>1?arguments[1]:void 0),n=0;n<i.length;)r((t=i[n++]).value,t.key,this)},keys:function(){return new xW(this,\"keys\")},values:function(){return new xW(this,\"values\")},entries:function(){return new xW(this,\"entries\")}},{enumerable:!0}),VH(VW,sW,VW.entries,{name:\"entries\"}),VH(VW,\"toString\",(function(){return uW(this).serialize()}),{enumerable:!0}),GH(FW,aW),BH({global:!0,forced:!FH},{URLSearchParams:FW}),!FH&&YH(pW)){var jW=QH(EW.has),GW=QH(EW.set),KW=function(e){if(ZH(e)){var t,i=e.body;if(XH(i)===aW)return t=e.headers?new pW(e.headers):new pW,jW(t,\"content-type\")||GW(t,\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"),eW(e,{body:tW(0,$H(i)),headers:tW(0,t)})}return e};if(YH(AW)&&BH({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return AW(e,arguments.length>1?KW(arguments[1]):{})}}),YH(lW)){var HW=function(e){return WH(this,gW),new lW(e,arguments.length>1?KW(arguments[1]):{})};gW.constructor=HW,HW.prototype=gW,BH({global:!0,forced:!0},{Request:HW})}}var WW,YW={URLSearchParams:FW,getState:uW},JW=ka,qW=Dn,XW=GK,zW=vn,ZW=ta,$W=_n,eY=zA.f,tY=wg,iY=OE,rY=es,nY=iH,oY=function(e){var t=aH(e),i=uH(this),r=arguments.length,n=r>1?arguments[1]:void 0,o=void 0!==n;o&&(n=oH(n,r>2?arguments[2]:void 0));var s,a,c,d,u,h,A=pH(t),l=0;if(!A||this==gH&&dH(A))for(s=hH(t),a=i?new this(s):gH(s);s>l;l++)h=o?n(t[l],l):t[l],AH(a,l,h);else for(u=(d=lH(t,A)).next,a=i?new this:[];!(c=sH(u,d)).done;l++)h=o?cH(d,n,[c.value,l],!0):c.value,AH(a,l,h);return a.length=l,a},sY=ZP,aY=JI.codeAt,cY=function(e){var t,i,r=[],n=NH(bH(OH(e),IH,\".\"),\".\");for(t=0;t<n.length;t++)i=n[t],wH(r,SH(mH,i)?\"xn--\"+LH(i):i);return yH(r,\".\")},dY=_p,uY=Hg,hY=YW,AY=Ig,lY=AY.set,pY=AY.getterFor(\"URL\"),gY=hY.URLSearchParams,EY=hY.getState,fY=zW.URL,mY=zW.TypeError,IY=zW.parseInt,_Y=Math.floor,CY=Math.pow,SY=$W(\"\".charAt),vY=$W(/./.exec),TY=$W([].join),RY=$W(1..toString),yY=$W([].pop),wY=$W([].push),bY=$W(\"\".replace),NY=$W([].shift),OY=$W(\"\".split),DY=$W(\"\".slice),PY=$W(\"\".toLowerCase),LY=$W([].unshift),kY=\"Invalid scheme\",BY=\"Invalid host\",MY=\"Invalid port\",UY=/[a-z]/i,xY=/[\\d+-.a-z]/i,QY=/\\d/,FY=/^0x/i,VY=/^[0-7]+$/,jY=/^\\d+$/,GY=/^[\\da-f]+$/i,KY=/[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/,HY=/[\\0\\t\\n\\r #/:<>?@[\\\\\\]^|]/,WY=/^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g,YY=/[\\t\\n\\r]/g,JY=function(e){var t,i,r,n;if(\"number\"==typeof e){for(t=[],i=0;i<4;i++)LY(t,e%256),e=_Y(e/256);return TY(t,\".\")}if(\"object\"==typeof e){for(t=\"\",r=function(e){for(var t=null,i=1,r=null,n=0,o=0;o<8;o++)0!==e[o]?(n>i&&(t=r,i=n),r=null,n=0):(null===r&&(r=o),++n);return n>i&&(t=r,i=n),t}(e),i=0;i<8;i++)n&&0===e[i]||(n&&(n=!1),r===i?(t+=i?\":\":\"::\",n=!0):(t+=RY(e[i],16),i<7&&(t+=\":\")));return\"[\"+t+\"]\"}return e},qY={},XY=nY({},qY,{\" \":1,'\"':1,\"<\":1,\">\":1,\"`\":1}),zY=nY({},XY,{\"#\":1,\"?\":1,\"{\":1,\"}\":1}),ZY=nY({},zY,{\"/\":1,\":\":1,\";\":1,\"=\":1,\"@\":1,\"[\":1,\"\\\\\":1,\"]\":1,\"^\":1,\"|\":1}),$Y=function(e,t){var i=aY(e,0);return i>32&&i<127&&!rY(t,e)?e:encodeURIComponent(e)},eJ={ftp:21,file:null,http:80,https:443,ws:80,wss:443},tJ=function(e,t){var i;return 2==e.length&&vY(UY,SY(e,0))&&(\":\"==(i=SY(e,1))||!t&&\"|\"==i)},iJ=function(e){var t;return e.length>1&&tJ(DY(e,0,2))&&(2==e.length||\"/\"===(t=SY(e,2))||\"\\\\\"===t||\"?\"===t||\"#\"===t)},rJ=function(e){return\".\"===e||\"%2e\"===PY(e)},nJ={},oJ={},sJ={},aJ={},cJ={},dJ={},uJ={},hJ={},AJ={},lJ={},pJ={},gJ={},EJ={},fJ={},mJ={},IJ={},_J={},CJ={},SJ={},vJ={},TJ={},RJ=function(e,t,i){var r,n,o,s=dY(e);if(t){if(n=this.parse(s))throw mY(n);this.searchParams=null}else{if(void 0!==i&&(r=new RJ(i,!0)),n=this.parse(s,null,r))throw mY(n);(o=EY(new gY)).bindURL(this),this.searchParams=o}};RJ.prototype={type:\"URL\",parse:function(e,t,i){var r,n,o,s,a,c=this,d=t||nJ,u=0,h=\"\",A=!1,l=!1,p=!1;for(e=dY(e),t||(c.scheme=\"\",c.username=\"\",c.password=\"\",c.host=null,c.port=null,c.path=[],c.query=null,c.fragment=null,c.cannotBeABaseURL=!1,e=bY(e,WY,\"\")),e=bY(e,YY,\"\"),r=oY(e);u<=r.length;){switch(n=r[u],d){case nJ:if(!n||!vY(UY,n)){if(t)return kY;d=sJ;continue}h+=PY(n),d=oJ;break;case oJ:if(n&&(vY(xY,n)||\"+\"==n||\"-\"==n||\".\"==n))h+=PY(n);else{if(\":\"!=n){if(t)return kY;h=\"\",d=sJ,u=0;continue}if(t&&(c.isSpecial()!=rY(eJ,h)||\"file\"==h&&(c.includesCredentials()||null!==c.port)||\"file\"==c.scheme&&!c.host))return;if(c.scheme=h,t)return void(c.isSpecial()&&eJ[c.scheme]==c.port&&(c.port=null));h=\"\",\"file\"==c.scheme?d=fJ:c.isSpecial()&&i&&i.scheme==c.scheme?d=aJ:c.isSpecial()?d=hJ:\"/\"==r[u+1]?(d=cJ,u++):(c.cannotBeABaseURL=!0,wY(c.path,\"\"),d=SJ)}break;case sJ:if(!i||i.cannotBeABaseURL&&\"#\"!=n)return kY;if(i.cannotBeABaseURL&&\"#\"==n){c.scheme=i.scheme,c.path=sY(i.path),c.query=i.query,c.fragment=\"\",c.cannotBeABaseURL=!0,d=TJ;break}d=\"file\"==i.scheme?fJ:dJ;continue;case aJ:if(\"/\"!=n||\"/\"!=r[u+1]){d=dJ;continue}d=AJ,u++;break;case cJ:if(\"/\"==n){d=lJ;break}d=CJ;continue;case dJ:if(c.scheme=i.scheme,n==WW)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=sY(i.path),c.query=i.query;else if(\"/\"==n||\"\\\\\"==n&&c.isSpecial())d=uJ;else if(\"?\"==n)c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=sY(i.path),c.query=\"\",d=vJ;else{if(\"#\"!=n){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=sY(i.path),c.path.length--,d=CJ;continue}c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,c.path=sY(i.path),c.query=i.query,c.fragment=\"\",d=TJ}break;case uJ:if(!c.isSpecial()||\"/\"!=n&&\"\\\\\"!=n){if(\"/\"!=n){c.username=i.username,c.password=i.password,c.host=i.host,c.port=i.port,d=CJ;continue}d=lJ}else d=AJ;break;case hJ:if(d=AJ,\"/\"!=n||\"/\"!=SY(h,u+1))continue;u++;break;case AJ:if(\"/\"!=n&&\"\\\\\"!=n){d=lJ;continue}break;case lJ:if(\"@\"==n){A&&(h=\"%40\"+h),A=!0,o=oY(h);for(var g=0;g<o.length;g++){var E=o[g];if(\":\"!=E||p){var f=$Y(E,ZY);p?c.password+=f:c.username+=f}else p=!0}h=\"\"}else if(n==WW||\"/\"==n||\"?\"==n||\"#\"==n||\"\\\\\"==n&&c.isSpecial()){if(A&&\"\"==h)return\"Invalid authority\";u-=oY(h).length+1,h=\"\",d=pJ}else h+=n;break;case pJ:case gJ:if(t&&\"file\"==c.scheme){d=IJ;continue}if(\":\"!=n||l){if(n==WW||\"/\"==n||\"?\"==n||\"#\"==n||\"\\\\\"==n&&c.isSpecial()){if(c.isSpecial()&&\"\"==h)return BY;if(t&&\"\"==h&&(c.includesCredentials()||null!==c.port))return;if(s=c.parseHost(h))return s;if(h=\"\",d=_J,t)return;continue}\"[\"==n?l=!0:\"]\"==n&&(l=!1),h+=n}else{if(\"\"==h)return BY;if(s=c.parseHost(h))return s;if(h=\"\",d=EJ,t==gJ)return}break;case EJ:if(!vY(QY,n)){if(n==WW||\"/\"==n||\"?\"==n||\"#\"==n||\"\\\\\"==n&&c.isSpecial()||t){if(\"\"!=h){var m=IY(h,10);if(m>65535)return MY;c.port=c.isSpecial()&&m===eJ[c.scheme]?null:m,h=\"\"}if(t)return;d=_J;continue}return MY}h+=n;break;case fJ:if(c.scheme=\"file\",\"/\"==n||\"\\\\\"==n)d=mJ;else{if(!i||\"file\"!=i.scheme){d=CJ;continue}if(n==WW)c.host=i.host,c.path=sY(i.path),c.query=i.query;else if(\"?\"==n)c.host=i.host,c.path=sY(i.path),c.query=\"\",d=vJ;else{if(\"#\"!=n){iJ(TY(sY(r,u),\"\"))||(c.host=i.host,c.path=sY(i.path),c.shortenPath()),d=CJ;continue}c.host=i.host,c.path=sY(i.path),c.query=i.query,c.fragment=\"\",d=TJ}}break;case mJ:if(\"/\"==n||\"\\\\\"==n){d=IJ;break}i&&\"file\"==i.scheme&&!iJ(TY(sY(r,u),\"\"))&&(tJ(i.path[0],!0)?wY(c.path,i.path[0]):c.host=i.host),d=CJ;continue;case IJ:if(n==WW||\"/\"==n||\"\\\\\"==n||\"?\"==n||\"#\"==n){if(!t&&tJ(h))d=CJ;else if(\"\"==h){if(c.host=\"\",t)return;d=_J}else{if(s=c.parseHost(h))return s;if(\"localhost\"==c.host&&(c.host=\"\"),t)return;h=\"\",d=_J}continue}h+=n;break;case _J:if(c.isSpecial()){if(d=CJ,\"/\"!=n&&\"\\\\\"!=n)continue}else if(t||\"?\"!=n)if(t||\"#\"!=n){if(n!=WW&&(d=CJ,\"/\"!=n))continue}else c.fragment=\"\",d=TJ;else c.query=\"\",d=vJ;break;case CJ:if(n==WW||\"/\"==n||\"\\\\\"==n&&c.isSpecial()||!t&&(\"?\"==n||\"#\"==n)){if(\"..\"===(a=PY(a=h))||\"%2e.\"===a||\".%2e\"===a||\"%2e%2e\"===a?(c.shortenPath(),\"/\"==n||\"\\\\\"==n&&c.isSpecial()||wY(c.path,\"\")):rJ(h)?\"/\"==n||\"\\\\\"==n&&c.isSpecial()||wY(c.path,\"\"):(\"file\"==c.scheme&&!c.path.length&&tJ(h)&&(c.host&&(c.host=\"\"),h=SY(h,0)+\":\"),wY(c.path,h)),h=\"\",\"file\"==c.scheme&&(n==WW||\"?\"==n||\"#\"==n))for(;c.path.length>1&&\"\"===c.path[0];)NY(c.path);\"?\"==n?(c.query=\"\",d=vJ):\"#\"==n&&(c.fragment=\"\",d=TJ)}else h+=$Y(n,zY);break;case SJ:\"?\"==n?(c.query=\"\",d=vJ):\"#\"==n?(c.fragment=\"\",d=TJ):n!=WW&&(c.path[0]+=$Y(n,qY));break;case vJ:t||\"#\"!=n?n!=WW&&(\"'\"==n&&c.isSpecial()?c.query+=\"%27\":c.query+=\"#\"==n?\"%23\":$Y(n,qY)):(c.fragment=\"\",d=TJ);break;case TJ:n!=WW&&(c.fragment+=$Y(n,XY))}u++}},parseHost:function(e){var t,i,r;if(\"[\"==SY(e,0)){if(\"]\"!=SY(e,e.length-1))return BY;if(!(t=function(e){var t,i,r,n,o,s,a,c=[0,0,0,0,0,0,0,0],d=0,u=null,h=0,A=function(){return SY(e,h)};if(\":\"==A()){if(\":\"!=SY(e,1))return;h+=2,u=++d}for(;A();){if(8==d)return;if(\":\"!=A()){for(t=i=0;i<4&&vY(GY,A());)t=16*t+IY(A(),16),h++,i++;if(\".\"==A()){if(0==i)return;if(h-=i,d>6)return;for(r=0;A();){if(n=null,r>0){if(!(\".\"==A()&&r<4))return;h++}if(!vY(QY,A()))return;for(;vY(QY,A());){if(o=IY(A(),10),null===n)n=o;else{if(0==n)return;n=10*n+o}if(n>255)return;h++}c[d]=256*c[d]+n,2!=++r&&4!=r||d++}if(4!=r)return;break}if(\":\"==A()){if(h++,!A())return}else if(A())return;c[d++]=t}else{if(null!==u)return;h++,u=++d}}if(null!==u)for(s=d-u,d=7;0!=d&&s>0;)a=c[d],c[d--]=c[u+s-1],c[u+--s]=a;else if(8!=d)return;return c}(DY(e,1,-1))))return BY;this.host=t}else if(this.isSpecial()){if(e=cY(e),vY(KY,e))return BY;if(null===(t=function(e){var t,i,r,n,o,s,a,c=OY(e,\".\");if(c.length&&\"\"==c[c.length-1]&&c.length--,(t=c.length)>4)return e;for(i=[],r=0;r<t;r++){if(\"\"==(n=c[r]))return e;if(o=10,n.length>1&&\"0\"==SY(n,0)&&(o=vY(FY,n)?16:8,n=DY(n,8==o?1:2)),\"\"===n)s=0;else{if(!vY(10==o?jY:8==o?VY:GY,n))return e;s=IY(n,o)}wY(i,s)}for(r=0;r<t;r++)if(s=i[r],r==t-1){if(s>=CY(256,5-t))return null}else if(s>255)return null;for(a=yY(i),r=0;r<i.length;r++)a+=i[r]*CY(256,3-r);return a}(e)))return BY;this.host=t}else{if(vY(HY,e))return BY;for(t=\"\",i=oY(e),r=0;r<i.length;r++)t+=$Y(i[r],qY);this.host=t}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||\"file\"==this.scheme},includesCredentials:function(){return\"\"!=this.username||\"\"!=this.password},isSpecial:function(){return rY(eJ,this.scheme)},shortenPath:function(){var e=this.path,t=e.length;!t||\"file\"==this.scheme&&1==t&&tJ(e[0],!0)||e.length--},serialize:function(){var e=this,t=e.scheme,i=e.username,r=e.password,n=e.host,o=e.port,s=e.path,a=e.query,c=e.fragment,d=t+\":\";return null!==n?(d+=\"//\",e.includesCredentials()&&(d+=i+(r?\":\"+r:\"\")+\"@\"),d+=JY(n),null!==o&&(d+=\":\"+o)):\"file\"==t&&(d+=\"//\"),d+=e.cannotBeABaseURL?s[0]:s.length?\"/\"+TY(s,\"/\"):\"\",null!==a&&(d+=\"?\"+a),null!==c&&(d+=\"#\"+c),d},setHref:function(e){var t=this.parse(e);if(t)throw mY(t);this.searchParams.update()},getOrigin:function(){var e=this.scheme,t=this.port;if(\"blob\"==e)try{return new yJ(e.path[0]).origin}catch(e){return\"null\"}return\"file\"!=e&&this.isSpecial()?e+\"://\"+JY(this.host)+(null!==t?\":\"+t:\"\"):\"null\"},getProtocol:function(){return this.scheme+\":\"},setProtocol:function(e){this.parse(dY(e)+\":\",nJ)},getUsername:function(){return this.username},setUsername:function(e){var t=oY(dY(e));if(!this.cannotHaveUsernamePasswordPort()){this.username=\"\";for(var i=0;i<t.length;i++)this.username+=$Y(t[i],ZY)}},getPassword:function(){return this.password},setPassword:function(e){var t=oY(dY(e));if(!this.cannotHaveUsernamePasswordPort()){this.password=\"\";for(var i=0;i<t.length;i++)this.password+=$Y(t[i],ZY)}},getHost:function(){var e=this.host,t=this.port;return null===e?\"\":null===t?JY(e):JY(e)+\":\"+t},setHost:function(e){this.cannotBeABaseURL||this.parse(e,pJ)},getHostname:function(){var e=this.host;return null===e?\"\":JY(e)},setHostname:function(e){this.cannotBeABaseURL||this.parse(e,gJ)},getPort:function(){var e=this.port;return null===e?\"\":dY(e)},setPort:function(e){this.cannotHaveUsernamePasswordPort()||(\"\"==(e=dY(e))?this.port=null:this.parse(e,EJ))},getPathname:function(){var e=this.path;return this.cannotBeABaseURL?e[0]:e.length?\"/\"+TY(e,\"/\"):\"\"},setPathname:function(e){this.cannotBeABaseURL||(this.path=[],this.parse(e,_J))},getSearch:function(){var e=this.query;return e?\"?\"+e:\"\"},setSearch:function(e){\"\"==(e=dY(e))?this.query=null:(\"?\"==SY(e,0)&&(e=DY(e,1)),this.query=\"\",this.parse(e,vJ)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var e=this.fragment;return e?\"#\"+e:\"\"},setHash:function(e){\"\"!=(e=dY(e))?(\"#\"==SY(e,0)&&(e=DY(e,1)),this.fragment=\"\",this.parse(e,TJ)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var yJ=function(e){var t=iY(this,wJ),i=arguments.length>1?arguments[1]:void 0,r=lY(t,new RJ(e,!1,i));qW||(t.href=r.serialize(),t.origin=r.getOrigin(),t.protocol=r.getProtocol(),t.username=r.getUsername(),t.password=r.getPassword(),t.host=r.getHost(),t.hostname=r.getHostname(),t.port=r.getPort(),t.pathname=r.getPathname(),t.search=r.getSearch(),t.searchParams=r.getSearchParams(),t.hash=r.getHash())},wJ=yJ.prototype,bJ=function(e,t){return{get:function(){return pY(this)[e]()},set:t&&function(e){return pY(this)[t](e)},configurable:!0,enumerable:!0}};if(qW&&eY(wJ,{href:bJ(\"serialize\",\"setHref\"),origin:bJ(\"getOrigin\"),protocol:bJ(\"getProtocol\",\"setProtocol\"),username:bJ(\"getUsername\",\"setUsername\"),password:bJ(\"getPassword\",\"setPassword\"),host:bJ(\"getHost\",\"setHost\"),hostname:bJ(\"getHostname\",\"setHostname\"),port:bJ(\"getPort\",\"setPort\"),pathname:bJ(\"getPathname\",\"setPathname\"),search:bJ(\"getSearch\",\"setSearch\"),searchParams:bJ(\"getSearchParams\"),hash:bJ(\"getHash\",\"setHash\")}),tY(wJ,\"toJSON\",(function(){return pY(this).serialize()}),{enumerable:!0}),tY(wJ,\"toString\",(function(){return pY(this).serialize()}),{enumerable:!0}),fY){var NJ=fY.createObjectURL,OJ=fY.revokeObjectURL;NJ&&tY(yJ,\"createObjectURL\",ZW(NJ,fY)),OJ&&tY(yJ,\"revokeObjectURL\",ZW(OJ,fY))}uY(yJ,\"URL\"),JW({global:!0,forced:!XW,sham:!qW},{URL:yJ});var DJ=oo.URL;const PJ={[ak.ACCESS_POINT]:{[uk.NO_FLAG_SET]:{desc:\"flag is zero\",retry:!1},[uk.FLAG_SET_BUT_EMPTY]:{desc:\"flag is empty\",retry:!1},[uk.INVALID_FALG_SET]:{desc:\"invalid flag\",retry:!1},[uk.FLAG_SET_BUT_NO_RE]:{desc:\"flag set unilbs but no request\",retry:!1},[uk.INVALID_SERVICE_ID]:{desc:\"invalid service id\",retry:!1},[uk.NO_SERVICE_AVAILABLE]:{desc:\"no service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_P2P]:{desc:\"no unilbs p2p service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_VOET]:{desc:\"no unilbs voice service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:\"no unilbs webrtc service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_CDS]:{desc:\"no cds service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_CDN]:{desc:\"no cdn dispatcher service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_TDS]:{desc:\"no tds service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_REPORT]:{desc:\"no unilbs report service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:\"no app center service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_ENV0]:{desc:\"no unilbs sig env0 service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_VOET]:{desc:\"no unilbs voet service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:\"no string uid service available\",retry:!0},[uk.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:\"no webrtc unilbs service available\",retry:!0}},[ak.UNILBS]:{[dk.INVALID_VENDOR_KEY]:{desc:\"invalid vendor key, can not find appid\",retry:!1},[dk.INVALID_CHANNEL_NAME]:{desc:\"invalid channel name\",retry:!1},[dk.INTERNAL_ERROR]:{desc:\"unilbs internal error\",retry:!1},[dk.NO_AUTHORIZED]:{desc:\"invalid token, authorized failed\",retry:!1},[dk.DYNAMIC_KEY_TIMEOUT]:{desc:\"dynamic key or token timeout\",retry:!1},[dk.NO_ACTIVE_STATUS]:{desc:\"no active status\",retry:!1},[dk.DYNAMIC_KEY_EXPIRED]:{desc:\"dynamic key expired\",retry:!1},[dk.STATIC_USE_DYNAMIC_KEY]:{desc:\"static use dynamic key\",retry:!1},[dk.DYNAMIC_USE_STATIC_KEY]:{desc:\"dynamic use static key\",retry:!1},[dk.USER_OVERLOAD]:{desc:\"amount of users over load\",retry:!1},[dk.FORBIDDEN_REGION]:{desc:\"the request is forbidden in this area\",retry:!1},[dk.CANNOT_MEET_AREA_DEMAND]:{desc:\"unable to allocate services in this area\",retry:!1}},[ak.STRING_UID_ALLOCATOR]:{[ck.IIIEGAL_APPID]:{desc:\"invalid appid\",retry:!1},[ck.IIIEGAL_UID]:{desc:\"invalid string uid\",retry:!1},[ck.INTERNAL_ERROR]:{desc:\"string uid allocator internal error\",retry:!0}}};function LJ(e){const t=PJ[Math.floor(e/1e4)];if(!t)return{desc:\"unkonw error\",retry:!1};const i=t[e%1e4];if(!i){if(Math.floor(e/1e4)===ak.ACCESS_POINT){const t=e%1e4;if(\"1\"===t.toString()[0])return{desc:e.toString(),retry:!1};if(\"2\"===t.toString()[0])return{desc:e.toString(),retry:!0}}return{desc:\"unkonw error\",retry:!1}}return i}const kJ={[hk.K_TIMESTAMP_EXPIRED]:{desc:\"K_TIMESTAMP_EXPIRED\",action:\"failed\"},[hk.K_CHANNEL_PERMISSION_INVALID]:{desc:\"K_CHANNEL_PERMISSION_INVALID\",action:\"failed\"},[hk.K_CERTIFICATE_INVALID]:{desc:\"K_CERTIFICATE_INVALID\",action:\"failed\"},[hk.K_CHANNEL_NAME_EMPTY]:{desc:\"K_CHANNEL_NAME_EMPTY\",action:\"failed\"},[hk.K_CHANNEL_NOT_FOUND]:{desc:\"K_CHANNEL_NOT_FOUND\",action:\"failed\"},[hk.K_TICKET_INVALID]:{desc:\"K_TICKET_INVALID\",action:\"failed\"},[hk.K_CHANNEL_CONFLICTED]:{desc:\"K_CHANNEL_CONFLICTED\",action:\"failed\"},[hk.K_SERVICE_NOT_READY]:{desc:\"K_SERVICE_NOT_READY\",action:\"tryNext\"},[hk.K_SERVICE_TOO_HEAVY]:{desc:\"K_SERVICE_TOO_HEAVY\",action:\"tryNext\"},[hk.K_UID_BANNED]:{desc:\"K_UID_BANNED\",action:\"failed\"},[hk.K_IP_BANNED]:{desc:\"K_IP_BANNED\",action:\"failed\"},[hk.ERR_INVALID_VENDOR_KEY]:{desc:\"ERR_INVALID_VENDOR_KEY\",action:\"failed\"},[hk.ERR_INVALID_CHANNEL_NAME]:{desc:\"ERR_INVALID_CHANNEL_NAME\",action:\"failed\"},[hk.WARN_NO_AVAILABLE_CHANNEL]:{desc:\"WARN_NO_AVAILABLE_CHANNEL\",action:\"failed\"},[hk.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:\"WARN_LOOKUP_CHANNEL_TIMEOUT\",action:\"tryNext\"},[hk.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:\"WARN_LOOKUP_CHANNEL_REJECTED\",action:\"failed\"},[hk.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:\"WARN_OPEN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[hk.WARN_OPEN_CHANNEL_REJECTED]:{desc:\"WARN_OPEN_CHANNEL_REJECTED\",action:\"failed\"},[hk.WARN_REQUEST_DEFERRED]:{desc:\"WARN_REQUEST_DEFERRED\",action:\"failed\"},[hk.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:\"ERR_DYNAMIC_KEY_TIMEOUT\",action:\"failed\"},[hk.ERR_NO_AUTHORIZED]:{desc:\"ERR_NO_AUTHORIZED\",action:\"failed\"},[hk.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:\"ERR_VOM_SERVICE_UNAVAILABLE\",action:\"tryNext\"},[hk.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:\"ERR_NO_CHANNEL_AVAILABLE_CODE\",action:\"failed\"},[hk.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:\"ERR_MASTER_VOCS_UNAVAILABLE\",action:\"tryNext\"},[hk.ERR_INTERNAL_ERROR]:{desc:\"ERR_INTERNAL_ERROR\",action:\"tryNext\"},[hk.ERR_NO_ACTIVE_STATUS]:{desc:\"ERR_NO_ACTIVE_STATUS\",action:\"failed\"},[hk.ERR_INVALID_UID]:{desc:\"ERR_INVALID_UID\",action:\"failed\"},[hk.ERR_DYNAMIC_KEY_EXPIRED]:{desc:\"ERR_DYNAMIC_KEY_EXPIRED\",action:\"failed\"},[hk.ERR_STATIC_USE_DYANMIC_KE]:{desc:\"ERR_STATIC_USE_DYANMIC_KE\",action:\"failed\"},[hk.ERR_DYNAMIC_USE_STATIC_KE]:{desc:\"ERR_DYNAMIC_USE_STATIC_KE\",action:\"failed\"},[hk.ERR_NO_VOCS_AVAILABLE]:{desc:\"ERR_NO_VOCS_AVAILABLE\",action:\"tryNext\"},[hk.ERR_NO_VOS_AVAILABLE]:{desc:\"ERR_NO_VOS_AVAILABLE\",action:\"tryNext\"},[hk.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:\"ERR_JOIN_CHANNEL_TIMEOUT\",action:\"tryNext\"},[hk.ERR_JOIN_BY_MULTI_IP]:{desc:\"ERR_JOIN_BY_MULTI_IP\",action:\"recover\"},[hk.ERR_NOT_JOINED]:{desc:\"ERR_NOT_JOINED\",action:\"failed\"},[hk.ERR_REPEAT_JOIN_REQUEST]:{desc:\"ERR_REPEAT_JOIN_REQUEST\",action:\"quit\"},[hk.ERR_REPEAT_JOIN_CHANNEL]:{desc:\"ERR_REPEAT_JOIN_CHANNEL\",action:\"quit\"},[hk.ERR_INVALID_VENDOR_KEY]:{desc:\"ERR_INVALID_VENDOR_KEY\",action:\"failed\"},[hk.ERR_INVALID_CHANNEL_NAME]:{desc:\"ERR_INVALID_CHANNEL_NAME\",action:\"failed\"},[hk.ERR_INVALID_STRINGUID]:{desc:\"ERR_INVALID_STRINGUID\",action:\"failed\"},[hk.ERR_TOO_MANY_USERS]:{desc:\"ERR_TOO_MANY_USERS\",action:\"tryNext\"},[hk.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[hk.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:\"ERR_SET_CLIENT_ROLE_TIMEOUT\",action:\"failed\"},[hk.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:\"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE\",action:\"success\"},[hk.ERR_PUBLISH_REQUEST_INVALID]:{desc:\"ERR_PUBLISH_REQUEST_INVALID\",action:\"failed\"},[hk.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:\"ERR_SUBSCRIBE_REQUEST_INVALID\",action:\"failed\"},[hk.ERR_NOT_SUPPORTED_MESSAGE]:{desc:\"ERR_NOT_SUPPORTED_MESSAGE\",action:\"failed\"},[hk.ERR_ILLEAGAL_PLUGIN]:{desc:\"ERR_ILLEAGAL_PLUGIN\",action:\"failed\"},[hk.ILLEGAL_CLIENT_ROLE_LEVEL]:{desc:\"ILLEGAL_CLIENT_ROLE_LEVEL\",action:\"failed\"},[hk.ERR_REJOIN_TOKEN_INVALID]:{desc:\"ERR_REJOIN_TOKEN_INVALID\",action:\"failed\"},[hk.ERR_REJOIN_USER_NOT_JOINED]:{desc:\"ERR_REJOIN_NOT_JOINED\",action:\"failed\"},[hk.ERR_INVALID_OPTIONAL_INFO]:{desc:\"ERR_INVALID_OPTIONAL_INFO\",action:\"quit\"},[hk.ERR_TEST_RECOVER]:{desc:\"ERR_TEST_RECOVER\",action:\"recover\"},[hk.ERR_TEST_TRYNEXT]:{desc:\"ERR_TEST_TRYNEXT\",action:\"recover\"},[hk.ERR_TEST_RETRY]:{desc:\"ERR_TEST_RETRY\",action:\"recover\"},[hk.ILLEGAL_AES_PASSWORD]:{desc:\"ERR_TEST_RETRY\",action:\"failed\"},[hk.ERR_TOO_MANY_BROADCASTERS]:{desc:\"ERR_TOO_MANY_BROADCASTERS\",action:\"failed\"},[hk.ERR_TOO_MANY_SUBSCRIBERS]:{desc:\"ERR_TOO_MANY_SUBSCRIBERS\",action:\"failed\"},[hk.ERR_LICENSE_ILLEGAL]:{desc:\"ERR_LICENSE_ILLEGAL\",action:\"quit\"},[hk.ERR_LICENSE_MISSING]:{desc:\"ERR_LICENSE_MISSING\",action:\"quit\"},[hk.ERR_LICENSE_EXPIRED]:{desc:\"ERR_LICENSE_EXPIRED\",action:\"quit\"},[hk.ERR_LICENSE_MINUTES_EXCEEDED]:{desc:\"ERR_LICENSE_MINUTES_EXCEEDED\",action:\"quit\"},[hk.ERR_LICENSE_PERIOD_INVALID]:{desc:\"ERR_LICENSE_PERIOD_INVALID\",action:\"quit\"},[hk.ERR_LICENSE_MULTIPLE_SDK_SERVICE]:{desc:\"ERR_LICENSE_MULTIPLE_SDK_SERVICE\",action:\"quit\"}};function BJ(e){const t=kJ[e];return t||{desc:\"UNKNOW_ERROR_\".concat(e),action:\"failed\"}}var MJ={exports:{}};!function(e,t){e.exports=function(){var e={d:function(t,i){for(var r in i)e.o(i,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:i[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};e.r(t),e.d(t,{DataViewIndexOutOfBoundsError:function(){return F},DecodeError:function(){return m},Decoder:function(){return G},EXT_TIMESTAMP:function(){return I},Encoder:function(){return N},ExtData:function(){return E},ExtensionCodec:function(){return y},decode:function(){return H},decodeArrayStream:function(){return $},decodeAsync:function(){return Z},decodeMulti:function(){return W},decodeMultiStream:function(){return ee},decodeStream:function(){return te},decodeTimestampExtension:function(){return T},decodeTimestampToTimeSpec:function(){return v},encode:function(){return D},encodeDateToTimeSpec:function(){return C},encodeTimeSpecToTimestamp:function(){return _},encodeTimestampExtension:function(){return S}});var i=4294967295;function r(e,t,i){var r=Math.floor(i/4294967296),n=i;e.setUint32(t,r),e.setUint32(t+4,n)}function n(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var o=function(e,t){var i=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,o=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)s.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=o.return)&&i.call(o)}finally{if(n)throw n.error}}return s},s=function(e,t){for(var i=0,r=t.length,n=e.length;i<r;i++,n++)e[n]=t[i];return e},a=\"undefined\"!=typeof TextEncoder&&\"undefined\"!=typeof TextDecoder;function c(e){for(var t=e.length,i=0,r=0;r<t;){var n=e.charCodeAt(r++);if(0!=(4294967168&n))if(0==(4294965248&n))i+=2;else{if(n>=55296&&n<=56319&&r<t){var o=e.charCodeAt(r);56320==(64512&o)&&(++r,n=((1023&n)<<10)+(1023&o)+65536)}i+=0==(4294901760&n)?3:4}else i++}return i}var d=a?new TextEncoder:void 0,u=a?\"undefined\"!=typeof process?200:0:i,h=(null==d?void 0:d.encodeInto)?function(e,t,i){d.encodeInto(e,t.subarray(i))}:function(e,t,i){t.set(d.encode(e),i)};function A(e,t,i){for(var r=t,n=r+i,a=[],c=\"\";r<n;){var d=e[r++];if(0==(128&d))a.push(d);else if(192==(224&d)){var u=63&e[r++];a.push((31&d)<<6|u)}else if(224==(240&d)){u=63&e[r++];var h=63&e[r++];a.push((31&d)<<12|u<<6|h)}else if(240==(248&d)){var A=(7&d)<<18|(u=63&e[r++])<<12|(h=63&e[r++])<<6|63&e[r++];A>65535&&(A-=65536,a.push(A>>>10&1023|55296),A=56320|1023&A),a.push(A)}else a.push(d);a.length>=4096&&(c+=String.fromCharCode.apply(String,s([],o(a))),a.length=0)}return a.length>0&&(c+=String.fromCharCode.apply(String,s([],o(a)))),c}var l,p=a?new TextDecoder:null,g=a?\"undefined\"!=typeof process?200:0:i,E=function(e,t){this.type=e,this.data=t},f=(l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])})(e,t)},function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function i(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}),m=function(e){function t(i){var r=e.call(this,i)||this,n=Object.create(t.prototype);return Object.setPrototypeOf(r,n),Object.defineProperty(r,\"name\",{configurable:!0,enumerable:!1,value:t.name}),r}return f(t,e),t}(Error),I=-1;function _(e){var t,i=e.sec,n=e.nsec;if(i>=0&&n>=0&&i<=17179869183){if(0===n&&i<=4294967295){var o=new Uint8Array(4);return(t=new DataView(o.buffer)).setUint32(0,i),o}var s=i/4294967296,a=4294967295&i;return o=new Uint8Array(8),(t=new DataView(o.buffer)).setUint32(0,n<<2|3&s),t.setUint32(4,a),o}return o=new Uint8Array(12),(t=new DataView(o.buffer)).setUint32(0,n),r(t,4,i),o}function C(e){var t=e.getTime(),i=Math.floor(t/1e3),r=1e6*(t-1e3*i),n=Math.floor(r/1e9);return{sec:i+n,nsec:r-1e9*n}}function S(e){return e instanceof Date?_(C(e)):null}function v(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var i=t.getUint32(0);return{sec:4294967296*(3&i)+t.getUint32(4),nsec:i>>>2};case 12:return{sec:n(t,4),nsec:t.getUint32(0)};default:throw new m(\"Unrecognized data size for timestamp (expected 4, 8, or 12): \"+e.length)}}function T(e){var t=v(e);return new Date(1e3*t.sec+t.nsec/1e6)}var R={type:I,encode:S,decode:T},y=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(R)}return e.prototype.register=function(e){var t=e.type,i=e.encode,r=e.decode;if(t>=0)this.encoders[t]=i,this.decoders[t]=r;else{var n=1+t;this.builtInEncoders[n]=i,this.builtInDecoders[n]=r}},e.prototype.tryToEncode=function(e,t){for(var i=0;i<this.builtInEncoders.length;i++)if(null!=(r=this.builtInEncoders[i])&&null!=(n=r(e,t)))return new E(-1-i,n);for(i=0;i<this.encoders.length;i++){var r,n;if(null!=(r=this.encoders[i])&&null!=(n=r(e,t)))return new E(i,n)}return e instanceof E?e:null},e.prototype.decode=function(e,t,i){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,i):new E(t,e)},e.defaultCodec=new e,e}();function w(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var b=function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},N=function(){function e(e,t,i,r,n,o,s,a){void 0===e&&(e=y.defaultCodec),void 0===t&&(t=void 0),void 0===i&&(i=100),void 0===r&&(r=2048),void 0===n&&(n=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),void 0===a&&(a=!1),this.extensionCodec=e,this.context=t,this.maxDepth=i,this.initialBufferSize=r,this.sortKeys=n,this.forceFloat32=o,this.ignoreUndefined=s,this.forceIntegerToFloat=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.getUint8Array()},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error(\"Too deep objects in depth \"+t);null==e?this.encodeNil():\"boolean\"==typeof e?this.encodeBoolean(e):\"number\"==typeof e?this.encodeNumber(e):\"string\"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),i=new Uint8Array(t),r=new DataView(t);i.set(this.bytes),this.view=r,this.bytes=i},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error(\"Too long string: \"+e+\" bytes in UTF-8\");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){if(e.length>u){var t=c(e);this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),h(e,this.bytes,this.pos),this.pos+=t}else t=c(e),this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),function(e,t,i){for(var r=e.length,n=i,o=0;o<r;){var s=e.charCodeAt(o++);if(0!=(4294967168&s)){if(0==(4294965248&s))t[n++]=s>>6&31|192;else{if(s>=55296&&s<=56319&&o<r){var a=e.charCodeAt(o);56320==(64512&a)&&(++o,s=((1023&s)<<10)+(1023&a)+65536)}0==(4294901760&s)?(t[n++]=s>>12&15|224,t[n++]=s>>6&63|128):(t[n++]=s>>18&7|240,t[n++]=s>>12&63|128,t[n++]=s>>6&63|128)}t[n++]=63&s|128}else t[n++]=s}}(e,this.bytes,this.pos),this.pos+=t},e.prototype.encodeObject=function(e,t){var i=this.extensionCodec.tryToEncode(e,this.context);if(null!=i)this.encodeExtension(i);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if(\"object\"!=typeof e)throw new Error(\"Unrecognized object: \"+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error(\"Too large binary: \"+t);this.writeU8(198),this.writeU32(t)}var i=w(e);this.writeU8a(i)},e.prototype.encodeArray=function(e,t){var i,r,n=e.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error(\"Too large array: \"+n);this.writeU8(221),this.writeU32(n)}try{for(var o=b(e),s=o.next();!s.done;s=o.next()){var a=s.value;this.doEncode(a,t+1)}}catch(e){i={error:e}}finally{try{s&&!s.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}},e.prototype.countWithoutUndefined=function(e,t){var i,r,n=0;try{for(var o=b(t),s=o.next();!s.done;s=o.next())void 0!==e[s.value]&&n++}catch(e){i={error:e}}finally{try{s&&!s.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}return n},e.prototype.encodeMap=function(e,t){var i,r,n=Object.keys(e);this.sortKeys&&n.sort();var o=this.ignoreUndefined?this.countWithoutUndefined(e,n):n.length;if(o<16)this.writeU8(128+o);else if(o<65536)this.writeU8(222),this.writeU16(o);else{if(!(o<4294967296))throw new Error(\"Too large map object: \"+o);this.writeU8(223),this.writeU32(o)}try{for(var s=b(n),a=s.next();!a.done;a=s.next()){var c=a.value,d=e[c];this.ignoreUndefined&&void 0===d||(this.encodeString(c),this.doEncode(d,t+1))}}catch(e){i={error:e}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error(\"Too large extension object: \"+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,i){var r=i/4294967296,n=i;e.setUint32(t,r),e.setUint32(t+4,n)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),r(this.view,this.pos,e),this.pos+=8},e}(),O={};function D(e,t){return void 0===t&&(t=O),new N(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encode(e)}function P(e){return(e<0?\"-\":\"\")+\"0x\"+Math.abs(e).toString(16).padStart(2,\"0\")}var L=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var i=0;i<this.maxKeyLength;i++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,i){var r,n,o=this.caches[i-1];try{e:for(var s=function(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}(o),a=s.next();!a.done;a=s.next()){for(var c=a.value,d=c.bytes,u=0;u<i;u++)if(d[u]!==e[t+u])continue e;return c.str}}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(r)throw r.error}}return null},e.prototype.store=function(e,t){var i=this.caches[e.length-1],r={bytes:e,str:t};i.length>=this.maxLengthPerKey?i[Math.random()*i.length|0]=r:i.push(r)},e.prototype.decode=function(e,t,i){var r=this.find(e,t,i);if(null!=r)return this.hit++,r;this.miss++;var n=A(e,t,i),o=Uint8Array.prototype.slice.call(e,t,t+i);return this.store(o,n),n},e}(),k=function(e,t){var i,r,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(i)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(i=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{i=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},B=function(e){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var t,i=e[Symbol.asyncIterator];return i?i.call(e):(e=\"function\"==typeof __values?__values(e):e[Symbol.iterator](),t={},r(\"next\"),r(\"throw\"),r(\"return\"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=e[i]&&function(t){return new Promise((function(r,n){!function(e,t,i,r){Promise.resolve(r).then((function(t){e({value:t,done:i})}),t)}(r,n,(t=e[i](t)).done,t.value)}))}}},M=function(e){return this instanceof M?(this.v=e,this):new M(e)},U=function(e,t,i){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var r,n=i.apply(e,t||[]),o=[];return r={},s(\"next\"),s(\"throw\"),s(\"return\"),r[Symbol.asyncIterator]=function(){return this},r;function s(e){n[e]&&(r[e]=function(t){return new Promise((function(i,r){o.push([e,t,i,r])>1||a(e,t)}))})}function a(e,t){try{(i=n[e](t)).value instanceof M?Promise.resolve(i.value.v).then(c,d):u(o[0][2],i)}catch(e){u(o[0][3],e)}var i}function c(e){a(\"next\",e)}function d(e){a(\"throw\",e)}function u(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}},x=new DataView(new ArrayBuffer(0)),Q=new Uint8Array(x.buffer),F=function(){try{x.getInt8(0)}catch(e){return e.constructor}throw new Error(\"never reached\")}(),V=new F(\"Insufficient data\"),j=new L,G=function(){function e(e,t,r,n,o,s,a,c){void 0===e&&(e=y.defaultCodec),void 0===t&&(t=void 0),void 0===r&&(r=i),void 0===n&&(n=i),void 0===o&&(o=i),void 0===s&&(s=i),void 0===a&&(a=i),void 0===c&&(c=j),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=n,this.maxArrayLength=o,this.maxMapLength=s,this.maxExtLength=a,this.keyDecoder=c,this.totalPos=0,this.pos=0,this.view=x,this.bytes=Q,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},e.prototype.setBuffer=function(e){this.bytes=w(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=w(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining(1)){var t=this.bytes.subarray(this.pos),i=w(e),r=new Uint8Array(t.length+i.length);r.set(t),r.set(i,t.length),this.setBuffer(r)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},e.prototype.createExtraByteError=function(e){var t=this.view,i=this.pos;return new RangeError(\"Extra \"+(t.byteLength-i)+\" of \"+t.byteLength+\" byte(s) found at buffer[\"+e+\"]\")},e.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},e.prototype.decodeMulti=function(e){return k(this,(function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}}))},e.prototype.decodeAsync=function(e){var t,i,r,n,o,s,a,c;return o=this,s=void 0,c=function(){var o,s,a,c,d,u,h,A;return k(this,(function(l){switch(l.label){case 0:o=!1,l.label=1;case 1:l.trys.push([1,6,7,12]),t=B(e),l.label=2;case 2:return[4,t.next()];case 3:if((i=l.sent()).done)return[3,5];if(a=i.value,o)throw this.createExtraByteError(this.totalPos);this.appendBuffer(a);try{s=this.doDecodeSync(),o=!0}catch(e){if(!(e instanceof F))throw e}this.totalPos+=this.pos,l.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return c=l.sent(),r={error:c},[3,12];case 7:return l.trys.push([7,,10,11]),i&&!i.done&&(n=t.return)?[4,n.call(t)]:[3,9];case 8:l.sent(),l.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(o){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,s]}throw u=(d=this).headByte,h=d.pos,A=d.totalPos,new RangeError(\"Insufficient data in parsing \"+P(u)+\" at \"+A+\" (\"+h+\" in the current buffer)\")}}))},new((a=void 0)||(a=Promise))((function(e,t){function i(e){try{n(c.next(e))}catch(e){t(e)}}function r(e){try{n(c.throw(e))}catch(e){t(e)}}function n(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(i,r)}n((c=c.apply(o,s||[])).next())}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return U(this,arguments,(function(){var i,r,n,o,s,a,c,d,u;return k(this,(function(h){switch(h.label){case 0:i=t,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),n=B(e),h.label=2;case 2:return[4,M(n.next())];case 3:if((o=h.sent()).done)return[3,12];if(s=o.value,t&&0===r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(s),i&&(r=this.readArraySize(),i=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,M(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((a=h.sent())instanceof F))throw a;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return c=h.sent(),d={error:c},[3,19];case 14:return h.trys.push([14,,17,18]),o&&!o.done&&(u=n.return)?[4,M(u.call(n))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(d)throw d.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(r=e-128)){this.pushMapState(r),this.complete();continue e}t={}}else if(e<160){if(0!=(r=e-144)){this.pushArrayState(r),this.complete();continue e}t=[]}else{var i=e-160;t=this.decodeUtf8String(i,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)i=this.lookU8(),t=this.decodeUtf8String(i,1);else if(218===e)i=this.lookU16(),t=this.decodeUtf8String(i,2);else if(219===e)i=this.lookU32(),t=this.decodeUtf8String(i,4);else if(220===e){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(221===e){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(222===e){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue e}t={}}else if(223===e){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue e}t={}}else if(196===e){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(197===e)r=this.lookU16(),t=this.decodeBinary(r,2);else if(198===e)r=this.lookU32(),t=this.decodeBinary(r,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)r=this.lookU8(),t=this.decodeExtension(r,1);else if(200===e)r=this.lookU16(),t=this.decodeExtension(r,2);else{if(201!==e)throw new m(\"Unrecognized type byte: \"+P(e));r=this.lookU32(),t=this.decodeExtension(r,4)}this.complete();for(var n=this.stack;n.length>0;){var o=n[n.length-1];if(0===o.type){if(o.array[o.position]=t,o.position++,o.position!==o.size)continue e;n.pop(),t=o.array}else{if(1===o.type){if(\"string\"!=(s=typeof t)&&\"number\"!==s)throw new m(\"The type of key must be string or number but \"+typeof t);if(\"__proto__\"===t)throw new m(\"The key __proto__ is not allowed\");o.key=t,o.type=2;continue e}if(o.map[o.key]=t,o.readCount++,o.readCount!==o.size){o.key=null,o.type=1;continue e}n.pop(),t=o.map}}return t}var s},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new m(\"Unrecognized array type byte: \"+P(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new m(\"Max length exceeded: map length (\"+e+\") > maxMapLengthLength (\"+this.maxMapLength+\")\");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new m(\"Max length exceeded: array length (\"+e+\") > maxArrayLength (\"+this.maxArrayLength+\")\");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var i;if(e>this.maxStrLength)throw new m(\"Max length exceeded: UTF-8 byte length (\"+e+\") > maxStrLength (\"+this.maxStrLength+\")\");if(this.bytes.byteLength<this.pos+t+e)throw V;var r,n=this.pos+t;return r=this.stateIsMapKey()&&(null===(i=this.keyDecoder)||void 0===i?void 0:i.canBeCached(e))?this.keyDecoder.decode(this.bytes,n,e):e>g?function(e,t,i){var r=e.subarray(t,t+i);return p.decode(r)}(this.bytes,n,e):A(this.bytes,n,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new m(\"Max length exceeded: bin length (\"+e+\") > maxBinLength (\"+this.maxBinLength+\")\");if(!this.hasRemaining(e+t))throw V;var i=this.pos+t,r=this.bytes.subarray(i,i+e);return this.pos+=t+e,r},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new m(\"Max length exceeded: ext length (\"+e+\") > maxExtLength (\"+this.maxExtLength+\")\");var i=this.view.getInt8(this.pos+t),r=this.decodeBinary(e,t+1);return this.extensionCodec.decode(r,i,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,i=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,i},e.prototype.readI64=function(){var e=n(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),K={};function H(e,t){return void 0===t&&(t=K),new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}function W(e,t){return void 0===t&&(t=K),new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeMulti(e)}var Y=function(e,t){var i,r,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(i)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(i=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{i=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},J=function(e){return this instanceof J?(this.v=e,this):new J(e)},q=function(e,t,i){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var r,n=i.apply(e,t||[]),o=[];return r={},s(\"next\"),s(\"throw\"),s(\"return\"),r[Symbol.asyncIterator]=function(){return this},r;function s(e){n[e]&&(r[e]=function(t){return new Promise((function(i,r){o.push([e,t,i,r])>1||a(e,t)}))})}function a(e,t){try{(i=n[e](t)).value instanceof J?Promise.resolve(i.value.v).then(c,d):u(o[0][2],i)}catch(e){u(o[0][3],e)}var i}function c(e){a(\"next\",e)}function d(e){a(\"throw\",e)}function u(e,t){e(t),o.shift(),o.length&&a(o[0][0],o[0][1])}};function X(e){if(null==e)throw new Error(\"Assertion Failure: value must not be null nor undefined\")}function z(e){return null!=e[Symbol.asyncIterator]?e:function(e){return q(this,arguments,(function(){var t,i,r,n;return Y(this,(function(o){switch(o.label){case 0:t=e.getReader(),o.label=1;case 1:o.trys.push([1,,9,10]),o.label=2;case 2:return[4,J(t.read())];case 3:return i=o.sent(),r=i.done,n=i.value,r?[4,J(void 0)]:[3,5];case 4:return[2,o.sent()];case 5:return X(n),[4,J(n)];case 6:return[4,o.sent()];case 7:return o.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function Z(e,t){return void 0===t&&(t=K),i=this,r=void 0,o=function(){var i;return function(e,t){var i,r,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(i)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(i=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((n=(n=s.trys).length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{i=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(r){return i=z(e),[2,new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeAsync(i)]}))},new((n=void 0)||(n=Promise))((function(e,t){function s(e){try{c(o.next(e))}catch(e){t(e)}}function a(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(s,a)}c((o=o.apply(i,r||[])).next())}));var i,r,n,o}function $(e,t){void 0===t&&(t=K);var i=z(e);return new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(i)}function ee(e,t){void 0===t&&(t=K);var i=z(e);return new G(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(i)}function te(e,t){return void 0===t&&(t=K),ee(e,t)}return t}()}(MJ),(0,gU.exports)(\"Int8\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),(0,gU.exports)(\"Int16\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),(0,gU.exports)(\"Int32\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),(0,gU.exports)(\"Uint16\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),(0,gU.exports)(\"Uint32\",(function(e){return function(t,i,r){return e(this,t,i,r)}})),(0,gU.exports)(\"Float64\",(function(e){return function(t,i,r){return e(this,t,i,r)}}));const UJ=()=>function(e){const t=window.atob(e).split(\"\").map(e=>e.charCodeAt(0));return new Uint8Array(t,0,t.length/Uint8Array.BYTES_PER_ELEMENT)}(\"\");let xJ,QJ;async function FJ(){if(xJ)return xJ;const e={};let t,i={};for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(i[t]=e[t]);let r=!1,n=!1;r=\"object\"==typeof window,n=\"function\"==typeof importScripts,\"object\"==typeof process&&\"object\"==typeof process.versions&&process.versions.node;let o=\"\";(r||n)&&(n?o=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(o=document.currentScript.src),o=0!==o.indexOf(\"blob:\")?o.substr(0,o.lastIndexOf(\"/\")+1):\"\"),e.print||console.log.bind(console);const s=e.printErr||console.warn.bind(console);for(t in i)Object.prototype.hasOwnProperty.call(i,t)&&(e[t]=i[t]);let a;i=null,e.arguments,e.thisProgram,e.quit,e.wasmBinary,e.noExitRuntime,\"object\"!=typeof WebAssembly&&C(\"no native wasm support detected\");let c=!1;function d(t){const i=e[\"_\"+t];var r;return r=\"Cannot call unknown function \"+t+\", make sure it is exported\",i||C(\"Assertion failed: \"+r),i}function u(e,t,i,r,n){const o={string:function(e){let t=0;if(null!=e&&0!==e){const i=1+(e.length<<2);t=D(i),function(e,t,i){(function(e,t,i,r){if(!(r>0))return 0;const n=i,o=i+r-1;for(let r=0;r<e.length;++r){let n=e.charCodeAt(r);if(n>=55296&&n<=57343){n=65536+((1023&n)<<10)|1023&e.charCodeAt(++r)}if(n<=127){if(i>=o)break;t[i++]=n}else if(n<=2047){if(i+1>=o)break;t[i++]=192|n>>6,t[i++]=128|63&n}else if(n<=65535){if(i+2>=o)break;t[i++]=224|n>>12,t[i++]=128|n>>6&63,t[i++]=128|63&n}else{if(i+3>=o)break;t[i++]=240|n>>18,t[i++]=128|n>>12&63,t[i++]=128|n>>6&63,t[i++]=128|63&n}}t[i]=0})(e,l,t,i)}(e,t,i)}return t},array:function(e){const t=D(e.length);var i,r;return i=e,r=t,A.set(i,r),t}};const s=d(e),a=[];let c=0;if(r)for(let e=0;e<r.length;e++){const t=o[i[e]];t?(0===c&&(c=N()),a[e]=t(r[e])):a[e]=r[e]}let u=s.apply(null,a);return u=function(e){return\"string\"===t?(i=e)?function(e,t,i){const r=t+i;let n=t,o=\"\";for(;e[n]&&!(n>=r);)++n;if(n-t>16&&e.subarray&&h)return h.decode(e.subarray(t,n));for(;t<n;){let i=e[t++];if(!(128&i)){o+=String.fromCharCode(i);continue}const r=63&e[t++];if(192==(224&i)){o+=String.fromCharCode((31&i)<<6|r);continue}const n=63&e[t++];if(i=224==(240&i)?(15&i)<<12|r<<6|n:(7&i)<<18|r<<12|n<<6|63&e[t++],i<65536)o+=String.fromCharCode(i);else{const e=i-65536;o+=String.fromCharCode(55296|e>>10,56320|1023&e)}}return o}(l,i,r):\"\":\"boolean\"===t?Boolean(e):e;var i,r}(u),0!==c&&O(c),u}const h=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;let A,l,p;\"undefined\"!=typeof TextDecoder&&new TextDecoder(\"utf-16le\"),e.INITIAL_MEMORY;const g=[],E=[],f=[],m=[];E.push({func:function(){y()}});let I=0,_=null;function C(t){e.onAbort&&e.onAbort(t),s(t+=\"\"),c=!0,t=\"abort(\"+t+\"). Build with -s ASSERTIONS=1 for more info.\";throw new WebAssembly.RuntimeError(t)}e.preloadedImages={},e.preloadedAudios={};let S=\"deflate.wasm\";var v;function T(t){for(;t.length>0;){const i=t.shift();if(\"function\"==typeof i){i(e);continue}const r=i.func;\"number\"==typeof r?void 0===i.arg?p.get(r)():p.get(r)(i.arg):r(void 0===i.arg?null:i.arg)}}v=\"data:application/octet-stream;base64,\",S.startsWith(v)||(S=function(t){return e.locateFile?e.locateFile(t,o):o+t}(S));const R={emscripten_memcpy_big:function(e,t,i){l.copyWithin(e,t,t+i)},emscripten_resize_heap:function(e){C(\"OOM\")}};await async function(){const t={env:R,wasi_snapshot_preview1:R};function i(t,i){const r=t.exports;var n;e.asm=r,a=e.asm.memory,n=a.buffer,e.HEAP8=A=new Int8Array(n),e.HEAP16=new Int16Array(n),e.HEAP32=new Int32Array(n),e.HEAPU8=l=new Uint8Array(n),e.HEAPU16=new Uint16Array(n),e.HEAPU32=new Uint32Array(n),e.HEAPF32=new Float32Array(n),e.HEAPF64=new Float64Array(n),p=e.asm.__indirect_function_table,function(t){if(I--,e.monitorRunDependencies&&e.monitorRunDependencies(I),0==I&&_){const e=_;_=null,e()}}()}function r(e){i(e.instance)}function n(e){return new l_((e,t)=>{e(UJ().buffer)}).then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){s(\"failed to asynchronously prepare wasm: \"+e),C(e)}))}if(I++,e.monitorRunDependencies&&e.monitorRunDependencies(I),e.instantiateWasm)try{return e.instantiateWasm(t,i)}catch(e){return s(\"Module.instantiateWasm callback failed with error: \"+e),!1}return await n(r),{}}();let y=e.___wasm_call_ctors=function(){return(y=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},w=e._malloc=function(){return(w=e._malloc=e.asm.malloc).apply(null,arguments)};e._free=function(){return(e._free=e.asm.free).apply(null,arguments)},e.___errno_location=function(){return(e.___errno_location=e.asm.__errno_location).apply(null,arguments)},e._zlibCompress=function(){return(e._zlibCompress=e.asm.zlibCompress).apply(null,arguments)};let b,N=e.stackSave=function(){return(N=e.stackSave=e.asm.stackSave).apply(null,arguments)},O=e.stackRestore=function(){return(O=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},D=e.stackAlloc=function(){return(D=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)};function P(t){function i(){b||(b=!0,e.calledRun=!0,c||(T(E),T(f),e.onRuntimeInitialized&&e.onRuntimeInitialized(),function(){if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)t=e.postRun.shift(),m.unshift(t);var t;T(m)}()))}I>0||(!function(){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)t=e.preRun.shift(),g.unshift(t);var t;T(g)}(),I>0||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){e.setStatus(\"\")}),1),i()}),1)):i()))}if(e.ccall=u,e.cwrap=function(e,t,i,r){const n=(i=i||[]).every((function(e){return\"number\"===e}));return\"string\"!==t&&n&&!r?d(e):function(){return u(e,t,i,arguments)}},e.allocate=function(e,t){let i;return i=1==t?D(e.length):w(e.length),e.subarray||e.slice?l.set(e,i):l.set(new Uint8Array(e),i),i},_=function e(){b||P(),b||(_=e)},e.run=P,e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return P(),xJ=e,e}const VJ=Uint8Array.BYTES_PER_ELEMENT;const jJ={bytesReceived:\"br\",frameDropped:\"fd\",frameReceived:\"fr\",googJitterReceived:\"jr\",isAudioMute:\"am\",isFreeze:\"fz\",mediaType:\"mt\",packetsLost:\"pl\",packetsReceived:\"pr\",peerId:\"pid\",id:\"id\",ssrc:\"ssrc\",timestamp:\"ts\",type:\"tp\",frameRateInput:\"fi\",frameRateSent:\"fs\",googRtt:\"rt\",isVideoMute:\"vm\"},GJ={stats:\"sts\",state:\"st\",stream_id:\"stid\",session_id:\"seid\",stream_type:\"stt\",app_id:\"aid\",channel_key:\"ck\",channel_name:\"cn\",sdk_version:\"sv\",browser:\"b\",process_id:\"pcid\",mode:\"m\",codec:\"c\",role:\"r\",has_changed_gateway:\"hcg\",ap_response:\"ar\",extends:\"es\",details:\"d\",features:\"ft\",p2p_id:\"ppid\",sdp:\"sdp\",audio:\"a\",video:\"v\",attributes:\"at\",hq:\"h\",lq:\"l\",stereo:\"str\",speech:\"spe\",extend:\"e\",pingpongElapse:\"ppe\"},KJ={_message:\"m\",_type:\"t\",_id:\"id\"},HJ={join_v2:\"j2\",publish:\"pub\",publish_related_stats:\"prs\",ping:\"pi\",traffic_stats:\"ts\",ping_back:\"pib\",publish_stats:\"pubs\"};let WJ;class YJ{constructor(){MN(this,\"zlibCompress\",void 0)}async init(){if(!WJ){const e=await(async()=>(QJ||(QJ=await FJ()),{zlibCompress:e=>{const t=new Uint8Array(e),i=VJ*t.byteLength,r=QJ._malloc(i),n=QJ._malloc(3*i);for(let e=0;e<i;e++)QJ.HEAP8[r/VJ+e]=t[e];const o=QJ._zlibCompress(r,i,n),s=new Uint8Array(QJ.HEAP8.slice(n,n+o));return QJ._free(r),QJ._free(n),s}}))();WJ=e.zlibCompress}this.zlibCompress=WJ}msgPackCompress(e){return MJ.exports.encode(e)}compress(e){const t=Date.now(),i=this.compressKeyAndValue(JSON.parse(JSON.stringify(e))),r=this.msgPackCompress(i),n=this.zlibCompress(r),o=new Uint8Array([49,49,49,50,...Array.from(n)]);return{origin:Object.assign({},e),originLength:JSON.stringify(e).length,shortKeyAndValue:i,msgpackSer:r,compressed:o,compressedLength:o.length,time:Date.now()-t}}compressKeyAndValue(e){return this._ObjectKeyCompress(this._typeCompress(e))}_typeCompress(e){const t=e._type;if(!t)return e;const i=HJ[t];return e._type=i||t,e}_ObjectKeyCompress(e){const t=e._message;if(t){const i=t.stats;i&&(t.stats=this._statsCompress(i)),e._message=this._messageCompress(t)}return this._reportCompress(e)}_statsCompress(e){return this._keyCompress(e,jJ)}_messageCompress(e){return this._keyCompress(e,GJ)}_reportCompress(e){return this._keyCompress(e,KJ)}_keyCompress(e,t){const i={},r=Object.keys(e);return cc(r).call(r,(r,n)=>{const o=e[n];return t[n]?i[t[n]]=o:i[n]=o,i},i),i}}class JJ extends MD{get queue(){return[...this.highPriorityQueue,...this.lowPriorityQueue]}constructor(e){super(),MN(this,\"lowPriorityQueue\",[]),MN(this,\"highPriorityQueue\",[]),MN(this,\"AgoraWebSocketManager\",void 0),this.AgoraWebSocketManager=e}reset(){this.lowPriorityQueue=[],this.highPriorityQueue=[]}pushMessage(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this.highPriorityQueue.push(e):this.lowPriorityQueue.push(e),this.sendMessage()}sendMessage(){const e=this.queue.length;let t=0;t=e<5?15*e:60+3*(e-4),setTimeout(()=>{this._sendMessage()},t)}_sendMessage(){if(!this.queue.length)return;const e=this.AgoraWebSocketManager.getConnection();if(!e||1!==e.readyState)return;const t=this.queue.shift();return this.lowPriorityQueue.includes(t)?this.lowPriorityQueue.shift():this.highPriorityQueue.shift(),e.send(t.compressed),t}}var qJ;function XJ(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}let zJ=mP(\"AgoraWebSocketManager\",\"connectionID\")(qJ=class extends MD{get url(){return this.websocket?this.websocket.url:null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){[\"tryNext\",\"recover\"].includes(e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(Lk.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(Lk.CONNECTED):\"closed\"===this._state?this.emit(Lk.CLOSED):\"failed\"===this._state&&this.emit(Lk.FAILED))}resetReconnectCount(e){JD.debug(\"websocket reset reconnect count, reason: \"+e),gP(\"debug\",this,\"resetReconnectCount\",e,\"websocket reset reconnect count, reason: \"+e),this.reconnectCount=0}constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4?arguments[4]:void 0;super(),MN(this,\"connectionID\",0),MN(this,\"currentURLIndex\",0),MN(this,\"urls\",void 0),MN(this,\"_reconnectMode\",\"tryNext\"),MN(this,\"reconnectReason\",void 0),MN(this,\"_initMutex\",new fj(\"websocket\")),MN(this,\"name\",void 0),MN(this,\"_state\",\"closed\"),MN(this,\"reconnectInterrupter\",void 0),MN(this,\"websocket\",void 0),MN(this,\"retryConfig\",void 0),MN(this,\"reconnectCount\",0),MN(this,\"forceCloseTimeout\",5e3),MN(this,\"onlineReconnectListener\",void 0),MN(this,\"compressor\",new YJ),MN(this,\"compressorInitStatus\",\"initializing\"),MN(this,\"compress\",void 0),MN(this,\"messageSender\",void 0),MN(this,\"useCompress\",void 0),MN(this,\"tryDoubleDomain\",!1),MN(this,\"wsInflateLength\",0),MN(this,\"wsDeflateLength\",0),MN(this,\"closeEstablishingWs\",()=>{}),MN(this,\"store\",void 0),MN(this,\"joinChannelServiceRecordIndex\",void 0),this.store=n,this.name=e,this.retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?XJ(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):XJ(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this.useCompress=i,this.tryDoubleDomain=r;const{timeout:o,timeoutFactor:s}=t,a=Math.max(300,Math.floor(3*o/5)),c=Math.max(1.2,Math.floor(8*s)/10);EB.ONLINE&&(this.retryConfig.timeout=a,this.retryConfig.timeoutFactor=c),ij.on(fB.NETWORK_STATE_CHANGE,(e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===EB.ONLINE?(this.retryConfig.timeout=a,this.retryConfig.timeoutFactor=c):(this.retryConfig.timeout=o,this.retryConfig.timeoutFactor=s))});const d=Date.now();this.compressor.init().then(()=>{this.compressorInitStatus=\"initialized\";const e=Date.now()-d;JD.debug(\"websocket compressor initialized successfully in \".concat(e,\"ms\")),gP(\"debug\",this.compressor,\"init\",void 0,\"websocket compressor initialized successfully in \".concat(e,\"ms\")),pj.wsCompressorInit({status:!0,ec:null,eventElapse:e}),this.compress=this.compressor.compress.bind(this.compressor)}).catch(e=>{this.compressorInitStatus=\"failed\";const t=e?e.message||e.toString():\"Empty Error\";JD.debug(\"websocket compressor failed to initialize because of \".concat(t)),gP(\"debug\",this.compressor,\"init\",void 0,\"websocket compressor failed to initialize because of \".concat(t)),pj.wsCompressorInit({status:!1,ec:t,eventElapse:1})})}getConnection(){return this.websocket||void 0}init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this.forceCloseTimeout=t;const i=(t,i)=>{this.urls=e;const r=this.urls[this.currentURLIndex];this.state=\"connecting\",this.messageSender=new JJ(this),this.createWebSocketConnection(r).then(t).catch(i),this.once(Lk.CLOSED,()=>i(new QD(xD.WS_DISCONNECT))),this.once(Lk.CONNECTED,()=>t())};return this._initMutex.lock().then(e=>new l_((e,t)=>{i(e,t)}).then(()=>{e()}).catch(()=>{e()}))}close(e,t){if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),this.reconnectInterrupter&&this.reconnectInterrupter(),this.websocket){this.websocket.onclose=null,this.websocket.onopen=null,this.websocket.onmessage=null;const e=this.websocket;t?setTimeout(()=>e.close(),500):e.close(),this.websocket=void 0}this.state=e?\"failed\":\"closed\",this.closeEstablishingWs&&this.closeEstablishingWs()}reconnect(e,t){if(!this.websocket)return JD.warning(\"[\".concat(this.name,\"] can not reconnect, no websocket\")),void gP(\"warning\",this,\"reconnect\",\"can not reconnect, no websocket\");var i;(void 0!==e&&(this.reconnectMode=e),JD.debug(\"[\".concat(this.name,\"] reconnect is triggered initiative\")),gP(\"debug\",this,\"reconnect\"),\"number\"==typeof this.joinChannelServiceRecordIndex)&&(null===(i=this.store)||void 0===i||i.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this.joinChannelServiceRecordIndex));const r=this.websocket.onclose;this.websocket.onclose=null,this.websocket.close(),r&&r.bind(this.websocket)({code:9999,reason:t})}sendMessageWithJSON(e){const t=JSON.stringify(e);return{compressed:t,compressedLength:t.length,origin:e}}sendMessageWithUint8Array(e){return{compressed:e,compressedLength:e.byteLength,origin:e}}sendMessage(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new QD(xD.WS_ABORT,\"websocket is not ready\");try{let r=null;if(i)r=this.sendMessageWithUint8Array(e);else if(\"initialized\"===this.compressorInitStatus&&this.useCompress&&LP(\"WEBSOCKET_COMPRESS\"))try{r=this.compress(e),this.setWsInflateData(r)}catch(t){r=this.sendMessageWithJSON(e)}else r=this.sendMessageWithJSON(e);t?this.websocket.send(r.compressed):this.messageSender.pushMessage(r)}catch(e){throw new QD(xD.WS_ERR,\"send websocket message error\"+e.toString())}}setWsInflateData(e){this.wsDeflateLength=this.wsDeflateLength+e.originLength,this.wsInflateLength=this.wsInflateLength+e.compressedLength}getWsInflateData(){const e=this.wsInflateLength,t=this.wsDeflateLength;return this.clearWsInflateData(),{wsInflateLength:e,wsDeflateLength:t}}clearWsInflateData(){this.wsInflateLength=0,this.wsDeflateLength=0}async createWebSocketConnection(e,t){return this.connectionID+=1,this.connectionID,this.joinChannelServiceRecordIndex=void 0,new l_((i,r)=>{var n;const o=()=>{var t;null===(t=this.store)||void 0===t||t.signalChannelOpen(),JD.debug(\"[\".concat(this.name,\"] websocket opened:\"),e),pP(\"debug\",[\"WebSocket\",this.connectionID],\"open\",e),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),i()},s=async e=>{if(JD.debug(\"[\".concat(this.name,\"] websocket close \").concat(this.websocket&&this.websocket.url,\", code: \").concat(e.code,\", reason: \").concat(e.reason,\", current mode: \").concat(this.reconnectMode)),pP(\"debug\",[\"WebSocket\",this.connectionID],\"close\",{code:e.code,reason:e.reason,url:this.websocket&&this.websocket.url,reconnectMode:this.reconnectMode}),this.reconnectCount<this.retryConfig.maxRetryCount){\"connected\"===this.state&&(this.reconnectReason=e.reason,this.state=\"reconnecting\");const t=wK(this,Lk.WILL_RECONNECT,this.reconnectMode)||this.reconnectMode,n=await this.reconnectWithAction(t);if(\"closed\"===this.state)return JD.debug(\"[\".concat(this.connectionID,\"] ws is closed, no need to reconnect\")),void hP(\"debug\",this,\"ws is closed, no need to reconnect\");if(!n)return r(new QD(xD.WS_DISCONNECT,\"websocket reconnect failed: \".concat(e.code))),void this.close(!0);i()}else r(new QD(xD.WS_DISCONNECT,\"websocket close: \".concat(e.code))),this.close()},a=e=>{this.emit(Lk.ON_MESSAGE,e)};this.websocket&&(this.websocket.onclose=null,this.websocket.close()),LP(\"GATEWAY_WSS_ADDRESS\")&&this.name.startsWith(\"gateway\")&&(e=LP(\"GATEWAY_WSS_ADDRESS\")),JD.debug(\"[\".concat(this.name,\"] start connect, url: \").concat(e)),hP(\"debug\",this,\"start connect, url: \".concat(e));const c=null===(n=this.store)||void 0===n?void 0:n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"});this.chooseBestWebsocketConnection(e,!!t,c).then(e=>{var t;this.websocket=e,o&&o(),e.onclose=s,e.onmessage=a,null===(t=this.store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:\"success\"},c),this.joinChannelServiceRecordIndex=c}).catch(e=>{var t;if(null===(t=this.store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:e instanceof QD&&e.code===xD.WS_ABORT?\"aborted\":\"error\",errors:[e]},c),\"closed\"!==this.state){if(e instanceof QD&&e.code===xD.WS_ERR){const t=new QD(xD.WS_ERR,\"init websocket failed! Error: \".concat(e.toString()));return JD.error(\"[\".concat(this.name,\"]\").concat(t)),gP(\"error\",this,\"chooseBestWebsocketConnection\",void 0,e.toString()),void r(t)}s&&s(e)}else r(new QD(xD.WS_DISCONNECT,\"websocket is closed: \".concat(e.toString())))})})}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.reconnectCount>=this.retryConfig.maxRetryCount)return!1;if(!this.urls)return!1;if(\"closed\"===this.state)return!1;this.onlineReconnectListener||ij.networkState!==EB.OFFLINE||(this.onlineReconnectListener=ij.onlineWaiter&&ij.onlineWaiter.then(()=>{this.onlineReconnectListener=void 0}));let i=!0;if(this.reconnectInterrupter=()=>{i=!1},t){const t=VD(this.reconnectCount,this.retryConfig);JD.debug(\"[\".concat(this.name,\"] wait \").concat(t,\"ms to reconnect websocket, mode: \").concat(e)),gP(\"debug\",this,\"reconnectWithAction\",{timeout:t,action:e}),await l_.race([mK(t),this.onlineReconnectListener||new l_(()=>{})])}if(\"closed\"===this.state||!i)return!1;this.reconnectCount+=1;const r=async(e,t)=>{this.emit(Lk.RECONNECT_CREATE_CONNECTION,t),await this.createWebSocketConnection(e)};try{if(\"retry\"===e){const t=this.urls[this.currentURLIndex];this.emit(Lk.RECONNECT_WAITTING_FINISH,e),await r(t,e)}else if(\"tryNext\"===e){if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return await this.reconnectWithAction(\"recover\",!1);JD.debug(\"[\".concat(this.name,\"] websocket url length: \").concat(this.urls.length,\" current index: \").concat(this.currentURLIndex)),hP(\"debug\",this,\"websocket url length: \".concat(this.urls.length,\" current index: \").concat(this.currentURLIndex));const t=this.urls[this.currentURLIndex];this.emit(Lk.RECONNECT_WAITTING_FINISH,e),await r(t,e)}else if(\"recover\"===e){JD.debug(\"[\".concat(this.name,\"] request new urls\")),hP(\"debug\",this,\"request new urls\"),this.resetReconnectCount(\"recover mode\"),this.emit(Lk.RECONNECT_WAITTING_FINISH,e),this.urls=await RK(this,Lk.REQUEST_NEW_URLS),this.currentURLIndex=0;const t=this.urls[this.currentURLIndex];await r(t,e)}return!0}catch(i){var n;return JD.error(\"[\".concat(this.name,\"] reconnect failed\"),i.toString()),gP(\"error\",this,\"reconnectWithAction\",void 0,i.toString()),null!=i&&null!==(n=i.data)&&void 0!==n&&n.desc&&Array.isArray(i.data.desc)&&i.data.desc.length&&i.data.desc.includes(\"dynamic key expired\")?(this.emit(Lk.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):await this.reconnectWithAction(e,t)}}async chooseBestWebsocketConnection(e,t,i){return new l_((r,n)=>{let o=!1;const s=[];this.closeEstablishingWs=()=>{JD.debug(\"[choose-best-ws] close establishing websockets\"),s.forEach(e=>{e.onclose=null,e.onopen=null,e.onmessage=null,e.close()}),n(new QD(xD.WS_ABORT,\"choose best websocket aborted\"))};const a=LP(\"GATEWAY_DOMAINS\");let c;const d=e.indexOf(\"?h=\"),u=a.find(t=>-1!==d?e.includes(t,d):e.includes(t));JD.debug(\"[choose-best-ws] currentDomain: \",u,\", domains: \",a),gP(\"debug\",this,\"chooseBestWebsocketConnection\",{currentDomain:u,domains:a});let h=!this.tryDoubleDomain||t||!u;if(!h&&u){var A;const t=Date.now();try{a.forEach(t=>{const i=-1===d?e.replace(u,t):e.substr(0,d)+e.substr(d).replace(u,t),r=new WebSocket(i);r.binaryType=\"arraybuffer\",s.push(r),JD.debug(\"[choose-best-ws] ws is connecting:\",r.url),hP(\"debug\",this,\"ws is connecting: \".concat(r.url))})}catch(e){for(JD.debug(\"[choose-best-ws] ws create failed, fallback to single url\"),hP(\"debug\",this,\"ws create failed, fallback to single url\"),s.forEach(e=>e.close());s.length;)s.pop();h=!0}null===(A=this.store)||void 0===A||A.recordJoinChannelService({urls:s.map(e=>e.url),service:\"gateway\"},i),s.forEach(e=>{e.onopen=()=>{if(o)return;const i=Date.now()-t;JD.debug(\"[choose-best-ws] ws open cost \".concat(i,\"ms\")),s.filter(t=>t!==e).forEach(e=>{JD.debug(\"[choose-best-ws]close backup websocket: \".concat(e.url)),hP(\"debug\",this,\"close backup websocket: \".concat(e.url)),e.close()}),o=!0,r(e)},e.onclose=e=>{if(c=e,o)return;s.find(e=>!(e.readyState===WebSocket.CLOSED||e.readyState===WebSocket.CLOSING))||(JD.debug(\"[choose-best-ws] all websocket is closed\"),hP(\"debug\",this,\"all websocket is closed\"),o=!0,n(c))},e.onmessage=t=>{JD.debug(\"[choose-best-ws]\".concat(e.url,\" onmessage: \").concat(t.data)),hP(\"debug\",this,\"\".concat(e.url,\" onmessage: \").concat(t.data))}}),mK(this.forceCloseTimeout).then(()=>{s.forEach(e=>{e.readyState!==WebSocket.OPEN&&e.close()})})}if(h){var l;let t;JD.debug(\"[choose-best-ws] use single url: \",e),hP(\"debug\",this,\"use single url: \".concat(e)),null===(l=this.store)||void 0===l||l.recordJoinChannelService({urls:[e],service:\"gateway\"},i);try{t=new WebSocket(e),s.push(t),t.binaryType=\"arraybuffer\"}catch(e){const t=new QD(xD.WS_ERR,\"init websocket failed! Error: \".concat(e.toString()));return JD.error(\"[\".concat(this.name,\"]\").concat(t)),gP(\"error\",this,\"chooseBestWebsocketConnection\",void 0,e.toString()),void n(t)}t.onopen=()=>{r(t)},t.onclose=e=>{n(e)},t.onmessage=e=>{JD.debug(\"[choose-best-ws]\".concat(t.url,\" onmessage: \").concat(e.data)),hP(\"debug\",this,\"\".concat(t.url,\" onmessage: \").concat(e.data))},mK(this.forceCloseTimeout).then(()=>{t&&t.readyState!==WebSocket.OPEN&&t.close()})}}).then(e=>(this.closeEstablishingWs=void 0,e)).catch(e=>{throw this.closeEstablishingWs=void 0,e})}})||qJ;class ZJ{constructor(e){MN(this,\"input\",[]),MN(this,\"size\",void 0),this.size=e}add(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)}mean(){var e;return 0===this.input.length?0:cc(e=this.input).call(e,(e,t)=>e+t)/this.input.length}}var $J;let eq,tq=mP(\"AgoraRTCSignal\",\"websocket.connectionID\")($J=class extends MD{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===Ek.CONNECTED?this.emit(fk.WS_CONNECTED):e===Ek.RECONNECTING?this.emit(fk.WS_RECONNECTING,this._websocketReconnectReason):e===Ek.CLOSED&&this.emit(fk.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket?this.websocket.url:null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),MN(this,\"_disconnectedReason\",void 0),MN(this,\"_websocketReconnectReason\",void 0),MN(this,\"_connectionState\",Ek.CLOSED),MN(this,\"reconnectToken\",void 0),MN(this,\"websocket\",void 0),MN(this,\"openConnectionTime\",void 0),MN(this,\"clientId\",void 0),MN(this,\"lastMsgTime\",Date.now()),MN(this,\"uploadCache\",[]),MN(this,\"uploadCacheInterval\",void 0),MN(this,\"rttRolling\",new ZJ(5)),MN(this,\"pingpongTimer\",void 0),MN(this,\"wsInflateDataTimer\",void 0),MN(this,\"pingpongTimeoutCount\",0),MN(this,\"joinResponse\",void 0),MN(this,\"multiIpOption\",void 0),MN(this,\"initError\",void 0),MN(this,\"spec\",void 0),MN(this,\"store\",void 0),MN(this,\"onWebsocketMessage\",e=>{if(e.data instanceof ArrayBuffer)return void this.emit(fk.ON_BINARY_DATA,e.data);const t=JSON.parse(e.data);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")){if(this.emit(t._type,t._message),t._type===_k.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===_k.ON_USER_BANNED)switch(t._message.error_code){case 14:this.close(lk.UID_BANNED);break;case 15:this.close(lk.IP_BANNED);break;case 16:this.close(lk.CHANNEL_BANNED)}if(t._type===_k.ON_USER_LICENSE_BANNED)switch(t._message.error_code){case hk.ERR_LICENSE_MISSING:this.close(lk.LICENSE_MISSING);break;case hk.ERR_LICENSE_EXPIRED:this.close(lk.LICENSE_EXPIRED);break;case hk.ERR_LICENSE_MINUTES_EXCEEDED:this.close(lk.LICENSE_MINUTES_EXCEEDED);break;case hk.ERR_LICENSE_PERIOD_INVALID:this.close(lk.LICENSE_PERIOD_INVALID);break;case hk.ERR_LICENSE_MULTIPLE_SDK_SERVICE:this.close(lk.LICENSE_MULTIPLE_SDK_SERVICE);break;case hk.ERR_LICENSE_ILLEGAL:this.close(lk.LICENSE_ILLEGAL);break;default:this.close()}}}),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new zJ(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,!0,t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",()=>{this.connectionState===Ek.CONNECTED&&this.reconnect(\"retry\",gk.OFFLINE)})}async request(e,t,i,r){const n=_K(6,\"\"),o={_id:n,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new l_((t,i)=>{if(this.connectionState===Ek.CONNECTED)return t();const r=()=>{this.off(fk.WS_CLOSED,n),t()},n=()=>{this.off(fk.WS_CONNECTED,r),i(new QD(xD.WS_ABORT))};this.once(fk.WS_CONNECTED,r),this.once(fk.WS_CLOSED,n),e!==mk.PUBLISH&&e!==mk.SUBSCRIBE&&e!==mk.UNSUBSCRIBE&&e!==mk.UNPUBLISH&&e!==mk.CONTROL&&e!==mk.RESTART_ICE||this.once(fk.DISCONNECT_P2P,()=>{i(new QD(xD.DISCONNECT_P2P))}),e!==mk.PUBLISH&&e!==mk.RESTART_ICE||this.once(fk.ABORT_P2P_EXECUTION,()=>{i(new QD(xD.DISCONNECT_P2P))})});if(this.connectionState!==Ek.CONNECTING&&this.connectionState!==Ek.RECONNECTING||e===mk.JOIN||e===mk.REJOIN||await a(),this.websocket.sendMessage(o,!0),r)return;const c=new l_((i,r)=>{let o=!1;const a=(r,n)=>{o=!0,i({isSuccess:\"success\"===r,message:n||{}}),this.off(fk.WS_CLOSED,c),this.off(fk.WS_RECONNECTING,c),this.emit(fk.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(n),a);const c=()=>{r(new QD(xD.WS_ABORT,\"type: \".concat(e))),this.off(fk.WS_CLOSED,c),this.off(fk.WS_RECONNECTING,c),this.off(\"res-@\".concat(n),a)};this.once(fk.WS_CLOSED,c),this.once(fk.WS_RECONNECTING,c),mK(LP(\"SIGNAL_REQUEST_TIMEOUT\")).then(()=>{this.websocket.connectionID!==s||o||(JD.warning(\"ws request timeout, type: \".concat(e)),hP(\"warning\",this,\"ws request timeout, type: \".concat(e)),this.emit(fk.REQUEST_TIMEOUT,e,t))})});let d=null;try{d=await c}catch(r){if(this.connectionState===Ek.CLOSED||e===mk.LEAVE)throw new QD(xD.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?r.throw():e===mk.JOIN||e===mk.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const u=Number(d.message.error_code||d.message.code),h=BJ(u),A=new QD(xD.UNEXPECTED_RESPONSE,\"\".concat(h.desc,\": \").concat(d.message.error_str),{code:u,data:d.message});return\"success\"===h.action?d.message:(JD.warning(\"[\".concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(u,\", message: \").concat(h.desc,\", action: \").concat(h.action)),hP(\"warning\",this,\"unexpected response from type \".concat(e,\", error_code: \").concat(u,\", message: \").concat(h.desc,\", action: \").concat(h.action)),u===hk.ERR_TOO_MANY_BROADCASTERS?e===mk.JOIN||e===mk.REJOIN?(this.initError=A,this.close(),A.throw()):A.throw():\"failed\"===h.action?A.throw():\"quit\"===h.action?(this.initError=A,this.close(),A.throw()):(u===hk.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,JD.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),hP(\"warning\",this,\"detect multi ip, recover\"),this.reconnect(\"recover\",gk.MULTI_IP)):this.reconnect(h.action,gk.SERVER_ERROR),e===mk.JOIN||e===mk.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new l_(i=>{const r=n=>{(!t||t(n))&&(this.off(e,r),i(n))};this.on(e,r)})}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=LP(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval(()=>{if(this.connectionState!==Ek.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)},LP(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new l_((i,r)=>{this.once(fk.WS_CONNECTED,()=>i(this.joinResponse)),this.once(fk.WS_CLOSED,()=>r(this.initError||new QD(xD.WS_ABORT))),this.connectionState=Ek.CONNECTING,this.websocket.init(e).catch(r),this.wsInflateDataTimer&&window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=window.setInterval(()=>{this.handleWsInflateData()},2e4),setTimeout(()=>{t&&void 0===this.openConnectionTime&&(JD.debug(\"[\".concat(this.clientId,\"] init websocket timeout while join with fallback to proxy\")),r(new QD(xD.INIT_WEBSOCKET_TIMEOUT)))},LP(\"JOIN_WITH_FALLBACK_PROXY_PENDING_DURATION\"))})}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.wsInflateDataTimer&&(this.handleWsInflateData(),window.clearInterval(this.wsInflateDataTimer),this.wsInflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||lk.LEAVE,this.connectionState=Ek.CLOSED,JD.debug(\"[\".concat(this.clientId,\"] \")+\"will close websocket in signal\"),this.websocket.close(),e===lk.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new zJ(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,!0,this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(fk.ABORT_P2P_EXECUTION);const e=await RK(this,fk.REQUEST_JOIN_INFO),t=await this.request(mk.JOIN,e);if(!t)return this.emit(fk.REPORT_JOIN_GATEWAY,xD.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(fk.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=Ek.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new QD(xD.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=bK(this,fk.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(mk.REJOIN,e);return!!t&&(this.connectionState=Ek.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach(e=>{this.emit(_k.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(_k.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(_k.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(_k.MUTE_AUDIO,{uid:e.uid}):this.emit(_k.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(_k.MUTE_VIDEO,{uid:e.uid}):this.emit(_k.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(_k.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(_k.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(_k.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(_k.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(_k.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})}),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){JD.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e),gP(\"debug\",this,\"handleNotification\",e);const t=BJ(e.code);if(\"success\"!==t.action)return\"failed\"===t.action?(JD.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc),void hP(\"error\",this,\"ignore error: \".concat(t.desc))):\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(lk.UID_BANNED),void this.close()):void this.reconnect(t.action,gk.SERVER_ERROR)}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=LP(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(JD.warning(\"PINGPONG Timeout. Last Socket Message: \".concat(t-this.lastMsgTime,\"ms\")),hP(\"warning\",this,\"PINGPONG Timeout. Last Socket Message: \".concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>LP(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",gk.TIMEOUT):this.request(mk.PING,void 0,!0).then(()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),LP(\"REPORT_STATS\")&&this.send(mk.PING_BACK,{pingpongElapse:e})}).catch(e=>{})}handleWsInflateData(){const{wsInflateLength:e,wsDeflateLength:t}=this.websocket.getWsInflateData();0!==e&&0!==t&&this.upload(Ik.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(Lk.RECONNECT_WAITTING_FINISH,e=>{this.emit(fk.WS_RECONNECT_WAITTING_FINISH,e)}),this.websocket.on(Lk.RECONNECT_CREATE_CONNECTION,e=>{this.emit(fk.WS_RECONNECT_CREATE_CONNECTION,e)}),this.websocket.on(Lk.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(Lk.CLOSED,()=>{this.connectionState=Ek.CLOSED}),this.websocket.on(Lk.FAILED,()=>{this._disconnectedReason=lk.NETWORK_ERROR,this.connectionState=Ek.CLOSED}),this.websocket.on(Lk.RECONNECTING,e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===Ek.CONNECTED?this.connectionState=Ek.RECONNECTING:this.connectionState=Ek.CONNECTING}),this.websocket.on(Lk.WILL_RECONNECT,(e,t)=>{if(bK(this,fk.IS_P2P_DISCONNECTED)&&\"retry\"===e)return JD.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),hP(\"debug\",this,\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),this.reconnectToken=void 0,this.emit(fk.NEED_RENEW_SESSION),this.emit(fk.DISCONNECT_P2P),t(\"tryNext\");\"retry\"!==e&&(JD.debug(\"\".concat(this.clientId,\" websockt will_connect event, renewSession reconnectMode is \").concat(e)),hP(\"debug\",this,\"\".concat(this.clientId,\" websockt will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0,this.emit(fk.NEED_RENEW_SESSION),this.emit(fk.DISCONNECT_P2P)),t(e)}),this.websocket.on(Lk.CONNECTED,()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch(e=>{JD.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),gP(\"warning\",this,\"rejoin\",void 0,e.toString()),this.reconnect(\"tryNext\",gk.SERVER_ERROR)}):this.join().catch(e=>{if(this.emit(fk.REPORT_JOIN_GATEWAY,e.message||e.code,this.url||\"\"),e instanceof QD&&e.code===xD.UNEXPECTED_RESPONSE&&e.data.code===hk.ERR_NO_AUTHORIZED)return JD.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),hP(\"warning\",this,\"reconnect no authorized, recover\"),void this.reconnect(\"recover\",gk.SERVER_ERROR);JD.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),gP(\"error\",this,\"join\",void 0,e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",gk.SERVER_ERROR):(this.initError=e,this.close())})}),this.websocket.on(Lk.REQUEST_NEW_URLS,(e,t)=>{RK(this,fk.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)}),this.websocket.on(Lk.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{this.emit(_k.ON_TOKEN_PRIVILEGE_DID_EXPIRE)})}})||$J;function iq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}class rq extends MD{get url(){return this._url?this._url:null}get reconnectMode(){return this._reconnectMode}set reconnectMode(e){[\"tryNext\",\"recover\"].includes(e)&&this.resetReconnectCount(e),this._reconnectMode=e}get state(){return this._state}set state(e){e!==this._state&&(this._state=e,\"reconnecting\"===this._state?this.emit(TB.RECONNECTING,this.reconnectReason):\"connected\"===this._state?this.emit(TB.CONNECTED):\"closed\"===this._state?this.emit(TB.CLOSED):\"failed\"===this._state&&this.emit(TB.FAILED))}constructor(e,t,i,r){super(),MN(this,\"connectionID\",0),MN(this,\"currentURLIndex\",0),MN(this,\"reconnectReason\",void 0),MN(this,\"_reconnectMode\",\"tryNext\"),MN(this,\"_initMutex\",void 0),MN(this,\"_name\",void 0),MN(this,\"_state\",\"closed\"),MN(this,\"_reconnectInterrupter\",void 0),MN(this,\"_url\",void 0),MN(this,\"_retryConfig\",void 0),MN(this,\"_reconnectCount\",0),MN(this,\"_forceCloseTimeout\",5e3),MN(this,\"_onlineReconnectListener\",void 0),MN(this,\"_messageSender\",void 0),MN(this,\"_closeEstablishingTransmitter\",()=>{}),MN(this,\"_store\",void 0),MN(this,\"_joinChannelServiceRecordIndex\",void 0),MN(this,\"_transmitter\",void 0),MN(this,\"_compressor\",new YJ),MN(this,\"_compressorInitStatus\",\"initializing\"),MN(this,\"_compress\",void 0),MN(this,\"_useCompress\",void 0),MN(this,\"_inflateLength\",0),MN(this,\"_deflateLength\",0),this._store=r,this._name=e,this._retryConfig=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?iq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):iq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},t),this._useCompress=i}resetReconnectCount(e){JD.debug(\"\".concat(this._name,\" reset reconnect count, reason: \").concat(e)),gP(\"debug\",this,\"resetReconnectCount\",e,\"\".concat(this._name,\" reset reconnect count, reason: \").concat(e)),this._reconnectCount=0}close(e,t){var i;if(this.currentURLIndex=0,this.resetReconnectCount(\"close\"),null===(i=this._messageSender)||void 0===i||i.reset(),this._reconnectInterrupter&&this._reconnectInterrupter(),this._transmitter){this._transmitter.onclose=null,this._transmitter.onopen=null,this._transmitter.onmessage=null;const e=this._transmitter;t?setTimeout(()=>e.close(),500):e.close(),this._transmitter=void 0}this.state=e?\"failed\":\"closed\",this._closeEstablishingTransmitter&&this._closeEstablishingTransmitter()}reconnect(e,t){if(!this._transmitter)return JD.warning(\"[\".concat(this._name,\"] can not reconnect, no websocket\")),void gP(\"warning\",this,\"reconnect\",\"can not reconnect, no websocket\");var i;(void 0!==e&&(this.reconnectMode=e),JD.debug(\"[\".concat(this._name,\"] reconnect is triggered initiative\")),gP(\"debug\",this,\"reconnect\"),\"number\"==typeof this._joinChannelServiceRecordIndex)&&(null===(i=this._store)||void 0===i||i.recordJoinChannelService({status:\"error\",errors:[new Error(t)]},this._joinChannelServiceRecordIndex));const r=this._transmitter.onclose;this._transmitter.onclose=null,this._transmitter.close(),r&&r.bind(this._transmitter)({code:9999,reason:t})}getInflateData(){const e=this._inflateLength,t=this._deflateLength;return this.clearInflateData(),{inflateLength:e,deflateLength:t}}setInflateData(e){this._deflateLength=this._deflateLength+e.originLength,this._inflateLength=this._inflateLength+e.compressedLength}clearInflateData(){this._inflateLength=0,this._deflateLength=0}}function nq(e,t,i){if(\"getBigUint64\"in DataView.prototype)return e.getBigUint64(t,i);const r=e.getUint32(t,i),n=e.getUint32(t+4,i),o=Number(!!i),s=Number(!i);return BigInt(r*s+n*o)<<BigInt(32)|BigInt(r*o+n*s)}function oq(e,t,i,r){if(\"setBigUint64\"in DataView.prototype)return e.setBigUint64(t,i,r);const n=Number(i>>BigInt(32)),o=Number(i&BigInt(4294967295));r?(e.setUint32(t+4,n,r),e.setUint32(t,o,r)):(e.setUint32(t,n,r),e.setUint32(t+4,o,r))}!function(e){e[e.Default=0]=\"Default\",e[e.Ack=1]=\"Ack\"}(eq||(eq={}));class sq{constructor(e,t,i){MN(this,\"version\",1),MN(this,\"initialRTO\",void 0),MN(this,\"maxBatchAckCount\",void 0),MN(this,\"maxRTO\",void 0),MN(this,\"initialRTT\",void 0),MN(this,\"ID\",void 0),MN(this,\"rtt\",void 0),MN(this,\"packetNumber\",1),MN(this,\"rtoRatioMap\",new Map),MN(this,\"timeoutMap\",new Map),MN(this,\"unorderedPacketQueue\",[]),MN(this,\"batchAckPacketQueue\",[]),MN(this,\"lastOrderedPacketNumber\",0),MN(this,\"batchAckTimer\",void 0),MN(this,\"sendImpl\",void 0),MN(this,\"receiveImpl\",void 0),this.sendImpl=e,this.receiveImpl=t,this.ID=_K(7,\"transmitter-\"),this.initialRTO=void 0!==(null==i?void 0:i.initialRTO)?i.initialRTO:LP(\"TRANSMITTER_INITIAL_RTO\"),this.initialRTT=void 0!==(null==i?void 0:i.initialRTT)?i.initialRTT:LP(\"TRANSMITTER_INITIAL_RTT\"),this.rtt=void 0!==(null==i?void 0:i.initialRTT)?i.initialRTT:LP(\"TRANSMITTER_INITIAL_RTT\"),this.maxBatchAckCount=void 0!==(null==i?void 0:i.maxBatchAckCount)?i.maxBatchAckCount:LP(\"TRANSMITTER_MAX_BATCH_ACK_COUNT\"),this.maxRTO=void 0!==(null==i?void 0:i.maxRTO)?i.maxRTO:LP(\"TRANSMITTER_MAX_RTO\")}packetize(e,t){return{type:eq.Default,version:this.version,packetNumber:t,payload:e}}serialize(e){switch(e.type){case eq.Default:{let t;if(\"string\"==typeof e.payload){t=(new TextEncoder).encode(e.payload)}else t=e.payload;const i=new ArrayBuffer(t.length+15),r=new DataView(i);r.setUint16(0,e.version),r.setUint8(2,e.type),r.setUint32(3,e.packetNumber),oq(r,7,BigInt(e.sendTs));return new Uint8Array(r.buffer).set(t,15),i}case eq.Ack:{const t=new ArrayBuffer(16),i=new DataView(t);return i.setUint16(0,e.version),i.setUint8(2,e.type),i.setUint32(3,e.maxAckPacketNumber),i.setUint8(7,e.shift),oq(i,8,BigInt(e.ackSendTs)),t}}}deserialize(e){const t=new DataView(e),i=t.getUint16(0),r=t.getUint8(2);switch(r){case eq.Default:{const n=t.getUint32(3),o=nq(t,7),s=e.slice(15),a=(new TextDecoder).decode(s);return{version:i,type:r,packetNumber:n,sendTs:Number(o),payload:a}}case eq.Ack:{const e=t.getUint32(3),n=t.getUint8(7),o=nq(t,8);return{version:i,type:r,maxAckPacketNumber:e,shift:n,ackSendTs:Number(o)}}default:throw JD.error(\"[\".concat(this.ID,\"] Unrecognized packet type \").concat(r)),new Error(\"Unrecognized packet type \".concat(r))}}sendMessage(e){const t=this.packetize(e,this.packetNumber);this.packetNumber=4294967295===this.packetNumber?1:this.packetNumber+1;const i=this.calculateRTO(t),r=window.setTimeout(()=>{this.resendMessage(t)},i);this.timeoutMap.set(t.packetNumber,r),this.sendPacket(t)}onData(e){const t=this.deserialize(e);t.type===eq.Default?this.ack(t):t.type===eq.Ack&&(this.updateRTT(t,Math.round(performance.now())),this.clearRTO(t))}close(){this.rtt=this.initialRTT,this.packetNumber=1,Array.from(this.timeoutMap.entries()).forEach(e=>{let[t,i]=e;window.clearTimeout(i)}),this.timeoutMap=new Map,this.rtoRatioMap=new Map,this.unorderedPacketQueue=[],this.batchAckPacketQueue=[],this.lastOrderedPacketNumber=0,void 0!==this.batchAckTimer&&window.clearTimeout(this.batchAckTimer)}resendMessage(e){const t=this.calculateRTO(e),i=window.setTimeout(()=>{this.resendMessage(e)},t);this.timeoutMap.set(e.packetNumber,i),this.sendPacket(e)}calculateRTO(e){const t=this.rtoRatioMap.get(e.packetNumber);if(void 0===t)return this.rtoRatioMap.set(e.packetNumber,1),this.initialRTO;{const i=9*this.rtt/8*t;return this.rtoRatioMap.set(e.packetNumber,t+1),i>this.maxRTO?this.maxRTO:i}}updateRTT(e,t){const i=e.ackSendTs;this.rtt=this.rtt*(7/8)+(t-i-this.rtt)/8}ack(e){if(e.packetNumber===this.lastOrderedPacketNumber+1)for(this.batchAckPacketQueue.length>=this.maxBatchAckCount&&this.batchAck(),this.batchAckTimer?this.batchAckPacketQueue.push(e):(this.batchAckPacketQueue.push(e),this.batchAckTimer=window.setTimeout(()=>{this.batchAck()},this.rtt/8)),this.lastOrderedPacketNumber+=1,this.receiveImpl(e.payload);;){const e=this.unorderedPacketQueue[0];if(!e){this.unorderedPacketQueue.shift();break}this.batchAckTimer&&this.batchAck(),this.receiveImpl(e.payload),this.unorderedPacketQueue.shift(),this.lastOrderedPacketNumber+=1}else if(e.packetNumber<=this.lastOrderedPacketNumber){const t={ackSendTs:e.sendTs,maxAckPacketNumber:e.packetNumber,shift:0,type:eq.Ack,version:this.version};this.sendPacket(t)}else if(e.packetNumber>this.lastOrderedPacketNumber){this.unorderedPacketQueue[e.packetNumber-this.lastOrderedPacketNumber-2]=e;const t={ackSendTs:e.sendTs,maxAckPacketNumber:e.packetNumber,shift:0,type:eq.Ack,version:this.version};this.sendPacket(t)}}batchAck(){window.clearTimeout(this.batchAckTimer),this.batchAckTimer=void 0;const e={ackSendTs:this.batchAckPacketQueue[this.batchAckPacketQueue.length-1].sendTs,maxAckPacketNumber:this.batchAckPacketQueue[this.batchAckPacketQueue.length-1].packetNumber,shift:this.batchAckPacketQueue.length-1,type:eq.Ack,version:this.version};this.sendPacket(e),this.batchAckPacketQueue=[]}sendPacket(e){e.type===eq.Default&&(e.sendTs=Math.round(performance.now()));const t=this.serialize(e);this.sendImpl(t)}clearRTO(e){for(let t=e.maxAckPacketNumber-e.shift;t<=e.maxAckPacketNumber;t++){const e=this.timeoutMap.get(t);void 0!==e&&window.clearTimeout(e),this.timeoutMap.delete(t),this.rtoRatioMap.delete(t)}}}class aq extends MD{get queue(){return[...this.highPriorityQueue,...this.lowPriorityQueue]}constructor(e){super(),MN(this,\"lowPriorityQueue\",[]),MN(this,\"highPriorityQueue\",[]),MN(this,\"AgoraTransmissionManager\",void 0),this.AgoraTransmissionManager=e}reset(){this.lowPriorityQueue=[],this.highPriorityQueue=[]}pushMessage(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1]?this.highPriorityQueue.push(e):this.lowPriorityQueue.push(e),this.sendMessage()}sendMessage(){const e=this.queue.length;let t=0;t=e<5?15*e:60+3*(e-4),setTimeout(()=>{this._sendMessage()},t)}_sendMessage(){if(!this.queue.length)return;const e=this.AgoraTransmissionManager.getConnection();if(!e)return;const t=this.queue.shift();return this.lowPriorityQueue.includes(t)?this.lowPriorityQueue.shift():this.highPriorityQueue.shift(),e.sendMessage(t.compressed),t}}var cq;let dq=mP(\"AgoraDatachannelManager\",\"connectionID\")(cq=class extends rq{constructor(e,t){super(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments.length>3?arguments[3]:void 0),MN(this,\"_initMutex\",void 0),MN(this,\"_reconnectInterrupter\",void 0),MN(this,\"_url\",void 0),MN(this,\"_transmitter\",void 0),MN(this,\"_addresses\",void 0),MN(this,\"_reliableTransmission\",void 0),this._initMutex=new fj(\"datachannel\");const{timeout:i,timeoutFactor:r}=t,n=Math.max(300,Math.floor(3*i/5)),o=Math.max(1.2,Math.floor(8*r)/10);EB.ONLINE&&(this._retryConfig.timeout=n,this._retryConfig.timeoutFactor=o),ij.on(fB.NETWORK_STATE_CHANGE,(e,t)=>{e!==t&&(this.resetReconnectCount(\"network state change: \".concat(t,\" -> \").concat(e)),e===EB.ONLINE?(this._retryConfig.timeout=n,this._retryConfig.timeoutFactor=o):(this._retryConfig.timeout=i,this._retryConfig.timeoutFactor=r))});const s=Date.now();this._compressor.init().then(()=>{this._compressorInitStatus=\"initialized\";const e=Date.now()-s;JD.debug(\"datachannel compressor initialized successfully in \".concat(e,\"ms\")),gP(\"debug\",this._compressor,\"init\",void 0,\"datachannel compressor initialized successfully in \".concat(e,\"ms\")),pj.wsCompressorInit({status:!0,ec:null,eventElapse:e}),this._compress=this._compressor.compress.bind(this._compressor)}).catch(e=>{this._compressorInitStatus=\"failed\";const t=e?e.message||e.toString():\"Empty Error\";JD.debug(\"datachannel compressor failed to initialize because of \".concat(t)),gP(\"debug\",this._compressor,\"init\",void 0,\"datachannel compressor failed to initialize because of \".concat(t)),pj.wsCompressorInit({status:!1,ec:t,eventElapse:1})})}getConnection(){if(this._reliableTransmission)return this._reliableTransmission}async init(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._forceCloseTimeout=t;const i=(t,i)=>{this._addresses=e,this.currentURLIndex=this._addresses.findIndex(e=>e.fingerprint||LP(\"FINGERPRINT\"));const r=this._addresses[this.currentURLIndex];this.state=\"connecting\",this._messageSender=new aq(this),this.createTransmitterConnection(r).then(t).catch(i),this.once(TB.CLOSED,()=>i(new QD(xD.WS_DISCONNECT))),this.once(TB.CONNECTED,()=>t())};return this._initMutex.lock().then(e=>new l_((e,t)=>{i(e,t)}).then(()=>{e()}).catch(()=>{e()}))}sendMessage(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this._transmitter||!this._reliableTransmission)throw new QD(xD.WS_ABORT,\"datachannel is not ready\");try{let r=null;if(i)r=this.sendMessageWithUint8Array(e);else if(\"initialized\"===this._compressorInitStatus&&this._useCompress&&LP(\"DATACHANNEL_COMPRESS\"))try{r=this._compress(e),this.setInflateData(r)}catch(t){r=this.sendMessageWithJSON(e)}else r=this.sendMessageWithJSON(e);t?this._reliableTransmission.sendMessage(r.compressed):this._messageSender.pushMessage(r)}catch(e){throw new QD(xD.WS_ERR,\"send datachannel signal message error\"+e.toString())}}unbindDcCloseEventListener(){this._transmitter&&(this._transmitter.onclose=null)}sendMessageWithJSON(e){const t=JSON.stringify(e);return{compressed:t,compressedLength:t.length,origin:e}}sendMessageWithUint8Array(e){return{compressed:e,compressedLength:e.byteLength,origin:e}}createTransmitterConnection(e){return this.connectionID+=1,this._joinChannelServiceRecordIndex=void 0,this._url=\"dc://\".concat(e.ip,\":\").concat(e.port),new l_((t,i)=>{var r;const n=()=>{JD.debug(\"[\".concat(this._name,\"] datachannel opened:\"),this._url),pP(\"debug\",[\"DataChannel\",this.connectionID],\"open\",this._url),this.reconnectMode=\"retry\",this.state=\"connected\",this.resetReconnectCount(\"opened\"),t()},o=async r=>{var n;if(null===(n=this._closeEstablishingTransmitter)||void 0===n||n.call(this),JD.debug(\"[\".concat(this._name,\"] datachannel close \").concat(this._url,\", code: \").concat(r.code,\", reason: \").concat(r.reason,\", current mode: \").concat(this.reconnectMode)),pP(\"debug\",[\"DataChannel\",this.connectionID],\"close\",{code:r.code,reason:r.reason,address:e,reconnectMode:this.reconnectMode}),this._reconnectCount<this._retryConfig.maxRetryCount){\"connected\"===this.state&&(this.reconnectReason=r.reason,this.state=\"reconnecting\");const e=wK(this,TB.WILL_RECONNECT,this.reconnectMode)||this.reconnectMode,n=await this.reconnectWithAction(e);if(\"closed\"===this.state)return JD.debug(\"[\".concat(this.connectionID,\"] dc is closed, no need to reconnect\")),void hP(\"debug\",this,\"dc is closed, no need to reconnect\");if(!n)return i(new QD(xD.WS_DISCONNECT,\"datachannel reconnect failed: \".concat(r.code))),void this.close(!0);t()}else i(new QD(xD.WS_DISCONNECT,\"datachannel close: \".concat(r.code))),this.close()},s=e=>{var t;null===(t=this._reliableTransmission)||void 0===t||t.onData(e.data)};this._transmitter&&(this._transmitter.onclose=null,this._transmitter.close()),this._reliableTransmission&&(this._reliableTransmission.close(),this._reliableTransmission=void 0),JD.debug(\"[\".concat(this._name,\"] start connect, address: \").concat(JSON.stringify(e))),hP(\"debug\",this,\"start connect, address: \".concat(JSON.stringify(e)));const a=null===(r=this._store)||void 0===r?void 0:r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"gateway\"}),c=Date.now();RK(this,TB.TO_CONNECT_DATACHANNEL,e).then(e=>{var t,i;if(!e)throw new Error(\"transmissonInfo not exist yet\");const{transmitter:r,close:d}=e;this._transmitter=r,null===(t=this._store)||void 0===t||t.signalChannelOpen();const u=Date.now()-c;JD.debug(\"[choose dc] dc open cost \".concat(u,\"ms\"));this._reliableTransmission=new sq(e=>{var t;this._transmitter&&\"open\"===this._transmitter.readyState&&(null===(t=this._transmitter)||void 0===t||t.send(e))},e=>{\"string\"==typeof e&&this.emit(TB.ON_MESSAGE,e)}),this._closeEstablishingTransmitter=()=>{var e;null===(e=this._reliableTransmission)||void 0===e||e.close(),this._reliableTransmission=void 0,d()},n&&n(),r.onclose=o,r.onmessage=s,null===(i=this._store)||void 0===i||i.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),this._joinChannelServiceRecordIndex=a}).catch(e=>{var t;if(null===(t=this._store)||void 0===t||t.recordJoinChannelService({endTs:Date.now(),status:e instanceof QD&&e.code===xD.WS_ABORT?\"aborted\":\"error\",errors:[e]},a),\"closed\"!==this.state){if(e instanceof QD&&e.code===xD.WS_ERR){const t=new QD(xD.WS_ERR,\"init datachannel failed! Error: \".concat(e.toString()));return JD.error(\"[\".concat(this._name,\"]\").concat(t)),gP(\"error\",this,\"chooseBestDataChannelConnection\",void 0,e.toString()),void i(t)}o&&o(e)}else i(new QD(xD.WS_DISCONNECT,\"datachannel is closed: \".concat(e.toString())))})})}async reconnectWithAction(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this._reconnectCount>=this._retryConfig.maxRetryCount)return!1;if(!this._addresses)return!1;if(\"closed\"===this.state)return!1;this._onlineReconnectListener||ij.networkState!==EB.OFFLINE||(this._onlineReconnectListener=ij.onlineWaiter&&ij.onlineWaiter.then(()=>{this._onlineReconnectListener=void 0}));let i=!0;if(this._reconnectInterrupter=()=>{i=!1},t){const t=VD(this._reconnectCount,this._retryConfig);JD.debug(\"[\".concat(this._name,\"] wait \").concat(t,\"ms to reconnect datachannel, mode: \").concat(e)),gP(\"debug\",this,\"reconnectWithAction\",{timeout:t,action:e}),await l_.race([mK(t),this._onlineReconnectListener||new l_(()=>{})])}if(\"closed\"===this.state||!i)return!1;this._reconnectCount+=1;const r=async(e,t)=>{this.emit(TB.RECONNECT_CREATE_CONNECTION,t),await this.createTransmitterConnection(e)};try{if(\"retry\"===e){const t=this._addresses[this.currentURLIndex];this.emit(TB.RECONNECT_WAITTING_FINISH,e),await r(t,e)}else if(\"tryNext\"===e){this.currentURLIndex+=1;for(let e=this.currentURLIndex;e<this._addresses.length;e++){if(this._addresses[e].fingerprint||LP(\"FINGERPRINT\")){this.currentURLIndex=e;break}this.currentURLIndex+=1}if(this.currentURLIndex>=this._addresses.length)return JD.debug(\"[\".concat(this._name,\"] the available addresses are exhausted, change to recover\")),await this.reconnectWithAction(\"recover\",!1);JD.debug(\"[\".concat(this._name,\"] datachannel url length: \").concat(this._addresses.length,\" current index: \").concat(this.currentURLIndex)),hP(\"debug\",this,\"datachannel url length: \".concat(this._addresses.length,\" current index: \").concat(this.currentURLIndex));const t=this._addresses[this.currentURLIndex];this.emit(TB.RECONNECT_WAITTING_FINISH,e),await r(t,e)}else\"recover\"===e&&(JD.debug(\"[\".concat(this._name,\"] start to failback to websocket\")),hP(\"debug\",this,\"start to failback to websocket\"),this.resetReconnectCount(\"recover mode\"),this.emit(TB.RECONNECT_WAITTING_FINISH,e),this.emit(TB.FAILBACK));return!0}catch(i){var n;return JD.error(\"[\".concat(this._name,\"] reconnect failed\"),i.toString()),gP(\"error\",this,\"reconnectWithAction\",void 0,i.toString()),null!=i&&null!==(n=i.data)&&void 0!==n&&n.desc&&Array.isArray(i.data.desc)&&i.data.desc.length&&i.data.desc.includes(\"dynamic key expired\")?(this.emit(TB.ON_TOKEN_PRIVILEGE_DID_EXPIRE),!1):await this.reconnectWithAction(e,t)}}})||cq;var uq;let hq=mP(\"AgoraDataChannelSignal\",\"websocket.connectionID\")(uq=class extends MD{get connectionState(){return this._connectionState}set connectionState(e){e!==this._connectionState&&(this._connectionState=e,e===Ek.CONNECTED?this.emit(fk.WS_CONNECTED):e===Ek.RECONNECTING?this.emit(fk.WS_RECONNECTING,this._websocketReconnectReason):e===Ek.CLOSED&&this.emit(fk.WS_CLOSED,this._disconnectedReason))}get currentURLIndex(){return this.websocket.currentURLIndex}get url(){return this.websocket?this.websocket.url:null}get rtt(){return this.rttRolling.mean()}constructor(e,t){super(),MN(this,\"_disconnectedReason\",void 0),MN(this,\"_websocketReconnectReason\",void 0),MN(this,\"_connectionState\",Ek.CLOSED),MN(this,\"reconnectToken\",void 0),MN(this,\"websocket\",void 0),MN(this,\"openConnectionTime\",void 0),MN(this,\"clientId\",void 0),MN(this,\"lastMsgTime\",Date.now()),MN(this,\"uploadCache\",[]),MN(this,\"uploadCacheInterval\",void 0),MN(this,\"rttRolling\",new ZJ(5)),MN(this,\"pingpongTimer\",void 0),MN(this,\"inflateDataTimer\",void 0),MN(this,\"pingpongTimeoutCount\",0),MN(this,\"joinResponse\",void 0),MN(this,\"multiIpOption\",void 0),MN(this,\"initError\",void 0),MN(this,\"spec\",void 0),MN(this,\"store\",void 0),MN(this,\"onWebsocketMessage\",e=>{if(e instanceof ArrayBuffer)return void this.emit(fk.ON_BINARY_DATA,e);const t=JSON.parse(e);if(this.lastMsgTime=Date.now(),Object.prototype.hasOwnProperty.call(t,\"_id\")){const e=\"res-@\".concat(t._id);this.emit(e,t._result,t._message)}else if(Object.prototype.hasOwnProperty.call(t,\"_type\")&&(this.emit(t._type,t._message),t._type===_k.ON_NOTIFICATION&&this.handleNotification(t._message),t._type===_k.ON_USER_BANNED))switch(t._message.error_code){case 14:this.close(lk.UID_BANNED);break;case 15:this.close(lk.IP_BANNED);break;case 16:this.close(lk.CHANNEL_BANNED)}}),this.clientId=e.clientId,this.spec=e,this.store=t,this.websocket=new dq(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,t),this.handleWebsocketEvents(),window.addEventListener(\"offline\",()=>{this.connectionState===Ek.CONNECTED&&this.reconnect(\"retry\",vB.OFFLINE)})}async request(e,t,i,r){const n=_K(6,\"\"),o={_id:n,_type:e,_message:t},s=this.websocket.connectionID,a=()=>new l_((t,i)=>{if(this.connectionState===Ek.CONNECTED)return t();const r=()=>{this.off(fk.WS_CLOSED,n),t()},n=()=>{this.off(fk.WS_CONNECTED,r),i(new QD(xD.WS_ABORT))};this.once(fk.WS_CONNECTED,r),this.once(fk.WS_CLOSED,n),e!==mk.PUBLISH&&e!==mk.SUBSCRIBE&&e!==mk.UNSUBSCRIBE&&e!==mk.UNPUBLISH&&e!==mk.CONTROL&&e!==mk.RESTART_ICE||this.once(fk.DISCONNECT_P2P,()=>{i(new QD(xD.DISCONNECT_P2P))}),e!==mk.PUBLISH&&e!==mk.RESTART_ICE||this.once(fk.ABORT_P2P_EXECUTION,()=>{i(new QD(xD.DISCONNECT_P2P))})});if(this.connectionState!==Ek.CONNECTING&&this.connectionState!==Ek.RECONNECTING||e===mk.JOIN||e===mk.REJOIN||await a(),e===mk.LEAVE&&(this.websocket.unbindDcCloseEventListener(),r=!0),this.websocket.sendMessage(o,!0,!1),r)return;const c=new l_((i,r)=>{let o=!1;const a=(r,n)=>{o=!0,i({isSuccess:\"success\"===r,message:n||{}}),this.off(fk.WS_CLOSED,c),this.off(fk.WS_RECONNECTING,c),this.emit(fk.REQUEST_SUCCESS,e,t)};this.once(\"res-@\".concat(n),a);const c=()=>{r(new QD(xD.WS_ABORT,\"type: \".concat(e))),this.off(fk.WS_CLOSED,c),this.off(fk.WS_RECONNECTING,c),this.off(\"res-@\".concat(n),a)};this.once(fk.WS_CLOSED,c),this.once(fk.WS_RECONNECTING,c),mK(LP(\"SIGNAL_REQUEST_TIMEOUT\")).then(()=>{this.websocket.connectionID!==s||o||(JD.warning(\"dc request timeout, type: \".concat(e)),hP(\"warning\",this,\"dc request timeout, type: \".concat(e)),this.emit(fk.REQUEST_TIMEOUT,e,t))})});let d=null;try{d=await c}catch(r){if(this.connectionState===Ek.CLOSED||e===mk.LEAVE)throw new QD(xD.WS_ABORT);return!this.spec.forceWaitGatewayResponse||i?r.throw():e===mk.JOIN||e===mk.REJOIN?null:(await a(),await this.request(e,t))}if(d.isSuccess)return d.message;const u=Number(d.message.error_code||d.message.code),h=BJ(u),A=new QD(xD.UNEXPECTED_RESPONSE,\"\".concat(h.desc,\": \").concat(d.message.error_str),{code:u,data:d.message});return\"success\"===h.action?d.message:(JD.warning(\"[\".concat(this.websocket.connectionID,\"] unexpected response from type \").concat(e,\", error_code: \").concat(u,\", message: \").concat(h.desc,\", action: \").concat(h.action)),hP(\"warning\",this,\"unexpected response from type \".concat(e,\", error_code: \").concat(u,\", message: \").concat(h.desc,\", action: \").concat(h.action)),u===hk.ERR_TOO_MANY_BROADCASTERS?e===mk.JOIN||e===mk.REJOIN?(this.initError=A,this.close(),A.throw()):A.throw():\"failed\"===h.action?A.throw():\"quit\"===h.action?(this.initError=A,this.close(),A.throw()):(u===hk.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=d.message.option,JD.warning(\"[\".concat(this.clientId,\"] detect multi ip, recover\")),hP(\"warning\",this,\"detect multi ip, recover\"),this.reconnect(\"recover\",vB.MULTI_IP)):this.reconnect(h.action,vB.SERVER_ERROR),e===mk.JOIN||e===mk.REJOIN?null:await this.request(e,t)))}waitMessage(e,t){return new l_(i=>{const r=n=>{(!t||t(n))&&(this.off(e,r),i(n))};this.on(e,r)})}upload(e,t){const i={_type:e,_message:t};try{this.websocket.sendMessage(i)}catch(e){const t=LP(\"MAX_UPLOAD_CACHE\")||50;this.uploadCache.push(i),this.uploadCache.length>t&&this.uploadCache.splice(0,1),this.uploadCache.length>0&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval(()=>{if(this.connectionState!==Ek.CONNECTED)return;const e=this.uploadCache.splice(0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0),this.upload(e._type,e._message)},LP(\"UPLOAD_CACHE_INTERVAL\")||2e3))}}send(e,t){const i={_type:e,_message:t};this.websocket.sendMessage(i)}init(e,t){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,this.openConnectionTime=void 0,new l_((i,r)=>{this.once(fk.WS_CONNECTED,()=>i(this.joinResponse)),this.once(fk.WS_CLOSED,()=>r(this.initError||new QD(xD.WS_ABORT))),this.connectionState=Ek.CONNECTING,this.websocket.init(e).catch(r),this.websocket.once(TB.FAILBACK,()=>{void 0===this.openConnectionTime&&r(new QD(xD.INIT_DATACHANNEL_TIMEOUT))}),this.inflateDataTimer&&window.clearInterval(this.inflateDataTimer),this.inflateDataTimer=window.setInterval(()=>{this.handleInflateData()},2e4),setTimeout(()=>{t&&void 0===this.openConnectionTime&&(JD.debug(\"[\".concat(this.clientId,\"] init datachannel timeout while join with failback to websocket\")),r(new QD(xD.INIT_DATACHANNEL_TIMEOUT)))},LP(\"DC_JOIN_WITH_FAILBACK\"))})}close(e){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.inflateDataTimer&&(this.handleInflateData(),window.clearInterval(this.inflateDataTimer),this.inflateDataTimer=void 0),this.reconnectToken=void 0,this.joinResponse=void 0,this._disconnectedReason=e||lk.LEAVE,this.connectionState=Ek.CLOSED,JD.debug(\"[\".concat(this.clientId,\"] \")+\"will close datachannel in signal\"),this.websocket.close(),e===lk.FALLBACK&&(this.websocket.removeAllListeners(),this.websocket=new dq(\"gateway-\".concat(this.clientId),this.spec.retryConfig,!0,this.store),this.handleWebsocketEvents())}async join(){if(!this.joinResponse){this.emit(fk.ABORT_P2P_EXECUTION);const e=await RK(this,fk.DATACHANNEL_CONNECTING),t=await this.request(mk.JOIN,e);if(!t)return this.emit(fk.REPORT_JOIN_GATEWAY,xD.TIMEOUT,this.url||\"\"),!1;this.joinResponse=t,this.emit(fk.JOIN_RESPONSE,this.joinResponse),this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=Ek.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),!0}async rejoin(){if(!this.reconnectToken)throw new QD(xD.UNEXPECTED_ERROR,\"can not rejoin, no rejoin token\");const e=bK(this,fk.REQUEST_REJOIN_INFO);e.token=this.reconnectToken;const t=await this.request(mk.REJOIN,e);return!!t&&(this.connectionState=Ek.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(this.handlePingPong.bind(this),3e3),t.peers&&t.peers.forEach(e=>{this.emit(_k.ON_USER_ONLINE,{uid:e.uid}),e.audio&&this.emit(_k.ON_ADD_AUDIO_STREAM,{uid:e.uid,uint_id:e.uint_id,audio:!0,ssrcId:e.audio_ssrc}),e.video&&this.emit(_k.ON_ADD_VIDEO_STREAM,{uid:e.uid,uint_id:e.uint_id,video:!0,ssrcId:e.video_ssrc}),e.audio_mute?this.emit(_k.MUTE_AUDIO,{uid:e.uid}):this.emit(_k.UNMUTE_AUDIO,{uid:e.uid}),e.video_mute?this.emit(_k.MUTE_VIDEO,{uid:e.uid}):this.emit(_k.UNMUTE_VIDEO,{uid:e.uid}),e.audio_enable_local?this.emit(_k.ENABLE_LOCAL_AUDIO,{uid:e.uid}):this.emit(_k.DISABLE_LOCAL_AUDIO,{uid:e.uid}),e.video_enable_local?this.emit(_k.ENABLE_LOCAL_VIDEO,{uid:e.uid}):this.emit(_k.DISABLE_LOCAL_VIDEO,{uid:e.uid}),e.audio||e.video||this.emit(_k.ON_REMOVE_STREAM,{uid:e.uid,uint_id:e.uint_id})}),!0)}reconnect(e,t){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0),this.websocket.reconnect(e,t)}handleNotification(e){JD.debug(\"[\".concat(this.clientId,\"] receive notification: \"),e),gP(\"debug\",this,\"handleNotification\",e);const t=BJ(e.code);if(\"success\"!==t.action)return\"failed\"===t.action?(JD.error(\"[\".concat(this.clientId,\"] ignore error: \"),t.desc),void hP(\"error\",this,\"ignore error: \".concat(t.desc))):\"quit\"===t.action?(\"ERR_REPEAT_JOIN_CHANNEL\"===t.desc&&this.close(lk.UID_BANNED),void this.close()):void this.reconnect(t.action,vB.SERVER_ERROR)}handlePingPong(){if(!this.websocket||\"connected\"!==this.websocket.state)return;this.pingpongTimeoutCount>0&&this.rttRolling.add(3e3),this.pingpongTimeoutCount+=1;const e=LP(\"PING_PONG_TIME_OUT\"),t=Date.now();this.pingpongTimeoutCount>=e&&(JD.warning(\"PINGPONG Timeout. Last Socket Message: \".concat(t-this.lastMsgTime,\"ms\")),hP(\"warning\",this,\"PINGPONG Timeout. Last Socket Message: \".concat(t-this.lastMsgTime,\"ms\")),t-this.lastMsgTime>LP(\"WEBSOCKET_TIMEOUT_MIN\"))?this.reconnect(\"retry\",vB.TIMEOUT):this.request(mk.PING,void 0,!0).then(()=>{this.pingpongTimeoutCount=0;const e=Date.now()-t;this.rttRolling.add(e),LP(\"REPORT_STATS\")&&this.send(mk.PING_BACK,{pingpongElapse:e})}).catch(e=>{})}handleInflateData(){const{inflateLength:e,deflateLength:t}=this.websocket.getInflateData();0!==e&&0!==t&&this.upload(Ik.WS_INFLATE_DATA_LENGTH,{ws_deflate_length:t,ws_inflate_length:e})}handleWebsocketEvents(){this.websocket.on(TB.RECONNECT_WAITTING_FINISH,e=>{this.emit(fk.WS_RECONNECT_WAITTING_FINISH,e)}),this.websocket.on(TB.RECONNECT_CREATE_CONNECTION,e=>{this.emit(fk.WS_RECONNECT_CREATE_CONNECTION,e)}),this.websocket.on(TB.ON_MESSAGE,this.onWebsocketMessage),this.websocket.on(TB.CLOSED,()=>{this.connectionState=Ek.CLOSED}),this.websocket.on(TB.FAILED,()=>{this._disconnectedReason=lk.NETWORK_ERROR,this.connectionState=Ek.CLOSED}),this.websocket.on(TB.RECONNECTING,e=>{this._websocketReconnectReason=e,this.joinResponse=void 0,this.connectionState===Ek.CONNECTED?this.connectionState=Ek.RECONNECTING:this.connectionState=Ek.CONNECTING}),this.websocket.on(TB.WILL_RECONNECT,(e,t)=>{if(bK(this,fk.IS_P2P_DISCONNECTED)&&\"retry\"===e)return JD.debug(\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),hP(\"debug\",this,\"\".concat(this.clientId,\" reconnect mode is retry, but p2p lost, change to tryNext\")),this.reconnectToken=void 0,this.emit(fk.NEED_RENEW_SESSION),this.emit(fk.DISCONNECT_P2P),t(\"tryNext\");\"retry\"!==e&&(JD.debug(\"\".concat(this.clientId,\" websockt will_connect event, renewSession reconnectMode is \").concat(e)),hP(\"debug\",this,\"\".concat(this.clientId,\" websockt will_connect event, renewSession reconnectMode is \").concat(e)),this.reconnectToken=void 0,this.emit(fk.NEED_RENEW_SESSION),this.emit(fk.DISCONNECT_P2P)),t(e)}),this.websocket.on(TB.CONNECTED,()=>{this.openConnectionTime=Date.now(),this.reconnectToken?this.rejoin().catch(e=>{JD.warning(\"[\".concat(this.clientId,\"] rejoin failed \").concat(e)),gP(\"warning\",this,\"rejoin\",void 0,e.toString()),this.reconnect(\"tryNext\",vB.SERVER_ERROR)}):this.join().catch(e=>{if(this.emit(fk.REPORT_JOIN_GATEWAY,e.message||e.code,this.url||\"\"),e instanceof QD&&e.code===xD.UNEXPECTED_RESPONSE&&e.data.code===hk.ERR_NO_AUTHORIZED)return JD.warning(\"[\".concat(this.clientId,\"] reconnect no authorized, recover\")),hP(\"warning\",this,\"reconnect no authorized, recover\"),void this.reconnect(\"recover\",vB.SERVER_ERROR);JD.error(\"[\".concat(this.clientId,\"] join gateway request failed\"),e.toString()),gP(\"error\",this,\"join\",void 0,e.toString()),this.spec.forceWaitGatewayResponse?this.reconnect(\"tryNext\",vB.SERVER_ERROR):(this.initError=e,this.close())})}),this.websocket.on(TB.REQUEST_NEW_URLS,(e,t)=>{RK(this,fk.REQUEST_RECOVER,this.multiIpOption).then(e).catch(t)}),this.websocket.on(TB.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{this.emit(_k.ON_TOKEN_PRIVILEGE_DID_EXPIRE)}),this.websocket.on(TB.TO_CONNECT_DATACHANNEL,async(e,t,i)=>RK(this,fk.DATACHANNEL_PRECONNECT,e).then(t).catch(i)),this.websocket.on(TB.FAILBACK,()=>{void 0!==this.openConnectionTime&&this.emit(fk.DATACHANNEL_FAILBACK)})}})||uq;var Aq;function lq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function pq(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?lq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):lq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}const gq=new Map;let Eq=mP(\"AgoraRTCGateway\",\"store.clientId\")(Aq=class extends MD{get state(){return this._state}set state(e){if(e===this._state)return;const t=this._state;this._state=e,\"DISCONNECTED\"===e&&this._disconnectedReason?this.emit(Xk.CONNECTION_STATE_CHANGE,e,t,this._disconnectedReason):this.emit(Xk.CONNECTION_STATE_CHANGE,e,t)}get joinGatewayStartTime(){return this._joinGatewayStartTime}set joinGatewayStartTime(e){JD.debug(\"[\".concat(this.store.clientId,\"] set joinGatewayStartTime at \").concat(e)),gP(\"debug\",this,\"joinGatewayStartTime\",e,\"[\".concat(this.store.clientId,\"] set joinGatewayStartTime at \").concat(e)),this._joinGatewayStartTime=e}constructor(e,t){super(),MN(this,\"store\",void 0),MN(this,\"joinInfo\",void 0),MN(this,\"key\",void 0),MN(this,\"signal\",void 0),MN(this,\"role\",void 0),MN(this,\"inChannelInfo\",{joinAt:null,duration:0}),MN(this,\"spec\",void 0),MN(this,\"_state\",\"DISCONNECTED\"),MN(this,\"_statsCollector\",void 0),MN(this,\"_disconnectedReason\",void 0),MN(this,\"isSignalRecover\",!1),MN(this,\"hasChangeBGPAddress\",!1),MN(this,\"trafficStatsInterval\",void 0),MN(this,\"networkQualityInterval\",void 0),MN(this,\"_joinGatewayStartTime\",0),MN(this,\"_signalTimeout\",!1),MN(this,\"_clientRoleOptions\",void 0),MN(this,\"_isProactiveJoin\",!1),this.store=e,this.spec=t;const i=wB().supportDataChannel&&LP(\"SIGNAL_CHANNEL\");this.signal=i?new hq(pq(pq({},t),{},{retryConfig:t.websocketRetryConfig}),e):new tq(pq(pq({},t),{},{retryConfig:t.websocketRetryConfig}),e),this._statsCollector=t.statsCollector,this.role=t.role||\"audience\",this._clientRoleOptions=t.clientRoleOptions,this.handleSignalEvents()}async join(e,t,i){if(this.signal instanceof hq){let t=!1;\"disabled\"!==e.cloudProxyServer?(JD.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because cloudProxyServer are not supported (\").concat(e.cloudProxyServer,\")\")),t=!0):\"\".concat(e.apResponse.cid,\"_\").concat(e.apResponse.cert).length>255||\"\".concat(e.apResponse.cid,\"_\").concat(e.apResponse.cert).length<22?(JD.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because ticket length is incorrect, it has to be between 22 and 255\")),t=!0):e.apResponse.addresses.some(e=>e.fingerprint)||LP(\"FINGERPRINT\")||(JD.debug(\"[\".concat(this.store.clientId,\"] Dc is not supported, because fingerprint does not exist\")),t=!0),t&&this.resetSignal()}this.store.joinGatewayStart(),\"disabled\"!==e.cloudProxyServer&&(this.hasChangeBGPAddress=!0);const r=Date.now();let n=gq.get(e.cname);if(n||(n=new Map,gq.set(e.cname,n)),this._isProactiveJoin=!0,n.has(e.uid)){const t=new QD(xD.UID_CONFLICT);throw pj.joinGateway(e.sid,{lts:r,succ:!1,ec:t.message,addr:null,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!e.proxyServer,signalChannel:this.signal instanceof hq?\"1\":\"0\"}),this._isProactiveJoin=!1,t}n.set(e.uid,!0),this.joinInfo=e,this.key=t;let o=0;this.joinGatewayStartTime=r;const s=e.proxyServer;try{let t;if(JD.debug(\"[\".concat(this.store.clientId,\"] use \").concat(this.signal instanceof hq?\"datachannel\":\"websocket\",\" join uid \").concat(o)),this.signal instanceof hq)t=await this.signal.init(e.apResponse.addresses,i);else{const r=e.proxyServer,n=r?e.gatewayAddrs.map(e=>{const t=e.address.split(\":\");return\"wss://\".concat(r,\"/ws/?h=\").concat(t[0],\"&p=\").concat(t[1])}):e.gatewayAddrs.map(e=>\"wss://\".concat(e.address));t=await this.signal.init(n,i)}o=t.uid,JD.debug(\"[\".concat(this.store.clientId,\"] \").concat(this.signal instanceof hq?\"datachannel\":\"websocket\",\" join uid \").concat(o,\" cost \").concat(Date.now()-this.joinGatewayStartTime))}catch(t){if(t&&t.code===xD.INIT_WEBSOCKET_TIMEOUT)throw JD.warning(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),t;if(t&&t.code===xD.INIT_DATACHANNEL_TIMEOUT)throw JD.warning(\"[\".concat(this.store.clientId,\"] User join datachannel failed\"),t.toString()),this.resetSignal(),t;throw JD.error(\"[\".concat(this.store.clientId,\"] User join failed\"),t.toString()),gP(\"error\",this,\"join\",void 0,t.toString()),pj.joinGateway(e.sid,{lts:r,succ:!1,ec:t.message,addr:this.signal.url,uid:e.uid,cid:e.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!s,signalChannel:this.signal instanceof hq?\"1\":\"0\"}),this._isProactiveJoin=!1,n.delete(e.uid),this.signal.close(),t}return this.state=\"CONNECTED\",this.inChannelInfo.joinAt=Date.now(),JD.debug(\"[\".concat(this.store.clientId,\"] Connected to gateway server\")),gP(\"debug\",this,\"join\",void 0,\"success\"),this.trafficStatsInterval=window.setInterval(()=>{this.updateTrafficStats().catch(e=>{JD.warning(\"[\".concat(this.store.clientId,\"] get traffic stats error\"),e.toString()),gP(\"warning\",this,\"trafficStatsInterval\",void 0,e.toString())})},3e3),this.networkQualityInterval=window.setInterval(()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit(Xk.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit(Xk.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):\"CONNECTED\"===this.state&&this._statsCollector.trafficStats?this.emit(Xk.NETWORK_QUALITY,{uplinkNetworkQuality:uK(this._statsCollector.trafficStats.B_unq),downlinkNetworkQuality:uK(this._statsCollector.trafficStats.B_dnq)}):this.emit(Xk.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})},2e3),this.store.joinGatewayEnd(),o}async leave(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1?arguments[1]:void 0;if(\"DISCONNECTED\"!==this.state){t!==lk.FALLBACK&&(this.state=\"DISCONNECTING\");try{e||this.signal.connectionState!==Ek.CONNECTED||await function(e,t){return t===1/0?e:l_.race([e,IK(t)])}(this.signal.request(mk.LEAVE,void 0,!0),3e3)}catch(e){JD.warning(\"[\".concat(this.store.clientId,\"] leave request failed, ignore\"),e),hP(\"warning\",this,\"leave request failed, ignore, \".concat(e.toString()))}this.signal.close(t),t!==lk.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()}}async publish(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new QD(xD.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));const r={state:\"offer\",p2p_id:this.store.p2pId,ortc:t,mode:this.spec.mode,extend:LP(\"PUB_EXTEND\")};try{return(await this.signal.request(mk.PUBLISH,r,!0))._message}catch(r){if(i&&r.data&&r.data.code===hk.ERR_PUBLISH_REQUEST_INVALID)return JD.warning(\"[\".concat(this.store.clientId,\"] receive publish error code, retry\"),r.toString()),hP(\"warning\",this,\"receive publish error code, retry, \".concat(r.toString())),await this.tryUnpubBeforeRepub(e,t),this.publish(e,t,!1);throw r}}async unpublish(e,t){try{if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new QD(xD.INVALID_OPERATION,\"can not publish when connection state is \".concat(this.state));await this.signal.request(mk.UNPUBLISH,{stream_id:t,ortc:e},!0)}catch(e){JD.warning(\"unpublish warning: \",e),gP(\"warning\",this,\"unpublish\",void 0,e.toString())}}async subscribe(e,t,i){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new QD(xD.INVALID_OPERATION,\"can not subscribe when connection state is \".concat(this.state));const r={stream_id:e,stream_type:t.stream_type,mode:this.spec.mode,codec:this.spec.codec,p2p_id:this.store.p2pId,tcc:!!LP(\"SUBSCRIBE_TCC\"),extend:LP(\"SUB_EXTEND\"),ssrcId:t.ssrcId};try{return(await this.signal.request(mk.SUBSCRIBE,r,!0))._message}catch(r){if(i&&r.data&&r.data.code===hk.ERR_SUBSCRIBE_REQUEST_INVALID)return JD.warning(\"[\".concat(this.store.clientId,\"] receiver subscribe error code, retry\"),r.toString()),hP(\"warning\",this,\"receiver subscribe error code, retry\"),await this.tryUnsubBeforeResub(e,t),await this.subscribe(e,t,!1);throw r}}async subscribeAll(e,t){if(\"CONNECTED\"!==this.state&&\"RECONNECTING\"!==this.state)throw new QD(xD.INVALID_OPERATION,\"can not massSubscribe when connection state is \".concat(this.state));const i={p2p_id:this.store.p2pId,users:e,dtx:!1};try{return await this.signal.request(mk.SUBSCRIBE_STREAMS,i,!0)}catch(i){if(t&&i.data&&i.data.code===hk.ERR_SUBSCRIBE_REQUEST_INVALID)return JD.warning(\"[\".concat(this.store.clientId,\"] receiver massSubscribe error code, retry\"),i.toString()),hP(\"warning\",this,\"receiver massSubscribe error code, retry\"),await this.tryMassUnsubBeforeResub(e),await this.subscribeAll(e,!1);throw i}}async setVideoProfile(e){const t=function(e){if(!(e.bitrateMax&&e.bitrateMin&&e.frameRate&&e.height&&e.width))return;let t=e.frameRate,i=e.width,r=e.height,n=!0;return\"number\"!=typeof t&&(t=t.exact||t.ideal||t.max||t.min||0,t||(n=!1)),\"number\"!=typeof i&&(i=i.exact||i.ideal||i.max||i.min||0,i||(n=!1)),\"number\"!=typeof r&&(r=r.exact||r.ideal||r.max||r.min||0,t||(n=!1)),n?{stream_type:0,width:i,height:r,fps:t,start_bps:1e3*e.bitrateMax,min_bps:1e3*e.bitrateMin,target_bps:1e3*e.bitrateMax}:void 0}(e);return t?this.signal.request(mk.SET_VIDEO_PROFILE,t):(JD.debug(\"[\".concat(this.store.clientId,\"] encoder config is not complete, do not report to gateway\")),void hP(\"debug\",this,\"encoder config is not complete, do not report to gateway\"))}async unsubscribe(e,t){try{await this.signal.request(mk.UNSUBSCRIBE,{p2p_id:this.store.p2pId,ortc:e,stream_id:t},!0)}catch(e){JD.warning(\"unsubscribe warning: \",e),gP(\"warning\",this,\"unsubscribe\",void 0,e.toString())}}async massUnsubscribe(e){try{await this.signal.request(mk.UNSUBSCRIBE_STREAMS,e,!0)}catch(e){JD.warning(\"unsubscribeAll warning: \",e),gP(\"warning\",this,\"unsubscribeAll\",void 0,e.toString())}}async reconnectPC(e){const{iceParameters:t,dtlsParameters:i,rtpCapabilities:r}=e;return{gatewayEstablishParams:await this.signal.request(mk.CONNECT_PC,{p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:r}},!0),gatewayAddress:this.getCurrentGatewayAddress()}}getGatewayInfo(){return this.signal.request(mk.GATEWAY_INFO)}renewToken(e){return this.signal.request(mk.RENEW_TOKEN,e)}async setClientRole(e,t){if(t&&(this._clientRoleOptions=Object.assign({},t)),\"CONNECTED\"!==this.state)return void(this.role=e);let i=void 0;i=\"audience\"===e?this._clientRoleOptions&&this._clientRoleOptions.level?this._clientRoleOptions.level:2:0,await this.signal.request(mk.SET_CLIENT_ROLE,{role:e,level:i,client_ts:Date.now()}),this.role=e}async setRemoteVideoStreamType(e,t){await this.signal.request(mk.SWITCH_VIDEO_STREAM,{stream_id:e,stream_type:t})}async setDefaultRemoteVideoStreamType(e){await this.signal.request(mk.DEFAULT_VIDEO_STREAM,{stream_type:e})}async setStreamFallbackOption(e,t){await this.signal.request(mk.SET_FALLBACK_OPTION,{stream_id:e,fallback_type:t})}async pickSVCLayer(e,t){await this.signal.request(mk.PICK_SVC_LAYER,{stream_id:e,spatial_layer:t.spatialLayer,temporal_layer:t.temporalLayer})}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt),pq({},this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(mk.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=Date.now()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){const e=gq.get(this.joinInfo.cname);e&&e.delete(this.joinInfo.uid)}this.joinInfo=void 0,this.key=void 0,this.networkQualityInterval&&(window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(!this.joinInfo)return;const e=function(e){let t;return t=e.startsWith(\"dc\")?e.match(/(dc\\:\\/\\/)?([^:]+):(\\d+)/):e.match(/(wss\\:\\/\\/)?([^:]+):(\\d+)/),t?{username:vP.username,password:vP.password,turnServerURL:t[2],tcpport:parseInt(t[3])+30,udpport:parseInt(t[3])+30,forceturn:!1}:null}((\"disabled\"===this.joinInfo.cloudProxyServer?this.signal.url:this.joinInfo.gatewayAddrs[this.signal.currentURLIndex].address)||\"\");this.joinInfo.turnServer.serversFromGateway=[],e&&\"off\"!==this.joinInfo.turnServer.mode&&\"disabled\"===this.joinInfo.cloudProxyServer&&this.joinInfo.turnServer.serversFromGateway.push(pq(pq({},vP),{},{turnServerURL:e.turnServerURL,tcpport:e.tcpport,udpport:e.udpport,username:this.joinInfo.uid.toString(),password:this.joinInfo.token}))}async updateTrafficStats(){if(\"CONNECTED\"!==this.state)return;const e=await this.signal.request(mk.TRAFFIC_STATS,void 0,!0);e.timestamp=Date.now(),e.peer_delay.forEach(e=>{const t=this._statsCollector.trafficStats&&this._statsCollector.trafficStats.peer_delay.find(t=>t.peer_uid===e.peer_uid);t&&t.B_st!==e.B_st&&DK(()=>{this.emit(Xk.STREAM_TYPE_CHANGE,e.peer_uid,e.B_st)})}),this._statsCollector.updateTrafficStats(e)}getJoinMessage(e){if(!this.joinInfo||!this.key)throw new QD(xD.UNEXPECTED_ERROR,\"can not generate join message, no join info\");const t=Object.assign({},this.joinInfo.apResponse);let i=LP(\"REPORT_APP_SCENARIO\");if(\"string\"!=typeof i)try{i=JSON.stringify(i)}catch(e){i=void 0}i&&i.length>128&&(i=void 0);const r=pq({license:this.joinInfo.license,p2p_id:this.store.p2pId,session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:CP,browser:navigator.userAgent,process_id:LP(\"PROCESS_ID\"),mode:this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:t,extend:LP(\"JOIN_EXTEND\"),details:{6:this.joinInfo.stringUid,cservice_map:\"proxy3\"===this.joinInfo.cloudProxyServer?\"1\":\"proxy5\"===this.joinInfo.cloudProxyServer?\"2\":void 0},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo,appScenario:i,attributes:{userAttributes:{enablePublishedUserList:LP(\"ENABLE_PUBLISHED_USER_LIST\"),maxSubscription:LP(\"MAX_SUBSCRIPTION\"),subscribeAudioFilterTopN:\"number\"==typeof LP(\"SUBSCRIBE_AUDIO_FILTER_TOPN\")?LP(\"SUBSCRIBE_AUDIO_FILTER_TOPN\"):void 0,enablePublishAudioFilter:\"boolean\"==typeof LP(\"ENABLE_PUBLISH_AUDIO_FILTER\")?LP(\"ENABLE_PUBLISH_AUDIO_FILTER\"):void 0,enableUserLicenseCheck:\"boolean\"==typeof LP(\"ENABLE_USER_LICENSE_CHECK\")?LP(\"ENABLE_USER_LICENSE_CHECK\"):void 0}},join_ts:this.joinGatewayStartTime},e);return this.joinInfo.stringUid&&(r.string_uid=this.joinInfo.stringUid),this.joinInfo.aesmode&&this.joinInfo.aespassword&&(r.aes_mode=this.joinInfo.aesmode,LP(\"ENCRYPT_AES\")?(r.aes_secret=this.joinInfo.aespassword,r.aes_encrypt=!0):r.aes_secret=this.joinInfo.aespassword,this.joinInfo.aessalt&&(r.aes_salt=this.joinInfo.aessalt)),t.addresses[this.signal.websocket.currentURLIndex]&&(r.ap_response.ticket=t.addresses[this.signal.websocket.currentURLIndex].ticket,delete t.addresses),void 0!==this.joinInfo.defaultVideoStream&&(r.default_video_stream=this.joinInfo.defaultVideoStream),r}getRejoinMessage(){if(!this.joinInfo)throw new QD(xD.UNEXPECTED_ERROR,\"can not generate rejoin message, no join info\");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(fk.WS_RECONNECT_WAITTING_FINISH,e=>{[\"tryNext\",\"recover\"].includes(e)&&this.joinInfo&&pj.adjustSessionStartTime(this.joinInfo.sid)}),this.signal.on(fk.WS_RECONNECT_CREATE_CONNECTION,e=>{this.joinGatewayStartTime=Date.now()}),this.signal.on(fk.WS_RECONNECTING,e=>{this.joinInfo&&pj.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:e||gk.NETWORK_ERROR}),this.joinInfo&&(this.state=\"RECONNECTING\",pj.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode}),this.isSignalRecover=!1,this.joinGatewayStartTime=Date.now())}),this.signal.on(fk.WS_CLOSED,e=>{let t;switch(e){case lk.LEAVE:t=gk.LEAVE;break;case lk.UID_BANNED:case lk.IP_BANNED:case lk.CHANNEL_BANNED:case lk.SERVER_ERROR:t=gk.SERVER_ERROR;break;case lk.FALLBACK:t=gk.FALLBACK;break;case lk.LICENSE_MISSING:case lk.LICENSE_EXPIRED:case lk.LICENSE_MINUTES_EXCEEDED:case lk.LICENSE_PERIOD_INVALID:case lk.LICENSE_MULTIPLE_SDK_SERVICE:case lk.LICENSE_ILLEGAL:t=e;break;default:t=gk.NETWORK_ERROR}JD.debug(\"[signal] websocket closed, reason: \".concat(t||\"undefined -> \"+gk.NETWORK_ERROR)),AP(\"debug\",this,\"ws_closed\",\"reason: \".concat(e)),this.joinInfo&&pj.WebSocketQuit(this.joinInfo.sid,{lts:Date.now(),succ:e===lk.LEAVE?1:-1,cname:this.joinInfo.cname,uid:this.joinInfo.uid,cid:this.joinInfo.cid,errorCode:t}),this._disconnectedReason=e,e!==lk.FALLBACK&&(this.state=\"DISCONNECTED\"),this.reset()}),this.signal.on(fk.WS_CONNECTED,()=>{if(this.updateTurnConfigFromSignal(),this.state=\"CONNECTED\",this.joinInfo&&(\"audience\"===this.role&&this._clientRoleOptions&&this._clientRoleOptions.level&&(JD.debug(\"[\".concat(this.store.clientId,\"] patch to send set client role, role: \").concat(this.role,\", mode: \").concat(this.spec.mode,\", level: \").concat(this._clientRoleOptions&&this._clientRoleOptions.level)),hP(\"debug\",this,\"patch to send set client role, role: \".concat(this.role,\", mode: \").concat(this.spec.mode,\", level: \").concat(this._clientRoleOptions&&this._clientRoleOptions.level)),this.setClientRole(this.role,this._clientRoleOptions)),pj.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:this.signal instanceof hq?\"1\":\"0\"}),this._isProactiveJoin=!1,this.joinInfo.useLocalAccessPoint&&1===this.joinInfo.setLocalAPVersion)){const e=this.signal.url&&this.signal.url.match(/wss\\:\\/\\/([^:]+):(\\d+)/);if(!e)return JD.error(\"[\".concat(this.store.clientId,\"] set local access point after joined failed: \").concat(e)),void hP(\"error\",this,\"set local access point after joined failed: \".concat(e));PP(\"EVENT_REPORT_DOMAIN\",e[1]),PP(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]),PP(\"LOG_UPLOAD_SERVER\",\"\".concat(e[1],\":6444\"))}}),this.signal.on(_k.ON_UPLINK_STATS,e=>{this._statsCollector.updateUplinkStats(e)}),this.signal.on(fk.REQUEST_RECOVER,(e,t,i)=>{if(!this.joinInfo)return i(new QD(xD.UNEXPECTED_ERROR,\"gateway: can not recover, no join info\"));e&&(this.joinInfo.multiIP=e,this.hasChangeBGPAddress=!0),this.isSignalRecover=!0,RK(this,Xk.REQUEST_NEW_GATEWAY_LIST).then(t).catch(i)}),this.signal.on(fk.REQUEST_JOIN_INFO,async e=>{var t;this.updateTurnConfigFromSignal();const{iceParameters:i,dtlsParameters:r,rtpCapabilities:n}=await RK(this,Xk.REQUEST_P2P_CONNECTION_PARAMS,{turnServer:null===(t=this.joinInfo)||void 0===t?void 0:t.turnServer});e(this.getJoinMessage({ortc:{iceParameters:i,dtlsParameters:r,rtpCapabilities:n,version:\"2\"}}))}),this.signal.on(fk.REQUEST_REJOIN_INFO,e=>{e(this.getRejoinMessage())}),this.signal.on(fk.REPORT_JOIN_GATEWAY,(e,t)=>{this.joinInfo&&(pj.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:e,addr:t,uid:this.joinInfo.uid,cid:this.joinInfo.cid,firstSuccess:this._isProactiveJoin,avoidJoinStartTime:this.store.avoidJoinStart,isProxy:!!this.joinInfo.proxyServer,signalChannel:this.signal instanceof hq?\"1\":\"0\"}),this._isProactiveJoin=!1)}),this.signal.on(fk.IS_P2P_DISCONNECTED,e=>{e(bK(this,Xk.IS_P2P_DISCONNECTED))}),this.signal.on(fk.DISCONNECT_P2P,()=>{this.emit(Xk.DISCONNECT_P2P)}),this.signal.on(fk.NEED_RENEW_SESSION,()=>{this.emit(Xk.NEED_RENEW_SESSION)}),this.signal.on(fk.REQUEST_SUCCESS,()=>{this._signalTimeout=!1}),this.signal.on(fk.REQUEST_TIMEOUT,()=>{this._signalTimeout=!0}),this.signal.on(fk.JOIN_RESPONSE,e=>{const t=this.getCurrentGatewayAddress();this.emit(Xk.JOIN_RESPONSE,e,t)}),this.signal.on(fk.DATACHANNEL_PRECONNECT,async(e,t,i)=>{this.updateTurnConfigFromSignal();const r=this.getCurrentGatewayAddress();return RK(this,Xk.DATACHANNEL_PRECONNECT,e,r).then(t).catch(i)}),this.signal.on(fk.DATACHANNEL_CONNECTING,async e=>{const{iceParameters:t,dtlsParameters:i,rtpCapabilities:r}=await RK(this,Xk.REQUEST_DC_CONNECTION_PARAMS);e(this.getJoinMessage({ortc:{iceParameters:t,dtlsParameters:i,rtpCapabilities:r,version:\"2\"}}))}),this.signal.on(fk.DATACHANNEL_FAILBACK,()=>{JD.warning(\"[\".concat(this.store.clientId,\"] User join datachannel failed\")),this.reset(),this.resetSignal(),this.emit(Xk.DATACHANNEL_FAILBACK)})}async tryUnsubBeforeResub(e,t){try{await this.signal.request(mk.UNSUBSCRIBE,{p2p_id:this.store.p2pId,stream_id:e,ortc:[t]},!0)}catch(t){throw JD.warning(\"unsubscribe warning\",t),gP(\"warning\",this,\"tryUnsubBeforeResub\",e,t.toString()),t}}async tryUnpubBeforeRepub(e,t){try{await this.signal.request(mk.UNPUBLISH,{stream_id:e,ortc:t},!0)}catch(t){throw JD.warning(\"unpublish warning: \",t),gP(\"warning\",this,\"tryUnpubBeforeRepub\",e,t.toString()),t}}async tryMassUnsubBeforeResub(e){const t={users:e.map(e=>({stream_id:e.stream_id,stream_type:e.stream_type}))};try{await this.signal.request(mk.UNSUBSCRIBE_STREAMS,t,!0)}catch(t){throw JD.warning(\"massUnsubscribe warning\",t),gP(\"warning\",this,\"tryUnsubAllBeforeResub\",e.map(e=>e.stream_id),t.toString()),t}}async muteLocal(e,t){const i={action:e.find(e=>e.stream_type===qk.Audio)?\"mute_local_audio\":\"mute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(mk.CONTROL,i,!0,!0)}catch(e){throw JD.warning(\"gateway unmuteLocal warning: \",e),gP(\"warning\",this,\"muteLocal\",t,e.toString()),e}}async unmuteLocal(e,t){const i={action:e.find(e=>e.stream_type===qk.Audio)?\"unmute_local_audio\":\"unmute_local_video\",p2p_id:this.store.p2pId,ortc:e,stream_id:t};try{await this.signal.request(mk.CONTROL,i,!0,!0)}catch(e){throw JD.warning(\"gateway muteLocal warning: \",e),gP(\"warning\",this,\"unmuteLocal\",t,e.toString()),e}}uploadStats(e,t){this.signal.upload(e,t)}getSignalRTT(){return this.signal.rtt}async restartICE(e){const t={p2p_id:this.store.p2pId,stream_id:this.store.uid,ortc:e};try{return await this.signal.request(mk.RESTART_ICE,t,!0)}catch(e){throw JD.warning(\"P2PChannel.restartICE warning: \",e),gP(\"warning\",this,\"restartICE\",void 0,e.toString()),e}}reconnect(){\"CONNECTED\"===this.state&&this.signal.reconnect(void 0,gk.P2P_FAILED)}getCurrentGatewayAddress(){var e;if(!LP(\"GATEWAY_WSS_ADDRESS\"))return null!==(e=this.joinInfo)&&void 0!==e&&e.gatewayAddrs?this.joinInfo.gatewayAddrs[this.signal.currentURLIndex]:void 0}async setPublishAudioFilterEnabled(e){await this.signal.request(mk.SET_PARAMETER,{enablePublishAudioFilter:e})}resetSignal(){this.signal&&(this.signal.removeAllListeners(),this.signal.close(lk.FALLBACK)),this.signal=new tq(pq(pq({},this.spec),{},{retryConfig:this.spec.websocketRetryConfig}),this.store),this.handleSignalEvents(),this.emit(Xk.RESET_CONNECTION_EVENTS)}})||Aq;\n/*! formdata-polyfill. MIT License. Jimmy W?rting <https://jimmy.warting.se/opensource> */function fq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function mq(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?fq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):fq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}!function(){var t;function i(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,t,i){return e==Array.prototype||e==Object.prototype||(e[t]=i.value),e};var n,o=function(t){t=[\"object\"==typeof globalThis&&globalThis,t,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof e&&e];for(var i=0;i<t.length;++i){var r=t[i];if(r&&r.Math==Math)return r}throw Error(\"Cannot find global object\")}(this);function s(e,t){if(t)e:{var i=o;e=e.split(\".\");for(var n=0;n<e.length-1;n++){var s=e[n];if(!(s in i))break e;i=i[s]}(t=t(n=i[e=e[e.length-1]]))!=n&&null!=t&&r(i,e,{configurable:!0,writable:!0,value:t})}}function a(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function c(e){var t=\"undefined\"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):{next:i(e)}}if(s(\"Symbol\",(function(e){function t(e,t){this.A=e,r(this,\"description\",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.A};var i=\"jscomp_symbol_\"+(1e9*Math.random()>>>0)+\"_\",n=0;return function e(r){if(this instanceof e)throw new TypeError(\"Symbol is not a constructor\");return new t(i+(r||\"\")+\"_\"+n++,r)}})),s(\"Symbol.iterator\",(function(e){if(e)return e;e=Symbol(\"Symbol.iterator\");for(var t=\"Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \"),n=0;n<t.length;n++){var s=o[t[n]];\"function\"==typeof s&&\"function\"!=typeof s.prototype[e]&&r(s.prototype,e,{configurable:!0,writable:!0,value:function(){return a(i(this))}})}return e})),\"function\"==typeof Object.setPrototypeOf)n=Object.setPrototypeOf;else{var d;e:{var u={};try{u.__proto__={a:!0},d=u.a;break e}catch(e){}d=!1}n=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+\" is not extensible\");return e}:null}var h=n;function A(){this.m=!1,this.j=null,this.v=void 0,this.h=1,this.u=this.C=0,this.l=null}function l(e){if(e.m)throw new TypeError(\"Generator is already running\");e.m=!0}function p(e,t){return e.h=3,{value:t}}function g(e){this.g=new A,this.G=e}function E(e,t,i,r){try{var n=t.call(e.g.j,i);if(!(n instanceof Object))throw new TypeError(\"Iterator result \"+n+\" is not an object\");if(!n.done)return e.g.m=!1,n;var o=n.value}catch(t){return e.g.j=null,e.g.s(t),f(e)}return e.g.j=null,r.call(e.g,o),f(e)}function f(e){for(;e.g.h;)try{var t=e.G(e.g);if(t)return e.g.m=!1,{value:t.value,done:!1}}catch(t){e.g.v=void 0,e.g.s(t)}if(e.g.m=!1,e.g.l){if(t=e.g.l,e.g.l=null,t.F)throw t.D;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function m(e){this.next=function(t){return e.o(t)},this.throw=function(t){return e.s(t)},this.return=function(t){return function(e,t){l(e.g);var i=e.g.j;return i?E(e,\"return\"in i?i.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),f(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e,t){return t=new m(new g(t)),h&&e.prototype&&h(t,e.prototype),t}if(A.prototype.o=function(e){this.v=e},A.prototype.s=function(e){this.l={D:e,F:!0},this.h=this.C||this.u},A.prototype.return=function(e){this.l={return:e},this.h=this.u},g.prototype.o=function(e){return l(this.g),this.g.j?E(this,this.g.j.next,e,this.g.o):(this.g.o(e),f(this))},g.prototype.s=function(e){return l(this.g),this.g.j?E(this,this.g.j.throw,e,this.g.o):(this.g.s(e),f(this))},s(\"Array.prototype.entries\",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+=\"\");var i=0,r=!1,n={next:function(){if(!r&&i<e.length){var n=i++;return{value:t(n,e[n]),done:!1}}return r=!0,{done:!0,value:void 0}}};return n[Symbol.iterator]=function(){return n},n}(this,(function(e,t){return[e,t]}))}})),\"undefined\"!=typeof Blob&&(\"undefined\"==typeof FormData||!FormData.prototype.keys)){var _=function(e,t){for(var i=0;i<e.length;i++)t(e[i])},C=function(e){return e.replace(/\\r?\\n|\\r/g,\"\\r\\n\")},S=function(e,t,i){return t instanceof Blob?(i=void 0!==i?String(i+\"\"):\"string\"==typeof t.name?t.name:\"blob\",t.name===i&&\"[object Blob]\"!==Object.prototype.toString.call(t)||(t=new File([t],i)),[String(e),t]):[String(e),String(t)]},v=function(e,t){if(e.length<t)throw new TypeError(t+\" argument required, but only \"+e.length+\" present.\")},T=\"object\"==typeof globalThis?globalThis:\"object\"==typeof window?window:\"object\"==typeof self?self:this,R=T.FormData,y=T.XMLHttpRequest&&T.XMLHttpRequest.prototype.send,w=T.Request&&T.fetch,b=T.navigator&&T.navigator.sendBeacon,N=T.Element&&T.Element.prototype,O=T.Symbol&&Symbol.toStringTag;O&&(Blob.prototype[O]||(Blob.prototype[O]=\"Blob\"),\"File\"in T&&!File.prototype[O]&&(File.prototype[O]=\"File\"));try{new File([],\"\")}catch(e){T.File=function(e,t,i){return e=new Blob(e,i||{}),Object.defineProperties(e,{name:{value:t},lastModified:{value:+(i&&void 0!==i.lastModified?new Date(i.lastModified):new Date)},toString:{value:function(){return\"[object File]\"}}}),O&&Object.defineProperty(e,O,{value:\"File\"}),e}}var D=function(e){return e.replace(/\\n/g,\"%0A\").replace(/\\r/g,\"%0D\").replace(/\"/g,\"%22\")},P=function(e){this.i=[];var t=this;e&&_(e.elements,(function(e){if(e.name&&!e.disabled&&\"submit\"!==e.type&&\"button\"!==e.type&&!e.matches(\"form fieldset[disabled] *\"))if(\"file\"===e.type){var i=e.files&&e.files.length?e.files:[new File([],\"\",{type:\"application/octet-stream\"})];_(i,(function(i){t.append(e.name,i)}))}else\"select-multiple\"===e.type||\"select-one\"===e.type?_(e.options,(function(i){!i.disabled&&i.selected&&t.append(e.name,i.value)})):\"checkbox\"===e.type||\"radio\"===e.type?e.checked&&t.append(e.name,e.value):(i=\"textarea\"===e.type?C(e.value):e.value,t.append(e.name,i))}))};if((t=P.prototype).append=function(e,t,i){v(arguments,2),this.i.push(S(e,t,i))},t.delete=function(e){v(arguments,1);var t=[];e=String(e),_(this.i,(function(i){i[0]!==e&&t.push(i)})),this.i=t},t.entries=function e(){var t,i=this;return I(e,(function(e){if(1==e.h&&(t=0),3!=e.h)return t<i.i.length?e=p(e,i.i[t]):(e.h=0,e=void 0),e;t++,e.h=2}))},t.forEach=function(e,t){v(arguments,1);for(var i=c(this),r=i.next();!r.done;r=i.next()){var n=c(r.value);r=n.next().value,n=n.next().value,e.call(t,n,r,this)}},t.get=function(e){v(arguments,1);var t=this.i;e=String(e);for(var i=0;i<t.length;i++)if(t[i][0]===e)return t[i][1];return null},t.getAll=function(e){v(arguments,1);var t=[];return e=String(e),_(this.i,(function(i){i[0]===e&&t.push(i[1])})),t},t.has=function(e){v(arguments,1),e=String(e);for(var t=0;t<this.i.length;t++)if(this.i[t][0]===e)return!0;return!1},t.keys=function e(){var t,i,r,n,o=this;return I(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(r=i.value,n=c(r),p(e,n.next().value));i=t.next(),e.h=2}))},t.set=function(e,t,i){v(arguments,2),e=String(e);var r=[],n=S(e,t,i),o=!0;_(this.i,(function(t){t[0]===e?o&&(o=!r.push(n)):r.push(t)})),o&&r.push(n),this.i=r},t.values=function e(){var t,i,r,n,o=this;return I(e,(function(e){if(1==e.h&&(t=c(o),i=t.next()),3!=e.h)return i.done?void(e.h=0):(r=i.value,(n=c(r)).next(),p(e,n.next().value));i=t.next(),e.h=2}))},P.prototype._asNative=function(){for(var e=new R,t=c(this),i=t.next();!i.done;i=t.next()){var r=c(i.value);i=r.next().value,r=r.next().value,e.append(i,r)}return e},P.prototype._blob=function(){var e=\"----formdata-polyfill-\"+Math.random(),t=[],i=\"--\"+e+'\\r\\nContent-Disposition: form-data; name=\"';return this.forEach((function(e,r){return\"string\"==typeof e?t.push(i+D(C(r))+'\"\\r\\n\\r\\n'+C(e)+\"\\r\\n\"):t.push(i+D(C(r))+'\"; filename=\"'+D(e.name)+'\"\\r\\nContent-Type: '+(e.type||\"application/octet-stream\")+\"\\r\\n\\r\\n\",e,\"\\r\\n\")})),t.push(\"--\"+e+\"--\"),new Blob(t,{type:\"multipart/form-data; boundary=\"+e})},P.prototype[Symbol.iterator]=function(){return this.entries()},P.prototype.toString=function(){return\"[object FormData]\"},N&&!N.matches&&(N.matches=N.matchesSelector||N.mozMatchesSelector||N.msMatchesSelector||N.oMatchesSelector||N.webkitMatchesSelector||function(e){for(var t=(e=(this.document||this.ownerDocument).querySelectorAll(e)).length;0<=--t&&e.item(t)!==this;);return-1<t}),O&&(P.prototype[O]=\"FormData\"),y){var L=T.XMLHttpRequest.prototype.setRequestHeader;T.XMLHttpRequest.prototype.setRequestHeader=function(e,t){L.call(this,e,t),\"content-type\"===e.toLowerCase()&&(this.B=!0)},T.XMLHttpRequest.prototype.send=function(e){e instanceof P?(e=e._blob(),this.B||this.setRequestHeader(\"Content-Type\",e.type),y.call(this,e)):y.call(this,e)}}w&&(T.fetch=function(e,t){return t&&t.body&&t.body instanceof P&&(t.body=t.body._blob()),w.call(this,e,t)}),b&&(T.navigator.sendBeacon=function(e,t){return t instanceof P&&(t=t._asNative()),b.call(this,e,t)}),T.FormData=P}}();let Iq=1;function _q(e,t,i,r,n){Iq+=1;const o={sid:i.sid,command:\"convergeAllocateEdge\",uid:\"666\",appId:i.appId,ts:Math.floor(Date.now()/1e3),seq:Iq,requestId:Iq,version:CP,cname:i.cname},s={service_name:t,json_body:JSON.stringify(o)};let a,c,d=e[0];return jD(async()=>{a=Date.now();const e=await ej(d,{data:s,cancelToken:r,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"}});if(c=Date.now()-a,0!==e.code){const t=new QD(xD.UNEXPECTED_RESPONSE,\"live streaming ap error, code\"+e.code,{retry:!0,responseTime:c});throw JD.error(t.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestLiveStreamingWorkerManager\",void 0,t.toString()),t}const i=JSON.parse(e.json_body);if(200!==i.code){const e=new QD(xD.UNEXPECTED_RESPONSE,\"live streaming app center error, code: \".concat(i.code,\", reason: \").concat(i.reason),{code:i.code,responseTime:c});throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestLiveStreamingWorkerManager\",void 0,e.toString()),e}if(!i.servers||0===i.servers.length){const e=new QD(xD.UNEXPECTED_RESPONSE,\"live streaming app center empty server\",{code:i.code,responseTime:c});throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestLiveStreamingWorkerManager\",void 0,e.toString()),e}const n=function(e,t){return{addressList:e.servers.map(e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(LP(\"WORKER_DOMAIN\"),\":\").concat(e.wss,\"?serviceName=\").concat(encodeURIComponent(t))),workerToken:e.workerToken,vid:e.vid}}(i,t);return LP(\"LIVE_STREAMING_ADDRESS\")&&(n.addressList=LP(\"LIVE_STREAMING_ADDRESS\")instanceof Array?LP(\"LIVE_STREAMING_ADDRESS\"):[LP(\"LIVE_STREAMING_ADDRESS\")]),mq(mq({},n),{},{responseTime:c})},(r,n)=>(pj.apworkerEvent(i.sid,{success:!0,sc:200,serviceName:t,responseDetail:JSON.stringify(r.addressList),firstSuccess:0===n,responseTime:c,serverIp:e[n%e.length]}),!1),(r,n)=>(pj.apworkerEvent(i.sid,{success:!1,sc:r.data&&r.data.code||200,serviceName:t,responseTime:c,serverIp:e[n%e.length]}),!!(r.code!==xD.OPERATION_ABORTED&&r.code!==xD.UNEXPECTED_RESPONSE||r.data&&r.data.retry)&&(d=e[(n+1)%e.length],!0)),n)}let Cq=1;function Sq(e,t,i,r){let{url:n,areaCode:o}=e;gP(\"debug\",[\"AjaxAPI\",t.clientId],\"requestChooseServer\",{url:n,areaCode:o});const s=Date.now();let a;const[c,d]=wq(t,o,[NF.CHOOSE_SERVER]);let u=ij.networkState;return jD(async()=>{u&&ij.networkState===EB.OFFLINE&&ij.onlineWaiter&&await l_.race([ij.onlineWaiter,mK(r&&r.maxRetryTimeout||FD.maxRetryTimeout)]),u=ij.networkState;const{data:e,headers:o}=await ej(n,{data:c,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);a=\"1\"===o.http3?1:-1,pj.reportResourceTiming(n,t.sid),Tq(e,n,t,s,[NF.CHOOSE_SERVER],a);const d=hK(e,NF.CHOOSE_SERVER);return Rq(d),sK(d,n)},e=>(e&&pj.joinChooseServer(t.sid,{lts:s,succ:!0,csAddr:n,opid:d,serverList:e.gatewayAddrs.map(e=>e.address),ec:null,cid:e.cid.toString(),uid:e.uid.toString(),csIp:e.csIp,unilbsServerIds:[NF.CHOOSE_SERVER].toString(),isHttp3:a}),!1),e=>e.code!==xD.OPERATION_ABORTED&&(e.code===xD.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(pj.joinChooseServer(t.sid,{lts:s,succ:!1,csAddr:n,serverList:null,opid:d,ec:e.code,csIp:e.data&&e.data.csIp,unilbsServerIds:[NF.CHOOSE_SERVER].toString(),extend:JSON.stringify({networkState:u}),isHttp3:a}),JD.warning(\"[\".concat(t.clientId,\"] Choose server network error, retry\"),e),hP(\"warning\",[\"AjaxAPI\",t.clientId],\"Choose server network error, retry, \".concat(e)),!0)),r)}function vq(e,t,i,r){let n,{url:o,areaCode:s,serviceIds:a}=e;gP(\"debug\",[\"AjaxAPI\",t.clientId],\"requestMultiUnilbs\",{url:o,areaCode:s,serviceIds:a});const c=Date.now(),[d,u]=wq(t,s,a);let h=void 0;return jD(async()=>{h&&ij.networkState===EB.OFFLINE&&ij.onlineWaiter&&await l_.race([ij.onlineWaiter,mK(r&&r.maxRetryTimeout||FD.maxRetryTimeout)]),h=ij.networkState;const{data:e,headers:s}=await ej(o,{data:d,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0,!0);n=\"1\"===s.http3?1:-1,pj.reportResourceTiming(o,t.sid),Tq(e,o,t,c,a,n);const u=hK(e,NF.CHOOSE_SERVER),A=hK(e,\"proxy5\"===t.cloudProxyServer?NF.CLOUD_PROXY_5:\"proxy3\"===t.cloudProxyServer||\"proxy4\"===t.cloudProxyServer?NF.CLOUD_PROXY:NF.CLOUD_PROXY_FALLBACK);return Rq(u),{gatewayInfo:sK(u,o),proxyInfo:A,url:o}},e=>(e.gatewayInfo&&pj.joinChooseServer(t.sid,{lts:c,succ:!0,csAddr:o,serverList:e.gatewayInfo.gatewayAddrs.map(e=>e.address),ec:null,opid:u,cid:e.gatewayInfo.cid.toString(),uid:e.gatewayInfo.uid.toString(),csIp:e.gatewayInfo.csIp,unilbsServerIds:a.toString(),isHttp3:n}),e.proxyInfo&&pj.joinWebProxyAP(t.sid,{lts:c,sucess:1,apServerAddr:o,turnServerAddrList:e.proxyInfo.addresses.map(e=>e.ip).join(\",\"),errorCode:null,eventType:t.cloudProxyServer,unilbsServerIds:a.toString()}),!1),e=>e.code!==xD.OPERATION_ABORTED&&(e.code===xD.CAN_NOT_GET_GATEWAY_SERVER?e.data.retry:(pj.joinWebProxyAP(t.sid,{lts:c,sucess:0,apServerAddr:o,turnServerAddrList:null,errorCode:e.code,eventType:t.cloudProxyServer,unilbsServerIds:a.toString(),extend:JSON.stringify({networkState:h})}),JD.warning(\"[\".concat(t.clientId,\"] multi unilbs network error, retry\"),e),hP(\"warning\",[\"AjaxAPI\",t.clientId],\"multi unilbs network error, retry, \".concat(e)),!0)),r)}const Tq=(e,t,i,r,n,o)=>{const s=[],a=s=>{4096===s.flag?pj.joinChooseServer(i.sid,{lts:r,succ:!1,csAddr:t,opid:e.opid,serverList:null,ec:s.error.message,csIp:s.error.data&&s.error.data.csIp,unilbsServerIds:n.toString(),isHttp3:o}):1048576!==s.flag&&4194304!==s.flag&&4194310!==s.flag||pj.joinWebProxyAP(i.sid,{lts:r,sucess:0,apServerAddr:t,turnServerAddrList:null,errorCode:s.error.code,eventType:i.cloudProxyServer,unilbsServerIds:n.toString()})};if(e.response_body.forEach(t=>{const i=t.buffer.code;if(23===t.uri&&0===i&&!t.buffer.edges_services)if(4194310===t.buffer.flag)JD.warning(\"no edge services in ap response of proxy fallback, will not set proxy in iceServers\"),t.buffer.edges_services=[];else{const i={error:new QD(xD.CAN_NOT_GET_GATEWAY_SERVER,\"no edge services in ap response\",{retry:!0,csIp:e.detail[502]}),flag:t.buffer.flag};s.push(i),a(i)}if(0!==i){const r=LJ(i),n={error:new QD(xD.CAN_NOT_GET_GATEWAY_SERVER,r.desc,{desc:r.desc,retry:r.retry,csIp:e.detail[502]}),flag:t.buffer.flag};4194310===t.buffer.flag?JD.warning(n.error.toString()):s.push(n),a(n)}}),s.length)throw JD.warning(\"[\".concat(i.clientId,\"] multi unilbs \").concat(t,\" failed, \").concat(s.map(e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message,\", retry: \").concat(e.error.data.retry)).join(\" | \"))),gP(\"warning\",[\"AjaxAPI\",i.clientId],\"checkMultiUnilbsResponseValid\",{url:t},s.map(e=>({flag:e.flag,message:e.error.message,retry:e.error.data.retry}))),new QD(xD.CAN_NOT_GET_GATEWAY_SERVER,s.map(e=>\"flag: \".concat(e.flag,\", message: \").concat(e.error.message)).join(\" | \"),{retry:!!s.find(e=>e.error.data.retry),csIp:e.detail[502],desc:[...new Set(s.map(e=>{var t,i;return null==e||null===(t=e.error)||void 0===t||null===(i=t.data)||void 0===i?void 0:i.desc}).filter(e=>!!e))]})},Rq=e=>{var t,i;if(e.addresses&&0===e.addresses.length&&0===e.code)throw new QD(xD.CAN_NOT_GET_GATEWAY_SERVER,\"void gateway address\",{retry:!0,csIp:e.detail&&e.detail[502]});if(null!==(t=e.detail)&&void 0!==t&&t[19]&&\"string\"==typeof(null===(i=e.detail)||void 0===i?void 0:i[19])){const t=e.detail[19],i=null==t?void 0:t.split(\";\");for(let t=0;t<i.length;t++){var r;const n=Gb(r=i[t]).call(r);e.addresses[t]&&i&&(e.addresses[t].fingerprint=n)}}if(LP(\"GATEWAY_ADDRESS\")&&LP(\"GATEWAY_ADDRESS\").length>0){JD.debug(\"assign gateway address to\",LP(\"GATEWAY_ADDRESS\")),hP(\"debug\",[\"AjaxAPI\"],\"assign gateway address to \".concat(JSON.stringify(LP(\"GATEWAY_ADDRESS\"))));const t=LP(\"GATEWAY_ADDRESS\").map(t=>{var i,r;const n=null!==(i=null===(r=e.addresses.find(e=>e.ip===t.ip&&e.port===t.port))||void 0===r?void 0:r.fingerprint)&&void 0!==i?i:\"\";return{ip:t.ip,port:t.port,ticket:e.addresses[0]&&e.addresses[0].ticket,fingerprint:n}});e.addresses=t}},yq=(e,t)=>{if(e.response_body&&e.response_body.length){const t=e.response_body[0];if(0!==t.buffer.code){const e=LJ(t.buffer.code);throw new QD(xD.UPDATE_TICKET_FAILED,\"[\".concat(t.buffer.code,\"]: \").concat(e.desc),{retry:e.retry})}return t.buffer.ticket}throw JD.debug(\"update ticket request received ap response without response body:\",t),hP(\"debug\",[\"AjaxAPI\"],\"update ticket request received ap response without response body: \".concat(t)),new QD(xD.UPDATE_TICKET_FAILED,\"cannot find response body from ap response\",{retry:!1})},wq=(e,t,i)=>{const r=Math.floor(Math.random()*10**12),n={appid:e.appId,client_ts:Date.now(),opid:r,sid:e.sid,request_bodies:[{uri:22,buffer:{cname:e.cname,detail:{6:e.stringUid,11:t,12:LP(\"USE_NEW_TOKEN\")?\"1\":void 0},key:e.token,service_ids:i,uid:e.uid||0}}]};n.request_bodies.forEach(t=>{e.multiIP&&e.multiIP.gateway_ip&&(t.buffer.detail[5]=JSON.stringify({vocs_ip:[e.multiIP.uni_lbs_ip],vos_ip:[e.multiIP.gateway_ip]}))});const o=new FormData;return o.append(\"request\",JSON.stringify(n)),[o,r]},bq=(e,t)=>{const i=Math.floor(Math.random()*10**12),r={appid:e.appId,client_ts:Date.now(),opid:i,sid:e.sid,request_bodies:[{uri:28,buffer:{cname:e.cname,detail:{1:\"\",6:e.stringUid,12:\"1\"},token:e.token,service_ids:t,uid:e.uid||0,edges_services:e.apResponse.addresses.map(e=>({ip:e.ip,port:e.port}))}}]},n=new FormData;return n.append(\"request\",JSON.stringify(r)),[n,i]};let Nq=0;const Oq=()=>{const e=LP(\"AREAS\");0===e.length&&e.push(nB.GLOBAL);return cc(e).call(e,(e,t,i)=>{const r=Dq(t);return r?0===i?r:\"\".concat(e,\",\").concat(r):e},\"\")},Dq=e=>e===nB.OVERSEA?\"\".concat(cB.ASIA,\",\").concat(cB.EUROPE,\",\").concat(cB.AFRICA,\",\").concat(cB.NORTH_AMERICA,\",\").concat(cB.SOUTH_AMERICA,\",\").concat(cB.OCEANIA):cB[e],Pq={GLOBAL:{ASIA:[nB.CHINA,nB.JAPAN,nB.INDIA,nB.KOREA,nB.HKMC],EUROPE:[],NORTH_AMERICA:[nB.US],SOUTH_AMERICA:[],OCEANIA:[],AFRICA:[]}},Lq=Object.keys(Pq[nB.GLOBAL]),kq=[nB.CHINA,nB.NORTH_AMERICA,nB.EUROPE,nB.ASIA,nB.JAPAN,nB.INDIA,nB.OCEANIA,nB.SOUTH_AMERICA,nB.AFRICA,nB.KOREA,nB.HKMC,nB.US],Bq=function(e,t){let i=[];if(e.includes(nB.GLOBAL)){const o=[nB.GLOBAL,nB.OVERSEA],s=Object.keys(dB);if(t===nB.GLOBAL)throw new QD(xD.INVALID_PARAMS,\"GLOBAL is an invalid excludedArea value\");if(t===nB.CHINA)i=[nB.OVERSEA];else if(n=t,Lq.includes(n)){const e=(r=t,Pq[nB.GLOBAL][r]||[]),n=[...o,t,...e];i=s.filter(e=>!n.includes(e))}else if(function(e){let t=!1;return Lq.forEach(i=>{Pq[nB.GLOBAL][i].includes(e)&&(t=!0)}),t}(t)){const e=function(e){let t;return Lq.forEach(i=>{Pq[nB.GLOBAL][i].includes(e)&&(t=i)}),t}(t),r=[...o,e,t];i=s.filter(e=>!r.includes(e))}else i=e;i=function(e){const t=[];return kq.forEach(i=>{e.includes(i)&&t.push(i)}),t.concat(e.filter(e=>!kq.includes(e)))}(i)}else i=e;var r,n;return i};async function Mq(e,t,i,r){const n=async function(e,t,i,r){let n=null;const o=[],s=async()=>{const n=LP(\"WEBCS_DOMAIN\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\")).map(t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:Oq()})),s=r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:n.map(e=>e.url)}),a=await QK({fragementLength:LP(\"FRAGEMENT_LENGTH\"),referenceList:n,asyncMapHandler:r=>(JD.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),r.url),Sq(r,e,t,i)),allFailedhandler:e=>{throw r.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:o});return r.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),a},a=async()=>{if(await mK(1e3),null!==n)return n;const s=LP(\"WEBCS_DOMAIN_BACKUP_LIST\").map(t=>({url:e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),areaCode:Oq()})),a=r.recordJoinChannelService({endTs:void 0,startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:s.map(e=>e.url)}),c=await QK({fragementLength:LP(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:r=>(JD.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),r.url),Sq(r,e,t,i)),allFailedhandler:e=>{throw r.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},a),e[0]},promisesCollector:o});return r.recordJoinChannelService({endTs:Date.now(),status:\"success\"},a),c};try{return n=await TK([s(),a()]),o.length&&o.forEach(e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel()),n}catch(e){throw e[0]}}(e,t,i,r);return{gatewayInfo:await n}}async function Uq(e,t,i,r,n){const o=e.cloudProxyServer;if(\"disabled\"===o){if(!r)return;if(e.useLocalAccessPoint)return await Mq(e,t,i,n);if(LP(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\")){const{gatewayInfo:r,proxyInfo:o}=await Fq(e,t,i,n);return e.turnServer&&\"auto\"!==e.turnServer.mode?(hP(\"debug\",[\"Server\",e.clientId],\"do not set fallback turn because of already having turnserver\"),{gatewayInfo:r}):(e.turnServer={mode:\"manual\",servers:o.map(e=>({turnServerURL:e.address,tcpport:e.tcpport||vP.tcpport,udpport:e.udpport||vP.udpport,username:e.username||vP.username,password:e.password||vP.password,forceturn:LP(\"JOIN_WITH_FALLBACK_MEDIA_PROXY_FORCE\"),security:!0}))},{gatewayInfo:r})}return await Mq(e,t,i,n)}const{proxyInfo:s,gatewayInfo:a}=await Fq(e,t,i,n),c={gatewayInfo:a};return e.turnServer={mode:\"manual\",servers:s.map(e=>({turnServerURL:e.address,tcpport:\"proxy3\"===o?void 0:e.tcpport?e.tcpport:vP.tcpport,udpport:\"proxy4\"===o?void 0:e.udpport?e.udpport:vP.udpport,username:e.username||vP.username,password:e.password||vP.password,forceturn:\"proxy4\"!==o,security:\"proxy5\"===o}))},JD.debug(\"[\".concat(e.clientId,\"] set proxy server: \").concat(e.proxyServer,\", mode: \").concat(o)),gP(\"debug\",[\"Server\",e.clientId],\"setCloudProxyServerAndGetServerInfo\",{proxyServer:e.proxyServer,mode:e.cloudProxyServer}),c}async function xq(e,t,i,r,n){const o=LP(\"ACCOUNT_REGISTER\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\"));let s=[];s=t.proxyServer?o.map(e=>\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1\")):o.map(e=>\"https://\".concat(e,\"/api/v1\"));const a=null==n?void 0:n.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"stringUID\",urls:s});try{const o=await async function(e,t,i,r,n){const o=Date.now(),s={sid:i.sid,opid:10,appid:i.appId,string_uid:t};let a=e[0];const c=await jD(()=>ej(a+\"\".concat(-1===a.indexOf(\"?\")?\"?\":\"&\",\"action=stringuid\"),{data:s,cancelToken:r,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":72}}),(i,r)=>{if(0===i.code){if(i.uid<=0||i.uid>=Math.pow(2,32))throw JD.error(\"Invalid Uint Uid \".concat(t,\" => \").concat(i.uid),i),gP(\"error\",[\"AjaxAPI\"],\"requestUserAccount\",\"Invalid Uint Uid \".concat(t,\" => \").concat(i.uid,\", \").concat(i)),pj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:xD.INVALID_UINT_UID_FROM_STRING_UID,extend:s}),new QD(xD.INVALID_UINT_UID_FROM_STRING_UID);return pj.reqUserAccount(s.sid,{lts:o,success:!0,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:null,extend:s}),!1}const n=LJ(i.code);return n.retry&&(a=e[(r+1)%e.length]),pj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:i.uid,errorCode:n.desc,extend:s}),n.retry},(t,i)=>t.code!==xD.OPERATION_ABORTED&&(pj.reqUserAccount(s.sid,{lts:o,success:!1,serverAddr:a,stringUid:s.string_uid,uid:null,errorCode:t.code,extend:s}),a=e[(i+1)%e.length],!0),n);if(0!==c.code){const e=LJ(c.code);throw new QD(xD.UNEXPECTED_RESPONSE,e.desc)}return c}(s,e,t,i,r);return null==n||n.recordJoinChannelService({status:\"success\",endTs:Date.now()},a),o.uid}catch(e){throw null==n||n.recordJoinChannelService({status:\"error\",endTs:Date.now(),errors:[e]},a),e}}async function Qq(e,t,i){const r=LP(\"CDS_AP\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\")).map(t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1\"):\"https://\".concat(t,\"/api/v1?action=config\")).map(r=>function(e,t,i,r){const n=oN(),o={flag:64,cipher_method:0,features:{device:n.name,system:n.os,system_general:navigator.userAgent,vendor:t.appId,version:CP,cname:t.cname,sid:t.sid,session_id:t.sid,detail:\"\",proxyServer:t.proxyServer}};return jD(()=>ej(e,{data:o,timeout:1e3,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":54}}),void 0,e=>e.code!==xD.OPERATION_ABORTED,r)}(r,e,t,i));let n=null,o=null,s={};try{n=await TK(r)}catch(e){if(e.code===xD.OPERATION_ABORTED)throw e;o=e}r.forEach(e=>e.cancel());if(pj.reportApiInvoke(e.sid,{name:rk.REQUEST_CONFIG_DISTRIBUTE,options:{error:o,res:n}}).onSuccess(),n&&n.test_tags)try{s=function(e){if(!e.test_tags)return{};const t=e.test_tags,i=Object.keys(t),r={};return i.forEach(e=>{var i;const n=Gb(i=e.slice(4)).call(i),o=JSON.parse(t[e])[1];r[n]=o}),r}(n)}catch(e){}return s}async function Fq(e,t,i,r){const n=LP(\"PROXY_SERVER_TYPE3\"),o=(e,t,i)=>{let r=i||n;return Array.isArray(r)&&(r=t%2==0?n[1]:n[0]),\"https://\".concat(r,\"/ap/?url=\").concat(e)};let s=null;const a=[],c=async()=>{const n=LP(\"WEBCS_DOMAIN\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\")).map((t,i)=>{let r;return r=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:r,areaCode:Oq(),serviceIds:[NF.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?NF.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?NF.CLOUD_PROXY:NF.CLOUD_PROXY_FALLBACK]}}),s=r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:n.map(e=>e.url)}),c=await QK({fragementLength:LP(\"FRAGEMENT_LENGTH\"),referenceList:n,asyncMapHandler:r=>(JD.debug(\"[\".concat(e.clientId,\"] Connect to choose_server:\"),r.url),vq(r,e,t,i)),allFailedhandler:e=>{throw r.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},s),e[0]},promisesCollector:a});return r.recordJoinChannelService({endTs:Date.now(),status:\"success\"},s),c},d=async()=>{if(await mK(1e3),null!==s)return s;const n=LP(\"WEBCS_DOMAIN_BACKUP_LIST\").map((t,i)=>{let r;return r=\"disabled\"===e.cloudProxyServer&&e.proxyServer?o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i,e.proxyServer):\"disabled\"===e.cloudProxyServer||\"fallback\"===e.cloudProxyServer?\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"):o(\"\".concat(t,\"/api/v2/transpond/webrtc?v=2\"),i),{url:r,areaCode:Oq(),serviceIds:[NF.CHOOSE_SERVER,\"proxy5\"===e.cloudProxyServer?NF.CLOUD_PROXY_5:\"proxy3\"===e.cloudProxyServer||\"proxy4\"===e.cloudProxyServer?NF.CLOUD_PROXY:NF.CLOUD_PROXY_FALLBACK]}}),c=r.recordJoinChannelService({startTs:Date.now(),status:\"pending\",service:\"chooseServer\",urls:n.map(e=>e.url)}),d=await QK({fragementLength:LP(\"FRAGEMENT_LENGTH\"),referenceList:n,asyncMapHandler:r=>(JD.debug(\"[\".concat(e.clientId,\"] Connect to backup choose_server:\"),r.url),vq(r,e,t,i)),allFailedhandler:e=>{throw r.recordJoinChannelService({endTs:Date.now(),status:\"error\",errors:e},c),e[0]},promisesCollector:a});return r.recordJoinChannelService({endTs:Date.now(),status:\"success\"},c),d};let u,h,A;try{({gatewayInfo:u,proxyInfo:h,url:A}=await TK([c(),d()]))}catch(e){throw e[0]}if(a.length&&a.forEach(e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel()),!u||!h)throw new QD(xD.UNEXPECTED_ERROR,\"missing gateway or proxy response\").print();if(e.apUrl=A,\"disabled\"!==e.cloudProxyServer&&Array.isArray(n)&&A){const t=new DJ(A).host;n.includes(t)&&(e.proxyServer=t,JD.setProxyServer(t),pj.setProxyServer(t),uP(t))}return s={gatewayInfo:u,proxyInfo:await AK(h,u.uid)},s}async function Vq(e,t,i,r){const n=LP(\"UAP_AP\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\")).map(e=>t.proxyServer?\"https://\".concat(t.proxyServer,\"/ap/?url=\").concat(e+\"/api/v1?action=uap\"):\"https://\".concat(e,\"/api/v1?action=uap\"));return await _q(n,e,t,i,r)}async function jq(e,t,i){const r=LP(\"UAP_AP\").slice(0,LP(\"AJAX_REQUEST_CONCURRENT\")).map(t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v1?action=uap\"):\"https://\".concat(t,\"/api/v1?action=uap\")).map(r=>function(e,t,i,r){const n={command:\"convergeAllocateEdge\",sid:t.sid,appId:t.appId,token:t.token,ts:Date.now(),version:CP,cname:t.cname,uid:t.uid.toString(),requestId:Cq,seq:Cq};Cq+=1;const o={service_name:\"tele_channel\",json_body:JSON.stringify(n)};return jD(async()=>{const t=await ej(e,{data:o,cancelToken:i,headers:{\"X-Packet-Service-Type\":0,\"X-Packet-URI\":61}});if(0!==t.code){const e=new QD(xD.UNEXPECTED_RESPONSE,\"cross channel ap error, code\"+t.code,{retry:!0});throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestChannelMediaRelayWorkerManager\",void 0,e.toString()),e}const r=JSON.parse(t.json_body);if(200!==r.code){const e=new QD(xD.UNEXPECTED_RESPONSE,\"cross channel app center error, code: \".concat(r.code,\", reason: \").concat(r.reason));throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestChannelMediaRelayWorkerManager\",void 0,e.toString()),e}if(!r.servers||0===r.servers.length){const e=new QD(xD.UNEXPECTED_RESPONSE,\"cross channel app center empty server\");throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestChannelMediaRelayWorkerManager\",void 0,e.toString()),e}return{vid:r.vid,workerToken:r.workerToken,addressList:r.servers.map(e=>\"wss://\".concat(e.address.replace(/\\./g,\"-\"),\".\").concat(LP(\"WORKER_DOMAIN\"),\":\").concat(e.wss))}},void 0,e=>!!(e.code!==xD.OPERATION_ABORTED&&e.code!==xD.UNEXPECTED_RESPONSE||e.data&&e.data.retry),r)}(r,e,t,i));try{const e=await TK(r);return r.forEach(e=>e.cancel()),e}catch(e){throw e[0]}}async function Gq(e,t,i){let r=null;const n=[],o=async o=>{const s=LP(o?\"WEBCS_DOMAIN_BACKUP_LIST\":\"WEBCS_DOMAIN\").map(t=>e.proxyServer?\"https://\".concat(e.proxyServer,\"/ap/?url=\").concat(t+\"/api/v2/transpond/webrtc?v=2\"):\"https://\".concat(t,\"/api/v2/transpond/webrtc?v=2\"));return o&&(await mK(1e3),null!==r)?r:await QK({fragementLength:LP(\"FRAGEMENT_LENGTH\"),referenceList:s,asyncMapHandler:r=>(JD.debug(\"[\".concat(e.clientId,\"] update ticket, Connect to \").concat(o?\"backup\":\"\",\" choose_server:\"),r),function(e,t,i,r){const[n]=bq(t,[NF.CHOOSE_SERVER]);let o=ij.networkState;return jD(async()=>{o&&ij.networkState===EB.OFFLINE&&ij.onlineWaiter&&await l_.race([ij.onlineWaiter,mK(r&&r.maxRetryTimeout||FD.maxRetryTimeout)]),o=ij.networkState;const t=await ej(e,{data:n,cancelToken:i,headers:{\"Content-Type\":\"multipart/form-data;\"}},!0);return yq(t,e)},()=>!1,e=>e.code!==xD.OPERATION_ABORTED&&(e.code===xD.UPDATE_TICKET_FAILED?e.data.retry:(JD.warning(\"[\".concat(t.clientId,\"] update ticket network error, retry\"),e),hP(\"warning\",[\"AjaxAPI\",t.clientId],\"update ticket network error, retry, \".concat(e)),!0)),r)}(r,e,t,i)),allFailedhandler:e=>{throw e[0]},promisesCollector:n})};try{return r=await TK([o(!1),o(!0)]),n.length&&n.forEach(e=>e.cancel&&\"function\"==typeof e.cancel&&e.cancel()),r}catch(e){throw e[0]}}var Kq;function Hq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function Wq(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Hq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Hq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let Yq=mP(\"ConfigDistributeManager\")(Kq=class extends MD{constructor(){super(),MN(this,\"configs\",void 0),MN(this,\"joinInfo\",void 0),MN(this,\"cancelToken\",void 0),MN(this,\"retryConfig\",{timeout:3e3,timeoutFactor:1.5,maxRetryCount:1,maxRetryTimeout:1e4}),MN(this,\"interval\",void 0),MN(this,\"mutex\",new fj(\"config-distribute\")),MN(this,\"mutableParamsRead\",!1)}startGetConfigDistribute(e,t){this.joinInfo=e,this.cancelToken=t,this.interval&&this.stopGetConfigDistribute(),LP(\"ENABLE_CONFIG_DISTRIBUTE\")&&(this.updateConfigDistribute(),this.interval=window.setInterval(()=>{this.updateConfigDistribute()},LP(\"CONFIG_DISTRIBUTE_INTERVAL\")))}stopGetConfigDistribute(){this.interval&&clearInterval(this.interval),this.interval=void 0,this.joinInfo=void 0,this.cancelToken=void 0}async awaitConfigDistributeComplete(){if(!this.mutex.isLocked)return;(await this.mutex.lock())()}async updateConfigDistribute(){if(!this.mutableParamsRead){this.mutableParamsRead=!0;pj.reportApiInvoke(null,{options:void 0,name:rk.LOAD_CONFIG_FROM_LOCALSTORAGE,tag:nk.TRACER}).onSuccess(JSON.stringify(BP))}if(!this.joinInfo||!this.cancelToken||!this.retryConfig)return JD.debug(\"[config-distribute] get config distribute interrupted have no joininfo\"),void gP(\"debug\",this,\"updateConfigDistribute\",void 0,\"get config distribute interrupted have no joininfo\");let e;const t=await this.mutex.lock();try{e=await Qq(this.joinInfo,this.cancelToken,this.retryConfig),JD.debug(\"[config-distribute] get config distribute\",JSON.stringify(e)),gP(\"debug\",this,\"updateConfigDistribute\",e),e.limit_bitrate&&this.handleBitrateLimit(e.limit_bitrate),this.cacheGlobalParameterConfig(e),this.configs=e}catch(e){const t=new QD(xD.NETWORK_RESPONSE_ERROR,e);JD.warning(\"[config-distribute] \".concat(t.toString())),gP(\"warning\",this,\"updateConfigDistribute\",void 0,e.toString())}finally{t()}}getBitrateLimit(){return this.configs?this.configs.limit_bitrate:void 0}handleBitrateLimit(e){var t;(t=e)&&t.uplink&&t.id&&void 0!==t.uplink.max_bitrate&&void 0!==t.uplink.min_bitrate&&(this.configs&&this.configs.limit_bitrate?this.configs&&this.configs.limit_bitrate&&this.configs.limit_bitrate.id!==e.id&&this.emit(uB.UPDATE_BITRATE_LIMIT,e):this.emit(uB.UPDATE_BITRATE_LIMIT,e))}getLowStreamConfigDistribute(){return this.configs&&this.configs.limit_bitrate&&Wq({},this.configs.limit_bitrate.low_stream_uplink)}cacheGlobalParameterConfig(e){var t;const i=kL(t=Object.keys(e).filter(e=>/^webrtc_ng_global_parameter/.test(e))).call(t);for(let t=0;t<i.length;t++)for(let r=i.length-1;r>t;r--){const t=i[r];if(\"number\"==typeof e[t].__priority){const n=e[t].__priority,o=i[r-1];if(\"number\"==typeof e[o].__priority){if(!(n>e[o].__priority))continue;{const e=t;i[r]=i[r-1],i[r-1]=e}}else{const e=t;i[r]=i[r-1],i[r-1]=e}}}const r={};i.forEach(t=>{const i=e[t],n=i.__expires;Object.keys(i).forEach(e=>{\"__priority\"===e||\"__expires\"===e||Object.prototype.hasOwnProperty.call(r,e)||(r[e]=Wq({value:i[e]},n&&{expires:n}))})});try{const e=JSON.stringify(r),t=window.btoa(e);window.localStorage.setItem(\"websdk_ng_global_parameter\",t),JD.debug(\"Caching global parameters \".concat(e)),gP(\"debug\",this,\"cacheGlobalParameterConfig\",e)}catch(e){JD.error(\"Error caching global parameters:\",e.message),gP(\"error\",this,\"cacheGlobalParameterConfig\",void 0,e.message)}}})||Kq;function Jq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function qq(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Jq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Jq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class Xq extends MD{constructor(e,t,i,r){super(),MN(this,\"spec\",void 0),MN(this,\"token\",void 0),MN(this,\"websocket\",void 0),MN(this,\"pingpongTimer\",void 0),MN(this,\"reconnectMode\",\"retry\"),MN(this,\"serviceMode\",void 0),MN(this,\"reqId\",0),MN(this,\"commandReqId\",0),MN(this,\"handleWebSocketOpen\",()=>{this.reconnectMode=\"retry\",this.startPingPong()}),MN(this,\"handleWebSocketMessage\",e=>{if(!e.data)return;const t=JSON.parse(e.data);t.requestId?this.emit(\"@\".concat(t.requestId,\"-\").concat(t.sid),t):this.serviceMode===kk.INJECT?this.emit(Vk.INJECT_STREAM_STATUS,t):(pj.workerEvent(this.spec.sid,{actionType:\"status\",serverCode:t.code,workerType:this.serviceMode===kk.TRANSCODE?1:2}),this.emit(Vk.PUBLISH_STREAM_STATUS,t))}),this.spec=t,this.token=e,this.serviceMode=r,this.websocket=new zJ(\"live-streaming\",i),this.websocket.on(Lk.CONNECTED,this.handleWebSocketOpen),this.websocket.on(Lk.ON_MESSAGE,this.handleWebSocketMessage),this.websocket.on(Lk.REQUEST_NEW_URLS,(e,t)=>{RK(this,Vk.REQUEST_NEW_ADDRESS).then(e).catch(t)}),this.websocket.on(Lk.RECONNECTING,()=>{this.websocket.reconnectMode=this.reconnectMode})}init(e){return this.websocket.init(e)}async request(e,t,i,r){this.reqId+=1,\"request\"===e&&(this.commandReqId+=1);const n=this.commandReqId,o=this.reqId;if(!o||!this.websocket)throw new QD(xD.UNEXPECTED_ERROR);const s=qq({command:e,sdkVersion:\"4.15.1\"===CP?\"0.0.1\":CP,seq:o,requestId:o,allocate:i,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(Date.now()/1e3)},t);if(\"closed\"===this.websocket.state)throw new QD(xD.WS_DISCONNECT);const a=()=>new l_((e,t)=>{this.websocket.once(Lk.CLOSED,()=>t(new QD(xD.WS_ABORT))),this.websocket.once(Lk.CONNECTED,e)});\"connected\"!==this.websocket.state&&await a(),s.clientRequest&&(s.clientRequest.workerToken=this.token);const c=new l_((e,t)=>{const i=()=>{t(new QD(xD.WS_ABORT))};this.websocket.once(Lk.RECONNECTING,i),this.websocket.once(Lk.CLOSED,i),this.once(\"@\".concat(o,\"-\").concat(this.spec.sid),t=>{e(t)})});r&&pj.workerEvent(this.spec.sid,qq(qq({},r),{},{requestId:n,actionType:\"request\",payload:JSON.stringify(t.clientRequest),serverCode:0,code:0}));const d=Date.now();this.websocket.sendMessage(s);let u=null;try{u=await c}catch(r){if(\"closed\"===this.websocket.state)throw r;return await a(),await this.request(e,t,i)}return r&&pj.workerEvent(this.spec.sid,qq(qq({},r),{},{requestId:n,actionType:\"response\",payload:JSON.stringify(u.serverResponse),serverCode:u.code,success:200===u.code,responseTime:Date.now()-d})),200!==u.code&&this.handleResponseError(u),u}tryNextAddress(){this.reconnectMode=\"tryNext\",this.websocket.reconnect(\"tryNext\")}close(){const e=\"4.15.1\"===CP?\"0.0.1\":CP;this.reqId+=1,\"connected\"===this.websocket.state?(this.websocket.sendMessage({command:\"request\",appId:this.spec.appId,cname:this.spec.cname,uid:this.spec.uid.toString(),sdkVersion:e,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(Date.now()/1e3),requestId:this.reqId,clientRequest:{command:\"DestroyWorker\"}}),this.websocket.close(!1,!0)):this.websocket.close(!1),this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(e){switch(e.code){case Gk.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void JD.warning(\"live stream response already exists stream\");case Gk.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case Gk.LIVE_STREAM_RESPONSE_BAD_STREAM:case Gk.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return new QD(xD.LIVE_STREAMING_INVALID_ARGUMENT,\"\",{code:e.code}).throw();case Gk.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;throw new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Gk.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return new QD(xD.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,\"\",{code:e.code}).throw();case Gk.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const t=new QD(xD.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);return this.emit(Vk.WARNING,t,e.serverResponse.url)}case Gk.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:{const t=new QD(xD.LIVE_STREAMING_WARN_FREQUENT_REQUEST);return this.emit(Vk.WARNING,t,e.serverResponse.url)}case Gk.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream response wm worker not exist\",{retry:!0});case Gk.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return new QD(xD.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,\"\",{code:e.code}).throw();case Gk.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:{const t=new QD(xD.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT);return this.emit(Vk.WARNING,t,e.serverResponse.url)}case Gk.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code}).throw();case Gk.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"live stream resource limit\",{retry:!0,changeAddress:!0});case Gk.LIVE_STREAM_RESPONSE_WORKER_LOST:case Gk.LIVE_STREAM_RESPONSE_WORKER_QUIT:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;throw new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Gk.ERROR_FAIL_SEND_MESSAGE:if(\"UnpublishStream\"===e.serverResponse.command||\"UninjectStream\"===e.serverResponse.command)return;if(\"UpdateTranscoding\"===e.serverResponse.command||\"ControlStream\"===e.serverResponse.command)return new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{code:e.code}).throw();throw new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"error fail send message\",{retry:!0,changeAddress:!0});case Gk.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return new QD(xD.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code}).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(()=>{\"connected\"===this.websocket.state&&this.request(\"ping\",{}).catch(SK)},6e3)}}function zq(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function Zq(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?zq(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):zq(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class $q extends MD{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:FD,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:FD;super(),MN(this,\"onLiveStreamWarning\",void 0),MN(this,\"onLiveStreamError\",void 0),MN(this,\"onInjectStatusChange\",void 0),MN(this,\"spec\",void 0),MN(this,\"retryTimeout\",1e4),MN(this,\"connection\",void 0),MN(this,\"httpRetryConfig\",void 0),MN(this,\"wsRetryConfig\",void 0),MN(this,\"streamingTasks\",new Map),MN(this,\"isStartingStreamingTask\",!1),MN(this,\"taskMutex\",new fj(\"live-streaming\")),MN(this,\"cancelToken\",kD.CancelToken.source()),MN(this,\"transcodingConfig\",void 0),MN(this,\"injectConfig\",Zq({},Fk)),MN(this,\"injectLoopTimes\",0),MN(this,\"uapResponse\",void 0),MN(this,\"lastTaskId\",1),MN(this,\"statusError\",new Map),this.spec=e,this.httpRetryConfig=i,this.wsRetryConfig=t}async setTranscodingConfig(e){const t=Zq(Zq({},Qk),e);66!==t.videoCodecProfile&&77!==t.videoCodecProfile&&100!==t.videoCodecProfile&&(JD.debug(\"[\".concat(this.spec.clientId,\"] set transcoding config, fix video codec profile: \").concat(t.videoCodecProfile,\" -> 100\")),t.videoCodecProfile=100),t.transcodingUsers||(t.transcodingUsers=t.userConfigs),t.transcodingUsers&&(t.transcodingUsers=t.transcodingUsers.map(e=>Zq(Zq(Zq({},Mk),e),{},{zOrder:e.zOrder?e.zOrder+1:1}))),function(e){GL(e.width)||UL(e.width,\"config.width\",0,1e4),GL(e.height)||UL(e.height,\"config.height\",0,1e4),GL(e.videoBitrate)||UL(e.videoBitrate,\"config.videoBitrate\",1,1e6),GL(e.videoFrameRate)||UL(e.videoFrameRate,\"config.videoFrameRate\"),GL(e.lowLatency)||BL(e.lowLatency,\"config.lowLatency\"),GL(e.audioSampleRate)||ML(e.audioSampleRate,\"config.audioSampleRate\",[32e3,44100,48e3]),GL(e.audioBitrate)||UL(e.audioBitrate,\"config.audioBitrate\",1,128),GL(e.audioChannels)||ML(e.audioChannels,\"config.audioChannels\",[1,2,3,4,5]),GL(e.videoGop)||UL(e.videoGop,\"config.videoGop\"),GL(e.videoCodecProfile)||ML(e.videoCodecProfile,\"config.videoCodecProfile\",[66,77,100]),GL(e.userCount)||UL(e.userCount,\"config.userCount\",0,17),GL(e.backgroundColor)||UL(e.backgroundColor,\"config.backgroundColor\",0,16777215),GL(e.userConfigExtraInfo)||QL(e.userConfigExtraInfo,\"config.userConfigExtraInfo\",0,4096,!1),e.transcodingUsers&&!GL(e.transcodingUsers)&&(FL(e.transcodingUsers,\"config.transcodingUsers\"),e.transcodingUsers.forEach((e,t)=>{jL(e.uid),GL(e.x)||UL(e.x,\"transcodingUser[\".concat(t,\"].x\"),0,1e4),GL(e.y)||UL(e.y,\"transcodingUser[\".concat(t,\"].y\"),0,1e4),GL(e.width)||UL(e.width,\"transcodingUser[\".concat(t,\"].width\"),0,1e4),GL(e.height)||UL(e.height,\"transcodingUser[\".concat(t,\"].height\"),0,1e4),GL(e.zOrder)||UL(e.zOrder-1,\"transcodingUser[\".concat(t,\"].zOrder\"),0,100),GL(e.alpha)||UL(e.alpha,\"transcodingUser[\".concat(t,\"].alpha\"),0,1,!1)})),GL(e.watermark)||xk(e.watermark,\"watermark\"),GL(e.backgroundImage)||xk(e.backgroundImage,\"backgroundImage\"),e.images&&!GL(e.images)&&(FL(e.images,\"config.images\"),e.images.forEach((e,t)=>{xk(e,\"images[\".concat(t,\"]\"))}))}(t);const i=[];t.images&&i.push(...t.images.map(e=>Zq(Zq(Zq({},Uk),e),{},{zOrder:255}))),t.backgroundImage&&(i.push(Zq(Zq(Zq({},Uk),t.backgroundImage),{},{zOrder:0})),delete t.backgroundImage),t.watermark&&(i.push(Zq(Zq(Zq({},Uk),t.watermark),{},{zOrder:255})),delete t.watermark),t.images=i,t.transcodingUsers&&(t.userConfigs=t.transcodingUsers.map(e=>Zq({},e)),t.userCount=t.transcodingUsers.length,delete t.transcodingUsers);const r=(t.userConfigs||[]).map(e=>\"number\"==typeof e.uid?l_.resolve(e.uid):xq(e.uid,this.spec,this.cancelToken.token,this.httpRetryConfig));if((await l_.all(r)).forEach((e,i)=>{t.userConfigs&&t.userConfigs[i]&&(t.userConfigs[i].uid=e)}),this.transcodingConfig=t,this.connection)try{var n;const e=await this.connection.request(\"request\",{clientRequest:{command:\"UpdateTranscoding\",transcodingConfig:this.transcodingConfig}},!1,{command:\"UpdateTranscoding\",workerType:1,requestByUser:!0,tid:Array.from(MG(n=this.streamingTasks).call(n)).map(e=>e.taskId).join(\"#\")});JD.debug(\"[\".concat(this.spec.clientId,\"] update live transcoding config success, code: \").concat(e.code,\", config:\"),JSON.stringify(this.transcodingConfig))}catch(e){if(!e.data||!e.data.retry)throw e;e.data.changeAddress&&this.connection.tryNextAddress(),this.streamingTasks.forEach(t=>{JD.warning(\"[\".concat(this.spec.clientId,\"] live streaming receive error\"),e.toString(),\"try to republish\",t.url),this.startLiveStreamingTask(t.url,t.mode,e).then(()=>{JD.debug(\"[\".concat(this.spec.clientId,\"] live streaming republish \").concat(t.url,\" success\"))}).catch(e=>{JD.error(\"[\".concat(this.spec.clientId,\"] live streaming republish failed\"),t.url,e.toString()),this.onLiveStreamError&&this.onLiveStreamError(t.url,e)})})}}setInjectStreamConfig(e,t){this.injectConfig=Object.assign({},this.injectConfig,e),this.injectLoopTimes=t}async startLiveStreamingTask(e,t,i){var r;if(Array.from(MG(r=this.streamingTasks).call(r)).find(e=>e.mode===kk.INJECT)&&t===kk.INJECT)return new QD(xD.LIVE_STREAMING_TASK_CONFLICT,\"inject stream over limit\").throw();if(!this.transcodingConfig&&t===kk.TRANSCODE)throw new QD(xD.INVALID_OPERATION,\"[LiveStreaming] no transcoding config found, can not start transcoding streaming task\");let n={command:\"PublishStream\",ts:Date.now(),url:e,uid:this.spec.uid.toString(),autoDestroyTime:100,acceptImageTimeout:!0};JD.debug(\"[\".concat(this.spec.clientId,\"] start live streaming \").concat(e,\", mode: \").concat(t));const o=await this.taskMutex.lock();if(!this.connection&&i)return void o();if(this.streamingTasks.get(e)&&!i)return o(),new QD(xD.LIVE_STREAMING_TASK_CONFLICT).throw();try{this.connection||(this.connection=await this.connect(t))}catch(e){throw o(),e}switch(t){case kk.TRANSCODE:n.transcodingConfig=Zq({},this.transcodingConfig);break;case kk.RAW:break;case kk.INJECT:n={cname:this.spec.cname,command:\"InjectStream\",sid:this.spec.sid,transcodingConfig:this.injectConfig,ts:Date.now(),url:e,loopTimes:this.injectLoopTimes}}this.uapResponse&&this.uapResponse.vid&&(n.vid=this.uapResponse.vid),this.isStartingStreamingTask=!0;const s=this.lastTaskId++;try{const r=new l_((t,r)=>{mK(this.retryTimeout).then(()=>{if(i)return r(i);const t=this.statusError.get(e);return t?(this.statusError.delete(e),r(t)):void 0})}),a=await l_.race([this.connection.request(\"request\",{clientRequest:n},!0,{url:e,command:\"PublishStream\",workerType:t===kk.TRANSCODE?1:2,requestByUser:!i,tid:s.toString()}),r]);this.isStartingStreamingTask=!1,JD.debug(\"[\".concat(this.spec.clientId,\"] live streaming started, code: \").concat(a.code)),this.streamingTasks.set(e,{clientRequest:n,mode:t,url:e,taskId:s}),o()}catch(r){if(o(),this.isStartingStreamingTask=!1,!r.data||!r.data.retry||i)throw r;return r.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(e,t,r)):await this.startLiveStreamingTask(e,t,r)}}stopLiveStreamingTask(e){return new l_((t,i)=>{const r=this.streamingTasks.get(e);if(!r||!this.connection)return new QD(xD.UNEXPECTED_ERROR,\"can not find streaming task to stop\").throw();const n=r.mode;r.abortTask=()=>{JD.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success(worker exception)\")),this.streamingTasks.delete(e),t()},this.connection.request(\"request\",{clientRequest:{command:n===kk.INJECT?\"UninjectStream\":\"UnpublishStream\",url:r.url}},!1,{url:e,command:\"UnPublishStream\",workerType:n===kk.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then(i=>{JD.debug(\"[\".concat(this.spec.clientId,\"] stop live streaming success, code: \").concat(i.code)),this.streamingTasks.delete(e),0===this.streamingTasks.size&&n!==kk.INJECT&&(this.connection&&this.connection.close(),this.connection=void 0),t(),n===kk.INJECT&&this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_STOP_SUCCESS,this.spec.uid,e)}).catch(i)})}async controlInjectStream(e,t,i,r){const n=this.streamingTasks.get(e);if(!n||!this.connection||n.mode!==kk.INJECT)throw new QD(xD.INVALID_OPERATION,\"can not find inject stream task to control\");return(await this.connection.request(\"request\",{clientRequest:{command:\"ControlStream\",url:e,control:t,audioVolume:i,position:r}})).serverResponse}resetAllTask(){var e;const t=Array.from(MG(e=this.streamingTasks).call(e));this.terminate();for(const e of t)this.startLiveStreamingTask(e.url,e.mode).catch(t=>{this.onLiveStreamError&&this.onLiveStreamError(e.url,t)})}terminate(){this.cancelToken&&this.cancelToken.cancel(),this.streamingTasks=new Map,this.isStartingStreamingTask=!1,this.statusError=new Map,this.cancelToken=kD.CancelToken.source(),this.uapResponse=void 0,this.connection&&this.connection.close(),this.connection=void 0}async connect(e){if(this.connection)throw new QD(xD.UNEXPECTED_ERROR,\"live streaming connection has already connected\");const t=await RK(this,jk.REQUEST_WORKER_MANAGER_LIST,e);return this.uapResponse=t,this.connection=new Xq(t.workerToken,this.spec,this.wsRetryConfig,e),this.connection.on(Vk.WARNING,(e,t)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)),this.connection.on(Vk.PUBLISH_STREAM_STATUS,e=>this.handlePublishStreamServer(e)),this.connection.on(Vk.INJECT_STREAM_STATUS,e=>this.handleInjectStreamServerStatus(e)),this.connection.on(Vk.REQUEST_NEW_ADDRESS,(t,i)=>{if(!this.connection)return i(new QD(xD.UNEXPECTED_ERROR,\"can not get new live streaming address list\"));RK(this,jk.REQUEST_WORKER_MANAGER_LIST,e).then(e=>{this.uapResponse=e,t(e.addressList)}).catch(i)}),await this.connection.init(t.addressList),this.connection}handlePublishStreamServer(e){const t=e.serverStatus&&e.serverStatus.url||\"empty_url\",i=this.streamingTasks.get(t),r=e.reason;switch(e.code){case Gk.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case Gk.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{const r=new QD(xD.LIVE_STREAMING_CDN_ERROR,\"\",{code:e.code});if(i)return JD.error(r.toString()),this.onLiveStreamError&&this.onLiveStreamError(t,r);if(!this.isStartingStreamingTask)return;this.statusError.set(t,r)}case Gk.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:{const e=new QD(xD.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE,r);return this.onLiveStreamWarning&&this.onLiveStreamWarning(t,e)}case Gk.LIVE_STREAM_RESPONSE_WORKER_LOST:case Gk.LIVE_STREAM_RESPONSE_WORKER_QUIT:{var n;if(!this.connection)return;this.connection.tryNextAddress();const t=Array.from(MG(n=this.streamingTasks).call(n));for(const i of t)i.abortTask?i.abortTask():(JD.warning(\"[\".concat(this.spec.clientId,\"] publish stream status code\"),e.code,\"try to republish\",i.url),this.startLiveStreamingTask(i.url,i.mode,new QD(xD.LIVE_STREAMING_INTERNAL_SERVER_ERROR,\"\",{code:e.code})).then(()=>{JD.debug(\"[\".concat(this.spec.clientId,\"] republish live stream success\"),i.url)}).catch(e=>{JD.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(i.url,e)}));return}}}handleInjectStreamServerStatus(e){const t=Number(e.uid),i=e.serverStatus&&e.serverStatus.url;switch(e.code){case 200:return void(this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_START_SUCCESS,t,i));case 451:return this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_START_ALREADY_EXISTS,t,i),void this.streamingTasks.delete(i);case 453:return this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_START_UNAUTHORIZED,t,i),void this.streamingTasks.delete(i);case 470:return this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_BROKEN,t,i),void this.streamingTasks.delete(i);case 499:return this.onInjectStatusChange&&this.onInjectStatusChange(Bk.INJECT_STREAM_STATUS_START_TIMEOUT,t,i),void this.streamingTasks.delete(i);default:return void JD.debug(\"inject stream server status\",e)}}hasUrl(e){return this.streamingTasks.has(e)}}class eX{constructor(){MN(this,\"destChannelMediaInfos\",new Map),MN(this,\"srcChannelMediaInfo\",void 0)}setSrcChannelInfo(e){oB(e),this.srcChannelMediaInfo=e}addDestChannelInfo(e){oB(e),this.destChannelMediaInfos.set(e.channelName,e)}removeDestChannelInfo(e){VL(e),this.destChannelMediaInfos.delete(e)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}function tX(e){if(!(e instanceof eX)){return new QD(xD.INVALID_PARAMS,\"Config should be instance of [ChannelMediaRelayConfiguration]\").throw()}const t=e.getSrcChannelMediaInfo(),i=e.getDestChannelMediaInfo();if(!t){return new QD(xD.INVALID_PARAMS,\"srcChannelMediaInfo should not be empty\").throw()}if(0===i.size){return new QD(xD.INVALID_PARAMS,\"destChannelMediaInfo should not be empty\").throw()}}class iX extends MD{constructor(e,t,i){super(),MN(this,\"ws\",void 0),MN(this,\"requestId\",1),MN(this,\"heartBeatTimer\",void 0),MN(this,\"joinInfo\",void 0),MN(this,\"clientId\",void 0),MN(this,\"onOpen\",()=>{this.emit(\"open\"),this.startHeartBeatCheck()}),MN(this,\"onClose\",e=>{this.emit(\"close\"),this.dispose()}),MN(this,\"onMessage\",e=>{const t=JSON.parse(e.data);if(!t||\"serverResponse\"!==t.command||!t.requestId)return t&&\"serverStatus\"===t.command&&t.serverStatus&&t.serverStatus.command?(this.emit(\"status\",t.serverStatus),void this.emit(t.serverStatus.command,t.serverStatus)):void 0;this.emit(\"req_\".concat(t.requestId),t)}),this.joinInfo=e,this.clientId=t,this.ws=new zJ(\"cross-channel-\".concat(this.clientId),i),this.ws.on(Lk.RECONNECTING,()=>{this.ws.reconnectMode=\"retry\",this.emit(\"reconnecting\")}),this.ws.on(Lk.CONNECTED,this.onOpen),this.ws.on(Lk.ON_MESSAGE,this.onMessage),this.ws.on(Lk.CLOSED,this.onClose)}isConnect(){return\"connected\"===this.ws.state}sendMessage(e){const t=this.requestId++;return e.requestId=t,e.seq=t,this.ws.sendMessage(e),t}waitStatus(e){return new l_((t,i)=>{const r=window.setTimeout(()=>{i(new QD(xD.TIMEOUT,\"wait status timeout, status: \".concat(e)))},5e3);this.once(e,n=>{window.clearTimeout(r),n.state&&0!==n.state?i(new QD(xD.CROSS_CHANNEL_WAIT_STATUS_ERROR,\"wait status error, status: \".concat(e))):t(void 0)}),this.once(\"dispose\",()=>{window.clearTimeout(r),i(new QD(xD.WS_ABORT))})})}async request(e){if(\"closed\"===this.ws.state)throw new QD(xD.WS_DISCONNECT);const t=()=>new l_((e,t)=>{this.ws.once(Lk.CLOSED,()=>t(new QD(xD.WS_ABORT))),this.ws.once(Lk.CONNECTED,e)});\"connected\"!==this.ws.state&&await t();const i=this.sendMessage(e),r=new l_((e,t)=>{const r=()=>{t(new QD(xD.WS_ABORT))};this.ws.once(Lk.RECONNECTING,r),this.ws.once(Lk.CLOSED,r),this.once(\"req_\".concat(i),e),mK(3e3).then(()=>{this.removeAllListeners(\"req_\".concat(i)),this.ws.off(Lk.RECONNECTING,r),this.ws.off(Lk.CLOSED,r),t(new QD(xD.TIMEOUT,\"cross channel ws request timeout\"))})}),n=await r;if(!n||200!==n.code)throw new QD(xD.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,\"response: \".concat(JSON.stringify(n)));return n}async connect(e){this.ws.removeAllListeners(Lk.REQUEST_NEW_URLS),this.ws.on(Lk.REQUEST_NEW_URLS,t=>{t(e)}),await this.ws.init(e)}dispose(){this.clearHeartBeatCheck(),this.emit(\"dispose\"),this.removeAllListeners(),this.ws.close()}sendPing(e){const t=this.requestId++;return e.requestId=t,this.ws.sendMessage(e),t}startHeartBeatCheck(){this.heartBeatTimer&&window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=window.setInterval(()=>{this.sendPing({command:\"ping\",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})},3e3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer),this.heartBeatTimer=void 0}}class rX extends MD{set state(e){e!==this._state&&(e!==Yk.RELAY_STATE_FAILURE&&(this.errorCode=Jk.RELAY_OK),this.emit(\"state\",e,this.errorCode),this._state=e)}get state(){return this._state}constructor(e,t,i,r){super(),MN(this,\"joinInfo\",void 0),MN(this,\"sid\",void 0),MN(this,\"clientId\",void 0),MN(this,\"cancelToken\",kD.CancelToken.source()),MN(this,\"workerToken\",void 0),MN(this,\"requestId\",0),MN(this,\"signal\",void 0),MN(this,\"prevChannelMediaConfig\",void 0),MN(this,\"httpRetryConfig\",void 0),MN(this,\"_state\",Yk.RELAY_STATE_IDLE),MN(this,\"errorCode\",Jk.RELAY_OK),MN(this,\"onStatus\",e=>{JD.debug(\"[\".concat(this.clientId,\"] ChannelMediaStatus: \").concat(JSON.stringify(e))),e&&e.command&&(\"onAudioPacketReceived\"===e.command&&this.emit(\"event\",Wk.PACKET_RECEIVED_AUDIO_FROM_SRC),\"onVideoPacketReceived\"===e.command&&this.emit(\"event\",Wk.PACKET_RECEIVED_VIDEO_FROM_SRC),\"onSrcTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Jk.SRC_TOKEN_EXPIRED,this.state=Yk.RELAY_STATE_FAILURE),\"onDestTokenPrivilegeDidExpire\"===e.command&&(this.errorCode=Jk.DEST_TOKEN_EXPIRED,this.state=Yk.RELAY_STATE_FAILURE))}),MN(this,\"onReconnect\",async()=>{JD.debug(\"[\".concat(this.clientId,\"] ChannelMediaSocket disconnect, reconnecting\")),this.emit(\"event\",Wk.NETWORK_DISCONNECTED),this.state=Yk.RELAY_STATE_IDLE,this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch(e=>{this.state!==Yk.RELAY_STATE_IDLE&&(JD.error(\"auto restart channel media relay failed\",e.toString()),this.errorCode=Jk.SERVER_CONNECTION_LOST,this.state=Yk.RELAY_STATE_FAILURE)})}),this.joinInfo=e,this.clientId=t,this.sid=CK(),this.signal=new iX(this.joinInfo,this.clientId,i),this.httpRetryConfig=r}async startChannelMediaRelay(e){if(this.state!==Yk.RELAY_STATE_IDLE)throw new QD(xD.INVALID_OPERATION);this.state=Yk.RELAY_STATE_CONNECTING,await this.connect(),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: connect success\"));try{await this.sendStartRelayMessage(e)}catch(e){if(e.data&&e.data.serverResponse&&\"SetSourceChannel\"===e.data.serverResponse.command)throw new QD(xD.CROSS_CHANNEL_FAILED_JOIN_SRC);if(e.data&&e.data.serverResponse&&\"SetDestChannelStatus\"===e.serverResponse.command)throw new QD(xD.CROSS_CHANNEL_FAILED_JOIN_DEST);if(e.data&&e.data.serverResponse&&\"StartPacketTransfer\"===e.serverResponse.command)throw new QD(xD.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw e}this.prevChannelMediaConfig=e}async updateChannelMediaRelay(e){if(this.state!==Yk.RELAY_STATE_RUNNING)throw new QD(xD.INVALID_OPERATION);await this.sendUpdateMessage(e),this.prevChannelMediaConfig=e}async stopChannelMediaRelay(){await this.sendStopRelayMessage(),JD.debug(\"[\".concat(this.clientId,\"] stopChannelMediaRelay: send stop message success\")),this.state=Yk.RELAY_STATE_IDLE,this.dispose()}dispose(){JD.debug(\"[\".concat(this.clientId,\"] disposeChannelMediaRelay\")),this.cancelToken.cancel(),this.cancelToken=kD.CancelToken.source(),this.state=Yk.RELAY_STATE_IDLE,this.emit(\"dispose\"),this.signal.dispose(),this.prevChannelMediaConfig=void 0}async connect(){const e=await jq(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=e.workerToken,await this.signal.connect(e.addressList),this.emit(\"event\",Wk.NETWORK_CONNECTED),this.signal.on(\"status\",this.onStatus),this.signal.on(\"reconnecting\",this.onReconnect)}async sendStartRelayMessage(e){const t=this.genMessage(Hk.StopPacketTransfer);await this.signal.request(t),await this.signal.waitStatus(\"Normal Quit\"),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StopPacketTransfer success\"));const i=this.genMessage(Hk.SetSdkProfile,e);await this.signal.request(i),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSdkProfile success\"));const r=this.genMessage(Hk.SetSourceChannel,e);await this.signal.request(r),await this.signal.waitStatus(\"SetSourceChannelStatus\"),this.emit(\"event\",Wk.PACKET_JOINED_SRC_CHANNEL),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceChannel success\"));const n=this.genMessage(Hk.SetSourceUserId,e);await this.signal.request(n),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetSourceUserId success\"));const o=this.genMessage(Hk.SetDestChannel,e);await this.signal.request(o),await this.signal.waitStatus(\"SetDestChannelStatus\"),this.emit(\"event\",Wk.PACKET_JOINED_DEST_CHANNEL),JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: SetDestChannel success\"));const s=this.genMessage(Hk.StartPacketTransfer,e);await this.signal.request(s),this.emit(\"event\",Wk.PACKET_SENT_TO_DEST_CHANNEL),this.state=Yk.RELAY_STATE_RUNNING,JD.debug(\"[\".concat(this.clientId,\"] startChannelMediaRelay: StartPacketTransfer success\"))}async sendUpdateMessage(e){const t=this.genMessage(Hk.UpdateDestChannel,e);await this.signal.request(t),this.emit(\"event\",Wk.PACKET_UPDATE_DEST_CHANNEL),JD.debug(\"[\".concat(this.clientId,\"] sendUpdateMessage: UpdateDestChannel success\"))}async sendStopRelayMessage(){const e=this.genMessage(Hk.StopPacketTransfer);await this.signal.request(e),JD.debug(\"[\".concat(this.clientId,\"] sendStopRelayMessage: StopPacketTransfer success\"))}genMessage(e,t){const i=[],r=[],n=[];this.requestId+=1;const o={appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sdkVersion:CP,sid:this.sid,ts:Date.now(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};\"4.15.1\"===o.sdkVersion&&(o.sdkVersion=\"0.0.1\");let s=null,a=null;switch(e){case Hk.SetSdkProfile:return o.clientRequest={command:\"SetSdkProfile\",type:\"multi_channel\"},o;case Hk.SetSourceChannel:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new QD(xD.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceChannel\",uid:\"0\",channelName:a.channelName,token:a.token||this.joinInfo.appId},o;case Hk.SetSourceUserId:if(a=t&&t.getSrcChannelMediaInfo(),!a)throw new QD(xD.UNEXPECTED_ERROR,\"can not find source config\");return o.clientRequest={command:\"SetSourceUserId\",uid:a.uid+\"\"},o;case Hk.SetDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new QD(xD.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach(e=>{i.push(e.channelName),r.push(e.uid+\"\"),n.push(e.token||this.joinInfo.appId)}),o.clientRequest={command:\"SetDestChannel\",channelName:i,uid:r,token:n},o;case Hk.StartPacketTransfer:return o.clientRequest={command:\"StartPacketTransfer\"},o;case Hk.Reconnect:return o.clientRequest={command:\"Reconnect\"},o;case Hk.StopPacketTransfer:return o.clientRequest={command:\"StopPacketTransfer\"},o;case Hk.UpdateDestChannel:if(s=t&&t.getDestChannelMediaInfo(),!s)throw new QD(xD.UNEXPECTED_ERROR,\"can not find dest config\");return s.forEach(e=>{i.push(e.channelName),r.push(e.uid+\"\"),n.push(e.token||this.joinInfo.appId)}),o.clientRequest={command:\"UpdateDestChannel\",channelName:i,uid:r,token:n},o}return o}}const nX=e=>{const t=document.createElement(\"canvas\");return t.width=2,t.height=2,new l_((i,r)=>{t.toBlob(async e=>{if(t.remove(),e){const r=await oX(e);i({buffer:r,width:t.width,height:t.height})}else r(new QD(xD.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))},e,1)})},oX=async e=>{const t=await e.arrayBuffer();return new Uint8Array(t)};const sX=new class extends MD{get visibility(){return document.visibilityState}get lastHiddenTime(){return this._lastHiddenTime}get lastVisibleTime(){return this._lastVisibleTime}constructor(){super(),MN(this,\"_lastHiddenTime\",NaN),MN(this,\"_lastVisibleTime\",NaN),document.addEventListener(\"visibilitychange\",()=>{\"hidden\"===document.visibilityState?this._lastHiddenTime=Date.now():this._lastVisibleTime=Date.now(),this.emit(\"VISIBILITY_CHANGE\",document.visibilityState)})}};var aX;let cX=mP(\"AgoraRTCPlayer\",\"trackId\")(aX=class{get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(e){e!==this._videoElementStatus&&(JD.debug(\"[\".concat(this.trackId,\"] video-element-status change \").concat(this._videoElementStatus,\" => \").concat(e)),pP(\"debug\",[\"HTMLVideoElement\",this.trackId],\"statusChange\",\"\".concat(this._videoElementStatus,\" => \").concat(e)),this._videoElementStatus=e)}constructor(e){MN(this,\"trackId\",void 0),MN(this,\"config\",void 0),MN(this,\"onFirstVideoFrameDecoded\",void 0),MN(this,\"freezeTimeCounterList\",[]),MN(this,\"timeUpdatedCount\",0),MN(this,\"freezeTime\",0),MN(this,\"playbackTime\",0),MN(this,\"lastTimeUpdatedTime\",0),MN(this,\"autoplayFailed\",!1),MN(this,\"videoTrack\",void 0),MN(this,\"container\",void 0),MN(this,\"videoElement\",void 0),MN(this,\"videoElementCheckInterval\",void 0),MN(this,\"_videoElementStatus\",qL.NONE),MN(this,\"slot\",void 0),MN(this,\"isGettingVideoDimensions\",!1),MN(this,\"handleVideoEvents\",e=>{switch(e.type){case\"play\":case\"playing\":this.startGetVideoDimensions(),this.videoElementStatus=qL.PLAYING;break;case\"loadeddata\":this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded();break;case\"canplay\":this.videoElementStatus=qL.CANPLAY;break;case\"stalled\":this.videoElementStatus=qL.STALLED;break;case\"suspend\":this.videoElementStatus=qL.SUSPEND;break;case\"pause\":this.videoElementStatus=qL.PAUSED,EN()||vN()||pN()&&this.autoplayFailed||!this.videoElement||!this.videoTrack||\"live\"!==this.videoTrack.readyState||(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume\")),hP(\"debug\",this,\"video element paused, auto resume\"),this.videoElement.play());break;case\"waiting\":this.videoElementStatus=qL.WAITING;break;case\"abort\":this.videoElementStatus=qL.ABORT;break;case\"ended\":this.videoElementStatus=qL.ENDED;break;case\"emptied\":this.videoElementStatus=qL.EMPTIED;break;case\"timeupdate\":{const e=Date.now();if(this.timeUpdatedCount+=1,this.timeUpdatedCount<10)return void(this.lastTimeUpdatedTime=e);const t=e-this.lastTimeUpdatedTime;if(\"hidden\"===sX.visibility)return;if(this.lastTimeUpdatedTime<sX.lastHiddenTime&&e>sX.lastVisibleTime)return void(this.lastTimeUpdatedTime=e);for(this.lastTimeUpdatedTime=e,t>500&&(this.freezeTime+=t),this.playbackTime+=t;this.playbackTime>=6e3;)this.playbackTime-=6e3,this.freezeTimeCounterList.push(Math.min(6e3,this.freezeTime)),this.freezeTime=Math.max(0,this.freezeTime-6e3);break}}}),MN(this,\"startGetVideoDimensions\",()=>{const e=()=>{if(this.isGettingVideoDimensions=!0,this.videoElement&&this.videoElement.videoWidth*this.videoElement.videoHeight>4)return JD.debug(\"[\".concat(this.trackId,\"] current video dimensions:\"),this.videoElement.videoWidth,this.videoElement.videoHeight),gP(\"debug\",this,\"startGetVideoDimensions\",{videoWidth:this.videoElement.videoWidth,videoHeight:this.videoElement.videoHeight}),void(this.isGettingVideoDimensions=!1);setTimeout(e,500)};!this.isGettingVideoDimensions&&e()}),MN(this,\"autoResumeAfterInterruption\",()=>{this.videoElement&&this.videoTrack&&\"live\"===this.videoTrack.readyState&&\"running\"===Tj.curState&&(SN()?(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.2\")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):CN()?(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.1\")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):_N()&&(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.0\")),this.videoElement.pause(),this.videoElement.play()))}),MN(this,\"autoResumeAfterInterruptionOnIOS15\",()=>{this.videoElement&&this.videoTrack&&\"live\"===this.videoTrack.readyState&&(SN()?(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.2\")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):CN()?(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.1\")),this.videoElement.srcObject=null,this.videoElement.srcObject=new MediaStream([this.videoTrack]),this.videoElement.play()):_N()&&(JD.debug(\"[track-\".concat(this.trackId,\"] video element paused, auto resume for iOS 15.0\")),this.videoElement.pause(),this.videoElement.play()))}),this.slot=e.element,this.trackId=e.trackId,this.updateConfig(e),Tj.on(_j.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Tj.on(_j.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15)}updateConfig(e){this.config=e,this.trackId=e.trackId;const t=e.element;t!==this.slot&&(this.destroy(),this.slot=t),this.createElements()}updateVideoTrack(e){this.videoTrack!==e&&(this.videoTrack=e,this.createElements())}play(e){if(this.videoElement){const t=this.videoElement.play();t&&t.catch&&t.catch(t=>{e&&pj.autoplayFailed(e,\"video\",t.message,this.trackId),gP(\"warning\",this,\"play\",t.toString(),\"error\"),\"NotAllowedError\"===t.name?(JD.warning(\"detected video element autoplay failed\",t),this.autoplayFailed=!0,this.handleAutoPlayFailed()):JD.warning(\"[\".concat(this.trackId,\"] play warning: \"),t)});const i=oN();if((\"Safari\"===i.name&&15===Number(i.version)||IN())&&t&&t.then&&t.catch){const e=()=>{this.config.mirror&&this.videoElement&&(this.videoElement.style.transform=\"rotateY(180deg)\")};t.then(e).catch(e)}}}getCurrentFrame(){if(!this.videoElement)return new ImageData(2,2);const e=document.createElement(\"canvas\");e.width=this.videoElement.videoWidth,e.height=this.videoElement.videoHeight;const t=e.getContext(\"2d\");if(!t)return JD.error(\"create canvas context failed!\"),gP(\"error\",this,\"getCurrentFrame\",\"create canvas context failed!\",\"error\"),new ImageData(2,2);t.drawImage(this.videoElement,0,0,e.width,e.height);const i=t.getImageData(0,0,e.width,e.height);return e.remove(),i}async getCurrentFrameToUint8Array(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!this.videoElement)return await nX(e);const i=document.createElement(\"canvas\");i.width=this.videoElement.videoWidth,i.height=this.videoElement.videoHeight;const r=i.getContext(\"2d\");return r?(r.drawImage(this.videoElement,0,0,i.width,i.height),new l_((r,n)=>{i.toBlob(async e=>{if(i.remove(),e){const t=await oX(e);r({buffer:t,width:i.width,height:i.height})}else n(new QD(xD.CONVERTING_VIDEO_FRAME_TO_BLOB_FAILED))},e,t<0?.1:t>1?1:t)})):await nX(e)}destroy(){if(Tj.off(_j.IOS_INTERRUPTION_END,this.autoResumeAfterInterruption),Tj.off(_j.IOS_15_INTERRUPTION_END,this.autoResumeAfterInterruptionOnIOS15),this.videoElement&&(this.videoElement.srcObject=null,this.videoElement.remove(),this.videoElement=void 0),this.container){try{this.container.remove(),this.slot.removeChild(this.container)}catch(e){}this.container=void 0}this.freezeTimeCounterList=[]}createElements(){this.container||(this.container=document.createElement(\"div\")),this.container.id=\"agora-video-player-\".concat(this.trackId),this.container.style.width=\"100%\",this.container.style.height=\"100%\",this.container.style.position=\"relative\",this.container.style.overflow=\"hidden\",this.videoTrack?(this.container.style.backgroundColor=\"black\",this.createVideoElement(),this.container.appendChild(this.videoElement)):this.removeVideoElement(),this.slot.appendChild(this.container)}createVideoElement(){this.videoElement||(this.videoElementStatus=qL.INIT,this.videoElement=document.createElement(\"video\"),this.videoElement.onerror=()=>this.videoElementStatus=qL.ERROR,this.container&&this.container.appendChild(this.videoElement),dX.forEach(e=>{this.videoElement&&this.videoElement.addEventListener(e,this.handleVideoEvents)}),this.videoElementCheckInterval=window.setInterval(()=>{!document.getElementById(\"video_\".concat(this.trackId))&&this.videoElement&&(this.videoElementStatus=qL.DESTROYED)},1e3)),this.videoElement.id=\"video_\".concat(this.trackId),this.videoElement.className=\"agora_video_player\",this.videoElement.style.width=\"100%\",this.videoElement.style.height=\"100%\",this.videoElement.style.position=\"absolute\",this.videoElement.controls=!1,this.videoElement.setAttribute(\"playsinline\",\"\"),this.videoElement.style.left=\"0\",this.videoElement.style.top=\"0\",wN()&&(this.videoElement.poster=\"noposter\");const e=oN();if(\"Safari\"===e.name&&15===Number(e.version)||IN()||!this.config.mirror||(this.videoElement.style.transform=\"rotateY(180deg)\"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit=\"cover\",this.videoElement.setAttribute(\"muted\",\"\"),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream){this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,gN()&&this.videoElement.load())}else this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null,gN()&&this.videoElement.load();const t=this.videoElement.play();void 0!==t&&t.catch(e=>{JD.debug(\"[\".concat(this.trackId,\"] playback interrupted\"),e.toString()),hP(\"debug\",this,\"play back interrupted: \".concat(e.toString()))})}removeVideoElement(){if(this.videoElement){dX.forEach(e=>{this.videoElement&&this.videoElement.removeEventListener(e,this.handleVideoEvents)}),this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0);try{this.container&&this.container.removeChild(this.videoElement)}catch(e){}this.videoElement=void 0,this.videoElementStatus=qL.NONE}}handleAutoPlayFailed(){if(this.videoElement){const e=t=>{t.preventDefault(),this.videoElement&&(this.videoElement.play().then(()=>{JD.debug(\"[\".concat(this.trackId,\"] Video element for trackId:\").concat(this.trackId,\" autoplay resumed.\")),hP(\"debug\",this,\"video element autoplay resumed\")}).catch(e=>{JD.error(e)}),this.autoplayFailed=!1,bN()?document.body.removeEventListener(\"click\",e,!0):(document.body.removeEventListener(\"touchstart\",e,!0),document.body.removeEventListener(\"mousedown\",e,!0)))};bN()?document.body.addEventListener(\"click\",e,!0):(document.body.addEventListener(\"touchstart\",e,!0),document.body.addEventListener(\"mousedown\",e,!0)),oj()}}getVideoElement(){return this.videoElement}getContainerElement(){return this.container}})||aX;const dX=[\"play\",\"playing\",\"loadeddata\",\"canplay\",\"pause\",\"stalled\",\"suspend\",\"waiting\",\"abort\",\"emptied\",\"ended\",\"timeupdate\"];var uX={exports:{}};function hX(e,t,i){const r=e.createShader(i);if(!r){return new QD(xD.WEBGL_INTERNAL_ERROR,\"can not create shader\").throw()}e.shaderSource(r,t),e.compileShader(r);if(!e.getShaderParameter(r,e.COMPILE_STATUS)){const t=e.getShaderInfoLog(r);e.deleteShader(r);return new QD(xD.WEBGL_INTERNAL_ERROR,\"error compiling shader:\"+t).throw()}return r}function AX(e,t,i,r){const n=[];for(let i=0;i<t.length;++i){const r=0===i?e.VERTEX_SHADER:e.FRAGMENT_SHADER;n.push(hX(e,t[i],r))}return function(e,t,i,r){const n=e.createProgram();if(!n)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"can not create webgl program\");if(t.forEach(t=>{e.attachShader(n,t)}),i&&i.forEach((t,i)=>{e.bindAttribLocation(n,r?r[i]:i,t)}),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS)){const t=e.getProgramInfoLog(n);throw e.deleteProgram(n),new QD(xD.WEBGL_INTERNAL_ERROR,\"error in program linking:\"+t)}return n}(e,n,i,r)}!function(e,t){var i;self,i=()=>(()=>{var e={3536:(e,t,i)=>{var r=i(1910);e.exports=r},8171:(e,t,i)=>{i(6450);var r=i(4058).Object,n=e.exports=function(e,t,i){return r.defineProperty(e,t,i)};r.defineProperty.sham&&(n.sham=!0)},2956:(e,t,i)=>{i(7627),i(6274),i(5967),i(8881),i(4560),i(7206),i(4349),i(7971);var r=i(4058);e.exports=r.Promise},3685:(e,t,i)=>{e.exports=i(621)},621:(e,t,i)=>{var r=i(3536);e.exports=r},4883:(e,t,i)=>{var r=i(7475),n=i(9826),o=TypeError;e.exports=function(e){if(r(e))return e;throw o(n(e)+\" is not a function\")}},174:(e,t,i)=>{var r=i(4284),n=i(9826),o=TypeError;e.exports=function(e){if(r(e))return e;throw o(n(e)+\" is not a constructor\")}},1851:(e,t,i)=>{var r=i(7475),n=String,o=TypeError;e.exports=function(e){if(\"object\"==typeof e||r(e))return e;throw o(\"Can't set \"+n(e)+\" as a prototype\")}},8479:e=>{e.exports=function(){}},5743:(e,t,i)=>{var r=i(7046),n=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw n(\"Incorrect invocation\")}},6059:(e,t,i)=>{var r=i(941),n=String,o=TypeError;e.exports=function(e){if(r(e))return e;throw o(n(e)+\" is not an object\")}},1692:(e,t,i)=>{var r=i(4529),n=i(9413),o=i(623),s=function(e){return function(t,i,s){var a,c=r(t),d=o(c),u=n(s,d);if(e&&i!=i){for(;d>u;)if((a=c[u++])!=a)return!0}else for(;d>u;u++)if((e||u in c)&&c[u]===i)return e||u||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},3765:(e,t,i)=>{var r=i(5329);e.exports=r([].slice)},1385:(e,t,i)=>{var r=i(9813)(\"iterator\"),n=!1;try{var o=0,s={next:function(){return{done:!!o++}},return:function(){n=!0}};s[r]=function(){return this},Array.from(s,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!n)return!1;var i=!1;try{var o={};o[r]=function(){return{next:function(){return{done:i=!0}}}},e(o)}catch(e){}return i}},2532:(e,t,i)=>{var r=i(4163),n=r({}.toString),o=r(\"\".slice);e.exports=function(e){return o(n(e),8,-1)}},9697:(e,t,i)=>{var r=i(2885),n=i(7475),o=i(2532),s=i(9813)(\"toStringTag\"),a=Object,c=\"Arguments\"==o(function(){return arguments}());e.exports=r?o:function(e){var t,i,r;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=a(e),s))?i:c?o(t):\"Object\"==(r=o(t))&&n(t.callee)?\"Arguments\":r}},3489:(e,t,i)=>{var r=i(953),n=i(1136),o=i(9677),s=i(5988);e.exports=function(e,t,i){for(var a=n(t),c=s.f,d=o.f,u=0;u<a.length;u++){var h=a[u];r(e,h)||i&&r(i,h)||c(e,h,d(t,h))}}},4160:(e,t,i)=>{var r=i(5981);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},3538:e=>{e.exports=function(e,t){return{value:e,done:t}}},2029:(e,t,i)=>{var r=i(5746),n=i(5988),o=i(1887);e.exports=r?function(e,t,i){return n.f(e,t,o(1,i))}:function(e,t,i){return e[t]=i,e}},1887:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},5929:(e,t,i)=>{var r=i(2029);e.exports=function(e,t,i,n){return n&&n.enumerable?e[t]=i:r(e,t,i),e}},5609:(e,t,i)=>{var r=i(1899),n=Object.defineProperty;e.exports=function(e,t){try{n(r,e,{value:t,configurable:!0,writable:!0})}catch(i){r[e]=t}return t}},5746:(e,t,i)=>{var r=i(5981);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},6616:e=>{var t=\"object\"==typeof document&&document.all,i=void 0===t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:i}},1333:(e,t,i)=>{var r=i(1899),n=i(941),o=r.document,s=n(o)&&n(o.createElement);e.exports=function(e){return s?o.createElement(e):{}}},3281:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},3321:(e,t,i)=>{var r=i(8501),n=i(6049);e.exports=!r&&!n&&\"object\"==typeof window&&\"object\"==typeof document},8501:e=>{e.exports=\"object\"==typeof Deno&&Deno&&\"object\"==typeof Deno.version},4470:(e,t,i)=>{var r=i(2861),n=i(1899);e.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==n.Pebble},2749:(e,t,i)=>{var r=i(2861);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},6049:(e,t,i)=>{var r=i(2532),n=i(1899);e.exports=\"process\"==r(n.process)},8045:(e,t,i)=>{var r=i(2861);e.exports=/web0s(?!.*chrome)/i.test(r)},2861:(e,t,i)=>{var r=i(626);e.exports=r(\"navigator\",\"userAgent\")||\"\"},3385:(e,t,i)=>{var r,n,o=i(1899),s=i(2861),a=o.process,c=o.Deno,d=a&&a.versions||c&&c.version,u=d&&d.v8;u&&(n=(r=u.split(\".\"))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!n&&s&&(!(r=s.match(/Edge\\/(\\d+)/))||r[1]>=74)&&(r=s.match(/Chrome\\/(\\d+)/))&&(n=+r[1]),e.exports=n},6759:e=>{e.exports=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"]},3995:(e,t,i)=>{var r=i(5329),n=Error,o=r(\"\".replace),s=String(n(\"zxcasd\").stack),a=/\\n\\s*at [^:]*:[^\\n]*/,c=a.test(s);e.exports=function(e,t){if(c&&\"string\"==typeof e&&!n.prepareStackTrace)for(;t--;)e=o(e,a,\"\");return e}},8780:(e,t,i)=>{var r=i(5981),n=i(1887);e.exports=!r((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",n(1,7)),7!==e.stack)}))},6887:(e,t,i)=>{var r=i(1899),n=i(9730),o=i(5329),s=i(7475),a=i(9677).f,c=i(7252),d=i(4058),u=i(6843),h=i(2029),A=i(953),l=function(e){var t=function(i,r,o){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(i);case 2:return new e(i,r)}return new e(i,r,o)}return n(e,this,arguments)};return t.prototype=e.prototype,t};e.exports=function(e,t){var i,n,p,g,E,f,m,I,_=e.target,C=e.global,S=e.stat,v=e.proto,T=C?r:S?r[_]:(r[_]||{}).prototype,R=C?d:d[_]||h(d,_,{})[_],y=R.prototype;for(p in t)i=!c(C?p:_+(S?\".\":\"#\")+p,e.forced)&&T&&A(T,p),E=R[p],i&&(f=e.dontCallGetSet?(I=a(T,p))&&I.value:T[p]),g=i&&f?f:t[p],i&&typeof E==typeof g||(m=e.bind&&i?u(g,r):e.wrap&&i?l(g):v&&s(g)?o(g):g,(e.sham||g&&g.sham||E&&E.sham)&&h(m,\"sham\",!0),h(R,p,m),v&&(A(d,n=_+\"Prototype\")||h(d,n,{}),h(d[n],p,g),e.real&&y&&!y[p]&&h(y,p,g)))}},5981:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},9730:(e,t,i)=>{var r=i(8285),n=Function.prototype,o=n.apply,s=n.call;e.exports=\"object\"==typeof Reflect&&Reflect.apply||(r?s.bind(o):function(){return s.apply(o,arguments)})},6843:(e,t,i)=>{var r=i(5329),n=i(4883),o=i(8285),s=r(r.bind);e.exports=function(e,t){return n(e),void 0===t?e:o?s(e,t):function(){return e.apply(t,arguments)}}},8285:(e,t,i)=>{var r=i(5981);e.exports=!r((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")}))},8834:(e,t,i)=>{var r=i(8285),n=Function.prototype.call;e.exports=r?n.bind(n):function(){return n.apply(n,arguments)}},9417:(e,t,i)=>{var r=i(5746),n=i(953),o=Function.prototype,s=r&&Object.getOwnPropertyDescriptor,a=n(o,\"name\"),c=a&&\"something\"===function(){}.name,d=a&&(!r||r&&s(o,\"name\").configurable);e.exports={EXISTS:a,PROPER:c,CONFIGURABLE:d}},4163:(e,t,i)=>{var r=i(8285),n=Function.prototype,o=n.call,s=r&&n.bind.bind(o,o);e.exports=r?s:function(e){return function(){return o.apply(e,arguments)}}},5329:(e,t,i)=>{var r=i(2532),n=i(4163);e.exports=function(e){if(\"Function\"===r(e))return n(e)}},626:(e,t,i)=>{var r=i(4058),n=i(1899),o=i(7475),s=function(e){return o(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?s(r[e])||s(n[e]):r[e]&&r[e][t]||n[e]&&n[e][t]}},2902:(e,t,i)=>{var r=i(9697),n=i(4229),o=i(2119),s=i(2077),a=i(9813)(\"iterator\");e.exports=function(e){if(!o(e))return n(e,a)||n(e,\"@@iterator\")||s[r(e)]}},3476:(e,t,i)=>{var r=i(8834),n=i(4883),o=i(6059),s=i(9826),a=i(2902),c=TypeError;e.exports=function(e,t){var i=arguments.length<2?a(e):t;if(n(i))return o(r(i,e));throw c(s(e)+\" is not iterable\")}},4229:(e,t,i)=>{var r=i(4883),n=i(2119);e.exports=function(e,t){var i=e[t];return n(i)?void 0:r(i)}},1899:(e,t,i)=>{var r=function(e){return e&&e.Math==Math&&e};e.exports=r(\"object\"==typeof globalThis&&globalThis)||r(\"object\"==typeof window&&window)||r(\"object\"==typeof self&&self)||r(\"object\"==typeof i.g&&i.g)||function(){return this}()||Function(\"return this\")()},953:(e,t,i)=>{var r=i(5329),n=i(9678),o=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return o(n(e),t)}},7748:e=>{e.exports={}},4845:(e,t,i)=>{var r=i(1899);e.exports=function(e,t){var i=r.console;i&&i.error&&(1==arguments.length?i.error(e):i.error(e,t))}},5463:(e,t,i)=>{var r=i(626);e.exports=r(\"document\",\"documentElement\")},2840:(e,t,i)=>{var r=i(5746),n=i(5981),o=i(1333);e.exports=!r&&!n((function(){return 7!=Object.defineProperty(o(\"div\"),\"a\",{get:function(){return 7}}).a}))},7026:(e,t,i)=>{var r=i(5329),n=i(5981),o=i(2532),s=Object,a=r(\"\".split);e.exports=n((function(){return!s(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==o(e)?a(e,\"\"):s(e)}:s},1302:(e,t,i)=>{var r=i(5329),n=i(7475),o=i(3030),s=r(Function.toString);n(o.inspectSource)||(o.inspectSource=function(e){return s(e)}),e.exports=o.inspectSource},3794:(e,t,i)=>{var r=i(941),n=i(2029);e.exports=function(e,t){r(t)&&\"cause\"in t&&n(e,\"cause\",t.cause)}},5402:(e,t,i)=>{var r,n,o,s=i(7093),a=i(1899),c=i(941),d=i(2029),u=i(953),h=i(3030),A=i(4262),l=i(7748),p=\"Object already initialized\",g=a.TypeError,E=a.WeakMap;if(s||h.state){var f=h.state||(h.state=new E);f.get=f.get,f.has=f.has,f.set=f.set,r=function(e,t){if(f.has(e))throw g(p);return t.facade=e,f.set(e,t),t},n=function(e){return f.get(e)||{}},o=function(e){return f.has(e)}}else{var m=A(\"state\");l[m]=!0,r=function(e,t){if(u(e,m))throw g(p);return t.facade=e,d(e,m,t),t},n=function(e){return u(e,m)?e[m]:{}},o=function(e){return u(e,m)}}e.exports={set:r,get:n,has:o,enforce:function(e){return o(e)?n(e):r(e,{})},getterFor:function(e){return function(t){var i;if(!c(t)||(i=n(t)).type!==e)throw g(\"Incompatible receiver, \"+e+\" required\");return i}}}},6782:(e,t,i)=>{var r=i(9813),n=i(2077),o=r(\"iterator\"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||s[o]===e)}},7475:(e,t,i)=>{var r=i(6616),n=r.all;e.exports=r.IS_HTMLDDA?function(e){return\"function\"==typeof e||e===n}:function(e){return\"function\"==typeof e}},4284:(e,t,i)=>{var r=i(5329),n=i(5981),o=i(7475),s=i(9697),a=i(626),c=i(1302),d=function(){},u=[],h=a(\"Reflect\",\"construct\"),A=/^\\s*(?:class|function)\\b/,l=r(A.exec),p=!A.exec(d),g=function(e){if(!o(e))return!1;try{return h(d,u,e),!0}catch(e){return!1}},E=function(e){if(!o(e))return!1;switch(s(e)){case\"AsyncFunction\":case\"GeneratorFunction\":case\"AsyncGeneratorFunction\":return!1}try{return p||!!l(A,c(e))}catch(e){return!0}};E.sham=!0,e.exports=!h||n((function(){var e;return g(g.call)||!g(Object)||!g((function(){e=!0}))||e}))?E:g},7252:(e,t,i)=>{var r=i(5981),n=i(7475),o=/#|\\.prototype\\./,s=function(e,t){var i=c[a(e)];return i==u||i!=d&&(n(t)?r(t):!!t)},a=s.normalize=function(e){return String(e).replace(o,\".\").toLowerCase()},c=s.data={},d=s.NATIVE=\"N\",u=s.POLYFILL=\"P\";e.exports=s},2119:e=>{e.exports=function(e){return null==e}},941:(e,t,i)=>{var r=i(7475),n=i(6616),o=n.all;e.exports=n.IS_HTMLDDA?function(e){return\"object\"==typeof e?null!==e:r(e)||e===o}:function(e){return\"object\"==typeof e?null!==e:r(e)}},2529:e=>{e.exports=!0},6664:(e,t,i)=>{var r=i(626),n=i(7475),o=i(7046),s=i(2302),a=Object;e.exports=s?function(e){return\"symbol\"==typeof e}:function(e){var t=r(\"Symbol\");return n(t)&&o(t.prototype,a(e))}},3091:(e,t,i)=>{var r=i(6843),n=i(8834),o=i(6059),s=i(9826),a=i(6782),c=i(623),d=i(7046),u=i(3476),h=i(2902),A=i(7609),l=TypeError,p=function(e,t){this.stopped=e,this.result=t},g=p.prototype;e.exports=function(e,t,i){var E,f,m,I,_,C,S,v=i&&i.that,T=!(!i||!i.AS_ENTRIES),R=!(!i||!i.IS_RECORD),y=!(!i||!i.IS_ITERATOR),w=!(!i||!i.INTERRUPTED),b=r(t,v),N=function(e){return E&&A(E,\"normal\",e),new p(!0,e)},O=function(e){return T?(o(e),w?b(e[0],e[1],N):b(e[0],e[1])):w?b(e,N):b(e)};if(R)E=e.iterator;else if(y)E=e;else{if(!(f=h(e)))throw l(s(e)+\" is not iterable\");if(a(f)){for(m=0,I=c(e);I>m;m++)if((_=O(e[m]))&&d(g,_))return _;return new p(!1)}E=u(e,f)}for(C=R?e.next:E.next;!(S=n(C,E)).done;){try{_=O(S.value)}catch(e){A(E,\"throw\",e)}if(\"object\"==typeof _&&_&&d(g,_))return _}return new p(!1)}},7609:(e,t,i)=>{var r=i(8834),n=i(6059),o=i(4229);e.exports=function(e,t,i){var s,a;n(e);try{if(!(s=o(e,\"return\"))){if(\"throw\"===t)throw i;return i}s=r(s,e)}catch(e){a=!0,s=e}if(\"throw\"===t)throw i;if(a)throw s;return n(s),i}},3847:(e,t,i)=>{var r=i(5143).IteratorPrototype,n=i(9290),o=i(1887),s=i(904),a=i(2077),c=function(){return this};e.exports=function(e,t,i,d){var u=t+\" Iterator\";return e.prototype=n(r,{next:o(+!d,i)}),s(e,u,!1,!0),a[u]=c,e}},5105:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(2529),s=i(9417),a=i(7475),c=i(3847),d=i(249),u=i(8929),h=i(904),A=i(2029),l=i(5929),p=i(9813),g=i(2077),E=i(5143),f=s.PROPER,m=s.CONFIGURABLE,I=E.IteratorPrototype,_=E.BUGGY_SAFARI_ITERATORS,C=p(\"iterator\"),S=\"keys\",v=\"values\",T=\"entries\",R=function(){return this};e.exports=function(e,t,i,s,p,E,y){c(i,t,s);var w,b,N,O=function(e){if(e===p&&B)return B;if(!_&&e in L)return L[e];switch(e){case S:case v:case T:return function(){return new i(this,e)}}return function(){return new i(this)}},D=t+\" Iterator\",P=!1,L=e.prototype,k=L[C]||L[\"@@iterator\"]||p&&L[p],B=!_&&k||O(p),M=\"Array\"==t&&L.entries||k;if(M&&(w=d(M.call(new e)))!==Object.prototype&&w.next&&(o||d(w)===I||(u?u(w,I):a(w[C])||l(w,C,R)),h(w,D,!0,!0),o&&(g[D]=R)),f&&p==v&&k&&k.name!==v&&(!o&&m?A(L,\"name\",v):(P=!0,B=function(){return n(k,this)})),p)if(b={values:O(v),keys:E?B:O(S),entries:O(T)},y)for(N in b)(_||P||!(N in L))&&l(L,N,b[N]);else r({target:t,proto:!0,forced:_||P},b);return o&&!y||L[C]===B||l(L,C,B,{name:p}),g[t]=B,b}},5143:(e,t,i)=>{var r,n,o,s=i(5981),a=i(7475),c=i(941),d=i(9290),u=i(249),h=i(5929),A=i(9813),l=i(2529),p=A(\"iterator\"),g=!1;[].keys&&(\"next\"in(o=[].keys())?(n=u(u(o)))!==Object.prototype&&(r=n):g=!0),!c(r)||s((function(){var e={};return r[p].call(e)!==e}))?r={}:l&&(r=d(r)),a(r[p])||h(r,p,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},2077:e=>{e.exports={}},623:(e,t,i)=>{var r=i(3057);e.exports=function(e){return r(e.length)}},5331:e=>{var t=Math.ceil,i=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?i:t)(r)}},6132:(e,t,i)=>{var r,n,o,s,a,c,d,u,h=i(1899),A=i(6843),l=i(9677).f,p=i(2941).set,g=i(2749),E=i(4470),f=i(8045),m=i(6049),I=h.MutationObserver||h.WebKitMutationObserver,_=h.document,C=h.process,S=h.Promise,v=l(h,\"queueMicrotask\"),T=v&&v.value;T||(r=function(){var e,t;for(m&&(e=C.domain)&&e.exit();n;){t=n.fn,n=n.next;try{t()}catch(e){throw n?s():o=void 0,e}}o=void 0,e&&e.enter()},g||m||f||!I||!_?!E&&S&&S.resolve?((d=S.resolve(void 0)).constructor=S,u=A(d.then,d),s=function(){u(r)}):m?s=function(){C.nextTick(r)}:(p=A(p,h),s=function(){p(r)}):(a=!0,c=_.createTextNode(\"\"),new I(r).observe(c,{characterData:!0}),s=function(){c.data=a=!a})),e.exports=T||function(e){var t={fn:e,next:void 0};o&&(o.next=t),n||(n=t,s()),o=t}},9520:(e,t,i)=>{var r=i(4883),n=TypeError,o=function(e){var t,i;this.promise=new e((function(e,r){if(void 0!==t||void 0!==i)throw n(\"Bad Promise constructor\");t=e,i=r})),this.resolve=r(t),this.reject=r(i)};e.exports.f=function(e){return new o(e)}},4649:(e,t,i)=>{var r=i(5803);e.exports=function(e,t){return void 0===e?arguments.length<2?\"\":t:r(e)}},9290:(e,t,i)=>{var r,n=i(6059),o=i(9938),s=i(6759),a=i(7748),c=i(5463),d=i(1333),u=i(4262)(\"IE_PROTO\"),h=function(){},A=function(e){return\"<script>\"+e+\"<\\/script>\"},l=function(e){e.write(A(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},p=function(){try{r=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t;p=\"undefined\"!=typeof document?document.domain&&r?l(r):((t=d(\"iframe\")).style.display=\"none\",c.appendChild(t),t.src=String(\"javascript:\"),(e=t.contentWindow.document).open(),e.write(A(\"document.F=Object\")),e.close(),e.F):l(r);for(var i=s.length;i--;)delete p.prototype[s[i]];return p()};a[u]=!0,e.exports=Object.create||function(e,t){var i;return null!==e?(h.prototype=n(e),i=new h,h.prototype=null,i[u]=e):i=p(),void 0===t?i:o.f(i,t)}},9938:(e,t,i)=>{var r=i(5746),n=i(3937),o=i(5988),s=i(6059),a=i(4529),c=i(4771);t.f=r&&!n?Object.defineProperties:function(e,t){s(e);for(var i,r=a(t),n=c(t),d=n.length,u=0;d>u;)o.f(e,i=n[u++],r[i]);return e}},5988:(e,t,i)=>{var r=i(5746),n=i(2840),o=i(3937),s=i(6059),a=i(3894),c=TypeError,d=Object.defineProperty,u=Object.getOwnPropertyDescriptor;t.f=r?o?function(e,t,i){if(s(e),t=a(t),s(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&\"writable\"in i&&!i.writable){var r=u(e,t);r&&r.writable&&(e[t]=i.value,i={configurable:\"configurable\"in i?i.configurable:r.configurable,enumerable:\"enumerable\"in i?i.enumerable:r.enumerable,writable:!1})}return d(e,t,i)}:d:function(e,t,i){if(s(e),t=a(t),s(i),n)try{return d(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw c(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e}},9677:(e,t,i)=>{var r=i(5746),n=i(8834),o=i(6760),s=i(1887),a=i(4529),c=i(3894),d=i(953),u=i(2840),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=a(e),t=c(t),u)try{return h(e,t)}catch(e){}if(d(e,t))return s(!n(o.f,e,t),e[t])}},946:(e,t,i)=>{var r=i(5629),n=i(6759).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return r(e,n)}},7857:(e,t)=>{t.f=Object.getOwnPropertySymbols},249:(e,t,i)=>{var r=i(953),n=i(7475),o=i(9678),s=i(4262),a=i(4160),c=s(\"IE_PROTO\"),d=Object,u=d.prototype;e.exports=a?d.getPrototypeOf:function(e){var t=o(e);if(r(t,c))return t[c];var i=t.constructor;return n(i)&&t instanceof i?i.prototype:t instanceof d?u:null}},7046:(e,t,i)=>{var r=i(5329);e.exports=r({}.isPrototypeOf)},5629:(e,t,i)=>{var r=i(5329),n=i(953),o=i(4529),s=i(1692).indexOf,a=i(7748),c=r([].push);e.exports=function(e,t){var i,r=o(e),d=0,u=[];for(i in r)!n(a,i)&&n(r,i)&&c(u,i);for(;t.length>d;)n(r,i=t[d++])&&(~s(u,i)||c(u,i));return u}},4771:(e,t,i)=>{var r=i(5629),n=i(6759);e.exports=Object.keys||function(e){return r(e,n)}},6760:(e,t)=>{var i={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,n=r&&!i.call({1:2},1);t.f=n?function(e){var t=r(this,e);return!!t&&t.enumerable}:i},8929:(e,t,i)=>{var r=i(5329),n=i(6059),o=i(1851);e.exports=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=r(Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\").set))(i,[]),t=i instanceof Array}catch(e){}return function(i,r){return n(i),o(r),t?e(i,r):i.__proto__=r,i}}():void 0)},5623:(e,t,i)=>{var r=i(2885),n=i(9697);e.exports=r?{}.toString:function(){return\"[object \"+n(this)+\"]\"}},9811:(e,t,i)=>{var r=i(8834),n=i(7475),o=i(941),s=TypeError;e.exports=function(e,t){var i,a;if(\"string\"===t&&n(i=e.toString)&&!o(a=r(i,e)))return a;if(n(i=e.valueOf)&&!o(a=r(i,e)))return a;if(\"string\"!==t&&n(i=e.toString)&&!o(a=r(i,e)))return a;throw s(\"Can't convert object to primitive value\")}},1136:(e,t,i)=>{var r=i(626),n=i(5329),o=i(946),s=i(7857),a=i(6059),c=n([].concat);e.exports=r(\"Reflect\",\"ownKeys\")||function(e){var t=o.f(a(e)),i=s.f;return i?c(t,i(e)):t}},4058:e=>{e.exports={}},2:e=>{e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},7742:(e,t,i)=>{var r=i(1899),n=i(6991),o=i(7475),s=i(7252),a=i(1302),c=i(9813),d=i(3321),u=i(8501),h=i(2529),A=i(3385),l=n&&n.prototype,p=c(\"species\"),g=!1,E=o(r.PromiseRejectionEvent),f=s(\"Promise\",(function(){var e=a(n),t=e!==String(n);if(!t&&66===A)return!0;if(h&&(!l.catch||!l.finally))return!0;if(!A||A<51||!/native code/.test(e)){var i=new n((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};if((i.constructor={})[p]=r,!(g=i.then((function(){}))instanceof r))return!0}return!t&&(d||u)&&!E}));e.exports={CONSTRUCTOR:f,REJECTION_EVENT:E,SUBCLASSING:g}},6991:(e,t,i)=>{var r=i(1899);e.exports=r.Promise},6584:(e,t,i)=>{var r=i(6059),n=i(941),o=i(9520);e.exports=function(e,t){if(r(e),n(t)&&t.constructor===e)return t;var i=o.f(e);return(0,i.resolve)(t),i.promise}},1542:(e,t,i)=>{var r=i(6991),n=i(1385),o=i(7742).CONSTRUCTOR;e.exports=o||!n((function(e){r.all(e).then(void 0,(function(){}))}))},8397:e=>{var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}},e.exports=t},8219:(e,t,i)=>{var r=i(2119),n=TypeError;e.exports=function(e){if(r(e))throw n(\"Can't call method on \"+e);return e}},4431:(e,t,i)=>{var r=i(626),n=i(5988),o=i(9813),s=i(5746),a=o(\"species\");e.exports=function(e){var t=r(e),i=n.f;s&&t&&!t[a]&&i(t,a,{configurable:!0,get:function(){return this}})}},904:(e,t,i)=>{var r=i(2885),n=i(5988).f,o=i(2029),s=i(953),a=i(5623),c=i(9813)(\"toStringTag\");e.exports=function(e,t,i,d){if(e){var u=i?e:e.prototype;s(u,c)||n(u,c,{configurable:!0,value:t}),d&&!r&&o(u,\"toString\",a)}}},4262:(e,t,i)=>{var r=i(8726),n=i(9418),o=r(\"keys\");e.exports=function(e){return o[e]||(o[e]=n(e))}},3030:(e,t,i)=>{var r=i(1899),n=i(5609),o=\"__core-js_shared__\",s=r[o]||n(o,{});e.exports=s},8726:(e,t,i)=>{var r=i(2529),n=i(3030);(e.exports=function(e,t){return n[e]||(n[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.26.0\",mode:r?\"pure\":\"global\",copyright:\"Â© 2014-2022 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.26.0/LICENSE\",source:\"https://github.com/zloirock/core-js\"})},487:(e,t,i)=>{var r=i(6059),n=i(174),o=i(2119),s=i(9813)(\"species\");e.exports=function(e,t){var i,a=r(e).constructor;return void 0===a||o(i=r(a)[s])?t:n(i)}},4620:(e,t,i)=>{var r=i(5329),n=i(2435),o=i(5803),s=i(8219),a=r(\"\".charAt),c=r(\"\".charCodeAt),d=r(\"\".slice),u=function(e){return function(t,i){var r,u,h=o(s(t)),A=n(i),l=h.length;return A<0||A>=l?e?\"\":void 0:(r=c(h,A))<55296||r>56319||A+1===l||(u=c(h,A+1))<56320||u>57343?e?a(h,A):r:e?d(h,A,A+2):u-56320+(r-55296<<10)+65536}};e.exports={codeAt:u(!1),charAt:u(!0)}},3405:(e,t,i)=>{var r=i(3385),n=i(5981);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},2941:(e,t,i)=>{var r,n,o,s,a=i(1899),c=i(9730),d=i(6843),u=i(7475),h=i(953),A=i(5981),l=i(5463),p=i(3765),g=i(1333),E=i(8348),f=i(2749),m=i(6049),I=a.setImmediate,_=a.clearImmediate,C=a.process,S=a.Dispatch,v=a.Function,T=a.MessageChannel,R=a.String,y=0,w={};try{r=a.location}catch(e){}var b=function(e){if(h(w,e)){var t=w[e];delete w[e],t()}},N=function(e){return function(){b(e)}},O=function(e){b(e.data)},D=function(e){a.postMessage(R(e),r.protocol+\"//\"+r.host)};I&&_||(I=function(e){E(arguments.length,1);var t=u(e)?e:v(e),i=p(arguments,1);return w[++y]=function(){c(t,void 0,i)},n(y),y},_=function(e){delete w[e]},m?n=function(e){C.nextTick(N(e))}:S&&S.now?n=function(e){S.now(N(e))}:T&&!f?(s=(o=new T).port2,o.port1.onmessage=O,n=d(s.postMessage,s)):a.addEventListener&&u(a.postMessage)&&!a.importScripts&&r&&\"file:\"!==r.protocol&&!A(D)?(n=D,a.addEventListener(\"message\",O,!1)):n=\"onreadystatechange\"in g(\"script\")?function(e){l.appendChild(g(\"script\")).onreadystatechange=function(){l.removeChild(this),b(e)}}:function(e){setTimeout(N(e),0)}),e.exports={set:I,clear:_}},9413:(e,t,i)=>{var r=i(2435),n=Math.max,o=Math.min;e.exports=function(e,t){var i=r(e);return i<0?n(i+t,0):o(i,t)}},4529:(e,t,i)=>{var r=i(7026),n=i(8219);e.exports=function(e){return r(n(e))}},2435:(e,t,i)=>{var r=i(5331);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},3057:(e,t,i)=>{var r=i(2435),n=Math.min;e.exports=function(e){return e>0?n(r(e),9007199254740991):0}},9678:(e,t,i)=>{var r=i(8219),n=Object;e.exports=function(e){return n(r(e))}},6935:(e,t,i)=>{var r=i(8834),n=i(941),o=i(6664),s=i(4229),a=i(9811),c=i(9813),d=TypeError,u=c(\"toPrimitive\");e.exports=function(e,t){if(!n(e)||o(e))return e;var i,c=s(e,u);if(c){if(void 0===t&&(t=\"default\"),i=r(c,e,t),!n(i)||o(i))return i;throw d(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),a(e,t)}},3894:(e,t,i)=>{var r=i(6935),n=i(6664);e.exports=function(e){var t=r(e,\"string\");return n(t)?t:t+\"\"}},2885:(e,t,i)=>{var r={};r[i(9813)(\"toStringTag\")]=\"z\",e.exports=\"[object z]\"===String(r)},5803:(e,t,i)=>{var r=i(9697),n=String;e.exports=function(e){if(\"Symbol\"===r(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return n(e)}},9826:e=>{var t=String;e.exports=function(e){try{return t(e)}catch(e){return\"Object\"}}},9418:(e,t,i)=>{var r=i(5329),n=0,o=Math.random(),s=r(1..toString);e.exports=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+s(++n+o,36)}},2302:(e,t,i)=>{var r=i(3405);e.exports=r&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator},3937:(e,t,i)=>{var r=i(5746),n=i(5981);e.exports=r&&n((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype}))},8348:e=>{var t=TypeError;e.exports=function(e,i){if(e<i)throw t(\"Not enough arguments\");return e}},7093:(e,t,i)=>{var r=i(1899),n=i(7475),o=r.WeakMap;e.exports=n(o)&&/native code/.test(String(o))},9813:(e,t,i)=>{var r=i(1899),n=i(8726),o=i(953),s=i(9418),a=i(3405),c=i(2302),d=n(\"wks\"),u=r.Symbol,h=u&&u.for,A=c?u:u&&u.withoutSetter||s;e.exports=function(e){if(!o(d,e)||!a&&\"string\"!=typeof d[e]){var t=\"Symbol.\"+e;a&&o(u,e)?d[e]=u[e]:d[e]=c&&h?h(t):A(t)}return d[e]}},9812:(e,t,i)=>{var r=i(6887),n=i(7046),o=i(249),s=i(8929),a=i(3489),c=i(9290),d=i(2029),u=i(1887),h=i(3995),A=i(3794),l=i(3091),p=i(4649),g=i(9813),E=i(8780),f=g(\"toStringTag\"),m=Error,I=[].push,_=function(e,t){var i,r=arguments.length>2?arguments[2]:void 0,a=n(C,this);s?i=s(m(),a?o(this):C):(i=a?this:c(C),d(i,f,\"Error\")),void 0!==t&&d(i,\"message\",p(t)),E&&d(i,\"stack\",h(i.stack,1)),A(i,r);var u=[];return l(e,I,{that:u}),d(i,\"errors\",u),i};s?s(_,m):a(_,m,{name:!0});var C=_.prototype=c(m.prototype,{constructor:u(1,_),message:u(1,\"\"),name:u(1,\"AggregateError\")});r({global:!0,constructor:!0,arity:2},{AggregateError:_})},7627:(e,t,i)=>{i(9812)},6274:(e,t,i)=>{var r=i(4529),n=i(8479),o=i(2077),s=i(5402),a=i(5988).f,c=i(5105),d=i(3538),u=i(2529),h=i(5746),A=\"Array Iterator\",l=s.set,p=s.getterFor(A);e.exports=c(Array,\"Array\",(function(e,t){l(this,{type:A,target:r(e),index:0,kind:t})}),(function(){var e=p(this),t=e.target,i=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,d(void 0,!0)):d(\"keys\"==i?r:\"values\"==i?t[r]:[r,t[r]],!1)}),\"values\");var g=o.Arguments=o.Array;if(n(\"keys\"),n(\"values\"),n(\"entries\"),!u&&h&&\"values\"!==g.name)try{a(g,\"name\",{value:\"values\"})}catch(e){}},6450:(e,t,i)=>{var r=i(6887),n=i(5746),o=i(5988).f;r({target:\"Object\",stat:!0,forced:Object.defineProperty!==o,sham:!n},{defineProperty:o})},5967:()=>{},4560:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(4883),s=i(9520),a=i(2),c=i(3091);r({target:\"Promise\",stat:!0},{allSettled:function(e){var t=this,i=s.f(t),r=i.resolve,d=i.reject,u=a((function(){var i=o(t.resolve),s=[],a=0,d=1;c(e,(function(e){var o=a++,c=!1;d++,n(i,t,e).then((function(e){c||(c=!0,s[o]={status:\"fulfilled\",value:e},--d||r(s))}),(function(e){c||(c=!0,s[o]={status:\"rejected\",reason:e},--d||r(s))}))})),--d||r(s)}));return u.error&&d(u.value),i.promise}})},6890:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(4883),s=i(9520),a=i(2),c=i(3091);r({target:\"Promise\",stat:!0,forced:i(1542)},{all:function(e){var t=this,i=s.f(t),r=i.resolve,d=i.reject,u=a((function(){var i=o(t.resolve),s=[],a=0,u=1;c(e,(function(e){var o=a++,c=!1;u++,n(i,t,e).then((function(e){c||(c=!0,s[o]=e,--u||r(s))}),d)})),--u||r(s)}));return u.error&&d(u.value),i.promise}})},7206:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(4883),s=i(626),a=i(9520),c=i(2),d=i(3091),u=\"No one promise resolved\";r({target:\"Promise\",stat:!0},{any:function(e){var t=this,i=s(\"AggregateError\"),r=a.f(t),h=r.resolve,A=r.reject,l=c((function(){var r=o(t.resolve),s=[],a=0,c=1,l=!1;d(e,(function(e){var o=a++,d=!1;c++,n(r,t,e).then((function(e){d||l||(l=!0,h(e))}),(function(e){d||l||(d=!0,s[o]=e,--c||A(new i(s,u)))}))})),--c||A(new i(s,u))}));return l.error&&A(l.value),r.promise}})},3376:(e,t,i)=>{var r=i(6887),n=i(2529),o=i(7742).CONSTRUCTOR,s=i(6991),a=i(626),c=i(7475),d=i(5929),u=s&&s.prototype;if(r({target:\"Promise\",proto:!0,forced:o,real:!0},{catch:function(e){return this.then(void 0,e)}}),!n&&c(s)){var h=a(\"Promise\").prototype.catch;u.catch!==h&&d(u,\"catch\",h,{unsafe:!0})}},6934:(e,t,i)=>{var r,n,o,s=i(6887),a=i(2529),c=i(6049),d=i(1899),u=i(8834),h=i(5929),A=i(8929),l=i(904),p=i(4431),g=i(4883),E=i(7475),f=i(941),m=i(5743),I=i(487),_=i(2941).set,C=i(6132),S=i(4845),v=i(2),T=i(8397),R=i(5402),y=i(6991),w=i(7742),b=i(9520),N=\"Promise\",O=w.CONSTRUCTOR,D=w.REJECTION_EVENT,P=w.SUBCLASSING,L=R.getterFor(N),k=R.set,B=y&&y.prototype,M=y,U=B,x=d.TypeError,Q=d.document,F=d.process,V=b.f,j=V,G=!!(Q&&Q.createEvent&&d.dispatchEvent),K=\"unhandledrejection\",H=function(e){var t;return!(!f(e)||!E(t=e.then))&&t},W=function(e,t){var i,r,n,o=t.value,s=1==t.state,a=s?e.ok:e.fail,c=e.resolve,d=e.reject,h=e.domain;try{a?(s||(2===t.rejection&&z(t),t.rejection=1),!0===a?i=o:(h&&h.enter(),i=a(o),h&&(h.exit(),n=!0)),i===e.promise?d(x(\"Promise-chain cycle\")):(r=H(i))?u(r,i,c,d):c(i)):d(o)}catch(e){h&&!n&&h.exit(),d(e)}},Y=function(e,t){e.notified||(e.notified=!0,C((function(){for(var i,r=e.reactions;i=r.get();)W(i,e);e.notified=!1,t&&!e.rejection&&q(e)})))},J=function(e,t,i){var r,n;G?((r=Q.createEvent(\"Event\")).promise=t,r.reason=i,r.initEvent(e,!1,!0),d.dispatchEvent(r)):r={promise:t,reason:i},!D&&(n=d[\"on\"+e])?n(r):e===K&&S(\"Unhandled promise rejection\",i)},q=function(e){u(_,d,(function(){var t,i=e.facade,r=e.value;if(X(e)&&(t=v((function(){c?F.emit(\"unhandledRejection\",r,i):J(K,i,r)})),e.rejection=c||X(e)?2:1,t.error))throw t.value}))},X=function(e){return 1!==e.rejection&&!e.parent},z=function(e){u(_,d,(function(){var t=e.facade;c?F.emit(\"rejectionHandled\",t):J(\"rejectionhandled\",t,e.value)}))},Z=function(e,t,i){return function(r){e(t,r,i)}},$=function(e,t,i){e.done||(e.done=!0,i&&(e=i),e.value=t,e.state=2,Y(e,!0))},ee=function(e,t,i){if(!e.done){e.done=!0,i&&(e=i);try{if(e.facade===t)throw x(\"Promise can't be resolved itself\");var r=H(t);r?C((function(){var i={done:!1};try{u(r,t,Z(ee,i,e),Z($,i,e))}catch(t){$(i,t,e)}})):(e.value=t,e.state=1,Y(e,!1))}catch(t){$({done:!1},t,e)}}};if(O&&(U=(M=function(e){m(this,U),g(e),u(r,this);var t=L(this);try{e(Z(ee,t),Z($,t))}catch(e){$(t,e)}}).prototype,(r=function(e){k(this,{type:N,done:!1,notified:!1,parent:!1,reactions:new T,rejection:!1,state:0,value:void 0})}).prototype=h(U,\"then\",(function(e,t){var i=L(this),r=V(I(this,M));return i.parent=!0,r.ok=!E(e)||e,r.fail=E(t)&&t,r.domain=c?F.domain:void 0,0==i.state?i.reactions.add(r):C((function(){W(r,i)})),r.promise})),n=function(){var e=new r,t=L(e);this.promise=e,this.resolve=Z(ee,t),this.reject=Z($,t)},b.f=V=function(e){return e===M||void 0===e?new n(e):j(e)},!a&&E(y)&&B!==Object.prototype)){o=B.then,P||h(B,\"then\",(function(e,t){var i=this;return new M((function(e,t){u(o,i,e,t)})).then(e,t)}),{unsafe:!0});try{delete B.constructor}catch(e){}A&&A(B,U)}s({global:!0,constructor:!0,wrap:!0,forced:O},{Promise:M}),l(M,N,!1,!0),p(N)},4349:(e,t,i)=>{var r=i(6887),n=i(2529),o=i(6991),s=i(5981),a=i(626),c=i(7475),d=i(487),u=i(6584),h=i(5929),A=o&&o.prototype;if(r({target:\"Promise\",proto:!0,real:!0,forced:!!o&&s((function(){A.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=d(this,a(\"Promise\")),i=c(e);return this.then(i?function(i){return u(t,e()).then((function(){return i}))}:e,i?function(i){return u(t,e()).then((function(){throw i}))}:e)}}),!n&&c(o)){var l=a(\"Promise\").prototype.finally;A.finally!==l&&h(A,\"finally\",l,{unsafe:!0})}},8881:(e,t,i)=>{i(6934),i(6890),i(3376),i(5921),i(4069),i(4482)},5921:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(4883),s=i(9520),a=i(2),c=i(3091);r({target:\"Promise\",stat:!0,forced:i(1542)},{race:function(e){var t=this,i=s.f(t),r=i.reject,d=a((function(){var s=o(t.resolve);c(e,(function(e){n(s,t,e).then(i.resolve,r)}))}));return d.error&&r(d.value),i.promise}})},4069:(e,t,i)=>{var r=i(6887),n=i(8834),o=i(9520);r({target:\"Promise\",stat:!0,forced:i(7742).CONSTRUCTOR},{reject:function(e){var t=o.f(this);return n(t.reject,void 0,e),t.promise}})},4482:(e,t,i)=>{var r=i(6887),n=i(626),o=i(2529),s=i(6991),a=i(7742).CONSTRUCTOR,c=i(6584),d=n(\"Promise\"),u=o&&!a;r({target:\"Promise\",stat:!0,forced:o||a},{resolve:function(e){return c(u&&this===d?s:this,e)}})},7971:(e,t,i)=>{var r=i(4620).charAt,n=i(5803),o=i(5402),s=i(5105),a=i(3538),c=\"String Iterator\",d=o.set,u=o.getterFor(c);s(String,\"String\",(function(e){d(this,{type:c,string:n(e),index:0})}),(function(){var e,t=u(this),i=t.string,n=t.index;return n>=i.length?a(void 0,!0):(e=r(i,n),t.index+=e.length,a(e,!1))}))},7634:(e,t,i)=>{i(6274);var r=i(3281),n=i(1899),o=i(9697),s=i(2029),a=i(2077),c=i(9813)(\"toStringTag\");for(var d in r){var u=n[d],h=u&&u.prototype;h&&o(h)!==c&&s(h,c,d),a[d]=a.Array}},1910:(e,t,i)=>{var r=i(8171);e.exports=r},7460:(e,t,i)=>{var r=i(2956);i(7634),e.exports=r},9662:(e,t,i)=>{var r=i(614),n=i(6330),o=TypeError;e.exports=function(e){if(r(e))return e;throw o(n(e)+\" is not a function\")}},6077:(e,t,i)=>{var r=i(614),n=String,o=TypeError;e.exports=function(e){if(\"object\"==typeof e||r(e))return e;throw o(\"Can't set \"+n(e)+\" as a prototype\")}},1223:(e,t,i)=>{var r=i(5112),n=i(30),o=i(3070).f,s=r(\"unscopables\"),a=Array.prototype;null==a[s]&&o(a,s,{configurable:!0,value:n(null)}),e.exports=function(e){a[s][e]=!0}},9670:(e,t,i)=>{var r=i(111),n=String,o=TypeError;e.exports=function(e){if(r(e))return e;throw o(n(e)+\" is not an object\")}},1318:(e,t,i)=>{var r=i(5656),n=i(1400),o=i(6244),s=function(e){return function(t,i,s){var a,c=r(t),d=o(c),u=n(s,d);if(e&&i!=i){for(;d>u;)if((a=c[u++])!=a)return!0}else for(;d>u;u++)if((e||u in c)&&c[u]===i)return e||u||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},4326:(e,t,i)=>{var r=i(84),n=r({}.toString),o=r(\"\".slice);e.exports=function(e){return o(n(e),8,-1)}},648:(e,t,i)=>{var r=i(1694),n=i(614),o=i(4326),s=i(5112)(\"toStringTag\"),a=Object,c=\"Arguments\"==o(function(){return arguments}());e.exports=r?o:function(e){var t,i,r;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(i=function(e,t){try{return e[t]}catch(e){}}(t=a(e),s))?i:c?o(t):\"Object\"==(r=o(t))&&n(t.callee)?\"Arguments\":r}},9920:(e,t,i)=>{var r=i(2597),n=i(3887),o=i(1236),s=i(3070);e.exports=function(e,t,i){for(var a=n(t),c=s.f,d=o.f,u=0;u<a.length;u++){var h=a[u];r(e,h)||i&&r(i,h)||c(e,h,d(t,h))}}},8544:(e,t,i)=>{var r=i(7293);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},6178:e=>{e.exports=function(e,t){return{value:e,done:t}}},8880:(e,t,i)=>{var r=i(9781),n=i(3070),o=i(9114);e.exports=r?function(e,t,i){return n.f(e,t,o(1,i))}:function(e,t,i){return e[t]=i,e}},9114:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},8052:(e,t,i)=>{var r=i(614),n=i(3070),o=i(6339),s=i(3072);e.exports=function(e,t,i,a){a||(a={});var c=a.enumerable,d=void 0!==a.name?a.name:t;if(r(i)&&o(i,d,a),a.global)c?e[t]=i:s(t,i);else{try{a.unsafe?e[t]&&(c=!0):delete e[t]}catch(e){}c?e[t]=i:n.f(e,t,{value:i,enumerable:!1,configurable:!a.nonConfigurable,writable:!a.nonWritable})}return e}},3072:(e,t,i)=>{var r=i(7854),n=Object.defineProperty;e.exports=function(e,t){try{n(r,e,{value:t,configurable:!0,writable:!0})}catch(i){r[e]=t}return t}},9781:(e,t,i)=>{var r=i(7293);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:e=>{var t=\"object\"==typeof document&&document.all,i=void 0===t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:i}},317:(e,t,i)=>{var r=i(7854),n=i(111),o=r.document,s=n(o)&&n(o.createElement);e.exports=function(e){return s?o.createElement(e):{}}},8324:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:(e,t,i)=>{var r=i(317)(\"span\").classList,n=r&&r.constructor&&r.constructor.prototype;e.exports=n===Object.prototype?void 0:n},8113:(e,t,i)=>{var r=i(5005);e.exports=r(\"navigator\",\"userAgent\")||\"\"},7392:(e,t,i)=>{var r,n,o=i(7854),s=i(8113),a=o.process,c=o.Deno,d=a&&a.versions||c&&c.version,u=d&&d.v8;u&&(n=(r=u.split(\".\"))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!n&&s&&(!(r=s.match(/Edge\\/(\\d+)/))||r[1]>=74)&&(r=s.match(/Chrome\\/(\\d+)/))&&(n=+r[1]),e.exports=n},748:e=>{e.exports=[\"constructor\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"toLocaleString\",\"toString\",\"valueOf\"]},1060:(e,t,i)=>{var r=i(1702),n=Error,o=r(\"\".replace),s=String(n(\"zxcasd\").stack),a=/\\n\\s*at [^:]*:[^\\n]*/,c=a.test(s);e.exports=function(e,t){if(c&&\"string\"==typeof e&&!n.prepareStackTrace)for(;t--;)e=o(e,a,\"\");return e}},2914:(e,t,i)=>{var r=i(7293),n=i(9114);e.exports=!r((function(){var e=Error(\"a\");return!(\"stack\"in e)||(Object.defineProperty(e,\"stack\",n(1,7)),7!==e.stack)}))},2109:(e,t,i)=>{var r=i(7854),n=i(1236).f,o=i(8880),s=i(8052),a=i(3072),c=i(9920),d=i(4705);e.exports=function(e,t){var i,u,h,A,l,p=e.target,g=e.global,E=e.stat;if(i=g?r:E?r[p]||a(p,{}):(r[p]||{}).prototype)for(u in t){if(A=t[u],h=e.dontCallGetSet?(l=n(i,u))&&l.value:i[u],!d(g?u:p+(E?\".\":\"#\")+u,e.forced)&&void 0!==h){if(typeof A==typeof h)continue;c(A,h)}(e.sham||h&&h.sham)&&o(A,\"sham\",!0),s(i,u,A,e)}}},7293:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},2104:(e,t,i)=>{var r=i(4374),n=Function.prototype,o=n.apply,s=n.call;e.exports=\"object\"==typeof Reflect&&Reflect.apply||(r?s.bind(o):function(){return s.apply(o,arguments)})},4374:(e,t,i)=>{var r=i(7293);e.exports=!r((function(){var e=function(){}.bind();return\"function\"!=typeof e||e.hasOwnProperty(\"prototype\")}))},6916:(e,t,i)=>{var r=i(4374),n=Function.prototype.call;e.exports=r?n.bind(n):function(){return n.apply(n,arguments)}},6530:(e,t,i)=>{var r=i(9781),n=i(2597),o=Function.prototype,s=r&&Object.getOwnPropertyDescriptor,a=n(o,\"name\"),c=a&&\"something\"===function(){}.name,d=a&&(!r||r&&s(o,\"name\").configurable);e.exports={EXISTS:a,PROPER:c,CONFIGURABLE:d}},84:(e,t,i)=>{var r=i(4374),n=Function.prototype,o=n.call,s=r&&n.bind.bind(o,o);e.exports=r?s:function(e){return function(){return o.apply(e,arguments)}}},1702:(e,t,i)=>{var r=i(4326),n=i(84);e.exports=function(e){if(\"Function\"===r(e))return n(e)}},5005:(e,t,i)=>{var r=i(7854),n=i(614),o=function(e){return n(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e]):r[e]&&r[e][t]}},8173:(e,t,i)=>{var r=i(9662),n=i(8554);e.exports=function(e,t){var i=e[t];return n(i)?void 0:r(i)}},7854:(e,t,i)=>{var r=function(e){return e&&e.Math==Math&&e};e.exports=r(\"object\"==typeof globalThis&&globalThis)||r(\"object\"==typeof window&&window)||r(\"object\"==typeof self&&self)||r(\"object\"==typeof i.g&&i.g)||function(){return this}()||Function(\"return this\")()},2597:(e,t,i)=>{var r=i(1702),n=i(7908),o=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return o(n(e),t)}},3501:e=>{e.exports={}},490:(e,t,i)=>{var r=i(5005);e.exports=r(\"document\",\"documentElement\")},4664:(e,t,i)=>{var r=i(9781),n=i(7293),o=i(317);e.exports=!r&&!n((function(){return 7!=Object.defineProperty(o(\"div\"),\"a\",{get:function(){return 7}}).a}))},8361:(e,t,i)=>{var r=i(1702),n=i(7293),o=i(4326),s=Object,a=r(\"\".split);e.exports=n((function(){return!s(\"z\").propertyIsEnumerable(0)}))?function(e){return\"String\"==o(e)?a(e,\"\"):s(e)}:s},9587:(e,t,i)=>{var r=i(614),n=i(111),o=i(7674);e.exports=function(e,t,i){var s,a;return o&&r(s=t.constructor)&&s!==i&&n(a=s.prototype)&&a!==i.prototype&&o(e,a),e}},2788:(e,t,i)=>{var r=i(1702),n=i(614),o=i(5465),s=r(Function.toString);n(o.inspectSource)||(o.inspectSource=function(e){return s(e)}),e.exports=o.inspectSource},8340:(e,t,i)=>{var r=i(111),n=i(8880);e.exports=function(e,t){r(t)&&\"cause\"in t&&n(e,\"cause\",t.cause)}},9909:(e,t,i)=>{var r,n,o,s=i(4811),a=i(7854),c=i(111),d=i(8880),u=i(2597),h=i(5465),A=i(6200),l=i(3501),p=\"Object already initialized\",g=a.TypeError,E=a.WeakMap;if(s||h.state){var f=h.state||(h.state=new E);f.get=f.get,f.has=f.has,f.set=f.set,r=function(e,t){if(f.has(e))throw g(p);return t.facade=e,f.set(e,t),t},n=function(e){return f.get(e)||{}},o=function(e){return f.has(e)}}else{var m=A(\"state\");l[m]=!0,r=function(e,t){if(u(e,m))throw g(p);return t.facade=e,d(e,m,t),t},n=function(e){return u(e,m)?e[m]:{}},o=function(e){return u(e,m)}}e.exports={set:r,get:n,has:o,enforce:function(e){return o(e)?n(e):r(e,{})},getterFor:function(e){return function(t){var i;if(!c(t)||(i=n(t)).type!==e)throw g(\"Incompatible receiver, \"+e+\" required\");return i}}}},614:(e,t,i)=>{var r=i(4154),n=r.all;e.exports=r.IS_HTMLDDA?function(e){return\"function\"==typeof e||e===n}:function(e){return\"function\"==typeof e}},4705:(e,t,i)=>{var r=i(7293),n=i(614),o=/#|\\.prototype\\./,s=function(e,t){var i=c[a(e)];return i==u||i!=d&&(n(t)?r(t):!!t)},a=s.normalize=function(e){return String(e).replace(o,\".\").toLowerCase()},c=s.data={},d=s.NATIVE=\"N\",u=s.POLYFILL=\"P\";e.exports=s},8554:e=>{e.exports=function(e){return null==e}},111:(e,t,i)=>{var r=i(614),n=i(4154),o=n.all;e.exports=n.IS_HTMLDDA?function(e){return\"object\"==typeof e?null!==e:r(e)||e===o}:function(e){return\"object\"==typeof e?null!==e:r(e)}},1913:e=>{e.exports=!1},2190:(e,t,i)=>{var r=i(5005),n=i(614),o=i(7976),s=i(3307),a=Object;e.exports=s?function(e){return\"symbol\"==typeof e}:function(e){var t=r(\"Symbol\");return n(t)&&o(t.prototype,a(e))}},3061:(e,t,i)=>{var r=i(3383).IteratorPrototype,n=i(30),o=i(9114),s=i(8003),a=i(7497),c=function(){return this};e.exports=function(e,t,i,d){var u=t+\" Iterator\";return e.prototype=n(r,{next:o(+!d,i)}),s(e,u,!1,!0),a[u]=c,e}},1656:(e,t,i)=>{var r=i(2109),n=i(6916),o=i(1913),s=i(6530),a=i(614),c=i(3061),d=i(9518),u=i(7674),h=i(8003),A=i(8880),l=i(8052),p=i(5112),g=i(7497),E=i(3383),f=s.PROPER,m=s.CONFIGURABLE,I=E.IteratorPrototype,_=E.BUGGY_SAFARI_ITERATORS,C=p(\"iterator\"),S=\"keys\",v=\"values\",T=\"entries\",R=function(){return this};e.exports=function(e,t,i,s,p,E,y){c(i,t,s);var w,b,N,O=function(e){if(e===p&&B)return B;if(!_&&e in L)return L[e];switch(e){case S:case v:case T:return function(){return new i(this,e)}}return function(){return new i(this)}},D=t+\" Iterator\",P=!1,L=e.prototype,k=L[C]||L[\"@@iterator\"]||p&&L[p],B=!_&&k||O(p),M=\"Array\"==t&&L.entries||k;if(M&&(w=d(M.call(new e)))!==Object.prototype&&w.next&&(o||d(w)===I||(u?u(w,I):a(w[C])||l(w,C,R)),h(w,D,!0,!0),o&&(g[D]=R)),f&&p==v&&k&&k.name!==v&&(!o&&m?A(L,\"name\",v):(P=!0,B=function(){return n(k,this)})),p)if(b={values:O(v),keys:E?B:O(S),entries:O(T)},y)for(N in b)(_||P||!(N in L))&&l(L,N,b[N]);else r({target:t,proto:!0,forced:_||P},b);return o&&!y||L[C]===B||l(L,C,B,{name:p}),g[t]=B,b}},3383:(e,t,i)=>{var r,n,o,s=i(7293),a=i(614),c=i(111),d=i(30),u=i(9518),h=i(8052),A=i(5112),l=i(1913),p=A(\"iterator\"),g=!1;[].keys&&(\"next\"in(o=[].keys())?(n=u(u(o)))!==Object.prototype&&(r=n):g=!0),!c(r)||s((function(){var e={};return r[p].call(e)!==e}))?r={}:l&&(r=d(r)),a(r[p])||h(r,p,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},7497:e=>{e.exports={}},6244:(e,t,i)=>{var r=i(7466);e.exports=function(e){return r(e.length)}},6339:(e,t,i)=>{var r=i(7293),n=i(614),o=i(2597),s=i(9781),a=i(6530).CONFIGURABLE,c=i(2788),d=i(9909),u=d.enforce,h=d.get,A=Object.defineProperty,l=s&&!r((function(){return 8!==A((function(){}),\"length\",{value:8}).length})),p=String(String).split(\"String\"),g=e.exports=function(e,t,i){\"Symbol(\"===String(t).slice(0,7)&&(t=\"[\"+String(t).replace(/^Symbol\\(([^)]*)\\)/,\"$1\")+\"]\"),i&&i.getter&&(t=\"get \"+t),i&&i.setter&&(t=\"set \"+t),(!o(e,\"name\")||a&&e.name!==t)&&(s?A(e,\"name\",{value:t,configurable:!0}):e.name=t),l&&i&&o(i,\"arity\")&&e.length!==i.arity&&A(e,\"length\",{value:i.arity});try{i&&o(i,\"constructor\")&&i.constructor?s&&A(e,\"prototype\",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=u(e);return o(r,\"source\")||(r.source=p.join(\"string\"==typeof t?t:\"\")),e};Function.prototype.toString=g((function(){return n(this)&&h(this).source||c(this)}),\"toString\")},4758:e=>{var t=Math.ceil,i=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?i:t)(r)}},6277:(e,t,i)=>{var r=i(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?\"\":t:r(e)}},30:(e,t,i)=>{var r,n=i(9670),o=i(6048),s=i(748),a=i(3501),c=i(490),d=i(317),u=i(6200)(\"IE_PROTO\"),h=function(){},A=function(e){return\"<script>\"+e+\"<\\/script>\"},l=function(e){e.write(A(\"\")),e.close();var t=e.parentWindow.Object;return e=null,t},p=function(){try{r=new ActiveXObject(\"htmlfile\")}catch(e){}var e,t;p=\"undefined\"!=typeof document?document.domain&&r?l(r):((t=d(\"iframe\")).style.display=\"none\",c.appendChild(t),t.src=String(\"javascript:\"),(e=t.contentWindow.document).open(),e.write(A(\"document.F=Object\")),e.close(),e.F):l(r);for(var i=s.length;i--;)delete p.prototype[s[i]];return p()};a[u]=!0,e.exports=Object.create||function(e,t){var i;return null!==e?(h.prototype=n(e),i=new h,h.prototype=null,i[u]=e):i=p(),void 0===t?i:o.f(i,t)}},6048:(e,t,i)=>{var r=i(9781),n=i(3353),o=i(3070),s=i(9670),a=i(5656),c=i(1956);t.f=r&&!n?Object.defineProperties:function(e,t){s(e);for(var i,r=a(t),n=c(t),d=n.length,u=0;d>u;)o.f(e,i=n[u++],r[i]);return e}},3070:(e,t,i)=>{var r=i(9781),n=i(4664),o=i(3353),s=i(9670),a=i(4948),c=TypeError,d=Object.defineProperty,u=Object.getOwnPropertyDescriptor;t.f=r?o?function(e,t,i){if(s(e),t=a(t),s(i),\"function\"==typeof e&&\"prototype\"===t&&\"value\"in i&&\"writable\"in i&&!i.writable){var r=u(e,t);r&&r.writable&&(e[t]=i.value,i={configurable:\"configurable\"in i?i.configurable:r.configurable,enumerable:\"enumerable\"in i?i.enumerable:r.enumerable,writable:!1})}return d(e,t,i)}:d:function(e,t,i){if(s(e),t=a(t),s(i),n)try{return d(e,t,i)}catch(e){}if(\"get\"in i||\"set\"in i)throw c(\"Accessors not supported\");return\"value\"in i&&(e[t]=i.value),e}},1236:(e,t,i)=>{var r=i(9781),n=i(6916),o=i(5296),s=i(9114),a=i(5656),c=i(4948),d=i(2597),u=i(4664),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=a(e),t=c(t),u)try{return h(e,t)}catch(e){}if(d(e,t))return s(!n(o.f,e,t),e[t])}},8006:(e,t,i)=>{var r=i(6324),n=i(748).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return r(e,n)}},5181:(e,t)=>{t.f=Object.getOwnPropertySymbols},9518:(e,t,i)=>{var r=i(2597),n=i(614),o=i(7908),s=i(6200),a=i(8544),c=s(\"IE_PROTO\"),d=Object,u=d.prototype;e.exports=a?d.getPrototypeOf:function(e){var t=o(e);if(r(t,c))return t[c];var i=t.constructor;return n(i)&&t instanceof i?i.prototype:t instanceof d?u:null}},7976:(e,t,i)=>{var r=i(1702);e.exports=r({}.isPrototypeOf)},6324:(e,t,i)=>{var r=i(1702),n=i(2597),o=i(5656),s=i(1318).indexOf,a=i(3501),c=r([].push);e.exports=function(e,t){var i,r=o(e),d=0,u=[];for(i in r)!n(a,i)&&n(r,i)&&c(u,i);for(;t.length>d;)n(r,i=t[d++])&&(~s(u,i)||c(u,i));return u}},1956:(e,t,i)=>{var r=i(6324),n=i(748);e.exports=Object.keys||function(e){return r(e,n)}},5296:(e,t)=>{var i={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,n=r&&!i.call({1:2},1);t.f=n?function(e){var t=r(this,e);return!!t&&t.enumerable}:i},7674:(e,t,i)=>{var r=i(1702),n=i(9670),o=i(6077);e.exports=Object.setPrototypeOf||(\"__proto__\"in{}?function(){var e,t=!1,i={};try{(e=r(Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\").set))(i,[]),t=i instanceof Array}catch(e){}return function(i,r){return n(i),o(r),t?e(i,r):i.__proto__=r,i}}():void 0)},2140:(e,t,i)=>{var r=i(6916),n=i(614),o=i(111),s=TypeError;e.exports=function(e,t){var i,a;if(\"string\"===t&&n(i=e.toString)&&!o(a=r(i,e)))return a;if(n(i=e.valueOf)&&!o(a=r(i,e)))return a;if(\"string\"!==t&&n(i=e.toString)&&!o(a=r(i,e)))return a;throw s(\"Can't convert object to primitive value\")}},3887:(e,t,i)=>{var r=i(5005),n=i(1702),o=i(8006),s=i(5181),a=i(9670),c=n([].concat);e.exports=r(\"Reflect\",\"ownKeys\")||function(e){var t=o.f(a(e)),i=s.f;return i?c(t,i(e)):t}},2626:(e,t,i)=>{var r=i(3070).f;e.exports=function(e,t,i){i in e||r(e,i,{configurable:!0,get:function(){return t[i]},set:function(e){t[i]=e}})}},4488:(e,t,i)=>{var r=i(8554),n=TypeError;e.exports=function(e){if(r(e))throw n(\"Can't call method on \"+e);return e}},8003:(e,t,i)=>{var r=i(3070).f,n=i(2597),o=i(5112)(\"toStringTag\");e.exports=function(e,t,i){e&&!i&&(e=e.prototype),e&&!n(e,o)&&r(e,o,{configurable:!0,value:t})}},6200:(e,t,i)=>{var r=i(2309),n=i(9711),o=r(\"keys\");e.exports=function(e){return o[e]||(o[e]=n(e))}},5465:(e,t,i)=>{var r=i(7854),n=i(3072),o=\"__core-js_shared__\",s=r[o]||n(o,{});e.exports=s},2309:(e,t,i)=>{var r=i(1913),n=i(5465);(e.exports=function(e,t){return n[e]||(n[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:\"3.26.0\",mode:r?\"pure\":\"global\",copyright:\"Â© 2014-2022 Denis Pushkarev (zloirock.ru)\",license:\"https://github.com/zloirock/core-js/blob/v3.26.0/LICENSE\",source:\"https://github.com/zloirock/core-js\"})},6293:(e,t,i)=>{var r=i(7392),n=i(7293);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},1400:(e,t,i)=>{var r=i(9303),n=Math.max,o=Math.min;e.exports=function(e,t){var i=r(e);return i<0?n(i+t,0):o(i,t)}},5656:(e,t,i)=>{var r=i(8361),n=i(4488);e.exports=function(e){return r(n(e))}},9303:(e,t,i)=>{var r=i(4758);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},7466:(e,t,i)=>{var r=i(9303),n=Math.min;e.exports=function(e){return e>0?n(r(e),9007199254740991):0}},7908:(e,t,i)=>{var r=i(4488),n=Object;e.exports=function(e){return n(r(e))}},7593:(e,t,i)=>{var r=i(6916),n=i(111),o=i(2190),s=i(8173),a=i(2140),c=i(5112),d=TypeError,u=c(\"toPrimitive\");e.exports=function(e,t){if(!n(e)||o(e))return e;var i,c=s(e,u);if(c){if(void 0===t&&(t=\"default\"),i=r(c,e,t),!n(i)||o(i))return i;throw d(\"Can't convert object to primitive value\")}return void 0===t&&(t=\"number\"),a(e,t)}},4948:(e,t,i)=>{var r=i(7593),n=i(2190);e.exports=function(e){var t=r(e,\"string\");return n(t)?t:t+\"\"}},1694:(e,t,i)=>{var r={};r[i(5112)(\"toStringTag\")]=\"z\",e.exports=\"[object z]\"===String(r)},1340:(e,t,i)=>{var r=i(648),n=String;e.exports=function(e){if(\"Symbol\"===r(e))throw TypeError(\"Cannot convert a Symbol value to a string\");return n(e)}},6330:e=>{var t=String;e.exports=function(e){try{return t(e)}catch(e){return\"Object\"}}},9711:(e,t,i)=>{var r=i(1702),n=0,o=Math.random(),s=r(1..toString);e.exports=function(e){return\"Symbol(\"+(void 0===e?\"\":e)+\")_\"+s(++n+o,36)}},3307:(e,t,i)=>{var r=i(6293);e.exports=r&&!Symbol.sham&&\"symbol\"==typeof Symbol.iterator},3353:(e,t,i)=>{var r=i(9781),n=i(7293);e.exports=r&&n((function(){return 42!=Object.defineProperty((function(){}),\"prototype\",{value:42,writable:!1}).prototype}))},4811:(e,t,i)=>{var r=i(7854),n=i(614),o=r.WeakMap;e.exports=n(o)&&/native code/.test(String(o))},5112:(e,t,i)=>{var r=i(7854),n=i(2309),o=i(2597),s=i(9711),a=i(6293),c=i(3307),d=n(\"wks\"),u=r.Symbol,h=u&&u.for,A=c?u:u&&u.withoutSetter||s;e.exports=function(e){if(!o(d,e)||!a&&\"string\"!=typeof d[e]){var t=\"Symbol.\"+e;a&&o(u,e)?d[e]=u[e]:d[e]=c&&h?h(t):A(t)}return d[e]}},9191:(e,t,i)=>{var r=i(5005),n=i(2597),o=i(8880),s=i(7976),a=i(7674),c=i(9920),d=i(2626),u=i(9587),h=i(6277),A=i(8340),l=i(1060),p=i(2914),g=i(9781),E=i(1913);e.exports=function(e,t,i,f){var m=\"stackTraceLimit\",I=f?2:1,_=e.split(\".\"),C=_[_.length-1],S=r.apply(null,_);if(S){var v=S.prototype;if(!E&&n(v,\"cause\")&&delete v.cause,!i)return S;var T=r(\"Error\"),R=t((function(e,t){var i=h(f?t:e,void 0),r=f?new S(e):new S;return void 0!==i&&o(r,\"message\",i),p&&o(r,\"stack\",l(r.stack,2)),this&&s(v,this)&&u(r,this,R),arguments.length>I&&A(r,arguments[I]),r}));if(R.prototype=v,\"Error\"!==C?a?a(R,T):c(R,T,{name:!0}):g&&m in S&&(d(R,S,m),d(R,S,\"prepareStackTrace\")),c(R,S),!E)try{v.name!==C&&o(v,\"name\",C),v.constructor=R}catch(e){}return R}}},6992:(e,t,i)=>{var r=i(5656),n=i(1223),o=i(7497),s=i(9909),a=i(3070).f,c=i(1656),d=i(6178),u=i(1913),h=i(9781),A=\"Array Iterator\",l=s.set,p=s.getterFor(A);e.exports=c(Array,\"Array\",(function(e,t){l(this,{type:A,target:r(e),index:0,kind:t})}),(function(){var e=p(this),t=e.target,i=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,d(void 0,!0)):d(\"keys\"==i?r:\"values\"==i?t[r]:[r,t[r]],!1)}),\"values\");var g=o.Arguments=o.Array;if(n(\"keys\"),n(\"values\"),n(\"entries\"),!u&&h&&\"values\"!==g.name)try{a(g,\"name\",{value:\"values\"})}catch(e){}},1703:(e,t,i)=>{var r=i(2109),n=i(7854),o=i(2104),s=i(9191),a=n.WebAssembly,c=7!==Error(\"e\",{cause:7}).cause,d=function(e,t){var i={};i[e]=s(e,t,c),r({global:!0,constructor:!0,arity:1,forced:c},i)},u=function(e,t){if(a&&a[e]){var i={};i[e]=s(\"WebAssembly.\"+e,t,c),r({target:\"WebAssembly\",stat:!0,constructor:!0,arity:1,forced:c},i)}};d(\"Error\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"EvalError\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"RangeError\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"ReferenceError\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"SyntaxError\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"TypeError\",(function(e){return function(t){return o(e,this,arguments)}})),d(\"URIError\",(function(e){return function(t){return o(e,this,arguments)}})),u(\"CompileError\",(function(e){return function(t){return o(e,this,arguments)}})),u(\"LinkError\",(function(e){return function(t){return o(e,this,arguments)}})),u(\"RuntimeError\",(function(e){return function(t){return o(e,this,arguments)}}))},3948:(e,t,i)=>{var r=i(7854),n=i(8324),o=i(8509),s=i(6992),a=i(8880),c=i(5112),d=c(\"iterator\"),u=c(\"toStringTag\"),h=s.values,A=function(e,t){if(e){if(e[d]!==h)try{a(e,d,h)}catch(t){e[d]=h}if(e[u]||a(e,u,t),n[t])for(var i in s)if(e[i]!==s[i])try{a(e,i,s[i])}catch(t){e[i]=s[i]}}};for(var l in n)A(r[l]&&r[l].prototype,l);A(o,\"DOMTokenList\")},6226:(e,t,i)=>{e.exports=i(7460)},7445:(e,t,i)=>{e.exports=i(3685)}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,i),o.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};return(()=>{i.r(r),i.d(r,{AudioExtension:()=>_,AudioProcessor:()=>m,Extension:()=>I,PromiseMutex:()=>T,Ticker:()=>S,VideoProcessor:()=>f,logger:()=>u,reporter:()=>l});var e=i(7445);function t(t,i,r){return i in t?e(t,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[i]=r,t}i(1703),i(6992),i(3948);var n=i(6226),o=i.n(n);const s=Date.now(),a={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4};function c(){const e=new Date;return e.toTimeString().split(\" \")[0]+\":\"+e.getMilliseconds()}const d=e=>{for(const t in a)if(Object.prototype.hasOwnProperty.call(a,t)&&a[t]===e)return t;return\"DEFAULT\"},u=new class{constructor(){t(this,\"logLevel\",a.DEBUG),t(this,\"hookLog\",void 0)}debug(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[a.DEBUG].concat(t);this.log.apply(this,r)}info(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[a.INFO].concat(t);this.log.apply(this,r)}warning(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[a.WARNING].concat(t);this.log.apply(this,r)}error(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];const r=[a.ERROR].concat(t);this.log.apply(this,r)}log(){for(var e,t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];if(Date.now()-s<100)return void setTimeout(()=>{this.log(...i)},Date.now()-s);const n=Math.max(0,Math.min(4,i[0]));if(i[0]=c()+\" Agora-Extension [\".concat(d(n),\"]:\"),n<this.logLevel)return;const o=c()+\" %cAgora-Extension [\".concat(d(n),\"]:\");let u=[];switch(n){case a.DEBUG:u=[o,\"color: #64B5F6;\"].concat(i.slice(1)),console.log.apply(console,u);break;case a.INFO:u=[o,\"color: #1E88E5; font-weight: bold;\"].concat(i.slice(1)),console.log.apply(console,u);break;case a.WARNING:u=[o,\"color: #FB8C00; font-weight: bold;\"].concat(i.slice(1)),console.warn.apply(console,u);break;case a.ERROR:u=[o,\"color: #B00020; font-weight: bold;\"].concat(i.slice(1)),console.error.apply(console,u)}null===(e=this.hookLog)||void 0===e||e.call(this,n,u)}};function h(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function A(e){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?h(Object(r),!0).forEach((function(i){t(e,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):h(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const l=new class{constructor(){t(this,\"apiInvokeMsgQueue\",[]),t(this,\"hookApiInvoke\",void 0)}reportApiInvoke(e){e.timeout=e.timeout||6e4,e.reportResult=void 0===e.reportResult||e.reportResult;const t=Date.now(),i=()=>({name:e.name,apiInvokeTime:t,options:e.options});let r=!1;var n;(n=e.timeout,new(o())(e=>{window.setTimeout(e,n)})).then(()=>{r||(this.sendApiInvoke(A(A({},i()),{},{error:\"API_INVOKE_TIMEOUT\",success:!1})),u.debug(\"\".concat(e.name,\" timeout\")))});const s=new Error(\"\".concat(e.name,\": this api invoke is end\"));return{onSuccess:t=>{if(r)throw s;r=!0,this.sendApiInvoke(A(A({},i()),{},{success:!0},e.reportResult&&{result:t}))},onError:e=>{if(r)throw e;r=!0,this.sendApiInvoke(A(A({},i()),{},{success:!1,error:e.toString()}))}}}sendApiInvoke(e){this.hookApiInvoke?(this.hookApiInvoke([...this.apiInvokeMsgQueue,e]),this.apiInvokeMsgQueue=[]):this.apiInvokeMsgQueue.push(e)}};function p(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function g(e){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?p(Object(r),!0).forEach((function(i){t(e,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class E extends class{constructor(){t(this,\"_events\",{}),t(this,\"addListener\",this.on)}getListeners(e){return this._events[e]?this._events[e].map(e=>e.listener):[]}on(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const i=this._events[e];-1===this._indexOfListener(i,t)&&i.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const i=this._events[e],r=this._indexOfListener(i,t);-1!==r&&i.splice(r,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map(e=>e);for(var i=arguments.length,r=new Array(i>1?i-1:0),n=1;n<i;n++)r[n-1]=arguments[n];for(let i=0;i<t.length;i+=1){const n=t[i];n.once&&this.off(e,n.listener),n.listener.apply(this,r||[])}}_indexOfListener(e,t){let i=e.length;for(;i--;)if(e[i].listener===t)return i;return-1}emitAsPromise(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];return 0===this.getListeners(e).length?o().reject(new Error(\"No promise event handler.\")):new(o())((t,r)=>{this.emit(e,...i,t,r)})}emitAsPromiseNoResponse(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),r=1;r<t;r++)i[r-1]=arguments[r];return 0===this.getListeners(e).length?o().resolve():new(o())((t,r)=>{this.emit(e,...i,t,r)})}}{get enabled(){return this._enabled}output(e,t){if(this.outputTrack===e)return;const i=l.reportApiInvoke({name:\"\".concat(this.name,\".output\"),options:{track:null==e?void 0:e.toString()}});this.outputTrack=e,this.destination&&this.destination.updateInput({track:e,context:t}),i.onSuccess()}constructor(){super(),t(this,\"inputTrack\",void 0),t(this,\"outputTrack\",void 0),t(this,\"_enabled\",!0),t(this,\"_source\",void 0),t(this,\"ID\",function e(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,i=arguments.length>1?arguments[1]:void 0;const r=Math.random().toString(16).substr(2,t).toLowerCase();return r.length===t?\"\".concat(i).concat(r):\"\".concat(i).concat(r)+e(t-r.length,\"\")}(6,\"\")),t(this,\"destination\",void 0),t(this,\"context\",void 0),t(this,\"name\",void 0)}enable(){if(this._enabled)return;const e=l.reportApiInvoke({name:\"\".concat(this.name,\".enable\"),options:!0});u.info(\"\".concat(this.name,\"-\").concat(this.ID,\" enabled\")),this._enabled=!0;try{var t;const i=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(i instanceof o())return i.then(()=>{e.onSuccess()}).catch(t=>{throw e.onError(t),t});e.onSuccess()}catch(t){throw e.onError(t),t}}disable(){if(!this._enabled)return;const e=l.reportApiInvoke({name:\"\".concat(this.name,\".enable\"),options:!1});u.info(\"\".concat(this.name,\"-\").concat(this.ID,\" disabled\")),this._enabled=!1;try{var t;const i=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(i instanceof o())return i.then(()=>{e.onSuccess()}).catch(t=>{throw e.onError(t),t});e.onSuccess()}catch(t){throw e.onError(t),t}}}class f extends E{get kind(){return\"video\"}pipe(e){const t=l.reportApiInvoke({name:\"\".concat(this.name,\".pipe\"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const i=new Error(\"Processor \".concat(e.name,\" already being piped, please call \").concat(e._source.name,\".unpipe() beforehand.\"));throw t.onError(i),i}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;const e=l.reportApiInvoke({name:\"\".concat(this.name,\".unpipe\"),options:{processor:this.destination.name}});u.info(\"unpiping processor \".concat(this.destination.name,\"-\").concat(this.destination.ID));try{const t=this.destination;this.destination._source=void 0,this.destination=void 0,t.reset()}finally{e.onSuccess()}}updateInput(e){var t,i;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(i=this.onTrack)||void 0===i||i.call(this,e.track,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.context=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this),this.destination&&this.destination.reset()}}class m extends E{constructor(){super(...arguments),t(this,\"inputNode\",void 0),t(this,\"outputNode\",void 0),t(this,\"destination\",void 0),t(this,\"context\",void 0)}get kind(){return\"audio\"}pipe(e){const t=l.reportApiInvoke({name:\"\".concat(this.name,\".pipe\"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const i=new Error(\"Processor \".concat(e.name,\" already being piped, please call \").concat(e._source.name,\".unpipe() beforehand.\"));throw t.onError(i),i}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;u.info(\"unpiping processor \".concat(this.destination.name,\"-\").concat(this.destination.ID));const e=l.reportApiInvoke({name:\"\".concat(this.name,\".unpipe\"),options:{processor:this.destination.name}});try{var t;let i=this.destination;null===(t=this.outputNode)||void 0===t||t.disconnect(),this.destination._source=void 0,this.destination=void 0,i.reset()}finally{e.onSuccess()}}output(e,t){if(e instanceof MediaStreamTrack)super.output(e,t);else if(e instanceof AudioNode){if(this.outputNode===e)return;const i=l.reportApiInvoke({name:\"\".concat(this.name,\".output\"),options:g(g({},e instanceof MediaStreamTrack&&{track:e.toString()}),e instanceof AudioNode&&{audioNode:e.toString()})});this.outputNode=e,this.destination&&this.destination.updateInput({node:e,context:t}),i.onSuccess()}}updateInput(e){var t,i,r;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(i=this.onTrack)||void 0===i||i.call(this,e.track,this.context)),e.node&&this.inputNode!==e.node&&(this.inputNode=e.node,null===(r=this.onNode)||void 0===r||r.call(this,e.node,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.inputNode=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this,this.context),this.context=void 0,this.destination&&this.destination.reset()}}class I{constructor(){t(this,\"__registered__\",!1),t(this,\"logger\",u),t(this,\"reporter\",l),t(this,\"parameters\",{})}createProcessor(){if(!this.__registered__)throw new Error(\"Extension not registered yet!\");return this._createProcessor()}}class _ extends I{}let C;class S{get running(){return this._running}constructor(e,i){if(t(this,\"type\",void 0),t(this,\"interval\",void 0),t(this,\"fn\",void 0),t(this,\"_running\",!1),t(this,\"_osc\",void 0),!e)throw new Error;if(i<=0)throw new Error;this.type=e,this.interval=i}add(e){this.fn=e}remove(){this.fn=void 0}start(){if(!this._running)switch(this._running=!0,this.type){case\"Timer\":{const e=()=>{setTimeout(()=>{this.fn&&this.fn(),this._running&&e()},this.interval)};e();break}case\"RAF\":{const e=t=>{requestAnimationFrame(i=>{i-t<this.interval?this._running&&e(t):(this.fn&&this.fn(),this._running&&e(i))})};e(performance.now());break}case\"Oscillator\":{C||(C=new AudioContext);const e=C.createGain();let t;e.gain.value=0,e.connect(C.destination);const i=()=>{this.fn&&this.fn(),t&&t.disconnect(),t=C.createOscillator(),this._osc=t,t.connect(e),this._running&&(t.onended=i,t.start(0),t.stop(C.currentTime+this.interval/1e3))};i();break}}}stop(){this._running=!1,this._osc&&(this._osc.onended=null,this._osc=void 0)}}let v=1;class T{constructor(e){t(this,\"lockingPromise\",o().resolve()),t(this,\"locks\",0),t(this,\"name\",\"\"),t(this,\"lockId\",void 0),this.lockId=v++,e&&(this.name=e)}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1;const i=new(o())(e=>{t=()=>{this.locks-=1,e()}}),r=this.lockingPromise.then(()=>t);return this.lockingPromise=this.lockingPromise.then(()=>i),r}}})(),r})(),e.exports=i()}(uX);var lX;!\n/*@cc_on!@*/\n!!document.documentMode&&!!window.StyleMedia&&(HTMLCanvasElement.prototype.getContext=(lX=HTMLCanvasElement.prototype.getContext,function(){let e=arguments;const t=e[0];return\"webgl\"===t&&(e=[].slice.call(arguments),e[0]=\"experimental-webgl\"),lX.apply(null,e)}));const pX=[31,222,239,159,192,236,164,81,54,227,176,149,2,247,75,141,183,54,213,216,158,92,111,49,228,111,150,6,135,79,35,212,4,155,200,168,37,107,243,110,144,179,51,81,55,78,223,242,191,211,74,119,203,151,142,62,31,41,132,22,35,155,87,123,119,117,216,57,201,53,228,67,201,40,106,24,80,176,187,253,60,63,136,100,20,12,177,99,64,38,101,143,111,176,251,211,145,136,34,23,79,136,202,95,105,199,125,67,180,44,210,179,228,4,85,160,188,64,26,46,6,61,201,103,248,18,97,254,140,36,115,106,48,124,102,216,155,120,36,227,165,217,7,227,191,128,212,157,80,37,117,175,24,214,47,221,183,211,51,174,251,223,159,167,152,53,36,107,199,223,91,62,46,194,11,80,121,188,219,2,99,99,232,229,173,234,21,30,236,177,243,142,97,48,108,56,62,172,56,216,3,42,79,138,23,88,182,39,5,118,68,135,178,56,9,94,189,44,104,9,238,231,174,122,85,247,231,86,74,8,189,147,218,180,58,76,227,17,46,90,194,100,51,178,72,163,151,243,166,130,85,1,223,130,152,242,85,255,28,173,97,252,119,215,177,119,86,104,136,82,40,72,53,11,18,26,240,188,76,110,39,31,189];function gX(e){const t=new Uint8Array([99,114,121,112,116,105,105]),i=t.length,r=e,n=r.length,o=new Uint8Array(n),s=new Uint8Array(256);for(let e=0;e<256;e++)s[e]=e;let a=0;for(let e=0;e<256;e++)a=(a+s[e]+t[e%i])%256,[s[e],s[a]]=[s[a],s[e]];let c,d=0;a=0;for(let e=0;e<0+n;e++)d=(d+1)%256,a=(a+s[d])%256,[s[d],s[a]]=[s[a],s[d]],c=s[(s[d]+s[a])%256],e>=0&&(o[e-0]=r[e-0]^c);const u=String.fromCharCode.apply(null,Array.from(o));return Function(\"var winSize = 5; return `\"+u+\"`\")()}const EX=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,152,221,191,124,116,248,106,130,251,59,105,43,91,135,199,181,223,10,51,134,194,240,46,9,3,141,22,35,146,76,23,109,117,208,41,201,45,218,76,203,105,51,58,97,154,145,236,49,18,183,127,27,12,210,122,73,42,37,143,36,207,251,211,145,191,56,10,88,222,181,125,22,238,123,71,177,107,218,254,173,28,34,253,249,67,83,97,73,111,219,43,181,82,38,230,136,109,22,67];class fX{constructor(e,t){MN(this,\"program\",void 0),MN(this,\"gl\",void 0),MN(this,\"kernel\",void 0),this.gl=e,this.kernel=t||EX,this.program=function(e,t){const i=gX(t),r=AX(e,[gX(pX),i]);{const t=e.getAttribLocation(r,\"a_position\"),i=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(t);const n=2,o=e.FLOAT,s=!1,a=0,c=0;e.vertexAttribPointer(t,n,o,s,a,c)}{const t=e.getAttribLocation(r,\"a_texCoord\"),i=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(t);const n=2,o=e.FLOAT,s=!1,a=0,c=0;e.vertexAttribPointer(t,n,o,s,a,c)}return r}(this.gl,this.kernel)}setUniforms(){const e=this.gl.getUniformLocation(this.program,\"u_flipY\");this.gl.uniform1f(e,1)}}class mX extends fX{constructor(e,t,i,r){super(e,t),MN(this,\"xOffset\",void 0),MN(this,\"yOffset\",void 0),MN(this,\"denoiseLevel\",5),this.xOffset=1/i,this.yOffset=1/r}setUniforms(){const e=this.gl.getUniformLocation(this.program,\"u_flipY\"),t=this.gl.getUniformLocation(this.program,\"u_singleStepOffset\"),i=this.gl.getUniformLocation(this.program,\"u_denoiseLevel\");this.gl.uniform2f(t,this.xOffset,this.yOffset),this.gl.uniform1f(i,this.denoiseLevel),this.gl.uniform1f(e,1)}setParameters(e){void 0!==e.denoiseLevel&&(this.denoiseLevel=e.denoiseLevel)}setSize(e,t){this.xOffset=1/e,this.yOffset=1/t}}const IX=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,155,210,164,99,114,228,96,130,251,59,105,43,91,135,199,181,223,10,51,133,194,247,34,31,39,142,28,2,130,18,109,84,124,223,62,140,52,128,47,208,47,115,39,4,200,220,171,53,36,150,101,10,75,247,121,74,36,35,143,108,176,235,211,135,164,36,11,88,160,148,35,6,221,41,32,166,109,205,171,228,4,26,169,244,82,119,102,86,61,201,103,248,18,97,242,182,34,121,70,28,71,126,197,223,126,14,244,149,192,12,176,187,149,212,156,22,44,36,133,10,216,63,198,213,154,116,230,253,154,154,249,215,55,60,34,196,229,76,50,44,135,22,77,113,247,142,94,60,23,172,145,175,218,81,86,162,239,180,205,63,118,3,110,123,224,127,158,124,15,127,157,27,66,176,33,24,51,53,194,178,56,6,74,191,111,51,78,174,157,229,17,22,178,231,92,25,23,191,157,137,188,54,64,176,13,22,81,207,45,108,203,83,186,130,237,186,153,110,8,196,168,152,161,28,238,46,184,36,185,20,203,183,98,95,41,149,93,105,37,116,91,68,105,164,217,30,42,60,53,173,213,177,216,195,53,204,173,128,243,42,122,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,220,161,39,214,146,183,193,225,23,177,201,243,128,160,33,75,86,126,139,254,232,14,13,85,2,112,17,150,36,180,86,226,225,126,197,17,228,225,142,245,37,170,39,96,187,190,2,35,85,237,11,189,1,79,237,2,1,114,246,109,190,66,54,153,43,218,204,70,6,204,162,247,18,130,123,30,60,165,130,142,210,133,91,127,117,71,38,145,172,7,5,16,220,222,111,98,141,239,208,125,26,238,28,0,216,89,13,7,119,134,194,75,41,67,174,1,217,80,101,40,26,59,28,59,46,108,138,38,157,167,28,234,73,177,42,42,102,108,26,181,27,178,42,43,52,28,110,117,198,173,176,178,101,225,150,36,139,108,105,10,237,222,3,143,126,18,144,115,74,56,114,134,231,159,212,62,126,80,173,216,167,4,81,18,52,17,144,218,32,139,207,104,128,229,99,84,120,31,87,227,154,91,196,63,123,111,125,36,52,57,168,113,150,189,204,24,104,196,237,86,163,68,197,202,170,212,191,81,193,111,255,162,181,202,156,146,196,96,16,118,117,55,71,156,31,163,242,204,239,11,150,27,126,115,154,107,247,134,158,125,255,146,35,183,209,36,116,87,215,172,5,251,133,114,254,141,195,6,145,4,111,182,167,74,154,152,68,18,146,88,106,200,154,15,176,94,86,66,178,101,219,35,188,129,66,28,41,110,174,53,88,174,64,191,206,127,48,126,214,216,93,119,2,166,99,181,222,29,218,28,195,219,125,44,50,16,99,174,225,51,133,120,184,159,168,75,242,162,124,255,81,25,153,109,69,220,176,4,237,196,233,19,8,240,160,39,122,81,29,188,144,249,170,174,137,30,10,93,133,151,199,248,175,38,41,144,229,245,149,25,240,138,179,114,182,84,50,103,95,31,199,31,87,208,203,199,135,49,211,43,52,36,74,59,37,22,136,171,244,126,18,251,39,159,241,66,206,127,149,159,182,143,232,199,136,46,150,32,51,221,74,22,102,93,22,44,132,140,199,43,69,249,77,75,140,70,4,252,98,235,77,190,125,18,56,21,10,244,42,2,246,62,127,241,123,137,22,247,219,177,160,84,18,10,84,97,251,127,102,16,209,181,100,94,56,238,209,207,76,189,95,15,165,139,143,189,96,225,55,112,178,27,218,198,223,251,52,123,94,130,220,142,216,116,237,18,254,49,59,128,41,29,15,179,164,85,76,167,166,151,39,221,2,190,68,167,26,177,114,141,4,67,25,69,182,38,166,160,27,151,148,108,48,227,60,112,48,22,159,76,127,251,63,254,177,113,217,197,95,179,109,128,138,99,27,249,10,174,155,129,80,39,165,252,85,60,131,183,98,107,68,207,19,233,231,55,225,126,77,49,53,145,203,113,29,208,64,237,182,229,165,7,11,169,106,253,116,141,200,62,16,38,121,55,148,91,83,160,140,126,121,12,79,189,72,172,31,243,240,209,229,32,220,91,229,81,94,247,121,153,151,232,182,171,198,50,31,152,245,172,151,130,55,62,125,38,155,229,78,207,148,201,2,78,63,119,107,168,78,139,141,163,177,191,239,141,39,182,174,40,76,226,62,125,209,6,6,34,37,147,85,204,103,51,191,36,248,17,175,20,1,53,16,35,143,237,177,125,86,29,219,235,20,121,205,59,5,250,107,109,32,224,30,152,143,113,151,95,85,19,254,164,135,124,68,136,199,29,31,244,91,10,84,127,101,210,70,226,195,140,70,166,54,217,165,84,42,165,175,100,234,124,121,105,53,101,118,174,101,220,147,68,161,37,0,182,220,142,221,155,230,115,164,10,214,208,120,91,152,66,27,81,184,48,84,70,7,128,153,217,218,249,226,70,130,200,156,61,227,21,164,137,193,221,119,10,134,204,23,20,17,90,94,105,204,39,99,1,64,153,45,213,19,247,97,194,49,35,125,255,195,139,63,209,175,208,147,189,244,204,24,211,99,142,18,92,130,254,182,231,235,93,10,127,175,87,35,62,110,137,184,39,114,200,150,11,190,40,162,168,223,203,110,242,192,234,26,11,54,155,38,48,79,109,101,119,165,187,223,5,20,168,171,241,20,243,108,199,3,155,69,244,149,0,187,110,12,233,42,151,189,139,133,104,3,30,16,200,69,4,123,103,144,12,106,182,1,127,91,125,158,12,144,238,232,209,101,159,56,163,240,179,50,169,120,219,176,87,77,45,247,153,190,82,132,50,137,209,97,19,35,247,161,62,77,16,71,152,72,61,50,99,157,154,56,58,175,27,73,121,229,195,228,132,69,233,169,100,21,123,17,3,164,6,146,106,196,29,3,250,217,164,23,171,203,14,242,239,249,169,116,138,209,98,113,181,122,35,162,216,46,230,4,155,142,118,216,232,229,28,12,158,153,126,149,171,172,231,99,211,57,114,136,183,114,74,35,233,115,127,253,157,38,49,136,141,25,161,255,232,110,101,208,166,186,226,12,185,19,155,53,93,155,39,161,7,124,213,52,223,125,211,242,253,22,13,131,115,167,198,188,90,209,63,224,92,112,118,220,165,31,164,43,58,197,77,17,247,77,164,74,77,218,18,187,41,76,189,127,98,18,226,231,71,115,236,68,183,111,50,168,88,247,9,123,65,180,88,74,44,101,101,173,11];class _X extends mX{constructor(e,t,i){super(e,IX,t,i)}}const CX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,165,108,122,254,125,130,229,55,109,113,11,210,238,163,213,86,116,156,248,215,63,20,48,173,31,55,133,18,105,32,16,204,35,128,38,212,87,200,97,114,40,12,210,193,171,59,33,158,108,14,75,228,74,65,32,57,192,112,156,234,250,140,189,40,20,6,230,135,52,17,200,123,68,183,44,215,187,234,2,13,169,234,94,115,60,6,107,224,118,254,88,2,235,134,36,120,5,85,94,126,222,223,101,105,227,147,199,64,185,246,143,183,210,30,37,127,226,79,156,118,147,208,131,51,248,232,217,206,181,218,58,61,112,244,227,68,45,41,206,69,12,45,163,205,75,6,23,167,145,250,237,92,84,164,240,253,216,54,85,7,108,62,255,42,217,3,27,0,196,94,28,241,120,80,92,89,135,228,125,2,3,242,39,116,64,248,216,177,122,66,178,180,9,7,33,186,208,213,188,59,78,243,95,123,28,142,45,99,130,7,167,194,156,238,199,10,71,141,251,221,158,16,255,38,181,36,184,20,136,240,55,27,51,191,82,105,55,97,78,74,121,191,161,91,126,105,103,174,139,223,145,150,120,156,240,252,182,105,104,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,201,211,39,203,146,225,246,252,21,161,250,188,137,190,42,4,90,126,211,171,240,113,67,28,92,57,77,200,125,224,19,178,142,112,202,5,233,229,128,235,105,239,102,52,179,224,87,45,68,211,10,187,9,38,190,86,25,43,175,56,231,11,108,220,36,129,131,19,93,163,239,169,118,205,50,77,121,139,139,141,197,170,20,44,39,19,97,205,228,8,106,67,210,135,111,127,141,185,175,123,26,226,42,29,217,16,99,9,46,157,232,22,3,105,174,73,144,23,110,55,84,46,4,116,39,113,205,58,158,242,7,208,75,162,55,115,35,52,124,235,114,178,55,43,98,17,100,33,134,237,190,230,60,184,192,104,146,52,58,79,174,180,81,155,114,0,153,113,90,51,86,150,254,136,205,104,39,11,190,187,233,80,81,81,56,18,222,148,116,155,156,33,132,226,127,84,34,83,28,249,153,18,197,10,116,102,125,45,47,36,235,46,212,166,209,3,125,132,237,124,163,68,197,202,232,152,234,75,235,103,248,160,241,213,151,144,130,37,23,51,48,55,12,227,31,163,242,251,245,22,129,77,20,35,150,20,181,203,138,69,233,215,109,178,209,52,85,96,221,179,56,249,138,111,250,141,134,95,152,92,109,183,174,104,151,156,31,66,211,10,57,141,167,18,177,27,126,74,252,29,143,121,173,203,8,27,44,123,148,57,88,163,68,228,158,62,98,121,192,228,94,92,72,241,33,230,173,0,197,1,194,144,111,91,60,0,106,181,203,51,133,120,250,158,184,93,216,184,126,253,21,22,155,99,80,205,227,69,231,141,165,71,70,252,223,105,51,93,22,165,135,233,177,164,139,53,5,85,151,134,214,165,249,100,24,186,207,245,149,68,218,204,252,32,190,90,48,76,57,31,201,15,52,130,135,152,206,63,198,100,126,36,2,104,116,0,160,163,186,2,91,165,57,149,163,12,239,121,152,209,224,136,248,135,136,46,150,32,51,154,6,105,0,71,30,44,175,147,139,34,91,184,78,31,145,18,3,250,122,166,47,252,109,19,40,10,123,163,99,76,133,119,37,180,38,207,79,171,185,188];class SX extends mX{constructor(e,t,i){super(e,CX,t,i)}}const vX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,160,96,121,255,120,207,227,114,120,38,72,149,145,165,227,75,122,158,250,232,46,34,52,135,9,30,144,17,110,126,110,130,71,156,46,210,67,202,51,119,97,3,211,214,227,45,109,151,97,21,10,229,53,80,26,51,202,119,128,230,197,140,135,40,14,88,128,202,95,21,208,96,83,185,98,216,242,224,15,25,224,233,86,96,46,80,120,220,48,187,86,30,240,140,46,95,81,48,90,117,140,177,51,107,235,158,137,5,241,191,154,149,219,30,126,85,175,10,216,63,139,216,151,122,251,224,202,220,227,221,53,122,34,213,224,94,45,14,200,68,31,61,175,208,17,120,82,244,138,208,165,21,19,236,232,180,217,50,74,70,126,114,227,62,192,124,9,85,148,33,77,255,117,75,102,87,151,255,87,74,74,181,111,108,9,249,220,174,59,80,254,168,29,30,94,171,133,133,195,105,64,254,68,65,18,158,54,73,203,65,175,151,170,236,138,17,119,128,237,214,189,28,250,38,149,97,242,81,212,254,57,18,120,155,64,96,108,75,78,74,121,191,243,30,42,60,103,165,196,160,195,216,99,182,173,214,182,105,53,231,3,45,212,144,101,217,65,141,44,230,125,151,154,123,57,134,223,98,133,156,238,137,181,80,175,230,167,131,180,13,69,77,44,156,165,252,14,27,85,71,1,82,196,64,243,26,167,146,98,201,6,195,247,200,224,44,177,104,109,187,231,83,118,28,159,92,179,28,14,162,81,84,21,168,34,156,21,127,215,88,218,208,11,92,161,239,239,82,221,59,86,83,201,199,216,151,139,23,54,39,52,103,204,247,24,102,94,157,138,42,49,131,183,208,50,95,236,54,6,211,26,68,72,56,212,134,24,91,114,132,1,217,80,38,47,29,47,0,107,102,99,129,33,140,243,74,251,89,247,103,12,114,58,113,240,72,188,39,48,72,89,45,102,206,245,247,231,56,167,129,122,222,47,40,78,227,159,64,206,34,127,203,127,87,40,108,152,238,147,231,46,104,89,182,180,232,86,89,91,57,10,222,202,59,199,135,60,199,189,40,84,125,28,84,162,210,91,143,34,106,117,118,3,125,126,237,60,131,173,153,69,49,212,204,117,163,31,239,202,232,152,234,3,162,32,176,184,184,196,154,131,144,115,6,53,122,55,69,166,19,230,183,175,244,1,156,11,37,121,134,121,152,142,158,125,229,150,44,183,216,109,7,65,222,169,56,222,140,110,233,157,138,66,208,6,111,166,188,76,208,222,4,104,211,10,57,141,243,65,228,86,85,88,169,91,237,56,249,133,77,21,32,37,230,55,0,184,110,228,158,62,98,45,147,177,19,119,89,164,103,132,239,84,139,68,204,157,49,41,50,89,113,159,203,51,133,120,184,210,237,15,249,187,100,253,50,16,154,112,64,193,254,10,235,200,253,84,31,169,171,39,122,70,46,186,139,212,162,173,158,41,23,86,148,172,196,237,242,58,102,180,150,238,191,25,240,204,252,125,148,29,124,51,95,10,196,55,49,159,138,144,255,126,205,43,49,42,17,59,60,77,139,177,239,64,36,224,98,205,234,70,199,103,139,218,206,207,178,217,255,32,134,59,25,221,74,22,102,82,19,20,170,142,134,42,106,249,64,80,222,28,21,169,50,235,4,237,56,81,87,76,32,251,42,6,173,105,54,191,8,136,5,245,206,239,176,9,116,24];class TX extends mX{constructor(e,t,i){super(e,vX,t,i)}}const RX=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,190,100,112,230,97,199,225,96,74,99,94,248,222,162,213,95,122,158,212,233,42,22,37,217,115,36,152,30,123,116,104,212,109,129,41,220,77,213,97,124,45,4,219,197,171,40,18,149,104,20,4,248,102,64,9,50,217,124,131,180,188,159,170,63,1,84,130,150,117,14,212,118,67,165,97,207,242,251,15,30,187,188,77,79,122,67,101,252,109,244,82,37,191,227,35,114,87,57,71,99,218,155,54,101,239,138,197,13,226,228,176,157,158,87,98,55,251,79,150,64,138,200,135,40,132,135,207,146,252,222,57,58,111,151,225,78,59,36,210,70,29,121,160,210,31,109,67,167,194,177,236,91,108,164,229,130,211,59,66,93,18,107,226,54,210,51,8,77,217,19,73,187,33,30,59,9,135,162,49,5,11,225,111,119,11,247,218,129,115,83,205,170,21,4,69,210,133,134,245,109,15,177,9,81,81,203,105,42,158,12,255,151,165,230,205,5,92,196,251,211,187,27,214,43,186,91,233,85,192,229,15,71,38,220,20,38,101,44,78,7,60,251,186,75,103,108,53,166,220,186,208,194,120,207,230,159,248,22,32,142,124,96,157,222,60,191,65,145,6,239,125,151,147,50,58,130,207,110,131,223,231,137,238,28,182,216,167,198,191,37,67,76,1,144,232,218,79,72,28,65,101,43,216,64,253,16,173,179,123,140,27,233,245,199,230,36,181,102,114,247,162,18,34,20,212,25,171,24,28,143,80,94,40,167,34,209,61,117,130,1,198,196,7,21,252,180,255,92,128,119,9,48,156,138,136,151,143,23,44,52,3,40,197,228,31,123,67,163,140,32,54,204,187,149,80,19,255,82,120,195,12,110,65,56,212,143,22,78,44,234,72,140,29,118,103,18,36,7,122,50,37,139,47,142,243,25,208,88,237,126,50,103,127,19,183,29,169,29,1,55,23,100,32,129,239,243,160,61,178,197,117,199,45,57,26,165,135,92,218,59,0,197,54,13,96,40,141,212,221,131,103,46,22,228,191,167,73,20,86,62,11,147,217,116,205,203,110,134,249,51,6,123,23,86,231,157,8,144,83,126,115,118,35,96,36,229,36,220,228,143,71,45,223,129,48,236,5,145,202,188,208,184,70,241,104,255,188,181,146,210,206,144,53,77,101,120,38,8,245,80,230,165,160,183,83,202,79,127,57,214,126,242,150,208,40,239,148,35,163,201,97,74,70,214,181,63,240,147,33,253,149,140,77,197,82,126,189,231,7,196,212,80,14,151,24,57,144,243,81,234,66,24,19,236,2,137,121,246,129,65,7,99,110,174,54,74,182,81,234,142,37,72,110,220,255,64,119,10,188,111,191,228,1,205,9,204,143,56,62,125,84,106,225,131,97,192,43,240,157,161,75,168,247,44,175,65,81,192,48,21,157,167,80,191,130,161,75,85,186,174,42,117,1,68,252,204,138,254,203,152,21,13,64,144,195,207,238,229,54,103,247,159,245,211,85,191,141,168,32,234,85,46,118,12,5,199,4,19,217,203,202,156,33,143,114,116,60,66,40,58,77,208,237,171,26,72,175,114,205,248,87,137,62,210,143,151,197,167,210,241,122,150,104,122,154,2,70,102,83,19,36,141,136,199,42,79,229,71,86,194,109,31,236,80,166,17,230,109,1,40,28,46,224,56,20,230,47,100,254,116,208,76,169,157,241,175,3,70,85,31,38,245,58,33,80,145,237,8,22,71,224,158,156,31,249,81,87,247,230,199,237,96,167,123,63,243,79,156,206,203,160,54,124,68,253,215,132,235,57,185,92,238,55,59,210,104,71,26,183,180,71,12,255,224,192,65,154,72,244,8,164,10,248,46,207,30,92,1,80,244,31,189,138,88,216,218,63,100,227,116,57,119,94,135,5,126,255,32,191,163,61,209,194,88,248,112,139,173,43,69,134,3,160,151,137,25,98,239,166,19,123,208,180,31,120,30,191,75,183,179,126,180,125,92,107,105,206,138,28,67,139,3,188,230,184,255,121,13,181,45,160,114,202,194,123,87,55,124,97,164,82,95,232,216,117,62,5,90,176,82,167,52,160,153,174,168,105,146,91,248,81,79,249,97,138,133,170,245,229,132,61,5,149,224,246,194,213,61,12,109,44,136,235,95,219,133,220,27,93,36,93,124,180,81,141,152,220,170,163,229,197,124,171,232,48,70,251,106,119,150,20,16,49,119,247,42,132,36,76,254,124,177,66,175,9,1,39,92,127,195,171,198,34,2,64,144,179,72,40,151,110,89,229,42,125,33,238,16,220,228,51,203,8,1,68,145,253,133,118,93,163,129,22,13,248,65,12,4,63,101,210,70,170,138,203,14,246,54,194,195,27,107,241,175,35,171,49,52,106,121,45,36,152,85,215,132,78,167,34,18,167,245,152,133,134,170,120,182,10,146,191,37,2,205,47,125,20,203,44,88,81,32,150,223,220,218,238,254,30,212,167,221,115,156,82,226,137,220,221,97,3,139,202,33,9,27,26,126,40,215,25,126,9,82,208,49,217,14,161,81,196,61,60,87,254,213,194,81,216,161,151,209,166,222,230,24,128,117,140,92,4,203,254,170,253,249,88,90,112,226,18,44,122,39,158,158,56,69,204,159,5,179,51,197,233,139,216,102,226,206,248,15,78,112,214,126,67,28,40,38,98,190,178,206,67,94,245,254,160,101,176,32,157,26,132,83,252,228,87,242,32,127,160,112,210,224,133,149,115,41,30,16,200,69,89,81,77,144,12,106,182,73,54,28,53,195,28,216,179,179,136,35,141,102,234,177,240,34,186,106,145,245,3,84,48,251,157,245,11,217,111,227,138,42,67,114,211,177,37,103,16,71,152,72,117,123,36,213,202,56,124,227,84,8,45,229,149,165,214,69,244,169,55,68,62,94,104,228,74,205,123,222,17,7,172,158,227,74,206,149,67,175,171,251,185,121,151,223,63,35,229,32,49,190,209,120,137,69,213,214,19,150,187,177,28,12,158,153,126,149,171,167,234,120,129,109,32,157,180,75,66,56,233,115,127,230,157,32,34,143,156,31,230,168,174,125,118,195,249,243,165,81,246,10,144,15,103,139,55,173,7,59,136,69,172,54,132,165,140,78,77,230,33,169,129,188,71,209,109,161,8,57,57,199,143,31,164,43,58,130,1,110,145,31,229,13,46,149,94,244,106,76,238,105,107,1,183,177,10,61,225,94,185,116,58,183,95,225,22,119,19,248,28,13,123,125,108,158,64,184,77,245,153,162,217,227,208,41,185,211,235,41,153,181,54,166,165,11,154,55,21,184,209,192,249,44,164,160,29,229,159,82,156,198,241,183,114,83,137,186,151,148,31,21,197,216,145,32,13,50,22,241,137,39,71,28,142,160,215,107,221,45,202,104,227,110,186,12,150,145,240,51,49,44,196,115,224,238,149,189,134,99,67,241,62,157,240,114,247,195,26,200,141,97,147,249,23,150,174,10,13,219,81,73,58,242,96,250,243,15,49,218,58,230,104,252,175,150,123,86,185,84,90,198,6,36,0,99,72,28,166,238,115,231,171,249,179,71,174,68,156,227,17,198,79,73,142,99,144,20,80,62,80,191,142,46,71,9,243,6,8,214,116,72,190,106,161,19,185,100,9,187,64,94,86,203,174,156,245,222,95,54,30,148,19,11,50,112,96,61,237,159,173,7,154,127,175,79,48,97,89,78,126,66,171,204,158,195,27,226,205,222,157,89,251,90,125,37,212,27,97,3,141,247,175,50,121,7,187,68,196,181,202,167,189,57,84,81,222,23,27,84,130,176,98,66,240,207,18,23,28,163,163,194,45,37,129,202,170,97,189,0,81,238,0,39,199,163,35,211,206,247,65,29,116,242,67,102,235,13,136,232,230,114,146,187,7,254,142,26,121,16,237,5,160,201,114,94,178,199,95,212,241,45,112,180,188,72,86,114,189,155,149,149,163,210,112,101,12,69,225,75,202,223,28,242,90,215,156,169,224,245,135,128,92,148,217,131,208,255,25,135,117,136,5,104,185,249,161,228,214,16,105,204,9,182,135,153,220,101,244,160,207,58,182,118,185,240,57,245,123,13,112,182,106,229,220,90,29,86,215,96,147,232,2,55,131,225,137,68,245,89,141,252,97,3,129,155,216,223,98,116,45,78,85,141,161,74,215,7,150,171,225,59,78,221,152,236,14,117,100,208,158,86,13,185,124,87,157,111,40,187,182,124,173,71,173,23,199,52,155,190,134,11,23,64,25,215,39,115,231,173,77,72,114,54,252,116,178,59,221,106,241,119,254,30,226,241,204,233,113,197,96,146,0,41,67,3,231,126,12,218,202,22,171,114,249,176,134,160,19,216,31,229,118,226,62,242,126,126,42,127,130,68,218,218,81,202,106,217,191,25,177,82,97,81,36,232,137,58,90,216,190,117,235,20,194,144,76,178,27,213,13,208,18,29,118,126,49,98,203,179,128,237,100,32,242,189,212,6,210,210,188,161,205,13,124,119,13,215,112,41,183,176,215,168,210,182,111,1,115,2,239,141,8,177,124,112,48,197,2,239,11,99,4,36,77,69,47,244,19,153,61,19,2,96,176,7,112,122,131,169,25,189,116,171,49,12,121,162,79,154,74,251,50,233,182,63,180,224,118,49,253,21,20,16,31,144,184,93,174,231,244,183,13,49,225,189,211,73,185,49,110,142,25,226,45,176,233,204,74,33,16,205,88,131,92,157,170,175,68,170,61,53,116,165,16,27,182,160,181,87,241,15,151,85,107,76,167,129,25,172,127,184,138,153,222,228,125,64,44,45,32,12,227,148,106,152,83,240,166,54,235,32,190,12,242,164,123,189,53,194,141,104,43,202,110,4,168,119,245,232,179,178,198,1,224,87,86,160,31,19,140,233,102,191,204,4,98,138,163,191,106,24,213,47,208,82,137,132,131,16,253,84,25,144,90,159,148,16,196,84,166,61,160,101,229,227,93,118,59,87,66,16,128,59,96,131,250,20,184,150,205,91,227,201,62,35,79,180,172,173,85,197,106,153,238,229,60,204,65,193,230,94,101,177,134,6,165,53,171,142,208,155,2,11,4,202,127,54,17,142,117,227,121,128,204,192,147,147,92,189,5,224,148,72,18,83,101,126,124,228,153,242,123,229,247,92,221,6,73,227,250,87,167,194,129,187,73,38,185,109,217,240,193,88,50,178,180,151,54,197,187,137,190,166,233,1,103,204,88,31,127,185,29,65,1,29,254,223,14,83,167,215,114,248,30,173,89,173,187,69,5,105,117,15,106,94,173,63,227,25,230,190,136,168,177,175,107,91,126,254,34,188,25,118,48,12,226,130,153,162,57,47,181,212,79,160,97,64,157,246,90,53,43,149,76,102,15,195,107,58,242,84,172,29,81,198,113,81,251,138,182,154,111,30,171,129,56,17,45,214,153,112,117,203,174,40,38,234,236,32,4,112,225,26,187,195,246,252,9,218,69,160,223,178,54,148,81,8,134,151,75,248,63,224,240,48,75,250,221,85,46,100,50,3,70,64,102,111,160,155,233,59,147,184,57,61,6,126,79,176,16,185,94,166,33,135,78,42,75,140,208,140,44,153,187,64,103,119,160,236,16,239,74,218,219,212,207,110,53,30,76,248,40,111,98,44,20,113,204,233,109,135,96,107,39,163,203,125,45,157,152,71,239,175,174,159,147,80,111,93,38,253,228,154,225,181,101,12,241,127,65,49,189,5,85,151,237,213,143,14,104,138,54,52,27,4,132,67,35,156,86,157,73,16,229,222,245,110,79,165,179,56,179,53,218,229,100,58,87,149,48,231,64,63,115,67,3,172,6,186,115,154,60,53,214,152,149,89,234,37,143,82,255,64,28,183,93,112,39,70,185,57,0,199,9,61,175,219,41,76,37,176,82,125,65,53,160,214,105,62,153,244,222,96,205,6,178,85,41,240,113,0,96,149,38,3,195,18,152,41,246,3,103,29,110,134,30,101,75,46,103,199,184,20,230,8,55,120,4,229,168,35,43,7,28,161,143,87,27,87,79,255,186,44,195,158,155,181,119,81,172,217,107,95,98,55,243,186,66,105,48,224,123,232,84,156,20,10,156,208,204,52,34,228,136,97,242,200,246,211,67,202,40,241,91,92,253,9,54,72,131,221,106,178,32,44,182,4,225,193,37,20,249,249,231,10,206,18,71,254,221,187,172,88,204,6,127,138,102,7,208,75,147,219,199,177,79,36,170,101,207,177,109,95,143,217,41,199,80,183,201,2,254,12,55,23,198,14,255,69,245,138,155,129,227,167,168,130,156,135,14,96,93,48,99,143,107,126,92,117,143,112,108,193,228,84,13,41,186,27,172,92,201,149,116,19,112,197,116,209,128,102,1,55,152,177,28,37,34,50,83,41,199,74,178,59,111,67,118,35,252,36,33,87,28,170,17,215,47,90,154,124,137,15,14,211,59,75,59,30,77,0,49,37,225,191,87,101,127,214,227,160,99,174,234,82,148,235,16,241,219,147,170,127,221,250,116,39,218,156,72,227,172,55,0,79,188,76,51,222,232,24,36,62,94,154,3,61,230,146,114,253,0,128,58,253,90,72,211,242,38,39,133,153,161,119,105,195,152,225,208,105,140,80,217,186,196,157,21,116,230,116,139,25,159,143,118,128,77,201,238,247,228,15,168,4,133,148,21,148,12,44,241,7,115,17,129,176,202,46,130,122,129,235,141,223,85,21,199,65,181,169,52,174,161,153,62,25,164,115,213,89,138,199,103,79,200,165,135,249,244,27,209,178,240,129,211,61,9,111,157,147,119,36,119,255,110,130,84,49,210,225,247,100,26,121,127,163,160,26,79,99,24,77,65,32,178,109,36,27,253,173,110,183,11,14,211,57,130,254,124,104,165,219,31,70,97,14,194,39,61,26,141,125,228,126,194,184,101,160,204,106,128,144,106,103,171,18,246,129,220,85,172,151,123,5,73,155,192,175,91,157,239,61,237,116,170,65,233,56,19,49,114,168,190,3,214,53,250,90,213,244,88,101,30,229,248,124,15,71,141,27,172,235,21,129,211,72,61,172,112,170,128,135,96,196,221,255,27,176,105,188,183,121,33,37,149,53,131,226,233,29,167,234,218,109,53,185,152,36,248,53,61,235,78,21,201,214,210,163,12,251,187,45,188,137,126,127,237,92,234,91,240,225,38,194,57,213,251,237,171,30,99,52,14,49,84,101,252,237,7,166,122,114,32,107,32,207,239,136,168,178,12,11,241,233,230,146,132,18,83,233,41,172,17,6,161,42,113,87,40,255,185,1,146,128,5,240,126,131,71,42,54,124,205,2,122,71,30,222,229,40,134,142,102,97,239,151,177,1,230,231,49,123,219,28,129,91,152,112,13,154,81,197,226,255,112,158,178,177,55,181,108,138,185,245,29,186,21,73,188,209,154,200,89,116,235,198,144,36,87,248,22,7,200,122,7,148,44,42,87,140,238,204,95,231,252,0,136,0,22,39,70,123,125,165,113,227,172,146,163,128,158,36,52,91,19,36,245,27,150,138,141,11,67,239,224,65,24,116,101,7,39,46,142,172,164,243,148,0,33,226,59,47,203,137,156,241,66,250,157,30,204,101,143,134,98,238,155,226,25,184,136,219,89,100,193,11,143,71,139,243,230,151,0,249,1,78,26,32,93,104,157,67,97,164,248,86,124,146,93,74,222,228,167,55,53,100,135,216,109,13,64,37,106,177,200,200,182,92,251,69,31,243,89,80,198,14,132,203,72,103,28,104,217,24,97,223,113,11,29,178,191,210,46,162,255,68,99,8,237,213,162,152,193,183,121,203,19,108,182,29,86,26,192,103,220,103,205,154,179,197,9,22,73,127,175,146,38,119,210,0,24,180,21,245,215,204,91,186,119,138,183,239,15,155,231,248,133,39,24,101,144,236,10,230,54,174,227,73,21,110,10,160,241,232,131,14,212,127,232,59,122,65,146,54,163,9,189,190,121,88,170,62,194,14,204,152,245,38,131,37,91,81,72,114,29,115,239,182,56,44,156,159,177,180,82,160,93,97,86,183,236,50,95,85,39,71,181,225,152,143,63,123,117,34,44,109,160,166,229,240,91,138,102,54,180,173,44,50,80,42,124,7,50,124,211,239,21,94,197,185,239,213,107,142,64,95,124,125,17,180,97,189,101,52,48,19,112,12,70,9,212,177,54,118,66,84,147,236,248,26,124,95,103,135,254,124,49,112,186,99,120,90,8,194,191,88,57,242,65,61,10,104,246,197,252,19,159,58,194,75,173,242,103,8,115,84,69,238,149,26,15,159,182,141,132,119,70,29,53,20,143,46,163,204,6,236,59,45,185,172,89,119,83,38,144,36,222,96,151,26,99,195,163,170,133,92,159,214,53,150,116,90,176,69,145,130,15,172,140,217,215,101,163,115,161,65,101,8,7,183,113,213,134,58,175,130,251,143,173,248,168,135,60,159,30,194,68,208,119,120,2,40,178,227,247,161,77,47,136,46,244,163,72,65,158,25,225,195,61,132,182,204,177,186,200,81,2,65,105,212,72,94,203,232,217,182,123,251,228,160,1,161,204,123,20,37,1,77,208,179,45,149,181,122,102,190,123,213,164,231,41,216,130,234,248,208,251,252,220,84,209,67,47,61,220,5,142,162,26,236,121,142,248,132,255,65,122,203,196,102,191,187,2,195,127,255,193,92,49,91,186,154,39,156,29,211,172,49,104,245,114,153,223,211,199,249,35,130,160,128,0,152,176,183,20,236,113,193,108,26,255,11,237,102,133,245,94,115,114,10,89,229,214,221,99,149,30,99,37,246,10,26,26,39,92,123,170,73,211,127,227,54,30,86,133,159,112,225,91,148,100,174,149,75,143,14,140,20,44,64,212,5,243,8,116,63,30,97,42,123,20,73,212,85,207,83,122,27,251,233,84,10,17,236,232,83,200,127,119,143,163,204,220,167,59,231,20,106,186,222,191,8,40,234,21,25,180,13,116,250,152,224,174,75,3,205,38,173,215,236,151,185,121,254,244,154,239,17,53,106,164,61,49,116,216,118,94,150,35,181,26,238,66,49,211,221,132,146,166,115,39,136,36,205,230,179,31,197,51,148,165,109,38,70,37,148,52,44,209,250,98,58,246,225,103,198,101,26,25,196,207,8,166,21,88,252,175,253,10,88,107,157,19,225,61,12,246,221,37,239,186,167,137,142,135,222,128,174,62,95,216,38,141,157,45,232,97,217,173,203,234,116,129,69,206,189,94,221,12,54,139,186,247,184,16,200,121,244,104,8,7,35,111,47,188,10,140,92,73,143,206,203,72,122,184,20,102,197,130,64,150,63,96,239,8,132,111,217,84,91,198,32,43,100,138,241,15,160,42,190,253,193,184,164,124,29,210,96,67,224,221,182,29,218,129,149,29,128,174,98,88,88,125,56,40,255,120,5,0,87,174,42,150,90,112,201,183,169,19,57,195,191,12,58,244,235,132,25,145,72,146,214,8,125,100,135,12,5,102,97,248,174,24,159,90,33,43,187,6,61,212,241,225,190,219,252,197,123,129,164,108,123,55,230,4,153,166,105,234,15,85,216,23,56,32,3,41,110,68,146,172,133,202,98,41,7,47,152,35,255,168,106,241,226,222,77,244,52,185,65,252,227,32,66,38,11,172,60,28,28,103,84,1,1,205,182,190,28,189,102,253,43,1,191,148,116,10,227,18,81,93,80,239,157,232,215,180,163,165,161,109,177,71,150,244,144,208,160,110,22,174,60,206,43,103,121,55,103,114,115,173,238,13,10,227,251,41,176,216,158,229,216,55,234,128,128,20,167,106,181,86,163,130,215,110,149,191,10,227,215,8,214,154,178,181,15,19,0,247,250,97,74,43,157,55,94,174,41,41,9,199,97,20,91,32,18,10,43,98,240,247,203,20,250,117,160,44,229,202,187,64,54,124,15,184,169,129,27,160,240,26,61,255,60,166,60,144,209,84,55,187,186,168,13,124,125,29,17,100,249,227,62,205,78,179,163,168,139,168,21,38,83,239,151,74,43,66,2,92,72,71,94,216,134,238,20,45,158,213,164,73,57,80,47,198,184,130,223,227,71,132,133,235,177,85,174,142,124,172,200,54,229,40,126,60,76,92,216,153,56,241,174,66,141,90,226,3,30,68,234,71,187,163,112,146,255,22,143,170,204,3,127,179,81,139,160,37,77,246,128,220,196,158,153,73,177,65,199,119,29,197,144,130,248,206,155,253,108,213,124,7,223,221,162,146,134,242,65,99,162,107,120,247,214,207,96,150,169,131,208,218,221,28,24,112,208,23,1,130,142,232,56,104,45,33,158,95,255,123,31,74,76,120,178,155,213,6,195,164,8,8,69,241,197,127,83,169,21,167,19,94,143,252,33,159,248,241,170,153,147,1,149,199,201,131,170,79,236,212,209,143,107,98,24,123,56,33,193,85,247,64,225,135,210,78,145,57,16,145,71,170,20,133,87,235,4,166,239,100,82,235,81,50,223,9,193,52,49,86,129,190,196,82,165,107,63,115,161,98,33,20,193,29,42,151,205,252,124,72,245,48,181,67,7,13,21,127,59,226,188,144,129,112,244,192,121,213,80,42,196,1,13,107,108,78,0,40,121,225,148,237,234,209,216,238,9,147,226,254,96,89,212,72,193,106,75,135,74,227,67,255,92,191,81,188,124,226,149,152,142,15,159,195,238,114,55,255,166,157,230,59,148,170,166,151,65,213,104,253,253,112,150,82,147,137,27,214,100,247,65,81,92,47,86,217,7,45,120,81,130,31,236,243,76,78,3,45,105,172,220,71,48,220,94,196,249,163,193,133,50,236,205,20,55,2,63,14,127,69,113,212,204,12,58,79,89,86,29,61,199,201,64,149,6,144,182,150,129,31,18,167,120,248,82,107,25,143,128,27,161,28,25,153,183,217,238,78,186,106,92,27,202,219,165,96,0,216,234,169,73,101,39,182,113,217,240,170,116,172,221,250,233,48,49,242,83,227,92,181,184,72,230,180,21,15,108,135,25,38,153,25,124,227,26,149,73,236,39,211,244,149,58,183,132,26,223,219,174,144,117,233,219,165,205,157,159,222,184,52,47,241,201,123,65,24,44,55,215,177,168,250,179,115,190,227,123,158,163,179,224,69,196,66,207,254,243,101,221,193,140,250,4,28,222,52,96,138,160,33,218,64,118,214,234,201,152,148,91,178,111,107,144,142,6,182,102,72,188,34,213,181,26,223,58,255,103,81,17,47,169,11,245,224,123,148,215,237,186,107,75,152,90,202,166,22,149,197,5,246,238,78,76,229,106,199,94,127,195,0,45,82,6,159,103,96,138,231,71,46,107,59,216,39,43,12,221,27,214,56,155,145,66,187,169,250,235,78,211,179,239,183,198,163,93,5,196,24,174,143,225,106,139,89,98,13,127,207,184,194,30,1,165,198,169,8,197,118,86,163,221,138,23,209,61,116,79,99,233,43,130,60,244,85,229,243,172,123,148,200,120,192,127,211,52,11,159,41,95,212,230,188,169,156,137,29,212,12,148,168,148,133,243,44,241,139,127,24,246,220,227,125,209,97,60,52,162,192,146,49,161,92,138,112,189,128,59,126,125,46,207,60,79,231,174,152,209,68,223,205,2,38,14,91,116,159,255,28,27,178,248,164,104,158,79,69,214,234,157,12,75,163,83,253,245,202,61,213,176,6,197,230,29,208,166,253,194,254,235,29,141,241,70,249,15,62,0,148,163,135,52,122,40,96,87,31,179,152,51,216,133,184,122,198,203,60,115,218,191,193,16,178,25,148,252,112,104,103,252,36,92,221,28,179,43,199,198,151,128,100,252,217,161,249,34,201,172,118,52,180,252,104,7,223,44,116,102,212,21,40,224,184,55,163,210,21,207,161,239,51,54,155,41,133,18,67,48,3,165,130,251,4,79,214,57,72,130,157,212,144],yX=[0,1,3,4,6,7,9,10,12,13,15,16,18,19,21,22,24,26,29,31,34,36,39,41,44,46,49,51,54,56,59,61,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,107,109,110,111,112,113,114,116,117,118,119,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,165,166,168,169,170,171,172,173,175,176,177,178,179,180,182,183,184,185,186,187,188,190,191,192,193,194,195,197,198,199,200,201,202,204,205,206,207,208,209,210,212,213,214,215,216,217,219,220,221,222,223,224,226,226,226,227,227,227,228,228,228,229,229,229,230,230,231,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],wX=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,42,43,44,46,47,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,68,69,71,72,73,74,76,77,78,79,81,82,83,84,86,87,88,90,91,92,93,95,96,97,98,100,101,102,103,105,106,107,108,110,111,112,113,115,116,117,118,120,121,122,124,125,126,127,129,130,131,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,152,154,155,156,158,159,160,161,163,164,165,166,168,169,170,171,173,174,175,176,178,179,180,181,183,184,185,186,188,189,190,192,193,194,195,197,198,199,200,202,203,204,205,207,208,209,210,212,213,214,215,217,218,219,220,222,223,224,226,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],bX=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,74,76,77,78,80,81,83,84,85,87,88,89,91,92,94,95,96,98,99,100,102,103,105,106,107,109,110,111,113,114,116,117,118,120,121,122,124,125,127,128,129,131,132,133,135,136,138,139,140,142,143,144,146,147,149,150,151,153,154,155,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193,194,195,195,196,197,197,198,199,199,200,201,201,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,213,213,214,215,215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,227,227,228,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,240,241,241,242,243,243,244,245,245,246,247,247,248,249,249,250,251,251,252,253,253,254,255];class NX extends mX{constructor(e,t,i,r){super(e,RX,i,r),MN(this,\"inputTexture\",void 0),MN(this,\"lightLevel\",.1),MN(this,\"rednessLevel\",.5),MN(this,\"mskin_he_max\",175/180*3.141593),MN(this,\"mskin_he_min\",115/180*3.141593),MN(this,\"mskin_hc_max\",173/180*3.141593),MN(this,\"mskin_hc_min\",116/180*3.141593),MN(this,\"mskin_hc_axis\",2.04203545),MN(this,\"mfacts_rotate_c\",0),MN(this,\"mfacts_rotate_le\",0),MN(this,\"mfacts_rotate_ge\",0),MN(this,\"tab_addr\",null),MN(this,\"lutTextures\",[]),this.inputTexture=t,this.init()}setUniforms(){const e=this.gl.getUniformLocation(this.program,\"u_flipY\"),t=this.gl.getUniformLocation(this.program,\"u_denoiseLevel\");this.gl.uniform1f(t,this.denoiseLevel),this.gl.uniform1f(e,1);const i=this.gl.getUniformLocation(this.program,\"light\");this.gl.uniform1f(i,this.lightLevel);const r=this.gl.getUniformLocation(this.program,\"redness\");this.gl.uniform1f(r,this.rednessLevel);const n=this.gl.getUniformLocation(this.program,\"skin_he_max\"),o=this.gl.getUniformLocation(this.program,\"skin_he_min\"),s=this.gl.getUniformLocation(this.program,\"skin_hc_max\"),a=this.gl.getUniformLocation(this.program,\"skin_hc_min\"),c=this.gl.getUniformLocation(this.program,\"skin_hc_axis\"),d=this.gl.getUniformLocation(this.program,\"facts_rotate_c\"),u=this.gl.getUniformLocation(this.program,\"facts_rotate_le\"),h=this.gl.getUniformLocation(this.program,\"facts_rotate_ge\");this.gl.uniform1f(n,this.mskin_he_max),this.gl.uniform1f(o,this.mskin_he_min),this.gl.uniform1f(s,this.mskin_hc_max),this.gl.uniform1f(a,this.mskin_hc_min),this.gl.uniform1f(c,this.mskin_hc_axis),this.gl.uniform1f(d,this.mfacts_rotate_c),this.gl.uniform1f(u,this.mfacts_rotate_le),this.gl.uniform1f(h,this.mfacts_rotate_ge);const A=this.gl.getUniformLocation(this.program,\"u_originImage\");this.gl.activeTexture(this.gl.TEXTURE2),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.uniform1i(A,2);const l=[\"lighten_lut\"],p=[this.gl.TEXTURE3];for(let e=0;e<l.length;e++){const t=this.gl.getUniformLocation(this.program,l[e]);this.gl.activeTexture(p[e]),this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[e]),this.gl.uniform1i(t,e+3)}}setParameters(e){void 0!==e.denoiseLevel&&(this.denoiseLevel=e.denoiseLevel),void 0!==e.lightLevel&&(this.lightLevel=e.lightLevel),void 0!==e.rednessLevel&&(this.rednessLevel=e.rednessLevel,this.updateRedness(this.rednessLevel)),e.lighteningContrastLevel&&this.updateLut(e.lighteningContrastLevel)}init(){this.tab_addr=new Uint8Array(wX);const e=[this.tab_addr],t=[256],i=[1];for(let r=0;r<e.length;r++){const n=this.gl.createTexture();if(!n)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"create lut texture failed\");this.gl.bindTexture(this.gl.TEXTURE_2D,n),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.LUMINANCE,t[r],i[r],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,e[r]),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.lutTextures.push(n)}}updateRedness(e){const t=3.141593;let i,r,n=e,o=n;n>1&&(n=1),n<0&&(n=0),o>1&&(o=1),o<0&&(o=0),this.mfacts_rotate_c=.8*n,o<.8&&(o=0),this.mskin_he_max=175/180*t,this.mskin_hc_max=173/180*t,this.mskin_he_min=(115-4*o)/180*t,this.mskin_hc_min=(116-4*o)/180*t,this.mskin_hc_axis=(117-4*o)/180*t,this.mskin_hc_axis<this.mskin_hc_min&&(this.mskin_hc_axis=this.mskin_hc_min),this.mskin_hc_min<t/2&&(this.mskin_hc_min=t/2),this.mskin_hc_axis<t/2&&(this.mskin_hc_axis=t/2),this.mskin_he_min<t/2&&(this.mskin_he_min=t/2),this.mskin_hc_max>t&&(this.mskin_hc_max=t),this.mskin_hc_axis>t&&(this.mskin_hc_axis=t),this.mskin_he_max>t&&(this.mskin_he_max=t),i=this.mskin_he_max-this.mskin_hc_max,r=this.mskin_hc_max-this.mskin_hc_axis,this.mfacts_rotate_ge=i>.01?this.mfacts_rotate_c*r/i:this.mfacts_rotate_c,i=this.mskin_hc_min-this.mskin_he_min,r=this.mskin_hc_axis-this.mskin_hc_min,this.mfacts_rotate_le=i>.01?this.mfacts_rotate_c*r/i:this.mfacts_rotate_c}updateLut(e){let t=null;if(0===e&&(t=wX),1===e&&(t=bX),2===e&&(t=yX),!t)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"invalid ylut_table value:\"+e);this.tab_addr=new Uint8Array(t);const i=[this.tab_addr],r=[256],n=[1];for(let e=0;e<i.length;e++)this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[e]),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.LUMINANCE,r[e],n[e],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,i[e])}}class OX{constructor(){MN(this,\"gl\",null),MN(this,\"canvas\",null),MN(this,\"programs\",[]),MN(this,\"commonProgram\",null),MN(this,\"inputTexture\",null),MN(this,\"outputTextures\",[]),MN(this,\"fbos\",[]),MN(this,\"originalFrameWidth\",0),MN(this,\"originalFrameHeight\",0),MN(this,\"enableBeauty\",!1),MN(this,\"denoiseLevel\",5),MN(this,\"lightLevel\",.35),MN(this,\"rednessLevel\",.5),MN(this,\"lighteningContrastLevel\",1)}setEnableBeauty(e){this.enableBeauty=!!e}init(e,t,i){if(!wB().supportWebGL)throw new QD(xD.NOT_SUPPORTED,\"your browser is not support webGL\");if(this.gl=i.getContext(\"webgl\"),!this.gl)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"can not get webgl context\");if(this.initGL(e,t),!this.inputTexture)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"can not find input texture\");this.canvas=i,this.programs.push(new fX(this.gl)),this.programs.push(new _X(this.gl,e,t)),this.programs.push(new SX(this.gl,e,t)),this.programs.push(new TX(this.gl,e,t)),this.programs.push(new NX(this.gl,this.inputTexture,e,t)),this.commonProgram=this.programs[0].program,this.setDenoiseLevel(this.denoiseLevel),this.setLightLevel(this.lightLevel),this.setRednessLevel(this.rednessLevel),this.setContrastLevel(this.lighteningContrastLevel)}render(e){if(!this.gl||!this.commonProgram||!this.canvas)return void JD.warning(\"video effect manager is not init!\");let t=0;if(this.originalFrameHeight===e.videoWidth&&this.originalFrameWidth===e.videoHeight)t=2;else if(this.originalFrameHeight!==e.videoHeight||this.originalFrameWidth!==e.videoWidth){if(JD.debug(\"beauty effect: resolution changed \".concat(this.originalFrameWidth,\"x\").concat(this.originalFrameHeight,\" -> \").concat(e.videoWidth,\"x\").concat(e.videoHeight)),0===e.videoHeight||0===e.videoWidth)return void JD.debug(\"beauty effect: skip 0 resolution frame\");this.canvas.width=e.videoWidth,this.canvas.height=e.videoHeight,e.setAttribute(\"width\",e.videoWidth.toString()),e.setAttribute(\"height\",e.videoHeight.toString()),this.release(),this.init(e.videoWidth,e.videoHeight,this.canvas)}this.gl.viewport(0,0,e.videoWidth,e.videoHeight),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,e);const i=this.enableBeauty?this.programs.length-1:0;for(let e=0;e<=i;e++){const i=this.programs[e].program;this.gl.useProgram(i);const r=this.gl.getUniformLocation(i,\"u_image\");this.programs[e].setUniforms(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fbos[t+e%2]),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6),this.gl.activeTexture(this.gl.TEXTURE0),this.gl.bindTexture(this.gl.TEXTURE_2D,this.outputTextures[t+e%2]),this.gl.uniform1i(r,0)}this.gl.useProgram(this.commonProgram);const r=this.gl.getUniformLocation(this.commonProgram,\"u_flipY\");this.gl.uniform1f(r,-1),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6)}setDenoiseLevel(e){this.programs.forEach(t=>{t instanceof mX&&t.setParameters({denoiseLevel:e})}),this.denoiseLevel=e}setLightLevel(e){this.programs.forEach(t=>{t instanceof mX&&t.setParameters({lightLevel:e})}),this.lightLevel=e}setRednessLevel(e){this.programs.forEach(t=>{t instanceof mX&&t.setParameters({rednessLevel:e})}),this.rednessLevel=e}setContrastLevel(e){this.programs.forEach(t=>{t instanceof mX&&t.setParameters({lighteningContrastLevel:e})}),this.lighteningContrastLevel=e}setSize(e,t){this.programs.forEach(i=>{i instanceof mX&&i.setSize(e,t)})}release(){this.gl=null,this.commonProgram=null,this.inputTexture=null,this.programs=[],this.outputTextures=[],this.fbos=[]}initGL(e,t){if(!this.gl)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"can not find webgl context\");this.inputTexture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);for(let i=0;i<4;i++){const r=this.gl.createTexture();if(!r)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"create texture failed\");this.gl.bindTexture(this.gl.TEXTURE_2D,r),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),i<2?this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,e,t,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null):this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);const n=this.gl.createFramebuffer();if(!n)throw new QD(xD.WEBGL_INTERNAL_ERROR,\"create frame buffer failed\");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,n),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,r,0),this.outputTextures.push(r),this.fbos.push(n)}this.gl.viewport(0,0,e,t),this.originalFrameWidth=e,this.originalFrameHeight=t}}class DX{constructor(){MN(this,\"targetFrameRate\",0),MN(this,\"recordedFrameCount\",0),MN(this,\"recordingTime\",2),MN(this,\"recordID\",void 0)}async startRecordBeautyEffectOutput(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;if(this.recordID)throw new QD(xD.UNEXPECTED_ERROR,\"another beauty effect recording is in progress\");const i=_K(6,\"\");return this.recordID=i,this.targetFrameRate=e,this.recordedFrameCount=0,this.recordingTime=t,await mK(1e3*this.recordingTime),this.recordID!==i?(this.recordID=void 0,!0):(this.recordID=void 0,this.recordedFrameCount<this.targetFrameRate*this.recordingTime/2?(JD.warning(\"detect beauty effect overload, current framerate\",this.recordedFrameCount/2),!1):(JD.debug(\"beauty effect current framerate\",this.recordedFrameCount/2),!0))}stopRecordBeautyEffectOutput(){this.targetFrameRate=0,this.recordedFrameCount=0,this.recordID=void 0}addFrame(){this.recordID&&(this.recordedFrameCount+=1)}}class PX extends uX.exports.VideoProcessor{constructor(){super(),MN(this,\"name\",\"BeautyProcessor\"),MN(this,\"fps\",15),MN(this,\"canvas\",void 0),MN(this,\"video\",void 0),MN(this,\"manager\",void 0),MN(this,\"overloadDetector\",new DX),MN(this,\"stopChromeBackgroundLoop\",null),MN(this,\"onOverload\",void 0),MN(this,\"stopLoop\",void 0),MN(this,\"lastRenderTime\",0),this.fps=30,this.manager=new OX,this._enabled=!1}async onEnableChange(e){this.manager.setEnableBeauty(e),this.context&&this.inputTrack&&(e?await this.startEffect(this.inputTrack,this.context):await this.stopEffect(this.inputTrack,this.context))}async setBeautyEffectOptions(e){if(function(e){void 0!==e.smoothnessLevel&&UL(e.smoothnessLevel,\"options.smoothnessLevel\",0,1,!1),void 0!==e.lighteningLevel&&UL(e.lighteningLevel,\"options.lighteningLevel\",0,1,!1),void 0!==e.rednessLevel&&UL(e.rednessLevel,\"options.rednessLevel\",0,1,!1),void 0!==e.lighteningContrastLevel&&ML(e.lighteningContrastLevel,\"options.lighteningContrastLevel\",[0,1,2])}(e),void 0!==e.smoothnessLevel){const t=Math.max(.1,10*e.smoothnessLevel);this.manager.setDenoiseLevel(t)}if(void 0!==e.lighteningLevel){const t=Math.max(.1,e.lighteningLevel/2);this.manager.setLightLevel(t)}if(void 0!==e.rednessLevel){const t=Math.max(.01,e.rednessLevel);this.manager.setRednessLevel(t)}if(void 0!==e.lighteningContrastLevel){const t=e.lighteningContrastLevel;this.manager.setContrastLevel(t)}}async onTrack(e,t){var i;this.video&&this.enabled&&(null===(i=this.stopLoop)||void 0===i||i.call(this),await this.stopEffect(e,t));await this.startEffect(e,t)}async startEffect(e,t){if(!this.enabled)return;const i=oN(),r=await this.renderWithWebGL(e);this.output(r,t),JD.info(\"start video effect, output:\",this.outputTrack),this.overloadDetector.startRecordBeautyEffectOutput(this.fps).then(e=>{e||this.onOverload&&this.onOverload()});let n=!1;this.stopLoop=()=>{n=!0};const o=()=>{this.enabled&&!n&&requestAnimationFrame(o);const e=Date.now(),t=1e3/this.fps,i=this.lastRenderTime?e-this.lastRenderTime:t;i<t||(this.lastRenderTime=e-(i-t),this.video&&this.video.paused&&this.video.play(),this.enabled&&this.video&&(this.manager.render(this.video),this.outputTrack&&this.outputTrack.requestFrame&&this.outputTrack.requestFrame(),this.overloadDetector.addFrame()))};requestAnimationFrame(o),i.name===tN.CHROME&&document.addEventListener(\"visibilitychange\",()=>{document.hidden?this.stopChromeBackgroundLoop=Nj(()=>{this.enabled&&this.video&&this.manager.render(this.video),this.outputTrack&&this.outputTrack.requestFrame&&this.outputTrack.requestFrame(),this.overloadDetector.addFrame()},this.fps):this.stopChromeBackgroundLoop&&(this.stopChromeBackgroundLoop(),this.stopChromeBackgroundLoop=null)},!1)}async renderWithWebGL(e){this.canvas&&(this.canvas.remove(),this.canvas=void 0),this.video&&(this.video.remove(),this.video=void 0),this.canvas=document.createElement(\"canvas\"),this.video=document.createElement(\"video\"),this.video.setAttribute(\"autoplay\",\"\"),this.video.setAttribute(\"muted\",\"\"),this.video.muted=!0,this.video.setAttribute(\"playsinline\",\"\"),this.video.setAttribute(\"style\",\"display:none\"),this.video.srcObject=new MediaStream([e]);const t=new l_(e=>{const t=()=>{this.video&&this.video.removeEventListener(\"playing\",t),e(void 0)};this.video&&this.video.addEventListener(\"playing\",t)});this.video.play(),await t;const i=e.getSettings(),r=i.width||this.video.videoWidth,n=i.height||this.video.videoHeight;if(i.frameRate&&this.fps!==i.frameRate&&(this.fps=i.frameRate,JD.debug(\"beauty video processor: set fps to\",this.fps)),JD.debug(\"beauty video processor: width \".concat(r,\" height \").concat(n)),!r||!n)throw new QD(xD.BEAUTY_PROCESSOR_INTERNAL_ERROR,\"can not get track resolution\");this.canvas.width=r,this.canvas.height=n,this.video.setAttribute(\"width\",r.toString()),this.video.setAttribute(\"height\",n.toString()),this.manager.init(r,n,this.canvas);const o=wB();return this.canvas.captureStream(o.supportRequestFrame?0:this.fps).getVideoTracks()[0]}async stopEffect(e,t){JD.info(\"stop video effect\"),this.overloadDetector.stopRecordBeautyEffectOutput(),this.manager.release(),this.canvas&&this.canvas.remove(),this.video&&this.video.remove(),this.canvas=void 0,this.video=void 0,this.output(e,t)}}function LX(e){const t={};if(e.facingMode&&(t.facingMode=e.facingMode),e.cameraId&&(t.deviceId={exact:e.cameraId}),!e.encoderConfig)return t;const i=wP(e.encoderConfig);return t.width=i.width,t.height=i.height,!RN()&&i.frameRate&&(t.frameRate=i.frameRate),oN().name===tN.EDGE&&\"object\"==typeof t.frameRate&&(t.frameRate.max=60),gN()&&(t.frameRate={ideal:30,max:30}),t}function kX(e){const t={};e.screenSourceType&&(t.mediaSource=e.screenSourceType),e.extensionId&&lN()&&(t.extensionId=e.extensionId),e.electronScreenSourceId&&(t.sourceId=e.electronScreenSourceId);const i=e.encoderConfig?bP(e.encoderConfig):null;return t.mandatory={chromeMediaSource:\"desktop\",maxWidth:i?i.width:void 0,maxHeight:i?i.height:void 0},i&&i.frameRate&&(\"number\"==typeof i.frameRate?(t.mandatory.maxFrameRate=i.frameRate,t.mandatory.minFrameRate=i.frameRate):(t.mandatory.maxFrameRate=i.frameRate.max||i.frameRate.ideal||i.frameRate.exact||void 0,t.mandatory.minFrameRate=i.frameRate.min||i.frameRate.ideal||i.frameRate.exact||void 0),t.frameRate=i.frameRate),i&&i.width&&(t.width=i.width),i&&i.height&&(t.height=i.height),t}function BX(e){const t={};if(RN()||(void 0!==e.AGC&&(t.autoGainControl=e.AGC),void 0!==e.AEC&&(t.echoCancellation=e.AEC),void 0!==e.ANS&&(t.noiseSuppression=e.ANS,lN()&&e.ANS&&(t.googHighpassFilter=e.ANS))),e.encoderConfig){const i=DP(e.encoderConfig);t.channelCount=i.stereo?2:1,t.sampleRate=i.sampleRate,t.sampleSize=i.sampleSize}return e.microphoneId&&(t.deviceId={exact:e.microphoneId}),wN()&&(t.sampleRate=void 0),t}var MX,UX;!function(e){e.COVERED=\"COVERED\",e.POSITION=\"POSITION\",e.SIZE=\"SIZE\",e.STYLE=\"STYLE\"}(MX||(MX={})),function(e){e.UNMOUNTED=\"UNMOUNTED\",e.INVALID_HTML_ELEMENT=\"INVALID_HTML_ELEMENT\"}(UX||(UX={}));var xX,QX,FX,VX,jX,GX,KX,HX,WX,YX,JX,qX,XX,zX,ZX,$X,ez,tz,iz,rz,nz,oz,sz,az,cz,dz,uz=new class{constructor(){MN(this,\"_clientSize\",null),MN(this,\"getClientWidth\",()=>document.documentElement?document.documentElement.clientWidth:document.body.clientWidth),MN(this,\"getClientHeight\",()=>document.documentElement?document.documentElement.clientHeight:document.body.clientHeight),MN(this,\"getStyle\",e=>window.getComputedStyle(e,null)),MN(this,\"checkCssVisibleProperty\",e=>{let t=!0;const i=this.getStyle(e),{display:r,visibility:n,opacity:o,filter:s}=i;if((\"none\"===r||[\"hidden\",\"collapse\"].includes(n)||Number(o)<.1)&&(t=!1),!t)return!1;if(s){s.split(\" \").filter(e=>{const t=e.split(\"(\")[0];return[\"brightness\",\"blur\",\"opacity\"].includes(t)}).map(e=>{const[t,i]=e.split(/\\(|\\)/);return[t,Number(i.match(/^[0-9\\.]+/))]}).forEach(e=>{const[i,r]=e;switch(i){case\"brightness\":(r<.1||r>3)&&(t=!1);break;case\"blur\":r>3&&(t=!1);break;case\"opacity\":r<.1&&(t=!1)}})}return t}),MN(this,\"checkPropertyUpToAllParentNodes\",(e,t)=>{let i=!0,r=!0;const n=e=>t(e);let o=e;for(;o&&r;){n(o)||(i=!1,r=!1),o=o.parentElement,o||(r=!1)}return i}),MN(this,\"checkActualCssVisibleIncludeInherit\",e=>this.checkPropertyUpToAllParentNodes(e,this.checkCssVisibleProperty)),MN(this,\"getSizeAboutClient\",e=>{const{width:t,height:i,left:r,right:n,top:o,bottom:s}=e.getBoundingClientRect(),a=this.getClientWidth(),c=this.getClientHeight();return{width:t,height:i,left:r,right:n,top:o,bottom:s,clientWidth:a,clientHeight:c,clientMin:Math.min(a,c)}}),MN(this,\"checkActualSize\",()=>{const{width:e,height:t,clientMin:i}=this._clientSize;return this.checkSizeIsVisible(e,t,i)}),MN(this,\"elementFromPoint\",(e,t)=>document.elementFromPoint?document.elementFromPoint(e,t):null),MN(this,\"checkCoverForAPoint\",(e,t,i)=>{const r=this.elementFromPoint(e,t);return null!==r&&r!==i}),MN(this,\"getPointPositionList\",()=>{const{width:e,height:t,left:i,top:r}=this._clientSize,n=e/6,o=t/6,s=[],a=10**6;for(let e=0;e<5;e++)for(let t=0;t<5;t++){const c=(i*a+(0===e?.1:4===e?(n*e*a-1e5)/a:n*e)*a)/a,d=(r*a+(0===t?.1:4===t?(o*t*a-1e5)/a:o*t)*a)/a;s.push({x:c,y:d})}return[...s]}),MN(this,\"checkElementCover\",e=>this.getPointPositionList().map(t=>this.checkCoverForAPoint(t.x,t.y,e)).filter(e=>!!e).length>6),MN(this,\"checkSizeIsVisible\",(e,t,i)=>(e>50||i/e<=10)&&(t>50||i/t<=10)),MN(this,\"checkSizeOfPartInClient\",()=>{const{left:e,right:t,top:i,bottom:r,clientHeight:n,clientWidth:o,clientMin:s}=this._clientSize;let a,c,d,u;if(e<0)a=0;else{if(!(e<o))return!1;a=e}if(t<0)return!1;if(c=t<o?t:o,i<0)d=0;else{if(!(i<n))return!1;d=i}if(r<0)return!1;u=r<n?r:n;const h=c-a,A=u-d;return this.checkSizeIsVisible(h,A,s)}),MN(this,\"returnHiddenResult\",e=>(this._clientSize=null,{visible:!1,reason:e})),MN(this,\"checkOneElementVisible\",e=>{if(e instanceof HTMLElement){if(this.checkElementIsMountedOnDom(e)){if(this.checkActualCssVisibleIncludeInherit(e)){if(this._clientSize=this.getSizeAboutClient(e),this.checkElementCover(e))return this.returnHiddenResult(MX.COVERED);{const e=this.checkActualSize(),t=this.checkSizeOfPartInClient();return e&&!t?this.returnHiddenResult(MX.POSITION):e?(this._clientSize=null,{visible:!0}):this.returnHiddenResult(MX.SIZE)}}return this.returnHiddenResult(MX.STYLE)}return this.returnHiddenResult(UX.UNMOUNTED)}return this.returnHiddenResult(UX.INVALID_HTML_ELEMENT)}),MN(this,\"checkElementIsMountedOnDom\",e=>this.checkPropertyUpToAllParentNodes(e,e=>\"HTML\"!==e.nodeName.toUpperCase()?null!==e.parentElement:!!document.documentElement))}};function hz(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function Az(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?hz(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):hz(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let lz=(xX=mP(\"LocalVideoTrack\",\"getTrackId\"),QX=Zj(),FX=mj(\"LocalVideoTrack\",\"_enabledMutex\"),VX=lj({className:\"LocalVideoTrack\"}),jX=Zj(),GX=mj(\"LocalVideoTrack\",\"_enabledMutex\"),KX=lj({className:\"LocalVideoTrack\"}),HX=Zj(),WX=Zj(),YX=Zj(),JX=Zj(),qX=Zj(),XX=Zj(),zX=Zj(),ZX=Zj(),$X=Zj(),xX((VV((tz=class e extends Ij{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==qL.PLAYING)}constructor(e,t,i,r,n,o){super(e,n),MN(this,\"trackMediaType\",\"video\"),MN(this,\"_player\",void 0),MN(this,\"_videoBeautyProcessor\",void 0),MN(this,\"_videoVisibleTimer\",null),MN(this,\"_previousVideoVisibleStatus\",void 0),MN(this,\"_clearPreviousVideoVisibleStatus\",()=>this._previousVideoVisibleStatus=void 0),MN(this,\"_encoderConfig\",void 0),MN(this,\"_scalabiltyMode\",{numSpatialLayers:1,numTemporalLayers:1}),MN(this,\"_optimizationMode\",void 0),MN(this,\"_videoHeight\",void 0),MN(this,\"_videoWidth\",void 0),MN(this,\"_forceBitrateLimit\",void 0),MN(this,\"_enabled\",!0),MN(this,\"processorDestination\",void 0),MN(this,\"processorContext\",void 0),this.updateMediaStreamTrackResolution(),this._encoderConfig=t,this._scalabiltyMode=i,this._optimizationMode=r,this._hints=o||[],-1===this._hints.indexOf($k.SCREEN_TRACK)&&this.updateBitrateFromProfile(),this.processorContext=new FG(this.getTrackId(),\"local\"),this.processorDestination=new QG(this.processorContext),this.bindProcessorDestinationEvents()}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_VIDEO_TRACK_PLAY,options:[this.getTrackId(),\"string\"==typeof e?e:\"HTMLElement\",t]});if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(JD.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),hP(\"warning\",this,'can not find \"#'.concat(e,'\" element, use document.body')),e=document.body)}JD.debug(\"[\".concat(this.getTrackId(),\"] start video playback\"),JSON.stringify(t)),gP(\"debug\",this,\"play\",t);const r=Az(Az(Az({},this._getDefaultPlayerConfig()),t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(r):(this._player=new cX(r),this._player.updateVideoTrack(this._mediaStreamTrack)),this._player.play(),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval(()=>{try{const e=this.getVideoElementVisibleStatus();this.emit(iB.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}},LP(\"CHECK_VIDEO_VISIBLE_INTERVAL\")),i.onSuccess()}stop(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return e.onSuccess();this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,JD.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")),gP(\"debug\",this,\"stop\"),e.onSuccess()}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(JD.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),gP(\"info\",this,\"setEnabled\",e),!e){this._originMediaStreamTrack.enabled=!1;try{await yK(this,Zk.NEED_DISABLE_TRACK,this)}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}return t||(this._enabled=!1),JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\")),void gP(\"info\",this,\"setEnabled\",e,\"success\")}this._originMediaStreamTrack.enabled=!0;try{await yK(this,Zk.NEED_ENABLE_TRACK,this)}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled to true error\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),gP(\"info\",this,\"setEnabled\",e,\"success\"),t||(this._enabled=!0)}async setMuted(e){e!==this._muted&&(this.stateCheck(\"muted\",e),this._muted=e,this._originMediaStreamTrack.enabled=!e,JD.debug(\"[\".concat(this.getTrackId(),\"] start set muted: \").concat(e)),gP(\"debug\",this,\"setMuted\",e),e?await yK(this,Zk.NEED_MUTE_TRACK,this):await yK(this,Zk.NEED_UNMUTE_TRACK,this))}getStats(){kK(()=>{JD.warning(\"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead\"),hP(\"warning\",this,\"[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead\")},\"localVideoTrackGetStatsWarning\");const e=wK(this,Zk.GET_STATS);return e||Az({},Nk)}async setBeautyEffect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_VIDEO_TRACK_BEAUTY,options:[this.getTrackId(),e,t]});if(e||this._videoBeautyProcessor){if(dN()===eN.IOS||dN()===eN.ANDROID){const e=new QD(xD.INVALID_OPERATION,\"can not enable beauty effect on mobile device\");throw i.onError(e),e}if(!this._enabled&&e){const e=new QD(xD.TRACK_IS_DISABLED,\"can not enable beauty effect when track is disabled\");throw i.onError(e),e}if(JD.info(\"[\".concat(this.getTrackId(),\"] start setBeautyEffect\"),e,JSON.stringify(t)),gP(\"info\",this,\"setBeautyEffect\",[e,t]),this._videoBeautyProcessor||e){try{if(!this._videoBeautyProcessor)if(this._videoBeautyProcessor=new PX,this.processor){const e=this.processor;this.pipe(this._videoBeautyProcessor).pipe(e)}else this.pipe(this._videoBeautyProcessor).pipe(this.processorDestination);await this._videoBeautyProcessor.setBeautyEffectOptions(t),e?await this._videoBeautyProcessor.enable():await this._videoBeautyProcessor.disable()}catch(r){throw JD.error(\"[\".concat(this.getTrackId(),\"] setBeautyEffect error\"),r.toString()),gP(\"info\",this,\"setBeautyEffect\",[e,t]),i.onError(r),r}JD.info(\"[\".concat(this.getTrackId(),\"] setBeautyEffect success\")),gP(\"info\",this,\"setBeautyEffect\",[e,t],\"success\"),i.onSuccess()}else i.onSuccess()}}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async getCurrentFrameImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this._player?this._player.getCurrentFrameToUint8Array(e,t):await nX(e)}clone(t,i,r,n){const o=this._mediaStreamTrack.clone();return new e(o,t,i,r,n)}async setBitrateLimit(e){if(JD.debug(\"[\".concat(this.getTrackId(),\"] set bitrate limit, \").concat(JSON.stringify(e))),gP(\"debug\",this,\"setBitrateLimit\",e),e){this._forceBitrateLimit=e,this._encoderConfig&&(this._encoderConfig.bitrateMax?this._encoderConfig.bitrateMax=this._encoderConfig.bitrateMax<e.max_bitrate?this._encoderConfig.bitrateMax:e.max_bitrate:this._encoderConfig.bitrateMax=e.max_bitrate,this._encoderConfig.bitrateMin,this._encoderConfig.bitrateMin=e.min_bitrate);try{await yK(this,Zk.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return e.throw()}}}async setOptimizationMode(e){if(\"motion\"!==e&&\"detail\"!==e&&\"balanced\"!==e)return JD.error(xD.INVALID_PARAMS,\"optimization mode must be motion, detail or balanced\"),void gP(\"error\",this,\"setOptimizationMode\",e,xD.INVALID_PARAMS);const t=this._optimizationMode;try{this._optimizationMode=e,await yK(this,Zk.SET_OPTIMIZATION_MODE,this)}catch(i){throw this._optimizationMode=t,JD.error(\"[\".concat(this.getTrackId(),\"] set optimization mode failed\"),i.toString()),gP(\"error\",this,\"setOptimizationMode\",e,i.toString()),i}JD.info(\"[\".concat(this.getTrackId(),\"] set optimization mode success (\").concat(e,\")\")),gP(\"info\",this,\"setOptimizationMode\",e,\"success\")}setScalabiltyMode(e){if(1===e.numSpatialLayers&&1!==e.numTemporalLayers)return JD.error(xD.INVALID_PARAMS,\"scalability mode currently not supported, no SVC.\"),gP(\"error\",this,\"setScalabiltyMode\",e,xD.INVALID_PARAMS),void(this._scalabiltyMode={numSpatialLayers:1,numTemporalLayers:1});this._scalabiltyMode=e,JD.info(\"[\".concat(this.getTrackId(),\"] set scalability mode success (\").concat(e,\")\")),gP(\"info\",this,\"setScalabiltyMode\",e,\"success\")}updateMediaStreamTrackResolution(){vK(this._originMediaStreamTrack).then(e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t}).catch(SK)}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:\"contain\"}}updateBitrateFromProfile(){if(!this._encoderConfig)return;const{width:e,height:t,frameRate:i}=this.getMediaStreamTrackSettings();if(!e||!t||!i)return;const[r,n]=function(e,t,i){const r=LP(\"BITRATE_ADAPTER_TYPE\");let n;const o=200*Math.pow(i/15,.6)*Math.pow(e*t/640/360,.75),s=o;if(\"STANDARD_BITRATE\"===r)n=4*o;else{if(\"COMPATIABLE_BITRATE\"!==r)return;n=2*o}return[Math.floor(n),Math.floor(s)]}(e,t,i)||[void 0,void 0];this._encoderConfig.bitrateMin||this._encoderConfig.bitrateMax||(this._encoderConfig.bitrateMin=n,this._encoderConfig.bitrateMax=r,JD.debug(\"[\".concat(this.getTrackId(),\"] update bitrate from profile, [w: \").concat(e,\", h: \").concat(t,\", fps: \").concat(i,\"] => [brMax: \").concat(r,\", brMin: \").concat(n,\"]\")),gP(\"debug\",this,\"updateBitrateFromProfile\",void 0,\"[w: \".concat(e,\", h: \").concat(t,\", fps: \").concat(i,\"] => [brMax: \").concat(r,\", brMin: \").concat(n,\"]\")))}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),r={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:n,slot:o}=r;if(this.isPlaying&&n instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=uz.checkOneElementVisible(n),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.LOCAL_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new QD(xD.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}async renewMediaStreamTrack(e){}pipe(e){if(this._videoBeautyProcessor&&e!==this._videoBeautyProcessor)return this._videoBeautyProcessor.pipe(e);if(this.processor===e)return e;if(e._source)throw new QD(xD.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;if(this._videoBeautyProcessor&&this.processor===this._videoBeautyProcessor)return void this._videoBeautyProcessor.unpipe();const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}close(){super.close(),this.unbindProcessorDestinationEvents(),this.unbindProcessorContextEvents(),this.unpipe(),this.processorDestination._source&&this.processorDestination._source.unpipe()}bindProcessorDestinationEvents(){this.processorDestination.on(mB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(),await yK(this,Zk.NEED_REPLACE_TRACK,this)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await yK(this,Zk.NEED_REPLACE_TRACK,this))})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(mB.ON_TRACK)}unbindProcessorContextEvents(){this.processorContext.removeAllListeners(IB.REQUEST_UPDATE_CONSTRAINTS),this.processorContext.removeAllListeners(IB.REQUEST_CONSTRAINTS)}}).prototype,\"play\",[QX],Object.getOwnPropertyDescriptor(tz.prototype,\"play\"),tz.prototype),VV(tz.prototype,\"setEnabled\",[FX,VX,jX],Object.getOwnPropertyDescriptor(tz.prototype,\"setEnabled\"),tz.prototype),VV(tz.prototype,\"setMuted\",[GX,KX,HX],Object.getOwnPropertyDescriptor(tz.prototype,\"setMuted\"),tz.prototype),VV(tz.prototype,\"getStats\",[WX],Object.getOwnPropertyDescriptor(tz.prototype,\"getStats\"),tz.prototype),VV(tz.prototype,\"setBeautyEffect\",[YX],Object.getOwnPropertyDescriptor(tz.prototype,\"setBeautyEffect\"),tz.prototype),VV(tz.prototype,\"getCurrentFrameData\",[JX],Object.getOwnPropertyDescriptor(tz.prototype,\"getCurrentFrameData\"),tz.prototype),VV(tz.prototype,\"getCurrentFrameImage\",[qX],Object.getOwnPropertyDescriptor(tz.prototype,\"getCurrentFrameImage\"),tz.prototype),VV(tz.prototype,\"setBitrateLimit\",[XX],Object.getOwnPropertyDescriptor(tz.prototype,\"setBitrateLimit\"),tz.prototype),VV(tz.prototype,\"setOptimizationMode\",[zX],Object.getOwnPropertyDescriptor(tz.prototype,\"setOptimizationMode\"),tz.prototype),VV(tz.prototype,\"setScalabiltyMode\",[ZX],Object.getOwnPropertyDescriptor(tz.prototype,\"setScalabiltyMode\"),tz.prototype),VV(tz.prototype,\"updateMediaStreamTrackResolution\",[$X],Object.getOwnPropertyDescriptor(tz.prototype,\"updateMediaStreamTrackResolution\"),tz.prototype),ez=tz))||ez),pz=(iz=mP(\"CameraVideoTrack\",\"getTrackId\"),rz=Zj(),nz=mj(\"CameraVideoTrack\",\"_enabledMutex\"),oz=lj({className:\"CameraVideoTrack\"}),sz=Zj(),az=Zj(),iz((VV((dz=class extends lz{constructor(e,t,i,r,n,o){super(e,t.encoderConfig?wP(t.encoderConfig):{},r,n,o),MN(this,\"_config\",void 0),MN(this,\"_originalConstraints\",void 0),MN(this,\"_constraints\",void 0),MN(this,\"_enabled\",!0),MN(this,\"_deviceName\",\"default\"),MN(this,\"tryResumeVideoForIOS15WeChat\",async()=>{IN()&&!SN()&&TN()&&this._enabled&&!this._isClosed&&(JD.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS 15 device on WeChat.\")),await this.renewMediaStreamTrack())}),fP(\"info\",this,\"constructor\",{trackId:o,deviceId:e.label,constraints:i,config:t}),this._config=t,this._originalConstraints=i,this._constraints=i,this._deviceName=e.label,this._config.encoderConfig&&(this._encoderConfig=wP(this._config.encoderConfig)),Tj.on(_j.IOS_15_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),Tj.on(_j.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),this.bindProcessorContextEvents()}async setDevice(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CAM_VIDEO_TRACK_SET_DEVICE,options:[this.getTrackId(),e]});if(JD.info(\"[\".concat(this.getTrackId(),\"] set device to \").concat(e)),gP(\"info\",this,\"setDevice\",e),this._enabled)try{const t=await Yj.getDeviceById(e),i={};i.video=Az({},this._constraints),i.video.deviceId={exact:e},i.video.facingMode=void 0,this._originMediaStreamTrack.stop();let r=null;try{r=await Gj(i,this.getTrackId())}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setDevice failed\"),t.toString()),gP(\"error\",this,\"setDevice\",e,t.toString()),r=await Gj({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(r.getVideoTracks()[0],!1),t}await this._updateOriginMediaStreamTrack(r.getVideoTracks()[0],!1),this.updateMediaStreamTrackResolution(),this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(i){throw t.onError(i),JD.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),i.toString()),gP(\"error\",this,\"setDevice\",e,i.toString()),i}else try{const t=await Yj.getDeviceById(e);this._deviceName=t.label,this._config.cameraId=e,this._constraints.deviceId={exact:e}}catch(i){throw t.onError(i),JD.error(\"[\".concat(this.getTrackId(),\"] setDevice error\"),i.toString()),gP(\"error\",this,\"setDevice\",e,i.toString()),i}JD.info(\"[\".concat(this.getTrackId(),\"] setDevice success\")),gP(\"info\",this,\"setDevice\",e,\"success\"),t.onSuccess()}async setEnabled(e,t){if(!t){if(e===this._enabled)return;this.stateCheck(\"enabled\",e)}if(JD.info(\"[\".concat(this.getTrackId(),\"] start setEnabled\"),e),gP(\"info\",this,\"setEnabled\",e),!e){this._originMediaStreamTrack.onended=null,this._originMediaStreamTrack.stop(),t||(this._enabled=!1);try{await yK(this,Zk.NEED_DISABLE_TRACK,this)}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled to false error\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}return JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled to false success\")),void gP(\"info\",this,\"setEnabled\",e,\"success\")}const i=Az({},this._constraints),r=Yj.searchDeviceIdByName(this._deviceName);r&&!i.deviceId&&(i.deviceId={exact:r});try{const e=await Gj({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!1),await yK(this,Zk.NEED_ENABLE_TRACK,this)}catch(t){throw JD.error(\"[\".concat(this.getTrackId(),\"] setEnabled true error\"),t.toString()),gP(\"error\",this,\"setEnabled\",e,t.toString()),t}this.updateMediaStreamTrackResolution(),JD.info(\"[\".concat(this.getTrackId(),\"] setEnabled to true success\")),gP(\"info\",this,\"setEnabled\",e,\"success\"),t||(this._enabled=!0)}async setEncoderConfiguration(e,t){const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG,options:[this.getTrackId(),e]});if(!this._enabled){const e=new QD(xD.TRACK_IS_DISABLED,\"can not set encoder configuration when track is disabled\");throw i.onError(e),e}e=wP(e),this._forceBitrateLimit&&(e.bitrateMax=this._forceBitrateLimit.max_bitrate?this._forceBitrateLimit.max_bitrate:e.bitrateMax,e.bitrateMin=this._forceBitrateLimit.min_bitrate?this._forceBitrateLimit.min_bitrate:e.bitrateMin);const r=PK(this._config);r.encoderConfig=e;const n=LX(r);(pN()||EN()||vN())&&(n.deviceId=void 0),JD.debug(\"[\".concat(this.getTrackId(),\"] setEncoderConfiguration applyConstraints\"),JSON.stringify(e),JSON.stringify(n)),gP(\"debug\",this,\"setEncoderConfiguration\",e);try{await this._originMediaStreamTrack.applyConstraints(n),this.updateMediaStreamTrackResolution()}catch(e){const t=new QD(xD.UNEXPECTED_ERROR,e.toString());throw JD.error(\"[\".concat(this.getTrackId(),\"] applyConstraints error\"),t.toString()),gP(\"error\",this,\"setEncoderConfiguration\",e.toString()),i.onError(t),t}this._config=r,this._constraints=n,this._originalConstraints=n,this._encoderConfig=e,-1===this._hints.indexOf($k.SCREEN_TRACK)&&this.updateBitrateFromProfile();try{await yK(this,Zk.NEED_UPDATE_VIDEO_ENCODER,this)}catch(e){return i.onError(e),e.throw()}i.onSuccess()}_getDefaultPlayerConfig(){return{mirror:!0,fit:\"cover\"}}onTrackEnded(){if((EN()||vN())&&this._enabled&&!this._isClosed&&Tj.duringInterruption){const e=async()=>{Tj.off(_j.IOS_INTERRUPTION_END,e),this._enabled&&!this._isClosed&&(JD.debug(\"[\".concat(this.getTrackId(),\"] try capture camera media device for interrupted iOS device.\")),hP(\"debug\",this,\"try capture camera media device for interrupted iOS device.\"),await this.setEnabled(!1),await this.setEnabled(!0))};Tj.on(_j.IOS_INTERRUPTION_END,e)}else JD.debug(\"[\".concat(this.getTrackId(),\"] track ended\")),pP(\"debug\",[\"MediaStreamTrack\",this.getTrackId()],\"ended\"),this.emit(iB.TRACK_ENDED)}async renewMediaStreamTrack(e){const t=e||this._constraints,i=Yj.searchDeviceIdByName(this._deviceName);if(i&&!t.deviceId&&(t.deviceId={exact:i}),this._enabled){const e=await Gj({video:t},this.getTrackId());this._constraints=t,await this._updateOriginMediaStreamTrack(e.getVideoTracks()[0],!0),this.updateMediaStreamTrackResolution()}}close(){super.close(),Tj.off(_j.IOS_15_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat),Tj.off(_j.IOS_INTERRUPTION_END,this.tryResumeVideoForIOS15WeChat)}bindProcessorContextEvents(){this.processorContext.on(IB.REQUEST_UPDATE_CONSTRAINTS,async(e,t,i)=>{try{const i=Object.assign({},this._originalConstraints,...e);await this.renewMediaStreamTrack(i),t()}catch(e){i(e)}}),this.processorContext.on(IB.REQUEST_CONSTRAINTS,async e=>{e(this._originMediaStreamTrack.getSettings())})}}).prototype,\"setDevice\",[rz],Object.getOwnPropertyDescriptor(dz.prototype,\"setDevice\"),dz.prototype),VV(dz.prototype,\"setEnabled\",[nz,oz,sz],Object.getOwnPropertyDescriptor(dz.prototype,\"setEnabled\"),dz.prototype),VV(dz.prototype,\"setEncoderConfiguration\",[az],Object.getOwnPropertyDescriptor(dz.prototype,\"setEncoderConfiguration\"),dz.prototype),cz=dz))||cz);class gz{get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&!this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio)return this._audioTrack}get videoTrack(){if(this.hasVideo)return this._videoTrack}constructor(e,t){MN(this,\"uid\",void 0),MN(this,\"_uintid\",void 0),MN(this,\"_trust_in_room_\",!0),MN(this,\"_trust_audio_enabled_state_\",!0),MN(this,\"_trust_video_enabled_state_\",!0),MN(this,\"_trust_audio_mute_state_\",!0),MN(this,\"_trust_video_mute_state_\",!0),MN(this,\"_audio_muted_\",!1),MN(this,\"_video_muted_\",!1),MN(this,\"_audio_enabled_\",!0),MN(this,\"_video_enabled_\",!0),MN(this,\"_audio_added_\",!1),MN(this,\"_video_added_\",!1),MN(this,\"_trust_video_stream_added_state_\",!0),MN(this,\"_trust_audio_stream_added_state_\",!0),MN(this,\"_audioTrack\",void 0),MN(this,\"_videoTrack\",void 0),MN(this,\"_audioSSRC\",void 0),MN(this,\"_videoSSRC\",void 0),MN(this,\"_audioOrtc\",void 0),MN(this,\"_videoOrtc\",void 0),MN(this,\"_cname\",void 0),MN(this,\"_rtxSsrcId\",void 0),this.uid=e,this._uintid=t}}var Ez=A_,fz=am,mz=gm;ka({target:\"Promise\",stat:!0},{try:function(e){var t=fz.f(this),i=mz(e);return(i.error?t.reject:t.resolve)(i.value),t.promise}});var Iz=Ez,_z=ka,Cz=vn,Sz=ln,vz=DF,Tz=no,Rz=zo,yz=Va,wz=WP,bz=QF,Nz=_V,Oz=Io,Dz=Es(\"isConcatSpreadable\"),Pz=9007199254740991,Lz=\"Maximum allowed index exceeded\",kz=Cz.TypeError,Bz=Oz>=51||!Sz((function(){var e=[];return e[Dz]=!1,e.concat()[0]!==e})),Mz=Nz(\"concat\"),Uz=function(e){if(!Tz(e))return!1;var t=e[Dz];return void 0!==t?!!t:vz(e)};_z({target:\"Array\",proto:!0,forced:!Bz||!Mz},{concat:function(e){var t,i,r,n,o,s=Rz(this),a=bz(s,0),c=0;for(t=-1,r=arguments.length;t<r;t++)if(Uz(o=-1===t?s:arguments[t])){if(c+(n=yz(o))>Pz)throw kz(Lz);for(i=0;i<n;i++,c++)i in o&&wz(a,c,o[i])}else{if(c>=Pz)throw kz(Lz);wz(a,c++,o)}return a.length=c,a}});var xz={},Qz=Hn,Fz=io,Vz=_A.f,jz=ZP,Gz=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];xz.f=function(e){return Gz&&\"Window\"==Qz(e)?function(e){try{return Vz(e)}catch(e){return jz(Gz)}}(e):Vz(Fz(e))};var Kz={},Hz=Es;Kz.f=Hz;var Wz=oo,Yz=es,Jz=Kz,qz=ia.f,Xz=function(e){var t=Wz.Symbol||(Wz.Symbol={});Yz(t,e)||qz(t,e,{value:Jz.f(e)})},zz=ka,Zz=vn,$z=ho,eZ=bn,tZ=kn,iZ=_n,rZ=Dn,nZ=So,oZ=ln,sZ=es,aZ=DF,cZ=Nn,dZ=no,uZ=Cn,hZ=No,AZ=ca,lZ=zo,pZ=io,gZ=ws,EZ=_p,fZ=Vn,mZ=_l,IZ=el,_Z=_A,CZ=xz,SZ=FA,vZ=On,TZ=ia,RZ=zA,yZ=Bn,wZ=af,bZ=wg,NZ=jo.exports,OZ=OA,DZ=os,PZ=Es,LZ=Kz,kZ=Xz,BZ=Hg,MZ=Ig,UZ=YF.forEach,xZ=tA(\"hidden\"),QZ=\"Symbol\",FZ=PZ(\"toPrimitive\"),VZ=MZ.set,jZ=MZ.getterFor(QZ),GZ=Object.prototype,KZ=Zz.Symbol,HZ=KZ&&KZ.prototype,WZ=Zz.TypeError,YZ=Zz.QObject,JZ=$z(\"JSON\",\"stringify\"),qZ=vZ.f,XZ=TZ.f,zZ=CZ.f,ZZ=yZ.f,$Z=iZ([].push),e$=NZ(\"symbols\"),t$=NZ(\"op-symbols\"),i$=NZ(\"string-to-symbol-registry\"),r$=NZ(\"symbol-to-string-registry\"),n$=NZ(\"wks\"),o$=!YZ||!YZ.prototype||!YZ.prototype.findChild,s$=rZ&&oZ((function(){return 7!=mZ(XZ({},\"a\",{get:function(){return XZ(this,\"a\",{value:7}).a}})).a}))?function(e,t,i){var r=qZ(GZ,t);r&&delete GZ[t],XZ(e,t,i),r&&e!==GZ&&XZ(GZ,t,r)}:XZ,a$=function(e,t){var i=e$[e]=mZ(HZ);return VZ(i,{type:QZ,tag:e,description:t}),rZ||(i.description=t),i},c$=function(e,t,i){e===GZ&&c$(t$,t,i),AZ(e);var r=gZ(t);return AZ(i),sZ(e$,r)?(i.enumerable?(sZ(e,xZ)&&e[xZ][r]&&(e[xZ][r]=!1),i=mZ(i,{enumerable:fZ(0,!1)})):(sZ(e,xZ)||XZ(e,xZ,fZ(1,{})),e[xZ][r]=!0),s$(e,r,i)):XZ(e,r,i)},d$=function(e,t){AZ(e);var i=pZ(t),r=IZ(i).concat(l$(i));return UZ(r,(function(t){rZ&&!tZ(u$,i,t)||c$(e,t,i[t])})),e},u$=function(e){var t=gZ(e),i=tZ(ZZ,this,t);return!(this===GZ&&sZ(e$,t)&&!sZ(t$,t))&&(!(i||!sZ(this,t)||!sZ(e$,t)||sZ(this,xZ)&&this[xZ][t])||i)},h$=function(e,t){var i=pZ(e),r=gZ(t);if(i!==GZ||!sZ(e$,r)||sZ(t$,r)){var n=qZ(i,r);return!n||!sZ(e$,r)||sZ(i,xZ)&&i[xZ][r]||(n.enumerable=!0),n}},A$=function(e){var t=zZ(pZ(e)),i=[];return UZ(t,(function(e){sZ(e$,e)||sZ(OZ,e)||$Z(i,e)})),i},l$=function(e){var t=e===GZ,i=zZ(t?t$:pZ(e)),r=[];return UZ(i,(function(e){!sZ(e$,e)||t&&!sZ(GZ,e)||$Z(r,e$[e])})),r};(nZ||(bZ(HZ=(KZ=function(){if(uZ(HZ,this))throw WZ(\"Symbol is not a constructor\");var e=arguments.length&&void 0!==arguments[0]?EZ(arguments[0]):void 0,t=DZ(e),i=function(e){this===GZ&&tZ(i,t$,e),sZ(this,xZ)&&sZ(this[xZ],t)&&(this[xZ][t]=!1),s$(this,t,fZ(1,e))};return rZ&&o$&&s$(GZ,t,{configurable:!0,set:i}),a$(t,e)}).prototype,\"toString\",(function(){return jZ(this).tag})),bZ(KZ,\"withoutSetter\",(function(e){return a$(DZ(e),e)})),yZ.f=u$,TZ.f=c$,RZ.f=d$,vZ.f=h$,_Z.f=CZ.f=A$,SZ.f=l$,LZ.f=function(e){return a$(PZ(e),e)},rZ&&XZ(HZ,\"description\",{configurable:!0,get:function(){return jZ(this).description}})),zz({global:!0,wrap:!0,forced:!nZ,sham:!nZ},{Symbol:KZ}),UZ(IZ(n$),(function(e){kZ(e)})),zz({target:QZ,stat:!0,forced:!nZ},{for:function(e){var t=EZ(e);if(sZ(i$,t))return i$[t];var i=KZ(t);return i$[t]=i,r$[i]=t,i},keyFor:function(e){if(!hZ(e))throw WZ(e+\" is not a symbol\");if(sZ(r$,e))return r$[e]},useSetter:function(){o$=!0},useSimple:function(){o$=!1}}),zz({target:\"Object\",stat:!0,forced:!nZ,sham:!rZ},{create:function(e,t){return void 0===t?mZ(e):d$(mZ(e),t)},defineProperty:c$,defineProperties:d$,getOwnPropertyDescriptor:h$}),zz({target:\"Object\",stat:!0,forced:!nZ},{getOwnPropertyNames:A$,getOwnPropertySymbols:l$}),zz({target:\"Object\",stat:!0,forced:oZ((function(){SZ.f(1)}))},{getOwnPropertySymbols:function(e){return SZ.f(lZ(e))}}),JZ)&&zz({target:\"JSON\",stat:!0,forced:!nZ||oZ((function(){var e=KZ();return\"[null]\"!=JZ([e])||\"{}\"!=JZ({a:e})||\"{}\"!=JZ(Object(e))}))},{stringify:function(e,t,i){var r=wZ(arguments),n=t;if((dZ(t)||void 0!==e)&&!hZ(e))return aZ(t)||(t=function(e,t){if(cZ(n)&&(t=tZ(n,this,e,t)),!hZ(t))return t}),r[1]=t,eZ(JZ,null,r)}});if(!HZ[FZ]){var p$=HZ.valueOf;bZ(HZ,FZ,(function(e){return tZ(p$,this)}))}BZ(KZ,QZ),OZ[xZ]=!0,Xz(\"asyncIterator\"),Xz(\"hasInstance\"),Xz(\"isConcatSpreadable\"),Xz(\"iterator\"),Xz(\"match\"),Xz(\"matchAll\"),Xz(\"replace\"),Xz(\"search\"),Xz(\"species\"),Xz(\"split\"),Xz(\"toPrimitive\"),Xz(\"toStringTag\"),Xz(\"unscopables\"),Hg(vn.JSON,\"JSON\",!0);var g$=oo.Symbol;Xz(\"asyncDispose\"),Xz(\"dispose\"),Xz(\"matcher\"),Xz(\"metadata\"),Xz(\"observable\"),Xz(\"patternMatch\"),Xz(\"replaceAll\");var E$=g$,f$=Kz.f(\"asyncIterator\"),m$=f$;function I$(e){this.wrapped=e}function _$(e){var t,i;function r(t,i){try{var o=e[t](i),s=o.value,a=s instanceof I$;Iz.resolve(a?s.wrapped:s).then((function(e){a?r(\"return\"===t?\"return\":\"next\",e):n(o.done?\"return\":\"normal\",e)}),(function(e){r(\"throw\",e)}))}catch(e){n(\"throw\",e)}}function n(e,n){switch(e){case\"return\":t.resolve({value:n,done:!0});break;case\"throw\":t.reject(n);break;default:t.resolve({value:n,done:!1})}(t=t.next)?r(t.key,t.arg):i=null}this._invoke=function(e,n){return new Iz((function(o,s){var a={key:e,arg:n,resolve:o,reject:s,next:null};i?i=i.next=a:(t=i=a,r(e,n))}))},\"function\"!=typeof e.return&&(this.return=void 0)}function C$(e){return function(){return new _$(e.apply(this,arguments))}}function S$(e){return new I$(e)}_$.prototype[\"function\"==typeof E$&&m$||\"@@asyncIterator\"]=function(){return this},_$.prototype.next=function(e){return this._invoke(\"next\",e)},_$.prototype.throw=function(e){return this._invoke(\"throw\",e)},_$.prototype.return=function(e){return this._invoke(\"return\",e)};var v$=Kz.f(\"iterator\");function T$(e,t){var i={},r=!1;function n(i,n){return r=!0,n=new Iz((function(t){t(e[i](n))})),{done:!1,value:t(n)}}return i[void 0!==E$&&v$||\"@@iterator\"]=function(){return this},i.next=function(e){return r?(r=!1,e):n(\"next\",e)},\"function\"==typeof e.throw&&(i.throw=function(e){if(r)throw r=!1,e;return n(\"throw\",e)}),\"function\"==typeof e.return&&(i.return=function(e){return r?(r=!1,e):n(\"return\",e)}),i}var R$=f$,y$=Gr,w$=o,b$=i,N$=S,O$=Be,D$=x,P$=H,L$=_c,k$=Tt.f,B$=yr,M$=b$.Symbol,U$=M$&&M$.prototype;if(w$&&D$(M$)&&(!(\"description\"in U$)||void 0!==M$().description)){var x$={},Q$=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:L$(arguments[0]),t=P$(U$,this)?new M$(e):void 0===e?M$():M$(e);return\"\"===e&&(x$[t]=!0),t};B$(Q$,M$),Q$.prototype=U$,U$.constructor=Q$;var F$=\"Symbol(test)\"==String(M$(\"test\")),V$=N$(U$.toString),j$=N$(U$.valueOf),G$=/^Symbol\\((.*)\\)[^)]+$/,K$=N$(\"\".replace),H$=N$(\"\".slice);k$(U$,\"description\",{configurable:!0,get:function(){var e=j$(this),t=V$(e);if(O$(x$,e))return\"\";var i=F$?H$(t,7,-1):K$(t,G$,\"$1\");return\"\"===i?void 0:i}}),y$({global:!0,forced:!0},{Symbol:Q$})}var W$={exports:{}};function Y$(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function J$(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?Y$(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):Y$(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function q$(e,t,i,r,n,o,s){let a=[],c=[],d=[],u=[],h=!1,A=!1;if(W$.exports.parse(e).mediaDescriptions.forEach(e=>{s&&s!==e.attributes.direction||(\"video\"!==e.media.mediaType||h||(c=e.attributes.payloads,u=e.attributes.extmaps,h=!0),\"audio\"!==e.media.mediaType||A||(a=e.attributes.payloads,d=e.attributes.extmaps,A=!0))}),!u||0===c.length)throw new Error(\"Cannot get video capabilities from SDP.\");if(!d||0===a.length)throw new Error(\"Cannot get audio capabilities from SDP.\");return c.forEach(e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate))}),a.forEach(e=>{var t;null!==(t=e.rtpMap)&&void 0!==t&&t.clockRate&&(e.rtpMap.clockRate=parseInt(e.rtpMap.clockRate))}),t&&(a=a.filter(e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}),c=c.filter(e=>{var t;return\"rtx\"!==(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())})),i&&(c=c.filter(e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")})),r&&(a=a.filter(e=>{var t;return!/(red)|(ulpfec)|(flexfec)/i.test((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName)||\"\")})),n&&(null==n?void 0:n.length)>0&&(a=a.filter(e=>{var t;return n.includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")})),o&&(null==o?void 0:o.length)>0&&(c=c.filter(e=>{var t;return o.includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")})),{audioCodecs:a,videoCodecs:c,audioExtensions:d,videoExtensions:u}}function X$(e){const t=W$.exports.parse(e);let i,r;for(const e of t.mediaDescriptions){if(!i){const t=e.attributes.iceUfrag,r=e.attributes.icePwd;if(!t||!r)throw new Error(\"Cannot get iceUfrag or icePwd from SDP.\");i={iceUfrag:t,icePwd:r}}if(!r){const t=e.attributes.fingerprints;t.length>0&&(r={fingerprints:t})}}if(!r&&t.attributes.fingerprints.length>0&&(r={fingerprints:t.attributes.fingerprints}),!r||!i)throw new Error(\"Cannot get iceParameters or dtlsParameters from SDP.\");return{iceParameters:i,dtlsParameters:r}}function z$(e,t){const i=[],r=e.attributes.ssrcGroups.filter(e=>\"FID\"===e.semantic),n=e.attributes.ssrcGroups.find(e=>\"SIM\"===e.semantic),o=e.attributes.ssrcs;if(n)n.ssrcIds.forEach(e=>{var n;const o=null===(n=r.find(t=>t.ssrcIds[0]===e))||void 0===n?void 0:n.ssrcIds[1];i.push({ssrcId:e,rtx:t?o:void 0})});else if(r.length>0){const e=r[0].ssrcIds[0],n=r[0].ssrcIds[1];i.push({ssrcId:e,rtx:t?n:void 0})}else{if(0===o.length)throw new Error(\"No ssrcs found on local media description.\");i.push({ssrcId:o[0].ssrcId})}return i}function Z$(e,t){const{cname:i}=e;let r;t&&t.ip&&\"number\"==typeof t.port?(r=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip,port:t.port.toString(),type:\"host\",extension:{}}],JD.debug(\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),hP(\"debug\",[],\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),t.ip6&&(r.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip6,port:t.port.toString(),type:\"host\",extension:{}}),JD.debug(\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)),hP(\"debug\",[],\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)))):r=e.iceParameters.candidates.map(e=>({foundation:e.foundation,componentId:\"1\",transport:e.protocol,priority:e.priority.toString(),connectionAddress:e.ip,port:e.port.toString(),type:e.type,extension:{}}));const n={fingerprints:e.dtlsParameters.fingerprints.map(e=>({hashFunction:e.algorithm,fingerprint:e.fingerprint}))},o={iceUfrag:e.iceParameters.iceUfrag,icePwd:e.iceParameters.icePwd};let s;switch(e.dtlsParameters.role){case\"server\":s=\"passive\";break;case\"client\":s=\"active\";break;case\"auto\":s=\"actpass\"}return{dtlsParameters:n,iceParameters:o,candidates:r,rtpCapabilities:c1(e.rtpCapabilities),setup:s,cname:i}}function $$(e,t,i){const r=[],n=[];return e.forEach(e=>{let{ssrcId:o,rtx:s}=e;const a=_K(8,\"track-\"),c={ssrcId:o,attributes:J$({label:a,mslabel:i=i||_K(10,\"\"),msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};if(r.push(c),void 0!==s){const e={ssrcId:s,attributes:J$({label:a,mslabel:i,msid:\"\".concat(i,\" \").concat(a)},t&&{cname:t})};r.push(e),n.push({semantic:\"FID\",ssrcIds:[o,s]})}}),e.length>1&&n.push({semantic:\"SIM\",ssrcIds:e.map(e=>{let{ssrcId:t}=e;return t})}),{ssrcs:r,ssrcGroups:n}}function e1(e,t){t instanceof YG&&e.attributes.payloads.forEach(e=>{var i;const r=null===(i=e.rtpMap)||void 0===i?void 0:i.encodingName.toLowerCase();if(!r||-1===[\"opus\",\"pcmu\",\"pcma\",\"g722\"].indexOf(r))return;e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.minptime=\"10\",e.fmtp.parameters.useinbandfec=\"1\";const n=t._encoderConfig;n&&\"pcmu\"!==r&&\"pcma\"!==r&&\"g722\"!==r&&(n.bitrate&&!gN()&&(e.fmtp.parameters.maxaveragebitrate=\"\".concat(Math.floor(1e3*n.bitrate))),n.sampleRate&&(e.fmtp.parameters.maxplaybackrate=\"\".concat(n.sampleRate),e.fmtp.parameters[\"sprop-maxcapturerate\"]=\"\".concat(n.sampleRate)),n.stereo&&(e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"))})}function t1(e){const t=e.attributes.unrecognized.findIndex(e=>\"x-google-flag\"===e.attField&&\"conference\"===e.attValue);-1!==t&&e.attributes.unrecognized.splice(t,1)}function i1(e,t){if(!(t instanceof lz&&t._encoderConfig&&-1===t._hints.indexOf($k.SCREEN_TRACK)))return;const i=t._encoderConfig;wB().supportMinBitrate&&i.bitrateMin&&e.attributes.payloads.forEach(e=>{var t;[\"h264\",\"vp8\",\"vp9\",\"av1\"].includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-min-bitrate\"]=\"\".concat(i.bitrateMin))}),wB().supportMinBitrate&&!t._hints.includes($k.LOW_STREAM)&&i.bitrateMax&&e.attributes.payloads.forEach(e=>{var t;[\"h264\",\"vp8\",\"vp9\",\"av1\"].includes((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\")&&(e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters[\"x-google-start-bitrate\"]=\"\".concat(LP(\"X_GOOGLE_START_BITRATE\")||Math.floor(i.bitrateMax)))})}function r1(e){if(\"video\"!==e.media.mediaType)return;const t=oN();if(t.name!==tN.SAFARI&&t.os!==eN.IOS)return;const i=e.attributes.extmaps.findIndex(e=>/video-orientation/g.test(e.extensionName));-1!==i&&e.attributes.extmaps.splice(i,1)}function n1(e,t,i){if(!t)return;let r,n;if(\"video\"===e.media.mediaType?(r=i.videoExtensions,n=i.videoCodecs):(r=i.audioExtensions,n=i.audioCodecs),!0===t.tcc){const t=r.find(e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName);if(t){e.attributes.extmaps.find(e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName)||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"});(function(e,t){return t.filter(t=>!!e.find(e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find(e=>\"transport-cc\"===e.type)))})(n,e.attributes.payloads).forEach(e=>{e.rtcpFeedbacks.find(e=>\"transport-cc\"===e.type)||e.rtcpFeedbacks.push({type:\"transport-cc\"})})}}else if(!1===t.tcc){const t=e.attributes.extmaps.findIndex(e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName);-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>\"transport-cc\"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}if(!0===t.remb){const t=r.find(e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName);if(t){e.attributes.extmaps.find(e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName)||e.attributes.extmaps.push({entry:t.entry,extensionName:\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"});(function(e,t){return t.filter(t=>!!e.find(e=>e.payloadType===t.payloadType&&!!e.rtcpFeedbacks.find(e=>\"goog-remb\"===e.type)))})(n,e.attributes.payloads).forEach(e=>{e.rtcpFeedbacks.find(e=>\"goog-remb\"===e.type)||e.rtcpFeedbacks.push({type:\"goog-remb\"})})}}else if(!1===t.remb){const t=e.attributes.extmaps.findIndex(e=>\"http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\"===e.extensionName);-1!==t&&e.attributes.extmaps.splice(t,1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>\"goog-remb\"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}}function o1(e,t,i){if(gN())return;if(\"video\"!==e.media.mediaType)return;if(!(t instanceof lz))return;if(\"vp9\"!==i&&\"vp8\"!==i)return;if(\"vp8\"===i&&!LP(\"SIMULCAST\"))return;if(void 0===t._scalabiltyMode||t._scalabiltyMode.numSpatialLayers<=1)return;const r=\"vp8\"===i?2:t._scalabiltyMode.numSpatialLayers,n=e.attributes.ssrcs[0],o=e.attributes.ssrcGroups.find(e=>\"FID\"===e.semantic&&e.ssrcIds[0]===n.ssrcId),s={semantic:\"SIM\",ssrcIds:[n.ssrcId]};for(let t=1;t<r;t++)e.attributes.ssrcs.push({ssrcId:n.ssrcId+t,attributes:PK(n.attributes)}),s.ssrcIds.push(n.ssrcId+t),o&&(e.attributes.ssrcs.push({ssrcId:o.ssrcIds[1]+t,attributes:PK(n.attributes)}),e.attributes.ssrcGroups.push({semantic:\"FID\",ssrcIds:[n.ssrcId+t,o.ssrcIds[1]+t]}));e.attributes.ssrcGroups.unshift(s)}async function s1(e,t,i,r,n){const o=new RTCPeerConnection;o.addTransceiver(\"video\",{direction:\"sendonly\"}),o.addTransceiver(\"audio\",{direction:\"sendonly\"}),o.addTransceiver(\"video\",{direction:\"recvonly\"}),o.addTransceiver(\"audio\",{direction:\"recvonly\"});const s=(await o.createOffer()).sdp,a=q$(s,e,t,i,r,n,\"sendonly\"),c=q$(s,e,t,i,r,n,\"recvonly\"),d={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},u={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},h={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]};if(a1(a,c,\"videoExtensions\",d,u,h),a1(a,c,\"videoCodecs\",d,u,h),a1(a,c,\"audioExtensions\",d,u,h),a1(a,c,\"audioCodecs\",d,u,h),LP(\"RAISE_H264_BASELINE_PRIORITY\")){const e=h.videoCodecs.findIndex(e=>{var t,i;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"===(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])});if(-1!==e){const t=h.videoCodecs.findIndex(e=>{var t;return\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())});if(t<e){JD.debug(\"raising H264 baseline profile priority\");const i=h.videoCodecs[e];h.videoCodecs.splice(e,1),h.videoCodecs.splice(t,0,i)}-1!==t&&(u.videoCodecs=u.videoCodecs.filter(e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))})),-1!==t&&LP(\"FILTER_SEND_H264_BASELINE\")&&(d.videoCodecs=d.videoCodecs.filter(e=>{var t,i;return!(\"h264\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLocaleLowerCase())&&\"42001f\"!==(null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"]))}))}}try{o.close()}catch(e){}return{send:d,recv:u,sendrecv:h}}function a1(e,t,i,r,n,o){if(\"videoExtensions\"===i||\"audioExtensions\"===i){const s=[];return e[i].forEach(e=>{t[i].some((t,i)=>{if(e.entry===t.entry&&e.extensionName===t.extensionName)return s.push(i),!0})?o[i].push(e):r[i].push(e)}),void t[i].forEach((e,t)=>{-1===s.indexOf(t)&&n[i].push(e)})}if(\"videoCodecs\"===i||\"audioCodecs\"===i){const s=[];return e[i].forEach(e=>{t[i].some((t,i)=>{if(e.payloadType===t.payloadType&&JSON.stringify(e)===JSON.stringify(t))return s.push(i),!0})?o[i].push(e):r[i].push(e)}),void t[i].forEach((e,t)=>{-1===s.indexOf(t)&&n[i].push(e)})}}function c1(e){const{send:t,recv:i,sendrecv:r}=e;if(!r){if(!t||!i)throw new Error(\"cannot merge rtp capabilities because one of send or recv is empty!\");return{send:t,recv:i}}let n,o;return t?(n={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},n.audioCodecs=[...t.audioCodecs,...r.audioCodecs],n.videoCodecs=[...t.videoCodecs,...r.videoCodecs],n.audioExtensions=[...t.audioExtensions,...r.audioExtensions],n.videoExtensions=[...t.videoExtensions,...r.videoExtensions]):n=r,i?(o={audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},o.audioCodecs=[...i.audioCodecs,...r.audioCodecs],o.videoCodecs=[...i.videoCodecs,...r.videoCodecs],o.audioExtensions=[...i.audioExtensions,...r.audioExtensions],o.videoExtensions=[...i.videoExtensions,...r.videoExtensions]):o=r,{send:n,recv:o}}function d1(e){if(\"audio\"!==e.media.mediaType)return;e.attributes.payloads.filter(e=>{var t;return\"opus\"===(null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())}).forEach(e=>{e.fmtp||(e.fmtp={parameters:{}}),e.fmtp.parameters.stereo=\"1\",e.fmtp.parameters[\"sprop-stereo\"]=\"1\"})}!function(e,t){e.exports=(()=>{var e={8:(e,t,i)=>{i.r(t),i.d(t,{Parser:()=>S,Printer:()=>w,parse:()=>D,print:()=>P});const r=\"\\n\",n=\"\".concat(\"\\r\").concat(r),o=\" \";let s;function a(e){return e>=\"0\"&&e<=\"9\"}function c(e){return e>=\"!\"&&e<=\"~\"}function d(e){return c(e)||e>=\"Â\"&&e<=\"Ã¿\"}function u(e){return\"!\"===e||e>=\"#\"&&e<=\"'\"||e>=\"*\"&&e<=\"+\"||e>=\"-\"&&e<=\".\"||e>=\"0\"&&e<=\"9\"||e>=\"A\"&&e<=\"Z\"||e>=\"^\"&&e<=\"~\"}function h(e){return e>=\"1\"&&e<=\"9\"}function A(e){return e>=\"A\"&&e<=\"Z\"||e>=\"a\"&&e<=\"z\"}function l(e){return\"d\"===e||\"h\"===e||\"m\"===e||\"s\"===e}function p(e){return e>\"\u0001\"&&e<\"\\t\"||e>\"\\v\"&&e<\"\\f\"||e>\"\u000e\"&&e<\"Ã¿\"}function g(e){return A(e)||a(e)||\"+\"===e||\"/\"===e}function E(e){return a(e)||A(e)||\"+\"===e||\"/\"===e||\"-\"===e||\"_\"===e}function f(e){return A(e)||a(e)||\"+\"===e||\"/\"===e}function m(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function I(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?m(Object(i),!0).forEach((function(t){_(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):m(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function _(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function(e){e.VERSION=\"v\",e.ORIGIN=\"o\",e.SESSION_NAME=\"s\",e.INFORMATION=\"i\",e.URI=\"u\",e.EMAIL=\"e\",e.PHONE=\"p\",e.CONNECTION=\"c\",e.BANDWIDTH=\"b\",e.TIME=\"t\",e.REPEAT=\"r\",e.ZONE_ADJUSTMENTS=\"z\",e.KEY=\"k\",e.ATTRIBUTE=\"a\",e.MEDIA=\"m\"}(s||(s={}));class C{consumeText(e,t){let i=t;for(;i<e.length;){const t=e[i];if(\"\\0\"===t||\"\\r\"===t||t===r)break;i+=1}if(i-t==0)throw new Error(\"Invalid text, at \".concat(e));return i}consumeUnicastAddress(e,t,i){return this.consumeTill(e,t,o)}consumeOneOrMore(e,t,i){let r=t;for(;i(e[r]);)r++;if(r-t==0)throw new Error(\"Invalid rule at \".concat(t,\".\"));return r}consumeSpace(e,t){if(e[t]===o)return t+1;throw new Error(\"Invalid space at \".concat(t,\".\"))}consumeIP4Address(e,t){let i=t;for(let t=0;t<4;t++)if(i=this.consumeDecimalUChar(e,i),3!==t){if(\".\"!==e[i])throw new Error(\"Invalid IP4 address.\");i++}return i}consumeDecimalUChar(e,t){let i=t;for(let t=0;t<3&&a(e[i]);t++,i++);if(i-t==0)throw new Error(\"Invalid decimal uchar.\");const r=parseInt(e.slice(t,i));if(r>=0&&r<=255)return i;throw new Error(\"Invalid decimal uchar\")}consumeIP6Address(e,t){let i=this.consumeHexpart(e,t);return\":\"===e[i]?(i+=1,i=this.consumeIP4Address(e,i),i):i}consumeHexpart(e,t){let i=t;if(\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}if(i=this.consumeHexseq(e,i),\":\"===e[i]&&\":\"===e[i+1]){i+=2;try{i=this.consumeHexseq(e,i)}catch(e){}return i}return i}consumeHexseq(e,t){let i=t;for(;i=this.consumeHex4(e,i),\":\"===e[i]&&\":\"!==e[i+1];)i+=1;return i}consumeHex4(e,t){let i=0;for(;i<4;i++)if(!((r=e[t+i])>=\"0\"&&r<=\"9\"||r>=\"a\"&&r<=\"f\"||r>=\"A\"&&r<=\"F\")){if(0===i)throw new Error(\"Invalid hex 4\");break}var r;return t+i}consumeFQDN(e,t){let i=t;for(;a(e[i])||A(e[i])||\"-\"===e[i]||\".\"===e[i];)i+=1;if(i-t<4)throw new Error(\"Invalid FQDN\");return i}consumeExtnAddr(e,t){return this.consumeOneOrMore(e,t,d)}consumeMulticastAddress(e,t,i){switch(i){case\"IP4\":case\"ip4\":return this.consumeIP4MulticastAddress(e,t);case\"IP6\":case\"ip6\":return this.consumeIP6MulticastAddress(e,t);default:try{return this.consumeFQDN(e,t)}catch(i){return this.consumeExtnAddr(e,t)}}}consumeIP6MulticastAddress(e,t){const i=this.consumeHexpart(e,t);return\"/\"===e[i]?this.consumeInteger(e,i+1):i}consumeIP4MulticastAddress(e,t){let i=t+3;const r=e.slice(t,i),n=parseInt(r);if(n<224||n>239)throw new Error(\"Invalid IP4 multicast address, IPv4 multicast addresses may be in the range 224.0.0.0 to 239.255.255.255.\");for(let t=0;t<3;t++){if(\".\"!==e[i])throw new Error(\"Invalid IP4 multicast address.\");i+=1,i=this.consumeDecimalUChar(e,i)}return\"/\"===e[i]&&(i+=1),i=this.consumeTTL(e,i),\"/\"===e[i]&&(i=this.consumeInteger(e,i)),i}consumeInteger(e,t){if(!h(e[t]))throw new Error(\"Invalid integer.\");for(t+=1;a(e[t]);)t+=1;return t}consumeTTL(e,t){if(\"0\"===e[t])return t+1;if(!h(e[t]))throw new Error(\"Invalid TTL.\");t+=1;for(let i=0;i<2&&a(e[t]);i++)t+=1;return t}consumeToken(e,t){return this.consumeOneOrMore(e,t,u)}consumeTime(e,t){let i=t;if(\"0\"===e[i])return i+1;for(h(e[i])&&(i+=1);a(e[i]);)i++;if(i-t<10)throw new Error(\"Invalid time\");return i}consumeAddress(e,t){return this.consumeTill(e,t,o)}consumeTypedTime(e,t){let i=t;return i=this.consumeOneOrMore(e,i,a),l(e[i])?i+1:i}consumeRepeatInterval(e,t){if(!h(e[t]))throw new Error(\"Invalid repeat interval\");for(t+=1;a(e[t]);)t+=1;return l(e[t])&&(t+=1),t}consumePort(e,t){return this.consumeOneOrMore(e,t,a)}consume(e,t,i){for(let r=0;r<i.length;r++){if(t+r>=e.length)throw new Error(\"consume exceeding value length\");if(e[t+r]!==i[r])throw new Error(\"consume \".concat(i,\" failed at \").concat(r))}return t+i.length}consumeTill(e,t,i){let r=t;for(;r<e.length&&(\"string\"!=typeof i||e[r]!==i)&&(\"function\"!=typeof i||!i(e[r]));)r++;return r}}class S extends C{constructor(){super(),_(this,\"records\",[]),_(this,\"currentLine\",0)}parse(e){const t=this.probeEOL(e);this.records=e.split(t).filter(e=>!!e.trim()).map(this.parseLine),this.currentLine=0;const i=this.parseVersion(),r=this.parseOrigin(),n=this.parseSessionName(),o=this.parseInformation(),s=this.parseUri(),a=this.parseEmail(),c=this.parsePhone(),d=this.parseConnection(),u=this.parseBandWidth(),h=this.parseTimeFields(),A=this.parseKey(),l=this.parseSessionAttribute(),p=this.parseMediaDescription();if(this.currentLine!==this.records.length)throw new Error(\"parsing failed, non exhaustive sdp lines.\");return{version:i,origin:r,sessionName:n,information:o,uri:s,emails:a,phones:c,connection:d,bandwidths:u,timeFields:h,key:A,attributes:l,mediaDescriptions:p}}getCurrentRecord(){const e=this.records[this.currentLine];if(!e)throw new Error(\"Record doesn't exit.\");return e}probeEOL(e){for(let t=0;t<e.length;t++)if(e[t]===r)return\"\\r\"===e[t-1]?n:r;throw new Error(\"Invalid newline character.\")}parseLine(e,t){if(e.length<2)throw new Error(\"Invalid sdp line, sdp line should be of form <type>=<value>.\");const i=e[0];if(\"=\"!==e[1])throw new Error('Invalid sdp line, <type> should be a single character followed by an \"=\" sign.');return{type:i,value:e.slice(2),line:t,cur:0}}parseSessionAttribute(){const e=new T;for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(t,e=>u(e)&&\":\"!==e),_cur:0};\":\"===t.value[t.cur]&&(t.cur+=1,i.attValue=this.extractOneOrMore(t,p)),e.parse(i),this.currentLine++}return e.digest()}parseMediaAttributes(e){const t=new R(e);for(;this.currentLine<this.records.length;){const e=this.getCurrentRecord();if(e.type!==s.ATTRIBUTE)break;const i={attField:this.extractOneOrMore(e,e=>u(e)&&\":\"!==e),_cur:0};\":\"===e.value[e.cur]&&(e.cur+=1,i.attValue=this.extractOneOrMore(e,p)),t.parse(i),this.currentLine++}return t.digest()}parseKey(){const e=this.getCurrentRecord();if(e.type===s.KEY){if(\"prompt\"===e.value||\"clear:\"===e.value||\"base64:\"===e.value||\"uri:\"===e.value)return e.value;throw this.currentLine++,new Error(\"Invalid key.\")}}parseZone(){const e=this.getCurrentRecord();if(e.type===s.ZONE_ADJUSTMENTS){const t=[];for(;;)try{const i=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);let r=!1;\"-\"===e.value[e.cur]&&(r=!0,e.cur+=1);const n=this.extract(e,this.consumeTypedTime);t.push({time:i,typedTime:n,back:r})}catch(e){break}if(0===t.length)throw new Error(\"Invalid zone adjustments\");return this.currentLine++,t}return[]}parseRepeat(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.REPEAT)break;{const i=this.extract(t,this.consumeRepeatInterval),r=this.parseTypedTime(t);e.push({repeatInterval:i,typedTimes:r}),this.currentLine++}}return e}parseTypedTime(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeTypedTime))}catch(e){break}if(0===t.length)throw new Error(\"Invalid typed time.\");return t}parseTime(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeTime);this.consumeSpaceForRecord(e);const i=this.extract(e,this.consumeTime);return this.currentLine++,{startTime:t,stopTime:i}}parseBandWidth(){const e=[];for(;this.currentLine<this.records.length;){const t=this.getCurrentRecord();if(t.type!==s.BANDWIDTH)break;{const i=this.extractOneOrMore(t,u);if(\":\"!==t.value[t.cur])throw new Error(\"Invalid bandwidth field.\");t.cur++;const r=this.extractOneOrMore(t,a);e.push({bwtype:i,bandwidth:r}),this.currentLine++}}return e}parseVersion(){const e=this.getCurrentRecord();if(e.type!==s.VERSION)throw new Error(\"first sdp record must be version\");const t=e.value.slice(0,this.consumeOneOrMore(e.value,0,a));if(t.length!==e.value.length)throw new Error('invalid proto version, \"v='.concat(e.value,'\"'));return this.currentLine++,t}parseOrigin(){const e=this.getCurrentRecord();if(e.type!==s.ORIGIN)throw new Error(\"second line of sdp must be origin\");const t=this.extractOneOrMore(e,d);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const r=this.extractOneOrMore(e,a);this.consumeSpaceForRecord(e);const n=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const o=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const c=this.extract(e,this.consumeUnicastAddress);return this.currentLine++,{username:t,sessId:i,sessVersion:r,nettype:n,addrtype:o,unicastAddress:c}}parseSessionName(){const e=this.getCurrentRecord();if(e.type===s.SESSION_NAME){const t=this.extract(e,this.consumeText);return this.currentLine++,t}}parseInformation(){const e=this.getCurrentRecord();if(e.type!==s.INFORMATION)return;const t=this.extract(e,this.consumeText);return this.currentLine++,t}parseUri(){const e=this.getCurrentRecord();if(e.type===s.URI)return this.currentLine++,e.value}parseEmail(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.EMAIL)break;e.push(t.value),this.currentLine++}return e}parsePhone(){const e=[];for(;;){const t=this.getCurrentRecord();if(t.type!==s.PHONE)break;e.push(t.value),this.currentLine++}return e}parseConnection(){const e=this.getCurrentRecord();if(e.type===s.CONNECTION){const t=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const i=this.extractOneOrMore(e,u);this.consumeSpaceForRecord(e);const r=this.extract(e,this.consumeAddress);return this.currentLine++,{nettype:t,addrtype:i,address:r}}}parseMedia(){const e=this.getCurrentRecord(),t=this.extract(e,this.consumeToken);this.consumeSpaceForRecord(e);let i=this.extract(e,this.consumePort);\"/\"===e.value[e.cur]&&(e.cur+=1,i+=this.extract(e,this.consumeInteger)),this.consumeSpaceForRecord(e);const r=[];for(r.push(this.extract(e,this.consumeToken));\"/\"===e.value[e.cur];)e.cur+=1,r.push(this.extract(e,this.consumeToken));if(0===r.length)throw new Error(\"Invalid proto\");const n=this.parseFmt(e);return this.currentLine++,{mediaType:t,port:i,protos:r,fmts:n}}parseTimeFields(){const e=[];for(;this.getCurrentRecord().type===s.TIME;){const t=this.parseTime(),i=this.parseRepeat(),r=this.parseZone();e.push({time:t,repeats:i,zones:r})}return e}parseMediaDescription(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.MEDIA;){const t=this.parseMedia(),i=this.parseInformation(),r=this.parseConnections(),n=this.parseBandWidth(),o=this.parseKey(),s=this.parseMediaAttributes(t);e.push({media:t,information:i,connections:r,bandwidths:n,key:o,attributes:s})}return e}parseConnections(){const e=[];for(;this.currentLine<this.records.length&&this.getCurrentRecord().type===s.CONNECTION;)e.push(this.parseConnection());return e}parseFmt(e){const t=[];for(;;)try{this.consumeSpaceForRecord(e),t.push(this.extract(e,this.consumeToken))}catch(e){break}if(0===t.length)throw new Error(\"Invalid fmts\");return t}extract(e,t,...i){const r=t.call(this,e.value,e.cur,...i),n=e.value.slice(e.cur,r);return e.cur=r,n}extractOneOrMore(e,t){const i=this.consumeOneOrMore(e.value,e.cur,t),r=e.value.slice(e.cur,i);return e.cur=i,r}consumeSpaceForRecord(e){if(e.value[e.cur]!==o)throw new Error(\"Invalid space at \".concat(e.cur,\".\"));e.cur+=1}}class v extends C{constructor(...e){super(...e),_(this,\"attributes\",void 0),_(this,\"digested\",!1)}extractOneOrMore(e,t,i){const r=this.consumeOneOrMore(e.attValue,e._cur,t),n=e.attValue.slice(e._cur,r),[o,s]=i||[];if(\"number\"==typeof o&&n.length<o)throw new Error(\"error in length, should be more or equal than \".concat(o,\" characters.\"));if(\"number\"==typeof s&&n.length>s)throw new Error(\"error in length, should be less or equal than \".concat(s,\" characters.\"));return e._cur=r,n}consumeAttributeSpace(e){if(e.attValue[e._cur]!==o)throw new Error(\"Invalid space at \".concat(e._cur,\".\"));e._cur+=1}extract(e,t,...i){if(!e.attValue)throw new Error(\"Nothing to extract from attValue.\");const r=t.call(this,e.attValue,e._cur,...i),n=e.attValue.slice(e._cur,r);return e._cur=r,n}atEnd(e){if(!e.attValue)throw new Error;return e._cur>=e.attValue.length}peekChar(e){if(!e.attValue)throw new Error;return e.attValue[e._cur]}peek(e,t){if(!e.attValue)throw new Error;for(let i=0;i<t.length;i++)if(t[i]!==e.attValue[e._cur+i])return!1;return!0}parseIceUfrag(e){if(this.attributes.iceUfrag)throw new Error(\"Invalid ice-ufrag, should be only a single line if 'a=ice-ufrag'\");this.attributes.iceUfrag=this.extractOneOrMore(e,g,[4,256])}parseIcePwd(e){if(this.attributes.icePwd)throw new Error(\"Invalid ice-pwd, should be only a single line if 'a=ice-pwd'\");this.attributes.icePwd=this.extractOneOrMore(e,g,[22,256])}parseIceOptions(e){if(this.attributes.iceOptions)throw new Error(\"Invalid ice-options, should be only one 'ice-options' line\");const t=[];for(;!this.atEnd(e);){t.push(this.extractOneOrMore(e,g));try{this.consumeAttributeSpace(e)}catch(t){if(this.atEnd(e))break;throw t}}this.attributes.iceOptions=t}parseFingerprint(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill);this.attributes.fingerprints.push({hashFunction:t,fingerprint:i})}parseExtmap(e){const t=this.extractOneOrMore(e,a);let i;\"/\"===this.peekChar(e)&&(this.extract(e,this.consume,\"/\"),i=this.extract(e,this.consumeToken)),this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeTill,o),n=I(I({entry:parseInt(t,10)},i&&{direction:i}),{},{extensionName:r});this.peekChar(e)===o&&(this.consumeAttributeSpace(e),n.extensionAttributes=this.extract(e,this.consumeTill)),this.attributes.extmaps.push(n)}parseSetup(e){if(this.attributes.setup)throw new Error(\"must only be one single 'a=setup' line.\");const t=this.extract(e,this.consumeTill);if(\"active\"!==t&&\"passive\"!==t&&\"actpass\"!==t&&\"holdconn\"!==t)throw new Error(\"role must be one of 'active', 'passive', 'actpass', 'holdconn'.\");this.attributes.setup=t}}class T extends v{constructor(...e){super(...e),_(this,\"attributes\",{unrecognized:[],groups:[],extmaps:[],fingerprints:[],identities:[]})}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"group\":this.parseGroup(e);break;case\"ice-lite\":this.parseIceLite();break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"fingerprint\":this.parseFingerprint(e);break;case\"setup\":this.parseSetup(e);break;case\"tls-id\":this.parseTlsId(e);break;case\"identity\":this.parseIdentity(e);break;case\"extmap\":this.parseExtmap(e);break;case\"msid-semantic\":this.parseMsidSemantic(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing session attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}digest(){return this.digested=!0,this.attributes}parseGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;)this.consumeAttributeSpace(e),i.push(this.extract(e,this.consumeToken));this.attributes.groups.push({semantic:t,identificationTag:i})}parseIceLite(){if(this.attributes.iceLite)throw new Error(\"Invalid ice-lite, should be only a single line of 'a=ice-lite'\");this.attributes.iceLite=!0}parseTlsId(e){if(this.attributes.tlsId)throw new Error(\"must be only one tld-id line\");this.attributes.tlsId=this.extractOneOrMore(e,E)}parseIdentity(e){const t=this.extractOneOrMore(e,f),i=[];for(;!this.atEnd(e)&&this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.extract(e,this.consume,\"=\");const r=this.extractOneOrMore(e,e=>e!==o&&p(e));i.push({name:t,value:r})}this.attributes.identities.push({assertionValue:t,extensions:i})}parseMsidSemantic(e){this.peekChar(e)===o&&this.consumeAttributeSpace(e);const t={semantic:this.extract(e,this.consumeToken),identifierList:[]};for(;;){try{this.consumeAttributeSpace(e)}catch(e){break}if(\"*\"===this.peekChar(e)){this.extract(e,this.consume,\"*\"),t.applyForAll=!0;break}{const i=this.extract(e,this.consumeTill,o);t.identifierList.push(i)}}this.attributes.msidSemantic=t}}class R extends v{constructor(e){super(),_(this,\"attributes\",void 0),-1!==e.protos.indexOf(\"RTP\")||e.protos.indexOf(\"rtp\"),this.attributes={unrecognized:[],candidates:[],extmaps:[],fingerprints:[],imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:[],ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:[]}}parse(e){if(this.digested)throw new Error(\"already digested\");try{switch(e.attField){case\"extmap\":this.parseExtmap(e);break;case\"setup\":this.parseSetup(e);break;case\"ice-ufrag\":this.parseIceUfrag(e);break;case\"ice-pwd\":this.parseIcePwd(e);break;case\"ice-options\":this.parseIceOptions(e);break;case\"candidate\":this.parseCandidate(e);break;case\"remote-candidate\":this.parseRemoteCandidate(e);break;case\"end-of-candidates\":this.parseEndOfCandidates();break;case\"fingerprint\":this.parseFingerprint(e);break;case\"rtpmap\":this.parseRtpmap(e);break;case\"ptime\":this.parsePtime(e);break;case\"maxptime\":this.parseMaxPtime(e);break;case\"sendrecv\":case\"recvonly\":case\"sendonly\":case\"inactive\":this.parseDirection(e);break;case\"ssrc\":this.parseSSRC(e);break;case\"fmtp\":this.parseFmtp(e);break;case\"rtcp-fb\":this.parseRtcpFb(e);break;case\"rtcp-mux\":this.parseRTCPMux();break;case\"rtcp-mux-only\":this.parseRTCPMuxOnly();break;case\"rtcp-rsize\":this.parseRTCPRsize();break;case\"rtcp\":this.parseRTCP(e);break;case\"mid\":this.parseMid(e);break;case\"msid\":this.parseMsid(e);break;case\"imageattr\":this.parseImageAttr(e);break;case\"rid\":this.parseRid(e);break;case\"simulcast\":this.parseSimulcast(e);break;case\"sctp-port\":this.parseSctpPort(e);break;case\"max-message-size\":this.parseMaxMessageSize(e);break;case\"ssrc-group\":this.parseSSRCGroup(e);break;default:e.ignored=!0,this.attributes.unrecognized.push(e)}}catch(t){throw console.error(\"parsing media attribute \".concat(e.attField,' error, \"a=').concat(e.attField,\":\").concat(e.attValue,'\"')),t}if(!e.ignored&&e.attValue&&!this.atEnd(e))throw new Error(\"attribute parsing error\")}parseCandidate(e){const t=this.extractOneOrMore(e,g,[1,32]);this.consumeAttributeSpace(e);const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const n=this.extractOneOrMore(e,a,[1,10]);this.consumeAttributeSpace(e);const s=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const d=this.extract(e,this.consumePort);this.consumeAttributeSpace(e),this.extract(e,this.consume,\"typ\"),this.consumeAttributeSpace(e);const u={foundation:t,componentId:i,transport:r,priority:n,connectionAddress:s,port:d,type:this.extract(e,this.consumeToken),extension:{}};for(this.peek(e,\" raddr\")&&(this.extract(e,this.consume,\" raddr\"),this.consumeAttributeSpace(e),u.relAddr=this.extract(e,this.consumeAddress)),this.peek(e,\" rport\")&&(this.extract(e,this.consume,\" rport\"),this.consumeAttributeSpace(e),u.relPort=this.extract(e,this.consumePort));this.peekChar(e)===o;){this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e),u.extension[t]=this.extractOneOrMore(e,c)}this.attributes.candidates.push(u)}parseRemoteCandidate(e){const t=[];for(;;){const i=this.extractOneOrMore(e,a,[1,5]);this.consumeAttributeSpace(e);const r=this.extract(e,this.consumeAddress);this.consumeAttributeSpace(e);const n=this.extract(e,this.consumePort);t.push({componentId:i,connectionAddress:r,port:n});try{this.consumeAttributeSpace(e)}catch(e){break}}this.attributes.remoteCandidatesList.push(t)}parseEndOfCandidates(){if(this.attributes.endOfCandidates)throw new Error(\"must be only one line of end-of-candidates\");this.attributes.endOfCandidates=!0}parseRtpmap(e){const t=this.extract(e,this.consumeToken);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\"/\");this.extract(e,this.consume,\"/\");const r={encodingName:i,clockRate:this.extractOneOrMore(e,a)};this.atEnd(e)||\"/\"!==this.peekChar(e)||(this.extract(e,this.consume,\"/\"),r.encodingParameters=parseInt(this.extract(e,this.consumeTill),10));const n=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));n?n.rtpMap=r:this.attributes.payloads.push({payloadType:parseInt(t,10),rtpMap:r,rtcpFeedbacks:[]})}parsePtime(e){if(this.attributes.ptime)throw new Error(\"must be only one line of ptime\");this.attributes.ptime=this.extract(e,this.consumeTill)}parseMaxPtime(e){if(this.attributes.maxPtime)throw new Error(\"must be only one line of ptime\");this.attributes.maxPtime=this.extract(e,this.consumeTill)}parseDirection(e){if(this.attributes.direction)throw new Error(\"must be only one line of direction info\");this.attributes.direction=e.attField}parseSSRC(e){const t=this.extractOneOrMore(e,a);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,\":\");let r;\":\"===this.peekChar(e)&&(this.extract(e,this.consume,\":\"),r=this.extract(e,this.consumeTill));const n=this.attributes.ssrcs.find(e=>e.ssrcId===parseInt(t,10));n?n.attributes[i]=r:this.attributes.ssrcs.push({ssrcId:parseInt(t,10),attributes:{[i]:r}})}parseFmtp(e){const t=this.extract(e,this.consumeTill,o);this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill),r={};i.split(\";\").forEach(e=>{let[t,i]=e.split(\"=\");t=t.trim();const n=\"string\"==typeof i?i.trim():null;\"string\"==typeof t&&t.length>0&&(r[t]=n)});const n=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));n?n.fmtp={parameters:r}:this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[],fmtp:{parameters:r}})}parseFmtParameters(e){const t={},i=this.extract(e,this.consumeTill,\"=\");e._cur++;const r=this.extract(e,this.consumeTill,\";\");for(t[i]=r;\";\"===e.attValue[e._cur];){const i=this.extract(e,this.consumeTill,\"=\");e._cur++;const r=this.extract(e,this.consumeTill,\";\");t[i]=r}return t}parseRtcpFb(e){let t=\"\";t=\"*\"===this.peekChar(e)?this.extract(e,this.consume,\"*\"):this.extract(e,this.consumeTill,o),this.consumeAttributeSpace(e);const i=this.extract(e,this.consumeTill,o);let r;switch(i){case\"trr-int\":r={type:i,interval:this.extract(e,this.consumeTill)};break;case\"ack\":case\"nack\":default:{const t={type:i};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.parameter=this.extract(e,this.consumeToken),this.peekChar(e)===o&&(t.additional=this.extract(e,this.consumeTill))),r=t}}if(\"*\"===t)this.attributes.rtcpFeedbackWildcards.push(r);else{const e=this.attributes.payloads.find(e=>e.payloadType===parseInt(t,10));e?e.rtcpFeedbacks.push(r):this.attributes.payloads.push({payloadType:parseInt(t,10),rtcpFeedbacks:[r]})}}parseRTCPMux(){if(this.attributes.rtcpMux)throw new Error(\"must be single line of rtcp-mux\");this.attributes.rtcpMux=!0}parseRTCPMuxOnly(){if(this.attributes.rtcpMuxOnly)throw new Error(\"must be single line of rtcp-only\");this.attributes.rtcpMuxOnly=!0}parseRTCPRsize(){if(this.attributes.rtcpRsize)throw new Error(\"must be single line of rtcp-rsize\");this.attributes.rtcpRsize=!0}parseRTCP(e){if(this.attributes.rtcp)throw new Error(\"must be single line of rtcp\");const t={port:this.extract(e,this.consumePort)};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.netType=this.extractOneOrMore(e,u),this.consumeAttributeSpace(e),t.addressType=this.extractOneOrMore(e,u),this.consumeAttributeSpace(e),t.address=this.extract(e,this.consumeAddress)),this.attributes.rtcp=t}parseMsid(e){const t={id:this.extractOneOrMore(e,u,[1,64])};this.peekChar(e)===o&&(this.consumeAttributeSpace(e),t.appdata=this.extractOneOrMore(e,u,[1,64])),this.attributes.msids.push(t)}parseImageAttr(e){this.attributes.imageattr.push(e.attValue)}parseRid(e){const t=this.extractOneOrMore(e,e=>A(e)||a(e)||\"_\"===e||\"-\"===e);this.consumeAttributeSpace(e);const i={id:t,direction:this.extract(e,this.consumeToken),params:[]};if(this.peekChar(e)===o){if(this.consumeAttributeSpace(e),this.peek(e,\"pt=\")){this.extract(e,this.consume,\"pt=\");const t=[];for(;;){const i=this.extract(e,this.consumeToken);t.push(i);try{this.extract(e,this.consume,\",\")}catch(e){break}}i.payloads=t,this.peekChar(e)===o&&this.extract(e,this.consume,o)}for(;;){const t=this.extract(e,this.consumeToken);switch(t){case\"depend\":{const r={type:t,rids:this.extract(e,this.consume,\"=\").split(\",\")};i.params.push(r);break}case\"max-width\":case\"height-width\":case\"max-fps\":case\"max-fs\":case\"max-br\":case\"max-pps\":case\"max-bpp\":default:{const r={type:t};\"=\"===this.peekChar(e)&&(this.extract(e,this.consume,\"=\"),r.val=this.extract(e,this.consumeTill,\";\")),i.params.push(r)}}try{this.extract(e,this.consume,\";\")}catch(e){break}}}this.attributes.rids.push(i)}parseSimulcast(e){if(this.attributes.simulcast)throw new Error(\"must be single line of simulcast\");this.attributes.simulcast=e.attValue,this.extract(e,this.consumeTill)}parseSctpPort(e){this.attributes.sctpPort=this.extractOneOrMore(e,a,[1,5])}parseMaxMessageSize(e){this.attributes.maxMessageSize=this.extractOneOrMore(e,a,[1,void 0])}digest(){return this.digested=!0,this.attributes}parseMid(e){this.attributes.mid=this.extract(e,this.consumeToken)}parseSSRCGroup(e){const t=this.extract(e,this.consumeToken),i=[];for(;;)try{this.consumeAttributeSpace(e);const t=this.extract(e,this.consumeInteger);i.push(parseInt(t,10))}catch(e){break}this.attributes.ssrcGroups.push({semantic:t,ssrcIds:i})}}function y(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class w{constructor(){y(this,\"eol\",n)}print(e,t){let i=\"\";return t&&(this.eol=t),i+=this.printVersion(e.version),i+=this.printOrigin(e.origin),i+=this.printSessionName(e.sessionName),i+=this.printInformation(e.information),i+=this.printUri(e.uri),i+=this.printEmail(e.emails),i+=this.printPhone(e.phones),i+=this.printConnection(e.connection),i+=this.printBandwidth(e.bandwidths),i+=this.printTimeFields(e.timeFields),i+=this.printKey(e.key),i+=this.printSessionAttributes(e.attributes),i+=this.printMediaDescription(e.mediaDescriptions),i}printVersion(e){return\"v=\".concat(e).concat(this.eol)}printOrigin(e){return\"o=\".concat(e.username,\" \").concat(e.sessId,\" \").concat(e.sessVersion,\" \").concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.unicastAddress).concat(this.eol)}printSessionName(e){return e?\"s=\".concat(e).concat(this.eol):\"\"}printInformation(e){return e?\"i=\".concat(e).concat(this.eol):\"\"}printUri(e){return e?\"u=\".concat(e).concat(this.eol):\"\"}printEmail(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printPhone(e){let t=\"\";for(const i of e)t+=\"e=\".concat(i).concat(this.eol);return t}printConnection(e){return e?\"c=\".concat(e.nettype,\" \").concat(e.addrtype,\" \").concat(e.address).concat(this.eol):\"\"}printBandwidth(e){let t=\"\";for(const i of e)t+=\"b=\".concat(i.bwtype,\":\").concat(i.bandwidth).concat(this.eol);return t}printTimeFields(e){let t=\"\";for(const i of e){t+=\"t=\".concat(i.time.startTime,\" \").concat(i.time.startTime).concat(this.eol);for(const e of i.repeats)t+=\"r=\".concat(e.repeatInterval,\" \").concat(e.typedTimes.join(\" \")).concat(this.eol);i.zoneAdjustments&&(t+=\"z=\",t+=\"z=\".concat(i.zoneAdjustments.map(e=>\"\".concat(e.time,\" \").concat(e.back?\"-\":\"\",\" \").concat(e.typedTime)).join(\" \")).concat(this.eol),t+=this.eol)}return t}printKey(e){return e?\"k=\".concat(e).concat(this.eol):\"\"}printAttributes(e){let t=\"\";for(const i of e)t+=\"a=\".concat(i.attField).concat(i.attValue?\":\".concat(i.attValue):\"\").concat(this.eol);return t}printMediaDescription(e){let t=\"\";for(const i of e)t+=this.printMedia(i.media),t+=this.printInformation(i.information),t+=this.printConnections(i.connections),t+=this.printBandwidth(i.bandwidths),t+=this.printKey(i.key),t+=this.printMediaAttributes(i);return t}printConnections(e){let t=\"\";for(const i of e)t+=this.printConnection(i);return t}printMedia(e){return\"m=\".concat(e.mediaType,\" \").concat(e.port,\" \").concat(e.protos.join(\"/\"),\" \").concat(e.fmts.join(\" \")).concat(this.eol)}printSessionAttributes(e){return new N(this.eol).print(e)}printMediaAttributes(e){return new O(this.eol).print(e)}}class b{constructor(e){y(this,\"eol\",void 0),this.eol=e}printIceUfrag(e){return void 0===e?\"\":\"a=ice-ufrag:\".concat(e).concat(this.eol)}printIcePwd(e){return void 0===e?\"\":\"a=ice-pwd:\".concat(e).concat(this.eol)}printIceOptions(e){return void 0===e?\"\":\"a=ice-options:\".concat(e.join(o)).concat(this.eol)}printFingerprints(e){return e.length>0?e.map(e=>\"a=fingerprint:\".concat(e.hashFunction).concat(o).concat(e.fingerprint)).join(this.eol)+this.eol:\"\"}printExtmap(e){return e.map(e=>\"a=extmap:\".concat(e.entry).concat(e.direction?\"/\".concat(e.direction):\"\").concat(o).concat(e.extensionName).concat(e.extensionAttributes?\"\".concat(o).concat(e.extensionAttributes):\"\").concat(this.eol)).join(\"\")}printSetup(e){return void 0===e?\"\":\"a=setup:\".concat(e).concat(this.eol)}printUnrecognized(e){return e.map(e=>\"a=\".concat(e.attField).concat(e.attValue?\":\".concat(e.attValue):\"\").concat(this.eol)).join(\"\")}}class N extends b{print(e){let t=\"\";return t+=this.printGroups(e.groups),t+=this.printMsidSemantic(e.msidSemantic),t+=this.printIceLite(e.iceLite),t+=this.printIceUfrag(e.iceUfrag),t+=this.printIcePwd(e.icePwd),t+=this.printIceOptions(e.iceOptions),t+=this.printFingerprints(e.fingerprints),t+=this.printSetup(e.setup),t+=this.printTlsId(e.tlsId),t+=this.printIdentity(e.identities),t+=this.printExtmap(e.extmaps),t+=this.printUnrecognized(e.unrecognized),t}printGroups(e){let t=\"\";return e.length>0&&(t+=e.map(e=>\"a=group:\".concat(e.semantic).concat(e.identificationTag.map(e=>\"\".concat(o).concat(e)).join(\"\")).concat(this.eol)).join(\"\")),t}printIceLite(e){return void 0===e?\"\":\"a=ice-lite\"+this.eol}printTlsId(e){return e?\"a=tls-id:\".concat(e).concat(this.eol):\"\"}printIdentity(e){return 0===e.length?\"\":e.map(e=>\"a=identity:\".concat(e.assertionValue).concat(e.extensions.map(e=>\"\".concat(o).concat(e.name).concat(e.value?\"=\".concat(e.value):\"\")))).join(this.eol)+this.eol}printMsidSemantic(e){if(!e)return\"\";let t=\"a=msid-semantic:\".concat(e.semantic);return e.applyForAll?t+=\"\".concat(o,\"*\"):e.identifierList.length>0&&(t+=e.identifierList.map(e=>\"\".concat(o).concat(e))),t+this.eol}}class O extends b{print(e){const t=e.attributes;let i=\"\";return i+=this.printRTCP(t.rtcp),i+=this.printIceUfrag(t.iceUfrag),i+=this.printIcePwd(t.icePwd),i+=this.printIceOptions(t.iceOptions),i+=this.printCandidates(t.candidates),i+=this.printRemoteCandidatesList(t.remoteCandidatesList),i+=this.printEndOfCandidates(t.endOfCandidates),i+=this.printFingerprints(t.fingerprints),i+=this.printSetup(t.setup),i+=this.printMid(t.mid),i+=this.printExtmap(t.extmaps),i+=this.printRTPRelated(t),i+=this.printPtime(t.ptime),i+=this.printMaxPtime(t.maxPtime),i+=this.printDirection(t.direction),i+=this.printSSRCGroups(t.ssrcGroups),i+=this.printSSRC(t.ssrcs),i+=this.printRTCPMux(t.rtcpMux),i+=this.printRTCPMuxOnly(t.rtcpMuxOnly),i+=this.printRTCPRsize(t.rtcpRsize),i+=this.printMSId(t.msids),i+=this.printImageattr(t.imageattr),i+=this.printRid(t.rids),i+=this.printSimulcast(t.simulcast),i+=this.printSCTPPort(t.sctpPort),i+=this.printMaxMessageSize(t.maxMessageSize),i+=this.printUnrecognized(t.unrecognized),i}printCandidates(e){return e.map(e=>\"a=candidate:\".concat(e.foundation).concat(o).concat(e.componentId).concat(o).concat(e.transport).concat(o).concat(e.priority).concat(o).concat(e.connectionAddress).concat(o).concat(e.port).concat(o,\"typ\").concat(o).concat(e.type).concat(e.relAddr?\"\".concat(o,\"raddr\").concat(o).concat(e.relAddr):\"\").concat(e.relPort?\"\".concat(o,\"rport\").concat(o).concat(e.relPort):\"\").concat(Object.keys(e.extension).map(t=>\"\".concat(o).concat(t).concat(o).concat(e.extension[t])).join(\"\")).concat(this.eol)).join(\"\")}printRemoteCandidatesList(e){return e.map(e=>\"a=remote-candidates:\".concat(e.join(o)).concat(this.eol)).join(\"\")}printEndOfCandidates(e){return void 0===e?\"\":\"a=end-of-candidates\"+this.eol}printRTPRelated(e){if(!e.payloads)return\"\";const t=e.payloads;let i=\"\";i+=e.rtcpFeedbackWildcards.map(e=>this.printRTCPFeedback(\"*\",e)).join(\"\");for(const e of t)i+=this.printRtpMap(e.payloadType,e.rtpMap),i+=this.printFmtp(e.payloadType,e.fmtp),i+=e.rtcpFeedbacks.map(t=>this.printRTCPFeedback(e.payloadType,t)).join(\"\");return i}printFmtp(e,t){if(!t)return\"\";const i=Object.keys(t.parameters);return 1===i.length&&null===t.parameters[i[0]]?\"a=fmtp:\".concat(e).concat(o).concat(i[0]).concat(this.eol):\"a=fmtp:\".concat(e).concat(o).concat(Object.keys(t.parameters).map(e=>\"\".concat(e,\"=\").concat(t.parameters[e])).join(\";\")).concat(this.eol)}printRtpMap(e,t){return t?\"a=rtpmap:\".concat(e).concat(o).concat(t.encodingName,\"/\").concat(t.clockRate).concat(t.encodingParameters?\"/\".concat(t.encodingParameters):\"\").concat(this.eol):\"\"}printRTCPFeedback(e,t){let i=\"a=rtcp-fb:\".concat(e).concat(o),r=t;switch(r.type){case\"trr-int\":i+=\"ttr-int\".concat(o).concat(r.interval);break;case\"ack\":case\"nack\":default:r=r,i+=\"\".concat(r.type),r.parameter&&(i+=\"\".concat(o).concat(r.parameter),r.additional&&(i+=\"\".concat(o).concat(r.additional)))}return i+this.eol}printPtime(e){return void 0===e?\"\":\"a=ptime:\".concat(e).concat(this.eol)}printMaxPtime(e){return void 0===e?\"\":\"a=maxptime:\".concat(e).concat(this.eol)}printDirection(e){return void 0===e?\"\":\"a=\".concat(e).concat(this.eol)}printSSRC(e){return e.map(e=>Object.keys(e.attributes).map(t=>\"a=ssrc:\".concat(e.ssrcId.toString(10)).concat(o).concat(t).concat(e.attributes[t]?\":\".concat(e.attributes[t]):\"\").concat(this.eol)).join(\"\")).join(\"\")}printRTCPMux(e){return void 0===e?\"\":\"a=rtcp-mux\".concat(this.eol)}printRTCPMuxOnly(e){return void 0===e?\"\":\"a=rtcp-mux-only\".concat(this.eol)}printRTCPRsize(e){return void 0===e?\"\":\"a=rtcp-rsize\".concat(this.eol)}printRTCP(e){if(void 0===e)return\"\";let t=\"a=rtcp:\".concat(e.port);return e.netType&&(t+=\"\".concat(o).concat(e.netType)),e.addressType&&(t+=\"\".concat(o).concat(e.addressType)),e.address&&(t+=\"\".concat(o).concat(e.address)),t+this.eol}printMSId(e){return e.map(e=>\"a=msid:\".concat(e.id).concat(e.appdata?\"\".concat(o).concat(e.appdata):\"\").concat(this.eol)).join(\"\")}printImageattr(e){return e.map(e=>\"a=imageattr:\".concat(e).concat(this.eol)).join(\"\")}printRid(e){return e.map(e=>{let t=\"a=rid:\".concat(e.id).concat(o).concat(e.direction);return e.payloads&&(t+=\"\".concat(o,\"pt=\").concat(e.payloads.join(\",\"))),e.params.length>0&&(t+=\"\".concat(o).concat(e.params.map(e=>\"depend\"===e.type?\"depend=\".concat(e.rids.join(\",\")):\"\".concat(e.type,\"=\").concat(e.val)).join(\";\"))),t+this.eol}).join(\"\")}printSimulcast(e){return void 0===e?\"\":\"a=simulcast:\".concat(e).concat(this.eol)}printSCTPPort(e){return void 0===e?\"\":\"a=sctp-port:\".concat(e).concat(this.eol)}printMaxMessageSize(e){return void 0===e?\"\":\"a=max-message-size:\".concat(e).concat(this.eol)}printMid(e){return void 0===e?\"\":\"a=mid:\".concat(e).concat(this.eol)}printSSRCGroups(e){return e.map(e=>\"a=ssrc-group:\".concat(e.semantic).concat(e.ssrcIds.map(e=>\"\".concat(o).concat(e.toString(10))).join(\"\")).concat(this.eol)).join(\"\")}}function D(e){return(new S).parse(e)}function P(e,t){return(new w).print(e,t)}}},t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={exports:{}};return e[r](n,n.exports,i),n.exports}return i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},i(8)})()}(W$);class u1{constructor(e){MN(this,\"sessionDesc\",void 0),MN(this,\"localCapabilities\",void 0),MN(this,\"rtpCapabilities\",void 0),MN(this,\"candidates\",void 0),MN(this,\"iceParameters\",void 0),MN(this,\"dtlsParameters\",void 0),MN(this,\"setup\",void 0),MN(this,\"currentMidIndex\",void 0),MN(this,\"cname\",void 0),e=PK(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:r,remoteRTPCapabilities:n,remoteSetup:o,localCapabilities:s,sdkCodec:a,cname:c}=e,d=W$.exports.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE audio video\\na=msid-semantic: WMS\\na=ice-lite\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:audio\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendrecv\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:video\\n\");this.rtpCapabilities=n,this.candidates=r,this.iceParameters=t,this.dtlsParameters=i,this.setup=o,this.localCapabilities=s,this.cname=c;for(let e=0;e<d.mediaDescriptions.length;e++){const s=d.mediaDescriptions[e];if(s.attributes.iceUfrag=t.iceUfrag,s.attributes.icePwd=t.icePwd,s.attributes.fingerprints=i.fingerprints,s.attributes.candidates=r,s.attributes.setup=o,\"video\"===s.media.mediaType){s.media.fmts=n.videoCodecs.map(e=>e.payloadType.toString(10));const e=n.videoCodecs.filter(e=>{var t;return null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase().includes(a)});if(0===e.length)throw new Error(\"Codec \".concat(a,\" not supported by remote SDP.\"));s.attributes.payloads=e,s.attributes.extmaps=n.videoExtensions}\"audio\"===s.media.mediaType&&(s.media.fmts=n.audioCodecs.map(e=>e.payloadType.toString(10)),s.attributes.payloads=n.audioCodecs,s.attributes.extmaps=n.audioExtensions),d.mediaDescriptions[e]=this.mungMediaDesc(s)}this.sessionDesc=d,this.currentMidIndex=d.mediaDescriptions.length-1}toString(){return W$.exports.print(this.sessionDesc)}send(e,t,i){const{ssrcs:r,ssrcGroups:n}=$$(t,this.cname),o=this.sessionDesc.mediaDescriptions.find(t=>e===AB.VIDEO?\"video\"===t.media.mediaType:\"audio\"===t.media.mediaType),s=r[0].attributes.label,a=r[0].attributes.mslabel;return o.attributes.ssrcs=o.attributes.ssrcs.concat(r),o.attributes.ssrcGroups=o.attributes.ssrcGroups.concat(n),{id:s,mslabel:a}}batchSend(e){return e.map(e=>{let{kind:t,ssrcMsg:i}=e;return this.send(t,i,void 0)})}stopSending(e){this.sessionDesc.mediaDescriptions.forEach(t=>{const i=[],r=[],n=[];t.attributes.ssrcs.forEach(t=>{e.includes(t.attributes.label||\"\")?n.push(t):i.push(t)}),t.attributes.ssrcGroups.forEach(e=>{n.map(e=>e.ssrcId).includes(e.ssrcIds[0])||r.push(e)}),t.attributes.ssrcs=i,t.attributes.ssrcGroups=r})}mute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}receive(e,t,i){e.forEach((e,t)=>{const i=e._mediaStreamTrack,r=this.sessionDesc.mediaDescriptions.findIndex(e=>e.attributes.mid===i.kind),n=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[r],e);this.sessionDesc.mediaDescriptions[r]=n})}stopReceiving(e){}restartICE(e){e=PK(e),this.iceParameters=e,this.sessionDesc.mediaDescriptions.forEach(t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd})}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}mungRecvMediaDsec(e,t){const i=PK(e);return e1(i,t),i1(i,t),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex(t=>t.attributes.mid===e);if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}updateTrackLabel(e,t,i){const r=this.sessionDesc.mediaDescriptions.find(t=>e===AB.VIDEO?\"video\"===t.attributes.mid:\"audio\"===t.attributes.mid);if(r){const e=r.attributes.ssrcs.find(e=>e.attributes.label===t);var n;if(e)e.attributes.label=i,null===(n=e.attributes.msid)||void 0===n||n.replace(t,i)}}mungMediaDesc(e){const t=PK(e);return t1(t),function(e){const t=e.attributes.extmaps.find(e=>\"http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\"===e.extensionName);t&&e.attributes.extmaps.splice(e.attributes.extmaps.indexOf(t),1),e.attributes.payloads.forEach(e=>{const t=e.rtcpFeedbacks.findIndex(e=>\"transport-cc\"===e.type);-1!==t&&e.rtcpFeedbacks.splice(t,1)})}(t),t}getSSRC(e){for(const t of this.sessionDesc.mediaDescriptions)for(const i of t.attributes.ssrcs)if(i.attributes.label===e)return[i]}}function h1(e){if(Array.isArray(e))return e.map((function(e){return e}));if(!A1(e))return e;var t={};for(var i in e)A1(e[i])||Array.isArray(e[i])?t[i]=h1(e[i]):t[i]=e[i];return t}function A1(e){return!(\"object\"!=typeof e||Array.isArray(e)||!e)}var l1=function(){function e(e){this.input=[],this.size=e}return e.prototype.add=function(e){this.input.push(e),this.input.length>this.size&&this.input.splice(0,1)},e.prototype.diffMean=function(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length},e}(),p1=function(e,t){return(p1=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(e,t)};\n/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation. All rights reserved.\n\tLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n\tthis file except in compliance with the License. You may obtain a copy of the\n\tLicense at http://www.apache.org/licenses/LICENSE-2.0\n\n\tTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\tKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n\tWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n\tMERCHANTABLITY OR NON-INFRINGEMENT.\n\n\tSee the Apache Version 2.0 License for specific language governing permissions\n\tand limitations under the License.\n\t***************************************************************************** */function g1(e,t){function i(){this.constructor=e}p1(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}var E1=function(){return(E1=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};function f1(e,t,i,r){return new(i||(i=Promise))((function(n,o){function s(e){try{c(r.next(e))}catch(e){o(e)}}function a(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){e.done?n(e.value):new i((function(t){t(e.value)})).then(s,a)}c((r=r.apply(e,t||[])).next())}))}function m1(e,t){var i,r,n,o,s={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(i)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(i=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(n=s.trys,(n=n.length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){s.label=o[1];break}if(6===o[0]&&s.label<n[1]){s.label=n[1],n=o;break}if(n&&s.label<n[2]){s.label=n[2],s.ops.push(o);break}n[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],r=0}finally{i=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}var I1,_1={address:\"unknown\",candidateType:\"unknown\",id:\"unknown\",port:0,priority:0,protocol:\"unknown\",type:\"unknown\"},C1={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[],selectedCandidatePair:{id:\"unknown\",localCandidate:_1,remoteCandidate:_1}},S1={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,qpSumPerFrame:0},v1={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0,qpSumPerFrame:0},T1={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0},R1={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0},y1=function(){function e(e,t){var i=this;this.videoIsReady=!1,this.videoIsReady2={},this.stats=h1(C1),this.isFirstVideoReceived={},this.isFirstVideoDecoded={},this.isFirstAudioReceived={},this.isFirstAudioDecoded={},this.lossRateWindowStats=[],this.pc=e,this.options=t,this.intervalTimer=window.setInterval((function(){return f1(i,void 0,void 0,(function(){return m1(this,(function(e){return this.updateStats(),[2]}))}))}),this.options.updateInterval)}return e.prototype.getStats=function(){return this.stats},e.prototype.setVideoIsReady=function(e){this.videoIsReady=e},e.prototype.setVideoIsReady2=function(e,t){this.videoIsReady2[e]=t},e.prototype.getVideoIsReady=function(e){return this.videoIsReady2[e]||!1},e.prototype.setIsFirstAudioDecoded=function(e){},e.prototype.destroy=function(){window.clearInterval(this.intervalTimer),this.pc=void 0},e.prototype.calcLossRate=function(e){var t=this;this.lossRateWindowStats.push(e),this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);for(var i=this.lossRateWindowStats.length,r=0,n=0,o=0,s=0,a=function(a){e[a].forEach((function(e,c){if(t.lossRateWindowStats[i-1][a][c]&&t.lossRateWindowStats[0][a][c]){var d=t.lossRateWindowStats[i-1][a][c].packets-t.lossRateWindowStats[0][a][c].packets,u=t.lossRateWindowStats[i-1][a][c].packetsLost-t.lossRateWindowStats[0][a][c].packetsLost;\"videoSend\"===a||\"audioSend\"===a?(r+=d,o+=u):(n+=d,s+=u),Number.isNaN(d)||Number.isNaN(d)?e.packetLostRate=0:e.packetLostRate=d<=0||u<=0?0:u/(d+u)}}))},c=0,d=[\"videoSend\",\"audioSend\",\"videoRecv\",\"audioRecv\"];c<d.length;c++){a(d[c])}e.sendPacketLossRate=r<=0||o<=0?0:o/(r+o),e.recvPacketLossRate=n<=0||s<=0?0:s/(n+s)},e}(),w1=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._stats=C1,t.lastDecodeVideoReceiverStats=new Map,t}return g1(t,e),t.prototype.updateStats=function(){return f1(this,void 0,void 0,(function(){var e,t,i,r;return m1(this,(function(n){switch(n.label){case 0:return[4,this._getStats()];case 1:return e=n.sent(),t=this.statsResponsesToObjects(e),this._stats=h1(C1),i=t.filter((function(e){return\"ssrc\"===e.type})),this.processSSRCStats(i),(r=t.find((function(e){return\"VideoBwe\"===e.type})))&&this.processBandwidthStats(r),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}}))}))},t.prototype.processBandwidthStats=function(e){this._stats.bitrate={actualEncoded:Number(e.googActualEncBitrate),targetEncoded:Number(e.googTargetEncBitrate),retransmit:Number(e.googRetransmitBitrate),transmit:Number(e.googTransmitBitrate)},this._stats.sendBandwidth=Number(e.googAvailableSendBandwidth)},t.prototype.processSSRCStats=function(e){var t=this;e.forEach((function(e){var i=e.id.includes(\"send\");switch(e.mediaType+\"_\"+(i?\"send\":\"recv\")){case\"video_send\":var r=h1(v1);r.codec=e.googCodecName,r.adaptionChangeReason=\"none\",e.googCpuLimitedResolution&&(r.adaptionChangeReason=\"cpu\"),e.googBandwidthLimitedResolution&&(r.adaptionChangeReason=\"bandwidth\"),r.avgEncodeMs=Number(e.googAvgEncodeMs),r.inputFrame={width:Number(e.googFrameWidthInput)||Number(e.googFrameWidthSent),height:Number(e.googFrameHeightInput)||Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},r.sentFrame={width:Number(e.googFrameWidthSent),height:Number(e.googFrameHeightSent),frameRate:Number(e.googFrameRateInput)},r.firsCount=Number(e.googFirReceived),r.nacksCount=Number(e.googNacksReceived),r.plisCount=Number(e.googPlisReceived),r.frameCount=Number(e.framesEncoded),r.bytes=Number(e.bytesSent),r.packets=Number(e.packetsSent),r.packetsLost=Number(e.packetsLost),r.ssrc=Number(e.ssrc),r.rttMs=Number(e.googRtt||0),t._stats.videoSend.push(r),t._stats.rtt=r.rttMs;break;case\"video_recv\":var n=h1(S1),o=t.lastDecodeVideoReceiverStats.get(Number(e.ssrc));if(n.codec=e.googCodecName,n.targetDelayMs=Number(e.googTargetDelayMs),n.renderDelayMs=Number(e.googRenderDelayMs),n.currentDelayMs=Number(e.googCurrentDelayMs),n.minPlayoutDelayMs=Number(e.googMinPlayoutDelayMs),n.decodeMs=Number(e.googDecodeMs),n.maxDecodeMs=Number(e.googMaxDecodeMs),n.receivedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateReceived)},n.decodedFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateDecoded)},n.decodeFrameRate=Number(e.googFrameRateDecoded),n.outputFrame={width:Number(e.googFrameWidthReceived),height:Number(e.googFrameHeightReceived),frameRate:Number(e.googFrameRateOutput)},n.jitterBufferMs=Number(e.googJitterBufferMs),n.firsCount=Number(e.googFirsSent),n.nacksCount=Number(e.googNacksSent),n.plisCount=Number(e.googPlisSent),n.framesDecodeCount=Number(e.framesDecoded),n.bytes=Number(e.bytesReceived),n.packets=Number(e.packetsReceived),n.packetsLost=Number(e.packetsLost),n.ssrc=Number(e.ssrc),n.packets>0&&!t.isFirstVideoReceived[n.ssrc]&&(t.onFirstVideoReceived&&t.onFirstVideoReceived(n.ssrc),t.isFirstVideoReceived[n.ssrc]=!0),n.framesDecodeCount>0&&!t.isFirstVideoDecoded[n.ssrc]&&(t.onFirstVideoDecoded&&t.onFirstVideoDecoded(n.ssrc,n.decodedFrame.width,n.decodedFrame.height),t.isFirstVideoDecoded[n.ssrc]=!0),o){var s=o.stats,a=Date.now()-o.lts;n.framesDecodeFreezeTime=s.framesDecodeFreezeTime,n.framesDecodeInterval=s.framesDecodeInterval,n.framesDecodeCount>s.framesDecodeCount&&t.isFirstVideoDecoded[n.ssrc]?(o.lts=Date.now(),n.framesDecodeInterval=a,n.framesDecodeInterval>=t.options.freezeRateLimit&&(t.getVideoIsReady(parseInt(e.ssrc,10))?n.framesDecodeFreezeTime+=n.framesDecodeInterval:t.setVideoIsReady2(parseInt(e.ssrc,10),!0))):n.framesDecodeCount<o.stats.framesDecodeCount&&(n.framesDecodeInterval=0)}t.lastDecodeVideoReceiverStats.set(n.ssrc,{stats:E1({},n),lts:Date.now()}),t._stats.videoRecv.push(n);break;case\"audio_recv\":var c=h1(R1);c.codec=e.googCodecName,c.outputLevel=Math.abs(Number(e.audioOutputLevel))/32767,c.decodingCNG=Number(e.googDecodingCNG),c.decodingCTN=Number(e.googDecodingCTN),c.decodingCTSG=Number(e.googDecodingCTSG),c.decodingNormal=Number(e.googDecodingNormal),c.decodingPLC=Number(e.googDecodingPLC),c.decodingPLCCNG=Number(e.googDecodingPLCCNG),c.expandRate=Number(e.googExpandRate),c.accelerateRate=Number(e.googAccelerateRate),c.preemptiveExpandRate=Number(e.googPreemptiveExpandRate),c.secondaryDecodedRate=Number(e.googSecondaryDecodedRate),c.speechExpandRate=Number(e.googSpeechExpandRate),c.preferredJitterBufferMs=Number(e.googPreferredJitterBufferMs),c.jitterBufferMs=Number(e.googJitterBufferMs),c.jitterMs=Number(e.googJitterReceived),c.bytes=Number(e.bytesReceived),c.packets=Number(e.packetsReceived),c.packetsLost=Number(e.packetsLost),c.ssrc=Number(e.ssrc),c.receivedFrames=Number(e.googDecodingCTN)||Number(e.packetsReceived),c.droppedFrames=Number(e.googDecodingPLC)+Number(e.googDecodingPLCCNG)||Number(e.packetsLost),c.receivedFrames>0&&!t.isFirstAudioReceived[c.ssrc]&&(t.onFirstAudioReceived&&t.onFirstAudioReceived(c.ssrc),t.isFirstAudioReceived[c.ssrc]=!0),c.decodingNormal>0&&!t.isFirstAudioDecoded[c.ssrc]&&(t.onFirstAudioDecoded&&t.onFirstAudioDecoded(c.ssrc),t.isFirstAudioDecoded[c.ssrc]=!0),t._stats.audioRecv.push(c);break;case\"audio_send\":var d=h1(T1);d.codec=e.googCodecName,d.inputLevel=Math.abs(Number(e.audioInputLevel))/32767,d.aecReturnLoss=Number(e.googEchoCancellationReturnLoss||0),d.aecReturnLossEnhancement=Number(e.googEchoCancellationReturnLossEnhancement||0),d.residualEchoLikelihood=Number(e.googResidualEchoLikelihood||0),d.residualEchoLikelihoodRecentMax=Number(e.googResidualEchoLikelihoodRecentMax||0),d.bytes=Number(e.bytesSent),d.packets=Number(e.packetsSent),d.packetsLost=Number(e.packetsLost),d.ssrc=Number(e.ssrc),d.rttMs=Number(e.googRtt||0),t._stats.rtt=d.rttMs,t._stats.audioSend.push(d)}}))},t.prototype._getStats=function(){var e=this;return new Promise((function(t,i){e.pc.getStats(t,i)}))},t.prototype.statsResponsesToObjects=function(e){var t=[];return e.result().forEach((function(e){var i={id:e.id,timestamp:e.timestamp.valueOf().toString(),type:e.type};e.names().forEach((function(t){i[t]=e.stat(t)})),t.push(i)})),t},t}(y1);!function(e){e.CERTIFICATE=\"certificate\",e.CODEC=\"codec\",e.CANDIDATE_PAIR=\"candidate-pair\",e.LOCAL_CANDIDATE=\"local-candidate\",e.REMOTE_CANDIDATE=\"remote-candidate\",e.INBOUND=\"inbound-rtp\",e.TRACK=\"track\",e.OUTBOUND=\"outbound-rtp\",e.PC=\"peer-connection\",e.REMOTE_INBOUND=\"remote-inbound-rtp\",e.REMOTE_OUTBOUND=\"remote-outbound-rtp\",e.TRANSPORT=\"transport\",e.CSRC=\"csrc\",e.DATA_CHANNEL=\"data-channel\",e.STREAM=\"stream\",e.SENDER=\"sender\",e.RECEIVER=\"receiver\"}(I1||(I1={}));var b1,N1=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._stats=C1,t.lastDecodeVideoReceiverStats=new Map,t.lastVideoFramesRecv=new Map,t.lastVideoFramesSent=new Map,t.lastVideoFramesDecode=new Map,t.lastVideoJBDelay=new Map,t.lastAudioJBDelay=new Map,t.mediaBytesSent=new Map,t.mediaBytesRetransmit=new Map,t.mediaBytesTargetEncode=new Map,t.lastEncoderMs=new Map,t}return g1(t,e),t.prototype.updateStats=function(){return f1(this,void 0,void 0,(function(){var e,t=this;return m1(this,(function(i){switch(i.label){case 0:return e=this,[4,this.pc.getStats()];case 1:return e.report=i.sent(),this._stats=h1(C1),this.report.forEach((function(e){switch(e.type){case I1.OUTBOUND:\"audio\"===e.mediaType?t.processAudioOutboundStats(e):\"video\"===e.mediaType&&t.processVideoOutboundStats(e);break;case I1.INBOUND:\"audio\"===e.mediaType?t.processAudioInboundStats(e):\"video\"===e.mediaType&&t.processVideoInboundStats(e);break;case I1.TRANSPORT:var i=t.report.get(e.selectedCandidatePairId);i&&t.processCandidatePairStats(i);break;case I1.CANDIDATE_PAIR:e.selected&&t.processCandidatePairStats(e)}})),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}}))}))},t.prototype.processCandidatePairStats=function(e){if(this._stats.sendBandwidth=e.availableOutgoingBitrate||0,e.currentRoundTripTime&&(this._stats.rtt=1e3*e.currentRoundTripTime),this._stats.videoSend.forEach((function(t){!t.rttMs&&e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.audioSend.forEach((function(t){!t.rttMs&&e.currentRoundTripTime&&(t.rttMs=1e3*e.currentRoundTripTime)})),this._stats.selectedCandidatePair.id=e.id,e.localCandidateId){var t=this.report.get(e.localCandidateId);t&&this.processCandidateStats(t)}if(e.remoteCandidateId){var i=this.report.get(e.remoteCandidateId);i&&this.processCandidateStats(i)}},t.prototype.processCandidateStats=function(e){var t;e.type===I1.LOCAL_CANDIDATE&&(t=this._stats.selectedCandidatePair.localCandidate),e.type===I1.REMOTE_CANDIDATE&&(t=this._stats.selectedCandidatePair.remoteCandidate),t&&(t.type=e.type,t.id=e.id,e.address&&(t.address=e.address),e.candidateType&&(t.candidateType=e.candidateType),e.port&&(t.port=e.port),e.priority&&(t.priority=e.priority),e.protocol&&(t.protocol=e.protocol),e.relayProtocol&&(t.relayProtocol=e.relayProtocol),e.type===I1.LOCAL_CANDIDATE&&this.stats.selectedCandidatePair.localCandidate.id!==t.id&&this.onSelectedLocalCandidateChanged&&this.onSelectedLocalCandidateChanged(E1({},t),E1({},this.stats.selectedCandidatePair.localCandidate)),e.type===I1.REMOTE_CANDIDATE&&this.stats.selectedCandidatePair.remoteCandidate.id!==t.id&&this.onSelectedRemoteCandidateChanged&&this.onSelectedRemoteCandidateChanged(E1({},t),E1({},this.stats.selectedCandidatePair.remoteCandidate)))},t.prototype.processAudioInboundStats=function(e){var t=this._stats.audioRecv.find((function(t){return t.ssrc===e.ssrc}));t||(t=h1(R1),this._stats.audioRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.jitterMs=1e3*e.jitter,e.trackId&&this.processAudioTrackReceiverStats(e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),t.receivedFrames||(t.receivedFrames=e.packetsReceived),t.droppedFrames||(t.droppedFrames=e.packetsLost),t.receivedFrames>0&&!this.isFirstAudioReceived[t.ssrc]&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(t.ssrc),this.isFirstAudioReceived[t.ssrc]=!0),t.outputLevel&&t.outputLevel>0&&!this.isFirstAudioDecoded[t.ssrc]&&(this.onFirstAudioDecoded&&this.onFirstAudioDecoded(t.ssrc),this.isFirstAudioDecoded[t.ssrc]=!0)},t.prototype.processVideoInboundStats=function(e){var t=this._stats.videoRecv.find((function(t){return t.ssrc===e.ssrc}));t||(t=h1(S1),this._stats.videoRecv.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsReceived,t.packetsLost=e.packetsLost,t.bytes=e.bytesReceived,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.framesDecodeCount=e.framesDecoded;var i=this.lastDecodeVideoReceiverStats.get(t.ssrc),r=this.lastVideoFramesDecode.get(t.ssrc),n=Date.now();if(t.framesDecodeCount>0&&!this.isFirstVideoDecoded[t.ssrc]){var o=t.decodedFrame?t.decodedFrame.width:0,s=t.decodedFrame?t.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(t.ssrc,o,s),this.isFirstVideoDecoded[t.ssrc]=!0}if(i){var a=i.stats,c=n-i.lts;t.framesDecodeFreezeTime=a.framesDecodeFreezeTime,t.framesDecodeInterval=a.framesDecodeInterval,!this.isFirstVideoDecoded[t.ssrc]&&c>this.options.firstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout&&this.onFirstVideoDecodedTimeout(t.ssrc),t.framesDecodeCount>a.framesDecodeCount&&this.isFirstVideoDecoded[t.ssrc]?(i.lts=Date.now(),t.framesDecodeInterval=c,t.framesDecodeInterval>=this.options.freezeRateLimit&&(this.getVideoIsReady(parseInt(e.ssrc))?t.framesDecodeFreezeTime+=t.framesDecodeInterval:this.setVideoIsReady2(parseInt(e.ssrc,10),!0))):t.framesDecodeCount<a.framesDecodeCount&&(t.framesDecodeInterval=0),e.framesDecoded&&e.qpSum&&(i.stats.framesDecodeCount>e.framesDecoded?t.qpSumPerFrame=e.qpSum/e.framesDecoded:t.qpSumPerFrame=(e.qpSum-i.qpSum)/(e.framesDecoded-i.stats.framesDecodeCount))}r&&n-r.lts>=800?(t.decodeFrameRate=Math.round((t.framesDecodeCount-r.count)/((n-r.lts)/1e3)),this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:n,rate:t.decodeFrameRate})):r?t.decodeFrameRate=r.rate:this.lastVideoFramesDecode.set(t.ssrc,{count:t.framesDecodeCount,lts:n,rate:0}),e.totalDecodeTime&&(t.decodeMs=1e3*e.totalDecodeTime),e.trackId&&this.processVideoTrackReceiverStats(e.trackId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.framerateMean&&(t.framesRateFirefox=e.framerateMean),t.packets>0&&!this.isFirstVideoReceived[t.ssrc]&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(t.ssrc),this.isFirstVideoReceived[t.ssrc]=!0),this.lastDecodeVideoReceiverStats.set(t.ssrc,{stats:E1({},t),lts:i?i.lts:Date.now(),qpSum:e.qpSum})},t.prototype.processVideoOutboundStats=function(e){var t=this._stats.videoSend.find((function(t){return t.ssrc===e.ssrc}));t||(t=h1(v1),this._stats.videoSend.push(t));var i,r=this.mediaBytesSent.get(e.ssrc);r?r.add(e.bytesSent):((o=new l1(10)).add(e.bytesSent),this.mediaBytesSent.set(e.ssrc,o));if(void 0!==e.retransmittedBytesSent){var n=this.mediaBytesRetransmit.get(e.ssrc);if(n)n.add(e.retransmittedBytesSent);else(o=new l1(10)).add(e.retransmittedBytesSent),this.mediaBytesRetransmit.set(e.ssrc,o)}if(e.totalEncodedBytesTarget){var o,s=this.mediaBytesTargetEncode.get(e.ssrc);if(s)s.add(e.totalEncodedBytesTarget);else(o=new l1(10)).add(e.totalEncodedBytesTarget),this.mediaBytesTargetEncode.set(e.ssrc,o)}if(t.ssrc=e.ssrc,t.bytes=e.bytesSent,t.packets=e.packetsSent,t.firsCount=e.firCount,t.nacksCount=e.nackCount,t.plisCount=e.pliCount,t.frameCount=e.framesEncoded,t.adaptionChangeReason=e.qualityLimitationReason,e.totalEncodeTime&&e.framesEncoded)if(!(i=this.lastEncoderMs.get(e.ssrc))||i.lastFrameCount>e.framesEncoded)t.avgEncodeMs=1e3*e.totalEncodeTime/e.framesEncoded;else{var a=e.framesEncoded-i.lastFrameCount,c=e.totalEncodeTime-i.lastEncoderTime;t.avgEncodeMs=1e3*c/a}e.framesEncoded&&e.qpSum&&(!(i=this.lastEncoderMs.get(e.ssrc))||i.lastFrameCount>e.framesEncoded?t.qpSumPerFrame=e.qpSum/e.framesEncoded:t.qpSumPerFrame=(e.qpSum-i.lastQpSum)/(e.framesEncoded-i.lastFrameCount));if(this.lastEncoderMs.set(e.ssrc,{lastFrameCount:e.framesEncoded,lastEncoderTime:e.totalEncodeTime,lastQpSum:e.qpSum,lts:Date.now()}),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.mediaSourceId&&this.processVideoMediaSource(e.mediaSourceId,t),e.trackId&&this.processVideoTrackSenderStats(e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{var d=this.findRemoteStatsId(e.ssrc,I1.REMOTE_INBOUND);d&&this.processRemoteInboundStats(d,t)}},t.prototype.processAudioOutboundStats=function(e){var t=this._stats.audioSend.find((function(t){return t.ssrc===e.ssrc}));if(t||(t=h1(T1),this._stats.audioSend.push(t)),t.ssrc=e.ssrc,t.packets=e.packetsSent,t.bytes=e.bytesSent,e.mediaSourceId&&this.processAudioMediaSource(e.mediaSourceId,t),e.codecId&&(t.codec=this.getCodecFromCodecStats(e.codecId)),e.trackId&&this.processAudioTrackSenderStats(e.trackId,t),e.remoteId)this.processRemoteInboundStats(e.remoteId,t);else{var i=this.findRemoteStatsId(e.ssrc,I1.REMOTE_INBOUND);i&&this.processRemoteInboundStats(i,t)}},t.prototype.findRemoteStatsId=function(e,t){var i=Array.from(this.report.values()).find((function(i){return i.type===t&&i.ssrc===e}));return i?i.id:null},t.prototype.processVideoMediaSource=function(e,t){var i=this.report.get(e);i&&i.width&&i.height&&i.framesPerSecond&&(t.inputFrame={width:i.width,height:i.height,frameRate:i.framesPerSecond})},t.prototype.processAudioMediaSource=function(e,t){var i=this.report.get(e);i&&(t.inputLevel=i.audioLevel)},t.prototype.processVideoTrackSenderStats=function(e,t){var i=this.report.get(e);if(i){var r=0,n=Date.now(),o=this.lastVideoFramesSent.get(t.ssrc);o&&n-o.lts>=800?(r=Math.round((i.framesSent-o.count)/((n-o.lts)/1e3)),this.lastVideoFramesSent.set(t.ssrc,{count:i.framesSent,lts:n,rate:r})):o?r=o.rate:this.lastVideoFramesSent.set(t.ssrc,{count:i.framesSent,lts:n,rate:0}),t.sentFrame={width:i.frameWidth,height:i.frameHeight,frameRate:r}}},t.prototype.processVideoTrackReceiverStats=function(e,t){var i=this.report.get(e);if(i){var r=this.lastVideoFramesRecv.get(t.ssrc),n=Date.now();t.framesReceivedCount=i.framesReceived;var o=0;if(r&&n-r.lts>=800?(o=Math.round((i.framesReceived-r.count)/((n-r.lts)/1e3)),this.lastVideoFramesRecv.set(t.ssrc,{count:i.framesReceived,lts:n,rate:o})):r?o=r.rate:this.lastVideoFramesRecv.set(t.ssrc,{count:i.framesReceived,lts:n,rate:0}),t.receivedFrame={width:i.frameWidth||0,height:i.frameHeight||0,frameRate:o||0},t.decodedFrame={width:i.frameWidth||0,height:i.frameHeight||0,frameRate:t.decodeFrameRate||0},t.outputFrame={width:i.frameWidth||0,height:i.frameHeight||0,frameRate:t.decodeFrameRate||0},i.jitterBufferDelay&&i.jitterBufferEmittedCount){var s=this.lastVideoJBDelay.get(t.ssrc);this.lastVideoJBDelay.set(t.ssrc,{jitterBufferDelay:i.jitterBufferDelay,jitterBufferEmittedCount:i.jitterBufferEmittedCount}),s||(s={jitterBufferDelay:0,jitterBufferEmittedCount:0});var a=1e3*(i.jitterBufferDelay-s.jitterBufferDelay)/(i.jitterBufferEmittedCount-s.jitterBufferEmittedCount);t.jitterBufferMs=a,t.currentDelayMs=Math.round(a)}}},t.prototype.processAudioTrackSenderStats=function(e,t){var i=this.report.get(e);i&&(t.aecReturnLoss=i.echoReturnLoss||0,t.aecReturnLossEnhancement=i.echoReturnLossEnhancement||0)},t.prototype.processAudioTrackReceiverStats=function(e,t){var i=this.report.get(e);if(i){if(i.removedSamplesForAcceleration&&i.totalSamplesReceived&&(t.accelerateRate=i.removedSamplesForAcceleration/i.totalSamplesReceived),i.jitterBufferDelay&&i.jitterBufferEmittedCount){var r=this.lastAudioJBDelay.get(t.ssrc);this.lastAudioJBDelay.set(t.ssrc,{jitterBufferDelay:i.jitterBufferDelay,jitterBufferEmittedCount:i.jitterBufferEmittedCount}),r||(r={jitterBufferDelay:0,jitterBufferEmittedCount:0});var n=1e3*(i.jitterBufferDelay-r.jitterBufferDelay)/(i.jitterBufferEmittedCount-r.jitterBufferEmittedCount);t.jitterBufferMs=Math.round(n)}t.outputLevel=i.audioLevel;var o=1920;i.totalSamplesDuration&&i.totalSamplesReceived&&(o=i.totalSamplesReceived/i.totalSamplesDuration/50,t.receivedFrames=Math.round(i.totalSamplesReceived/o)),i.concealedSamples&&(t.droppedFrames=Math.round(i.concealedSamples/o))}},t.prototype.processRemoteInboundStats=function(e,t){var i=this.report.get(e);i&&(t.packetsLost=i.packetsLost,i.roundTripTime&&(t.rttMs=1e3*i.roundTripTime))},t.prototype.getCodecFromCodecStats=function(e){var t=this.report.get(e);if(!t)return\"\";var i=t.mimeType.match(/\\/(.*)$/);return i&&i[1]?i[1]:\"\"},t.prototype.updateSendBitrate=function(){var e=0,t=null,i=null;this.mediaBytesSent.forEach((function(t){e+=t.diffMean()})),this.mediaBytesRetransmit.forEach((function(e){t=null===t?e.diffMean():t+e.diffMean()})),this.mediaBytesTargetEncode.forEach((function(e){i=null===i?e.diffMean():i+e.diffMean()}));var r=null!==t?e-t:e;this._stats.bitrate={actualEncoded:8*r/(this.options.updateInterval/1e3),transmit:8*e/(this.options.updateInterval/1e3)},null!==t&&(this._stats.bitrate.retransmit=8*t/(this.options.updateInterval/1e3)),null!==i&&(this._stats.bitrate.targetEncoded=8*i/(this.options.updateInterval/1e3))},t}(y1),O1=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g1(t,e),t.prototype.updateStats=function(){return Promise.resolve()},t}(y1);function D1(e,t,i,r,n){void 0===t&&(t=250),void 0===i&&(i=8),void 0===r&&(r=500),void 0===n&&(n=1e4);var o,s=(o=navigator.userAgent.toLocaleLowerCase().match(/chrome\\/[\\d]*/i))&&o[0]?Number(o[0].split(\"/\")[1]):null;return s?s<76?new w1(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:r,firstVideoDecodedTimeout:n}):new N1(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:r,firstVideoDecodedTimeout:n}):function(e){return!!window.RTCStatsReport&&e.getStats()instanceof Promise}(e)?new N1(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:r,firstVideoDecodedTimeout:n}):new O1(e,{updateInterval:t,lossRateInterval:i,freezeRateLimit:r,firstVideoDecodedTimeout:n})}function P1(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function L1(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?P1(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):P1(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let k1=(VV((b1=class e extends RB{get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}constructor(t,i){super(t,i),MN(this,\"store\",void 0),MN(this,\"peerConnection\",void 0),MN(this,\"remoteSDP\",void 0),MN(this,\"initialOffer\",void 0),MN(this,\"statsFilter\",void 0),MN(this,\"useRTX\",!1),MN(this,\"localCapabilities\",void 0),MN(this,\"localCandidateCount\",0),MN(this,\"allCandidatesReceived\",!1),MN(this,\"mutex\",new fj(\"P2PConnection-mutex\")),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=D1(this.peerConnection,void 0,void 0,gN()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(){try{const e=await this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=X$(e.sdp),i=q$(e.sdp,!this.useRTX,LP(\"FILTER_VIDEO_FEC\"),LP(\"FILTER_AUDIO_FEC\"),[\"opus\"]);return this.localCapabilities=i,this.initialOffer=e,L1(L1({},t),{},{rtpCapabilities:{send:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},recv:{audioCodecs:[],audioExtensions:[],videoCodecs:[],videoExtensions:[]},sendrecv:i},offerSDP:e.sdp})}catch(e){throw new QD(xD.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,r,n,o){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new u1({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:r.send,remoteSetup:n,localCapabilities:this.localCapabilities,sdkCodec:this.store.codec,cname:o});const s=this.remoteSDP.toString();await this.peerConnection.setLocalDescription(this.initialOffer),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}send(e,t){var i=this;return C$((function*(){const r=yield S$(i.mutex.lock());try{if(!i.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const n=e.map(e=>i.peerConnection.addTrack(e._mediaStreamTrack)),o=yield S$(i.peerConnection.createOffer()),s=W$.exports.parse(o.sdp),a=e.map(e=>{const t=e._mediaStreamTrack,r=s.mediaDescriptions.find(e=>e.attributes.mid===t.kind);if(!r)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return function(e,t,i){const r=e.attributes.ssrcs.filter(e=>e.attributes.label===t),n=e.attributes.ssrcGroups;if(0===r.length)throw new Error(\"Cannot extract ssrc from plan-b SDP.\");if(n&&r.length>1){const e=n.find(e=>-1!==e.ssrcIds.indexOf(r[0].ssrcId));return e?[{ssrcId:e.ssrcIds[0],rtx:i?e.ssrcIds[1]:void 0}]:[{ssrcId:r[0].ssrcId}]}return[{ssrcId:r[0].ssrcId}]}(r,t.id,i.useRTX)});let c;try{c=yield a}catch(e){throw n.forEach(e=>{pN()&&e.replaceTrack(null),i.peerConnection.removeTrack(e)}),e}const d=i.mungSendOfferSDP(o.sdp,e);i.remoteSDP.receive(e,t,c);const u=i.remoteSDP.toString();return yield S$(i.peerConnection.setLocalDescription({type:\"offer\",sdp:d})),yield S$(i.applySendEncodings(n,e)),yield S$(i.peerConnection.setRemoteDescription({type:\"answer\",sdp:u})),e.map((e,t)=>{const i=e._mediaStreamTrack.id;return{localSSRC:a[t],id:i}})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{r()}}))()}async stopSending(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getSenders().filter(t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")});if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map(e=>{pN()&&e.replaceTrack(null),this.peerConnection.removeTrack(e)});const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i),this.remoteSDP.stopReceiving(e);const r=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}}async receive(e,t,i,r){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{id:i,mslabel:n}=this.remoteSDP.send(e,t,r),o=new l_((t,r)=>{const o=setTimeout(()=>{r(new Error(\"Cannot receive track, id: \".concat(i)))},1e4),s=r=>{const a=oN();if((\"Safari\"===a.name&&11===Number(a.version)||EN())&&r.track.id!==i&&r.streams[0].id===n){var c;const n=r.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(e,i,r.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(n)}if(r.track.id===i)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(o),void t(r.track)};this.peerConnection.addEventListener(\"track\",s)}),s=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:s});const a=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(a);return{track:await o,id:i}}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const i=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(i)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){}async unmuteRemote(e){}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter(t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")});if(t.length!==e.length)throw new Error(\"sender' length doesn't match mids' length.\");t.map(e=>{if(pN()&&e.track)e.track.enabled=!1;else{const t=e.getParameters();t.encodings.forEach(e=>e.active=!1),e.setParameters(t)}})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getSenders().filter(t=>{var i;return-1!==e.indexOf((null===(i=t.track)||void 0===i?void 0:i.id)||\"\")});if(t.length!==e.length)throw new Error(\"Senders' length doesn't match mids' length.\");t.map(async e=>{if(pN()&&e.track)e.track.enabled=!0;else{const t=e.getParameters();t.encodings.forEach(e=>e.active=!0),await e.setParameters(t)}});const i=await this.peerConnection.createOffer();await this.peerConnection.setLocalDescription(i);const r=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(){var e=this;return C$((function*(){const t=yield S$(e.mutex.lock(\"From P2PConnection.restartICE\"));try{const i=yield S$(e.peerConnection.createOffer({iceRestart:!0}));if(!i.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=X$(i.sdp),{remoteIceParameters:n}=yield r.iceParameters;if(!e.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");e.remoteSDP.restartICE(n);const o=e.remoteSDP.toString();yield S$(e.peerConnection.setLocalDescription(i)),yield S$(e.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){JD.warning(\"restart ICE failed, abort operation\",e)}finally{t()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const e=await this.peerConnection.createOffer(),i=this.mungSendOfferSDP(e.sdp,[t]);this.remoteSDP.updateRecvMedia(t._mediaStreamTrack.kind,t);const r=this.remoteSDP.toString();await this.peerConnection.setLocalDescription({type:\"offer\",sdp:i}),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:r})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getSenders().filter(t=>{var i;return(null===(i=t.track)||void 0===i?void 0:i.id)===e});1===i.length&&await this.applySendEncodings(i,[t])}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getSenders().find(e=>{var i;return(null===(i=e.track)||void 0===i?void 0:i.id)===t});i&&await i.replaceTrack(e._mediaStreamTrack)}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout(()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))},LP(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[],sdpSemantics:\"plan-b\"};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Rk(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),LP(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")}))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))}),t}async applySendEncodings(e,t){try{if(!wB().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let r=0;r<e.length;r++){var i;const n=e[r],o=t[r];if(!o)continue;const s={},a={};if(o instanceof lz)switch(o._optimizationMode){case\"motion\":s.degradationPreference=\"maintain-framerate\";break;case\"detail\":s.degradationPreference=\"maintain-resolution\";break;default:s.degradationPreference=\"balanced\"}if(LP(\"DSCP_TYPE\")&&yN()){const e=LP(\"DSCP_TYPE\");[\"very-low\",\"low\",\"medium\",\"high\"].includes(e)&&(a.networkPriority=e)}const c=n.getParameters(),d=null===(i=c.encodings)||void 0===i?void 0:i[0];d&&Object.assign(d,a),Object.assign(c,s),await n.setParameters(c)}}catch(e){JD.debug(\"Apply RTPSendEncodings failed.\")}}mungSendOfferSDP(e,t){const i=W$.exports.parse(e);return t.forEach((e,t)=>{const r=e._mediaStreamTrack,n=i.mediaDescriptions.find(e=>e.attributes.mid===r.kind);n&&e1(n,e)}),W$.exports.print(i)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var r;null===(r=this.onFirstVideoDecoded)||void 0===r||r.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const t=this.remoteSDP.batchSend(e).map((t,i)=>{let{id:r,mslabel:n}=t;const{kind:o}=e[i];return new l_((e,t)=>{const i=setTimeout(()=>{t(new Error(\"Cannot receive track, id: \".concat(r)))},1e4),s=t=>{const a=oN();if(\"Safari\"===a.name&&11===Number(a.version)&&t.track.id!==r&&t.streams[0].id===n){var c;const n=t.streams[0].getTracks()[0];return null===(c=this.remoteSDP)||void 0===c||c.updateTrackLabel(o,r,t.track.id),this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:n,id:r})}if(t.track.id===r)return this.peerConnection.removeEventListener(\"track\",s),clearTimeout(i),void e({track:t.track,id:r})};this.peerConnection.addEventListener(\"track\",s)})}),i=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:i});const r=await this.peerConnection.createAnswer();return await this.peerConnection.setLocalDescription(r),await l_.all(t)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}}).prototype,\"connect\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"connect\"),b1.prototype),VV(b1.prototype,\"stopSending\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"stopSending\"),b1.prototype),VV(b1.prototype,\"receive\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"receive\"),b1.prototype),VV(b1.prototype,\"stopReceiving\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"stopReceiving\"),b1.prototype),VV(b1.prototype,\"muteRemote\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"muteRemote\"),b1.prototype),VV(b1.prototype,\"unmuteRemote\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"unmuteRemote\"),b1.prototype),VV(b1.prototype,\"muteLocal\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"muteLocal\"),b1.prototype),VV(b1.prototype,\"unmuteLocal\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"unmuteLocal\"),b1.prototype),VV(b1.prototype,\"close\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"close\"),b1.prototype),VV(b1.prototype,\"updateEncoderConfig\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"updateEncoderConfig\"),b1.prototype),VV(b1.prototype,\"updateSendParameters\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"updateSendParameters\"),b1.prototype),VV(b1.prototype,\"replaceTrack\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"replaceTrack\"),b1.prototype),VV(b1.prototype,\"getRemoteSSRC\",[B1],Object.getOwnPropertyDescriptor(b1.prototype,\"getRemoteSSRC\"),b1.prototype),b1);function B1(e,t,i){const r=e[t];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"Locking from P2PConnection.\".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await r.apply(this,o)}finally{i()}},i}var M1;const U1=\"9\",x1=4e4;let Q1=mP(\"RemoteSDP\")(M1=class{get localCapabilities(){return PK(this._localCapabilities)}get rtpCapabilities(){return PK(this._rtpCapabilities)}get candidates(){return PK(this._candidates)}get iceParameters(){return PK(this._iceParameters)}get dtlsParameters(){return PK(this._dtlsParameters)}constructor(e){MN(this,\"sessionDesc\",void 0),MN(this,\"_localCapabilities\",void 0),MN(this,\"_rtpCapabilities\",void 0),MN(this,\"_candidates\",void 0),MN(this,\"_iceParameters\",void 0),MN(this,\"_dtlsParameters\",void 0),MN(this,\"setup\",void 0),MN(this,\"currentMidIndex\",void 0),MN(this,\"cname\",void 0),MN(this,\"firefoxSsrcMidMap\",new Map),e=PK(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:r,remoteRTPCapabilities:n,remoteSetup:o,localCapabilities:s,cname:a}=e,c=W$.exports.parse(\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0 1\\na=msid-semantic: WMS\\na=ice-lite\\nm=video 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:0\\nm=audio 9 UDP/TLS/RTP/SAVPF 0\\nc=IN IP4 127.0.0.1\\na=rtcp:9 IN IP4 0.0.0.0\\na=sendonly\\na=rtcp-mux\\na=rtcp-rsize\\na=mid:1\\n\");this._rtpCapabilities=n,this._candidates=r,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=s,this.setup=o,this.cname=a;const d=this.rtpCapabilities.send;for(const e of c.mediaDescriptions){if(e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=r,e.attributes.setup=o,\"video\"===e.media.mediaType&&(e.media.fmts=d.videoCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.videoCodecs,e.attributes.extmaps=d.videoExtensions,LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:x1,rtx:LP(\"USE_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=d.audioCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.audioCodecs,e.attributes.extmaps=d.audioExtensions,d1(e),LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:2e4}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=c,this.currentMidIndex=c.mediaDescriptions.length-1}preloadRemoteMedia(){const e=LP(\"PRELOAD_MEDIA_COUNT\");gP(\"debug\",this,\"preloadRemoteMedia\",e),this.rtpCapabilities;const t=this.candidates,i=this.dtlsParameters,r=this.iceParameters,n=this.rtpCapabilities.send;for(let o=1;o<e;o++){const e=2*o+2e4,s=2*o+x1,{ssrcs:a,ssrcGroups:c}=$$([{ssrcId:e}],this.cname),{ssrcs:d,ssrcGroups:u}=$$([{ssrcId:s,rtx:LP(\"USE_RTX\")?s+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:U1,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:n.videoCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:r.iceUfrag,icePwd:r.icePwd,unrecognized:[],candidates:t,extmaps:n.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:d,ssrcGroups:u,rtcpFeedbackWildcards:[],payloads:n.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*o)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:U1,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:n.audioCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:r.iceUfrag,icePwd:r.icePwd,unrecognized:[],candidates:t,extmaps:n.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:a,ssrcGroups:c,rtcpFeedbackWildcards:[],payloads:n.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*o+1)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return W$.exports.print(this.sessionDesc)}send(e,t,i,r){const{ssrcs:n,ssrcGroups:o}=$$(t,this.cname,i),s=this.findPreloadMediaDesc(n);if(s){if(gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,s.attributes.mid),r&&(r.tcc||r.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(s);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(s,r),{mid:s.attributes.mid,needExchangeSDP:!0}}return{mid:s.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,n);if(pN()||mN()||fN()){if(-1!==t&&1!==t){const e=PK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction=\"sendonly\",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,r),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,\"sendonly\",r);return this.updateBundleMids(),{mid:t.attributes.mid,needExchangeSDP:!0}}}if(-1!==t){const e=PK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction=\"sendonly\",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,r),gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,e.attributes.mid),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,\"sendonly\",r);return this.updateBundleMids(),gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,t.attributes.mid),{mid:t.attributes.mid,needExchangeSDP:!0}}}}batchSend(e){const t=e.map(e=>{let{kind:t,ssrcMsg:i,mslabel:r}=e;return this.send(t,i,r)}),i=[];let r=!1;return t.forEach(e=>{let{mid:t,needExchangeSDP:n}=e;n&&(r=!0),i.push(t)}),{mids:i,needExchangeSDP:r}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach(e=>{\"0\"===e.attributes.mid||gN()||pN()||mN()||fN()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")}),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||\"\"));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach(e=>{e.attributes.direction=\"inactive\"})}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||\"\"));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach(e=>{e.attributes.direction=\"recvonly\"})}receive(e,t,i,r){e.forEach((e,n)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,r[n])}),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach(e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"}),this.updateBundleMids()}restartICE(e){e=PK(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach(t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd})}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex(i=>{const r=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(gN()){if(r){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return r})}createOrRecycleRecvMedia(e,t,i,r,n,o){const s=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=this.localCapabilities.send;let d=[];if(s===AB.VIDEO){var u,h;if(LP(\"H264_PROFILE_LEVEL_ID\")&&\"h264\"===r&&(d=a.videoCodecs.filter(e=>{var t,i;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(r)&&(null==e||null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])===LP(\"H264_PROFILE_LEVEL_ID\")})),!d||0===(null===(u=d)||void 0===u?void 0:u.length)){const e=c.videoCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(r)});0!==e.length&&(d=a.videoCodecs.filter(t=>e.some(e=>e.payloadType===t.payloadType)))}if(LP(\"USE_RTX\")){const e=d.map(e=>e.payloadType.toString()),t=a.videoCodecs.filter(t=>{var i,r;return\"rtx\"===(null===(i=t.rtpMap)||void 0===i?void 0:i.encodingName)&&e.includes((null===(r=t.fmtp)||void 0===r?void 0:r.parameters.apt)||\"\")});d=[...d,...t]}if(0===d.length)JD.warning(\"codec \".concat(r,\" not included in rtpCapabilities, fallback to default payloads: \").concat(null===(h=a.videoCodecs[0].rtpMap)||void 0===h?void 0:h.encodingName)),d=a.videoCodecs}else d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(n)}),0===d.length&&(JD.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to opus\")),d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(\"opus\")}));const A=s===AB.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let p={media:{mediaType:s,port:U1,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:d.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:A,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:d,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};p=this.mungRecvMediaDsec(p,e,o);const g=this.findFirstClosedMedia(s);if(g){const e=this.sessionDesc.mediaDescriptions.indexOf(g);this.sessionDesc.mediaDescriptions[e]=p}else this.sessionDesc.mediaDescriptions.push(p);return p}createOrRecycleSendMedia(e,t,i,r,n){const o=this.rtpCapabilities.send,s=e===AB.VIDEO?o.videoCodecs:o.audioCodecs,a=e===AB.VIDEO?o.videoExtensions:o.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:U1,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:s.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:s,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:r,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,n);const u=this.findFirstClosedMedia(e);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter(e=>\"0\"!==e.media.port).map(e=>e.attributes.mid)}mungRecvMediaDsec(e,t,i){const r=PK(e);return t1(r),e1(r,t),i1(r,t),r1(r),n1(r,i,this.localCapabilities.send),r}mungSendMediaDesc(e,t){const i=PK(e);return n1(i,t,this.localCapabilities.recv),d1(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex(t=>t.attributes.mid===e);if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find(t=>gN()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port)}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find(t=>{var i,r;return(null===(i=t.attributes)||void 0===i||null===(r=i.ssrcs[0])||void 0===r?void 0:r.ssrcId)===e[0].ssrcId})}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e))||void 0===t?void 0:t.attributes.ssrcs}})||M1;var F1,V1;function j1(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function G1(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?j1(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):j1(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let K1=mP(\"P2PConnection\",\"store.p2pId\")((VV((V1=class e extends RB{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(t,i){super(t,i),MN(this,\"store\",void 0),MN(this,\"peerConnection\",void 0),MN(this,\"remoteSDP\",void 0),MN(this,\"initialOffer\",void 0),MN(this,\"transportEventReceiver\",void 0),MN(this,\"statsFilter\",void 0),MN(this,\"useRTX\",LP(\"USE_RTX\")),MN(this,\"localCapabilities\",void 0),MN(this,\"localCandidateCount\",0),MN(this,\"allCandidatesReceived\",!1),MN(this,\"mutex\",new fj(\"P2PConnection-mutex\")),this.store=i,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.statsFilter=D1(this.peerConnection,void 0,void 0,gN()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(){try{this.peerConnection.addTransceiver(\"video\",{direction:\"recvonly\"}),this.peerConnection.addTransceiver(\"audio\",{direction:\"recvonly\"});const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=X$(e.sdp),i=await s1(!this.useRTX,LP(\"FILTER_VIDEO_FEC\"),LP(\"FILTER_AUDIO_FEC\"));return this.localCapabilities=c1(i),this.initialOffer=e,G1(G1({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new QD(xD.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,r,n,o){try{if(!this.initialOffer)throw new Error(\"Cannot establish P2PConnection without initial offer.\");this.remoteSDP=new Q1({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:r,remoteSetup:n,localCapabilities:this.localCapabilities,cname:o});const s=this.remoteSDP.toString(),a=W$.exports.parse(this.initialOffer.sdp),c=a.mediaDescriptions.find(e=>\"audio\"===e.media.mediaType);c&&d1(c);const d=W$.exports.print(a),u=this.logSDPExchange(d||\"\",\"offer\",\"local\",\"connect\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:d}),null==u||u(s),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:s});const h=this.peerConnection.getTransceivers()[0];if(null!=h&&h.receiver&&this.tryBindTransportEvents(h.receiver),LP(\"PRELOAD_MEDIA_COUNT\")>0){this.remoteSDP.preloadRemoteMedia();const e=this.remoteSDP.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const t=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(t)}}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.connect failed; \".concat(e.toString()))}}send(e,t,i){var r=this;return C$((function*(){const n=yield S$(r.mutex.lock(\"From P2PConnection.send\"));try{if(!r.remoteSDP)throw new Error(\"Cannot call P2PConnection.send before remote SDP created\");const o=[];e.forEach(e=>{const t=r.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t)}),gN()&&!0===LP(\"SIMULCAST\")&&(hP(\"debug\",r,\"apply simulcast for firefox\"),yield S$(r.applySimulcastForFirefox(o,e)));const s=yield S$(r.peerConnection.createOffer()),a=r.remoteSDP.predictReceivingMids(e.length),c=r.mungSendOfferSDP(s.sdp,e,a),d=W$.exports.parse(c),u=a.map(e=>{const t=d.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return z$(t,r.useRTX)});let h;try{h=yield u}catch(n){h=[],r.remoteSDP.receive(e,t,i,h);const o=r.remoteSDP.toString();throw yield S$(r.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield S$(r.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})),yield S$(r.stopSending(a,!0)),n}r.remoteSDP.receive(e,t,i,h);const A=r.remoteSDP.toString(),l=r.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield S$(r.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield S$(r.applySimulcastEncodings(o,e)),yield S$(r.applySendEncodings(o,e)),null==l||l(A),yield S$(r.peerConnection.setRemoteDescription({type:\"answer\",sdp:A})),o.map((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i,transceiver:e}})}catch(e){throw e instanceof QD?e:new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.send failed; \".concat(e.toString()))}finally{n()}}))()}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From P2PConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter(t=>-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call P2PConnection.stopSending.\");t.map(e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)});const r=await this.peerConnection.createOffer(),n=this.logSDPExchange(r.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(r),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==n||n(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,r){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:n,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,r);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(r.sdp,n,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),JD.debug(\"[P2PConnection] receive \".concat(e,\" by exchanging SDP.\"))}else JD.debug(\"[P2PConnection] receive \".concat(e,\" no need to exchange SDP.\"));const s=this.peerConnection.getTransceivers().find(e=>e.mid===n);if(!s)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,id:n}}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);if(i){const e=this.remoteSDP.toString(),t=this.logSDPExchange(e,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const i=await this.peerConnection.createAnswer();null==t||t(i.sdp||\"\"),await this.peerConnection.setLocalDescription(i),JD.debug(\"[P2PConnection] batchReceive by exchanging SDP.\")}else JD.debug(\"[P2PConnection] batchReceive no need to exchange SDP.\");return t.map(e=>{const t=this.peerConnection.getTransceivers().find(t=>t.mid===e);if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e}})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map(e=>{e.direction=\"inactive\"});const i=await this.peerConnection.createOffer(),r=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const n=this.remoteSDP.toString();null==r||r(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map(async(e,t)=>{e.direction=\"sendonly\"});const i=await this.peerConnection.createOffer(),r=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const n=this.remoteSDP.toString();null==r||r(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"P2PConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(){var e=this;return C$((function*(){const t=yield S$(e.mutex.lock(\"From P2PConnection.restartICE\"));try{const i=yield S$(e.peerConnection.createOffer({iceRestart:!0}));if(!i.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=X$(i.sdp),{remoteIceParameters:n}=yield r.iceParameters;if(!e.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");e.remoteSDP.restartICE(n);const o=e.remoteSDP.toString(),s=e.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"restartICE\");yield S$(e.peerConnection.setLocalDescription(i)),null==s||s(o),yield S$(e.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){JD.warning(\"restart ICE failed, abort operation\",e)}finally{t()}}))()}close(){var e;this.peerConnection.close(),null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.tryUnbindTransportEvents(),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call P2PConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),r=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const n=this.remoteSDP.toString(),o=this.logSDPExchange(r,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:r}),null==o||o(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter(t=>t.mid===e);1===i.length&&(this.isVP8Simulcast(t)?gN()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find(e=>e.mid===t);i&&await i.sender.replaceTrack(e._mediaStreamTrack)}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout(()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))},LP(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Rk(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),LP(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),LP(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")}))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(oK(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!LP(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))}),t}tryBindTransportEvents(e){e.transport&&(this.transportEventReceiver=e,e.transport.onstatechange=()=>{var t,i;null!==(t=e.transport)&&void 0!==t&&t.state&&(null===(i=this.onDTLSTransportStateChange)||void 0===i||i.call(this,e.transport.state))},e.transport.onerror=e=>{var t;null===(t=this.onDTLSTransportError)||void 0===t||t.call(this,e.error)},e.transport.iceTransport&&(e.transport.iceTransport.onstatechange=()=>{var t,i,r;null!==(t=e.transport)&&void 0!==t&&t.iceTransport.state&&(null===(i=this.onICETransportStateChange)||void 0===i||i.call(this,null===(r=e.transport)||void 0===r?void 0:r.iceTransport.state))}))}tryUnbindTransportEvents(){this.transportEventReceiver&&this.transportEventReceiver.transport&&(this.transportEventReceiver.transport.onstatechange=null,this.transportEventReceiver.transport.onerror=null,this.transportEventReceiver.transport.iceTransport&&(this.transportEventReceiver.transport.iceTransport.onstatechange=null))}async applySendEncodings(e,t){try{if(!wB().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let c=0;c<e.length;c++){const d=e[c],u=t[c];if(u&&u instanceof lz){var i,r;if(this.isVP8Simulcast(u))continue;const e={},t={};switch(u._optimizationMode){case\"motion\":e.degradationPreference=\"maintain-framerate\";break;case\"detail\":e.degradationPreference=\"maintain-resolution\";break;default:e.degradationPreference=\"balanced\"}var n,o,s,a;if(null!==(i=u._encoderConfig)&&void 0!==i&&i.bitrateMax)t.maxBitrate=1e3*(null===(n=u._encoderConfig)||void 0===n?void 0:n.bitrateMax);if(u._hints.includes($k.LOW_STREAM))null!==(o=u._encoderConfig)&&void 0!==o&&o.frameRate&&(t.maxFramerate=aK(u._encoderConfig.frameRate)),null!==(s=u._encoderConfig)&&void 0!==s&&s.scaleResolutionDownBy&&(null===(a=u._encoderConfig)||void 0===a?void 0:a.scaleResolutionDownBy)>1&&(t.scaleResolutionDownBy=u._encoderConfig.scaleResolutionDownBy);if(LP(\"DSCP_TYPE\")&&yN()){const e=LP(\"DSCP_TYPE\");[\"very-low\",\"low\",\"medium\",\"high\"].includes(e)&&(t.networkPriority=e)}const c=d.sender.getParameters(),h=null===(r=c.encodings)||void 0===r?void 0:r[0];gN()&&!h&&(e.encodings=[t]),h&&Object.assign(h,t),Object.assign(c,e),await d.sender.setParameters(c)}}}catch(e){JD.debug(\"Apply RTPSendEncodings failed.\")}}mungSendOfferSDP(e,t,i){const r=W$.exports.parse(e);return t.forEach((e,t)=>{const n=i[t],o=r.mediaDescriptions.find(e=>e.attributes.mid===n);o&&(e1(o,e),o1(o,e,this.store.codec))}),W$.exports.print(r)}mungReceiveAnswerSDP(e,t,i){const r=W$.exports.parse(e),n=r.mediaDescriptions.find(e=>e.attributes.mid===t);return n&&i===AB.AUDIO&&\"audio\"===n.media.mediaType&&d1(n),W$.exports.print(r)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var r;null===(r=this.onFirstVideoDecoded)||void 0===r||r.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let s=0;s<e.length;s++){var i,r,n,o;const a=e[s],c=t[s];if(c instanceof lz&&!c._hints.includes($k.LOW_STREAM)&&null!==(i=c._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(r=c._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(n=c._scalabiltyMode)&&void 0!==n&&n.numSpatialLayers&&(null===(o=c._scalabiltyMode)||void 0===o?void 0:o.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(c._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=a.sender.getParameters();await a.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!gN()&&e.length===t.length)for(let i=0;i<e.length;i++){const r=t[i];if(r instanceof lz&&this.isVP8Simulcast(r)){const t=e[i],n={},o={high:1e3*(r._encoderConfig.bitrateMax-50),medium:5e4};n.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,n))}}}isVP8Simulcast(e){var t,i,r,n;return!!(e instanceof lz&&LP(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!e._hints.includes($k.LOW_STREAM)&&null!==(t=e._encoderConfig)&&void 0!==t&&t.bitrateMax&&(null===(i=e._encoderConfig)||void 0===i?void 0:i.bitrateMax)>200&&null!==(r=e._scalabiltyMode)&&void 0!==r&&r.numSpatialLayers&&(null===(n=e._scalabiltyMode)||void 0===n?void 0:n.numSpatialLayers)>1)}logSDPExchange(e,t,i,r){if(LP(\"SDP_LOGGING\"))return JD.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during P2PConnection.\").concat(r,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",r)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}}).prototype,\"connect\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"connect\"),V1.prototype),VV(V1.prototype,\"receive\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"receive\"),V1.prototype),VV(V1.prototype,\"batchReceive\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"batchReceive\"),V1.prototype),VV(V1.prototype,\"stopReceiving\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"stopReceiving\"),V1.prototype),VV(V1.prototype,\"muteRemote\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"muteRemote\"),V1.prototype),VV(V1.prototype,\"unmuteRemote\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"unmuteRemote\"),V1.prototype),VV(V1.prototype,\"muteLocal\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"muteLocal\"),V1.prototype),VV(V1.prototype,\"unmuteLocal\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"unmuteLocal\"),V1.prototype),VV(V1.prototype,\"close\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"close\"),V1.prototype),VV(V1.prototype,\"updateEncoderConfig\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"updateEncoderConfig\"),V1.prototype),VV(V1.prototype,\"updateSendParameters\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"updateSendParameters\"),V1.prototype),VV(V1.prototype,\"replaceTrack\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"replaceTrack\"),V1.prototype),VV(V1.prototype,\"getRemoteSSRC\",[H1],Object.getOwnPropertyDescriptor(V1.prototype,\"getRemoteSSRC\"),V1.prototype),F1=V1))||F1;function H1(e,t,i){const r=e[t];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PConnection.\".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await r.apply(this,o)}finally{i()}},i}function W1(e,t){let i=document.createElement(\"video\"),r=document.createElement(\"canvas\");i.setAttribute(\"style\",\"display:none\"),r.setAttribute(\"style\",\"display:none\"),i.setAttribute(\"muted\",\"\"),i.muted=!0,i.setAttribute(\"autoplay\",\"\"),i.autoplay=!0,i.setAttribute(\"playsinline\",\"\"),r.width=aK(t.width),r.height=aK(t.height);const n=aK(t.framerate||15);document.body.append(i),document.body.append(r);let o=e._mediaStreamTrack;i.srcObject=new MediaStream([o]),i.play();const s=r.getContext(\"2d\");if(!s)throw new QD(xD.UNEXPECTED_ERROR,\"can not get canvas context\");const a=wB(),c=r.captureStream(a.supportRequestFrame?0:n).getVideoTracks()[0],d=Nj(()=>(()=>{if(i.paused&&i.play(),i.videoHeight>2&&i.videoWidth>2){const e=i.videoWidth,t=i.videoHeight/e,n=r.width*t;Math.abs(n-r.height)>=2&&(JD.debug(\"adjust low stream resolution\",\"\".concat(r.width,\"x\").concat(r.height,\" -> \").concat(r.width,\"x\").concat(n)),r.height=n)}s.drawImage(i,0,0,r.width,r.height),c.requestFrame&&c.requestFrame(),o!==e._mediaStreamTrack&&(o=e._mediaStreamTrack,i.srcObject=new MediaStream([o]))})(),n),u=c.stop;return c.stop=()=>{u.call(c),d(),i&&(i.remove(),i=null),r&&(r.width=0,r.remove(),r=null),JD.debug(\"clean low stream renderer\")},c}var Y1,J1;function q1(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function X1(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?q1(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):q1(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class z1 extends gj{getUserId(){return this._userId}constructor(e,t,i,r){super(e,\"track-\".concat(e.kind,\"-\").concat(t,\"-\").concat(r.clientId,\"_\").concat(_K(5,\"\"))),MN(this,\"_userId\",void 0),MN(this,\"_uintId\",void 0),MN(this,\"_isDestroyed\",!1),MN(this,\"store\",void 0),MN(this,\"processor\",void 0),MN(this,\"processorContext\",void 0),this._userId=t,this._uintId=i,this.store=r}_updateOriginMediaStreamTrack(e){this._originMediaStreamTrack=e,this._mediaStreamTrack=e,this._updatePlayerSource(),this.processor&&this.processor.updateInput({track:this._originMediaStreamTrack,context:this.processorContext})}_destroy(){this._isDestroyed=!0,JD.info(\"[\".concat(this.getTrackId(),\"] is destroyed\")),gP(\"info\",this,\"_destroy\"),this.stop(),super.close()}getProcessorStats(){return this.processorContext.gatherStats()}getProcessorUsage(){return this.processorContext.gatherUsage()}}let Z1=mP(\"RemoteVideoTrack\",\"getTrackId\")(Y1=class extends z1{get isPlaying(){return!(!this._player||this._player.videoElementStatus!==qL.PLAYING)}constructor(e,t,i,r){super(e,t,i,r),MN(this,\"_videoVisibleTimer\",null),MN(this,\"_previousVideoVisibleStatus\",void 0),MN(this,\"_clearPreviousVideoVisibleStatus\",()=>this._previousVideoVisibleStatus=void 0),MN(this,\"trackMediaType\",\"video\"),MN(this,\"_videoWidth\",void 0),MN(this,\"_videoHeight\",void 0),MN(this,\"_player\",void 0),MN(this,\"processorDestination\",void 0),MN(this,\"processorContext\",void 0),gP(\"info\",this,\"constructor\",{userId:t}),this.updateMediaStreamTrackResolution(),this.processorContext=new FG(this.getTrackId(),\"remote\"),this.processorDestination=new QG(this.processorContext),this.bindProcessorDestinationEvents()}getStats(){kK(()=>{JD.warning(\"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead\"),hP(\"warning\",this,\"[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead\")},\"remoteVideoTrackGetStatsWarning\");return wK(this,Zk.GET_STATS)||X1({},Pk)}play(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_VIDEO_TRACK_PLAY,options:[this.getTrackId(),\"string\"==typeof e?e:\"HTMLElement\",t]});if(\"string\"==typeof e){const t=document.getElementById(e);t?e=t:(JD.warning(\"[\".concat(this.getTrackId(),'] can not find \"#').concat(e,'\" element, use document.body')),hP(\"warning\",this,'can not find \"#'.concat(e,'\" element, use document.body')),e=document.body)}JD.debug(\"[\".concat(this.getTrackId(),\"] start video playback\"),JSON.stringify(t)),gP(\"debug\",this,\"play\",t);const r=X1(X1({fit:\"cover\"},t),{},{trackId:this.getTrackId(),element:e});this._player?this._player.updateConfig(r):(this._player=new cX(r),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.store.subscribe(this.getUserId(),\"video\",void 0,void 0,Date.now()),this.emit(rB.FIRST_FRAME_DECODED)}),this._player.play(this.store.sessionId||void 0),this._videoVisibleTimer&&window.clearInterval(this._videoVisibleTimer),this._clearPreviousVideoVisibleStatus(),this._videoVisibleTimer=window.setInterval(()=>{try{const e=this.getVideoElementVisibleStatus();this.emit(rB.VIDEO_ELEMENT_VISIBLE_STATUS,e)}catch(e){}},LP(\"CHECK_VIDEO_VISIBLE_INTERVAL\")),i.onSuccess()}stop(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return e.onSuccess();this._videoVisibleTimer&&(window.clearInterval(this._videoVisibleTimer),this._videoVisibleTimer=null),this._clearPreviousVideoVisibleStatus(),this._player.destroy(),this._player=void 0,JD.debug(\"[\".concat(this.getTrackId(),\"] stop video playback\")),gP(\"debug\",this,\"stop\"),e.onSuccess()}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}updateMediaStreamTrackResolution(){vK(this._originMediaStreamTrack).then(e=>{let[t,i]=e;this._videoHeight=i,this._videoWidth=t}).catch(SK)}_updatePlayerSource(){JD.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),gP(\"debug\",this,\"_updatePlayerSource\"),this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}getVideoElementVisibleStatus(){try{var e,t;const i=null==this||null===(e=this._player)||void 0===e?void 0:e.getContainerElement(),r={track:this,element:null==this||null===(t=this._player)||void 0===t?void 0:t.getVideoElement(),slot:null==i?void 0:i.parentElement},{element:n,slot:o}=r;if(this.isPlaying&&n instanceof HTMLVideoElement&&o instanceof HTMLElement){const e=uz.checkOneElementVisible(n),t=Object.assign({},e);if(t.visible!==this._previousVideoVisibleStatus){this._previousVideoVisibleStatus=t.visible;const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_VIDEO_TRACK_GET_VIDEO_VISIBLE,options:[this.getTrackId()]});t.visible?e.onSuccess(\"Video is visible\"):e.onSuccess(\"Invisible because of \".concat(t.reason))}return t}return}catch(e){throw new QD(xD.GET_VIDEO_ELEMENT_VISIBLE_ERROR,e.message)}}pipe(e){if(this.processor===e)return e;if(e._source)throw new QD(xD.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,context:this.processorContext}),e}unpipe(){if(!this.processor)return;const e=this.processor;this.processor._source=void 0,this.processor=void 0,e.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(mB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource()):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(mB.ON_TRACK)}_destroy(){super._destroy(),this.unbindProcessorDestinationEvents()}})||Y1,$1=mP(\"RemoteAudioTrack\",\"getTrackId\")(J1=class extends z1{get isPlaying(){return this._useAudioElement?zj.isPlaying(this.getTrackId()):this._source.isPlayed}constructor(e,t,i,r){super(e,t,i,r),MN(this,\"trackMediaType\",\"audio\"),MN(this,\"_source\",void 0),MN(this,\"_useAudioElement\",!0),MN(this,\"_volume\",100),MN(this,\"processorContext\",void 0),MN(this,\"processorDestination\",void 0),MN(this,\"_played\",!1),MN(this,\"_bypassWebAudio\",!1),gP(\"info\",this,\"constructor\",{userId:t}),LP(\"DISABLE_WEBAUDIO\")?(this._source=new GG,this._bypassWebAudio=!0,this._useAudioElement=!0):(this._source=new kj(e,!0),LP(\"REMOTE_AUDIO_TRACK_USES_WEB_AUDIO\")&&(this._useAudioElement=!1)),this._source.once(Sk.RECEIVE_TRACK_BUFFER,()=>{this.emit(rB.FIRST_FRAME_DECODED)}),this.processorContext=new jG(this._source.context,this.getTrackId(),\"remote\"),this.processorDestination=new VG(this.processorContext),this.bindProcessorDestinationEvents(),this._source.on(Sk.UPDATE_SOURCE,()=>{this.processor&&this.processor.updateInput({node:this._source.processSourceNode,context:this.processorContext})})}setAudioFrameCallback(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4096;if(!e)return this._source.removeAllListeners(Sk.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(t),this._source.removeAllListeners(Sk.ON_AUDIO_BUFFER),this._source.on(Sk.ON_AUDIO_BUFFER,t=>e(t))}setVolume(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_AUDIO_SET_VOLUME,options:[this.getTrackId(),e]},300);this._volume=e,this._useAudioElement?zj.setVolume(this.getTrackId(),e):this._source.setVolume(e/100),t.onSuccess()}async setPlaybackDevice(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),e]});if(!this._useAudioElement)throw new QD(xD.NOT_SUPPORTED,\"your browser does not support setting the audio output device\");try{await zj.setSinkID(this.getTrackId(),e)}catch(e){throw t.onError(e),e}t.onSuccess()}getVolumeLevel(){return this._source.getAccurateVolumeLevel()}getStats(){kK(()=>{JD.warning(\"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead\"),hP(\"warning\",this,\"[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead\")},\"remoteAudioTrackGetStatsWarning\");return wK(this,Zk.GET_STATS)||X1({},Ok)}play(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});JD.debug(\"[\".concat(this.getTrackId(),\"] start audio playback\")),gP(\"debug\",this,\"play\"),this._played=!0,this._useAudioElement?(JD.debug(\"[\".concat(this.getTrackId(),\"] use audio element to play\")),hP(\"debug\",this,\"use audio element to play\"),zj.play(this._mediaStreamTrack,this.getTrackId(),this._volume,this.store.sessionId||void 0)):this._source.play(),e.onSuccess()}stop(){const e=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.REMOTE_AUDIO_TRACK_STOP,options:[this.getTrackId()]});JD.debug(\"[\".concat(this.getTrackId(),\"] stop audio playback\")),gP(\"debug\",this,\"stop\"),this._played=!1,this._useAudioElement?zj.stop(this.getTrackId()):this._source.stop(),e.onSuccess()}_destroy(){super._destroy(),this._played=!1,this.unbindProcessorDestinationEvents(),this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];JD.debug(\"[\".concat(this.getTrackId(),\"] update player source track\")),gP(\"debug\",this,\"_updatePlayerSource\"),e&&this._source.updateTrack(this._mediaStreamTrack),this._useAudioElement&&zj.updateTrack(this.getTrackId(),this._mediaStreamTrack)}pipe(e){if(this._bypassWebAudio)throw new QD(xD.NOT_SUPPORTED,\"can not pipe extension when WebAudio disabled\");if(this.processor===e)return e;if(e._source)throw new QD(xD.INVALID_OPERATION,\"Processor \".concat(e.name,\" already piped, please call unpipe beforehand.\"));return this.unpipe(),this.processor=e,this.processor._source=this,e.updateInput({track:this._originMediaStreamTrack,node:this._source.processSourceNode,context:this.processorContext}),e}unpipe(){var e;if(this._bypassWebAudio)throw new QD(xD.NOT_SUPPORTED,\"can not unpipe extension when WebAudio disabled\");if(!this.processor)return;const t=this.processor;null===(e=this._source.processSourceNode)||void 0===e||e.disconnect(),this.processor._source=!1,this.processor=void 0,t.reset()}bindProcessorDestinationEvents(){this.processorDestination.on(mB.ON_TRACK,async e=>{e?e!==this._mediaStreamTrack&&(this._mediaStreamTrack=e,this._updatePlayerSource(!1),this._source.processedNode=this._source.createMediaStreamSourceNode(e)):this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource())}),this.processorDestination.on(mB.ON_NODE,e=>{this._source.processedNode=e;const t=!e;this._useAudioElement!==t&&(this._played?(this.stop(),this._useAudioElement=t,this.play()):this._useAudioElement=t)})}unbindProcessorDestinationEvents(){this.processorDestination.removeAllListeners(mB.ON_TRACK),this.processorDestination.removeAllListeners(mB.ON_NODE)}})||J1;function e0(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function t0(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?e0(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):e0(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}class i0 extends MD{constructor(){super(),MN(this,\"uplinkStatsUploadInterval\",void 0),MN(this,\"uplinkStatsUploadSlowInterval\",void 0),MN(this,\"uplinkRelatedStatsUploadInterval\",void 0),MN(this,\"uplinkDenoiserStatsUploadInterval\",void 0),MN(this,\"transportStatsUploadInterval\",void 0),MN(this,\"uplinkExtensionStatsUploadInterval\",void 0),MN(this,\"downlinkExtensionStatsUploadInterval\",void 0),MN(this,\"extensionUsageStatsUploadInterval\",void 0),MN(this,\"downlinkStatsUploadInterval\",void 0),MN(this,\"downlinkStatsUploadSlowInterval\",void 0),MN(this,\"downlinkRelatedStatsUploadInterval\",void 0),MN(this,\"lastStats\",void 0),MN(this,\"uploadUnplinkStarted\",!1),MN(this,\"uploadDownlinkStarted\",!1),MN(this,\"uploadTransportStarted\",!1),MN(this,\"uploadExtensionUsageStarted\",!1),MN(this,\"requestStats\",void 0),MN(this,\"requestLocalMedia\",void 0),MN(this,\"requestRemoteMedia\",void 0),MN(this,\"requestAllTracks\",void 0),MN(this,\"requestVideoIsReady\",void 0),MN(this,\"requestUpload\",void 0)}startUploadTransportStats(){this.uploadTransportStarted||(this.uploadTransportStarted=!0,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadTransportStats(t)},6e3))}startUploadExtensionUsageStats(){if(this.uploadExtensionUsageStarted)return;this.uploadExtensionUsageStarted=!0,this.extensionUsageStatsUploadInterval&&window.clearInterval(this.extensionUsageStatsUploadInterval);const e=new Map;this.extensionUsageStatsUploadInterval=window.setInterval(async()=>{var t,i,r;const n=Date.now(),o={connectionInterval:LP(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3,details:[],lts:n};let s=[];const a=(null===(t=this.requestAllTracks)||void 0===t?void 0:t.call(this))||[];for(const e of a)!e.muted&&e.enabled&&(s=s.concat(await e.getProcessorUsage()));const c=(null===(i=this.requestRemoteMedia)||void 0===i?void 0:i.call(this))||[];for(const[e,t]of c)t.has(AB.VIDEO)&&e.videoTrack&&(s=s.concat(await e.videoTrack.getProcessorUsage())),t.has(AB.AUDIO)&&e.audioTrack&&(s=s.concat(await e.audioTrack.getProcessorUsage()));if(0===s.length)return;o.details=function(e,t){const i={};for(const{id:n,value:o,level:s,direction:a}of e)if(i[n])2===o&&(i[n].value=o),s>i[n].level&&(i[n].level=s),\"remote\"===a&&(i[n].remoteUidCount+=1);else{var r;const e=null!==(r=t.get(n))&&void 0!==r?r:0;i[n]={value:o,level:s,remoteUidCount:\"local\"===a?0:1,totalTs:e};const c=2===o?e+LP(\"EXTENSION_USAGE_UPLOAD_INTERVAL\")/1e3:e;t.set(n,c)}return Object.keys(i).map(e=>{const{level:t,value:r,totalTs:n}=i[e];return{id:e,level:t,value:r,totalTs:n}})}(s,e);const d=Date.now(),u=d>n?d:n+1;null===(r=this.requestUpload)||void 0===r||r.call(this,Ik.EXTENSION_USAGE_STATS,{usageStats:o,sendTs:u})},LP(\"EXTENSION_USAGE_UPLOAD_INTERVAL\"))}startUploadUplinkStats(){this.uploadUnplinkStarted||(this.uploadUnplinkStarted=!0,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadUplinkStats(t,this.lastStats),this.lastStats=t)},3e3),this.uplinkStatsUploadSlowInterval&&window.clearInterval(this.uplinkStatsUploadSlowInterval),this.uplinkStatsUploadSlowInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadSlowUplinkStats(t)},6e4),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkRelatedStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadRelatedUplinkStats(t,this.lastStats),this.lastStats=t},1e3),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadDenoiserStats(t)},2e3),this.uplinkExtensionStatsUploadInterval&&window.clearInterval(this.uplinkExtensionStatsUploadInterval),this.uplinkExtensionStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestAllTracks)||void 0===e?void 0:e.call(this);t&&this.uploadExtensionStats(t)},2e3))}uploadTransportStats(e){DK(()=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,Ik.TRANSPORT_STATS,function(e){const t={connectionType:100};if(\"relay\"===e.selectedCandidatePair.localCandidate.candidateType){const i=e.selectedCandidatePair.localCandidate.relayProtocol;\"udp\"===i&&(t.connectionType=101),\"tcp\"===i&&(t.connectionType=103),\"tls\"===i&&(t.connectionType=104)}return t}(e))})}uploadUplinkStats(e,t){var i;((null===(i=this.requestLocalMedia)||void 0===i?void 0:i.call(this))||[]).forEach(i=>{let[r,{track:n,ssrcs:o}]=i;switch(r){case lB.LocalVideoLowTrack:case lB.LocalVideoTrack:{const i=function(e,t,i){var r;const n=t.videoSend.find(t=>t.ssrc===e);if(!n)return null;const o={id:_K(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:n.ssrc.toString()};switch(o.A_vstd=i._originMediaStreamTrack&&!i._originMediaStreamTrack.enabled||i._mediaStreamTrack&&!i._mediaStreamTrack.enabled?\"1\":\"0\",n.sentFrame&&(o.A_fhs=n.sentFrame.height.toString(),o.A_frs=n.sentFrame.frameRate.toString(),o.A_fws=n.sentFrame.width.toString()),n.adaptionChangeReason){case\"none\":o.A_ac=\"0\";break;case\"cpu\":o.A_ac=\"1\";break;case\"bandwidth\":o.A_ac=\"2\";break;case\"other\":o.A_ac=\"3\"}return o.A_lvps=XL[i._player?i._player.videoElementStatus:\"uninit\"].toString(),o.A_nr=null===(r=n.nacksCount)||void 0===r?void 0:r.toString(),n.avgEncodeMs&&(o.A_aem=n.avgEncodeMs.toFixed(0).toString()),o}(o[0].ssrcId,e,n),s=dK(o[0].ssrcId,e,t);i&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.PUBLISH_STATS,{stream_type:r===lB.LocalVideoLowTrack?\"low\":\"high\",stats:t0(t0({},i),s)})});break}case lB.LocalAudioTrack:{const t=function(e,t,i){const r=t.audioSend.find(t=>t.ssrc===e);if(!r)return null;const n={id:_K(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"audio\",type:\"ssrc\",ssrc:r.ssrc.toString()};return n.A_astd=i._originMediaStreamTrack.enabled&&i._mediaStreamTrack.enabled?\"0\":\"1\",r.inputLevel?n.A_ail=Math.round(100*r.inputLevel).toString():n.A_ail=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),n.A_apil=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),r.aecReturnLoss&&(n.A_ecrl=Math.round(r.aecReturnLoss).toString()),r.aecReturnLossEnhancement&&(n.A_ecrle=Math.round(r.aecReturnLossEnhancement).toString()),n}(o[0].ssrcId,e,n);t&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.PUBLISH_STATS,{stream_type:\"high\",stats:t})});break}}const s=function(e){const t={id:\"bweforvideo\",timestamp:new Date(e.timestamp).toISOString(),type:\"VideoBwe\"};return e.bitrate.retransmit&&(t.A_rb=e.bitrate.retransmit.toString()),e.bitrate.targetEncoded&&(t.A_teb=e.bitrate.targetEncoded.toString()),t.A_aeb=e.bitrate.actualEncoded.toString(),t.A_tb=e.bitrate.transmit.toString(),void 0!==e.sendBandwidth&&(t.A_asb=e.sendBandwidth.toString()),t}(e);s&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.PUBLISH_STATS,{stream_type:r===lB.LocalVideoLowTrack?\"low\":\"high\",stats:s})})})}uploadSlowUplinkStats(e){var t;((null===(t=this.requestLocalMedia)||void 0===t?void 0:t.call(this))||[]).filter(e=>{let[t]=e;return t===lB.LocalVideoLowTrack||t===lB.LocalVideoTrack}).forEach(t=>{let[i,{ssrcs:r}]=t;const n=dK(r[0].ssrcId,e);n&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.PUBLISH_STATS,{stream_type:i===lB.LocalVideoLowTrack?\"low\":\"high\",stats:n})})})}uploadRelatedUplinkStats(e,t){var i;((null===(i=this.requestLocalMedia)||void 0===i?void 0:i.call(this))||[]).filter(e=>{let[t]=e;return t===lB.LocalVideoLowTrack||t===lB.LocalVideoTrack}).forEach(t=>{let[i,{ssrcs:r}]=t;const n=function(e,t){const i=t.videoSend.find(t=>t.ssrc===e);return i?{mediaType:\"video\",isVideoMute:!1,frameRateInput:i.inputFrame&&i.inputFrame.frameRate.toString(),frameRateSent:i.sentFrame&&i.sentFrame.frameRate.toString(),googRtt:i.rttMs.toString(),qpSumPerFrame:Math.floor(i.qpSumPerFrame).toString()}:null}(r[0].ssrcId,e);n&&DK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ik.PUBLISH_RELATED_STATS,{stream_type:i===lB.LocalVideoLowTrack?\"low\":\"high\",stats:n})})})}uploadDenoiserStats(e){for(let n=0;n<e.length;n++){const o=e[n];if(o instanceof JG){var t,i,r;const e=null===(t=(i=o._external).getDenoiserStats)||void 0===t?void 0:t.call(i);return void(e&&(null===(r=this.requestUpload)||void 0===r||r.call(this,Ik.DENOISER_STATS,e)))}}}uploadExtensionStats(e){for(let t=0;t<e.length;t++){e[t].getProcessorStats().forEach(e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)})}}stopUploadUplinkStats(){this.uploadUnplinkStarted&&(this.uploadUnplinkStarted=!1,this.uplinkStatsUploadInterval&&window.clearInterval(this.uplinkStatsUploadInterval),this.uplinkRelatedStatsUploadInterval&&window.clearInterval(this.uplinkRelatedStatsUploadInterval),this.uplinkDenoiserStatsUploadInterval&&window.clearInterval(this.uplinkDenoiserStatsUploadInterval),this.uplinkStatsUploadInterval=void 0,this.uplinkRelatedStatsUploadInterval=void 0,this.uplinkDenoiserStatsUploadInterval=void 0)}startUploadDownlinkStats(){this.uploadDownlinkStarted||(this.uploadDownlinkStarted=!0,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval),this.downlinkStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadDownlinkStats(t,this.lastStats),this.lastStats=t)},3e3),this.downlinkStatsUploadSlowInterval&&window.clearInterval(this.downlinkStatsUploadSlowInterval),this.downlinkStatsUploadSlowInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&this.uploadSlowDownlinkStats(t)},6e4),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkRelatedStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestStats)||void 0===e?void 0:e.call(this);t&&(this.uploadRelatedDownlinkStats(t,this.lastStats),this.lastStats=t)},1e3),this.downlinkExtensionStatsUploadInterval&&window.clearInterval(this.downlinkExtensionStatsUploadInterval),this.downlinkExtensionStatsUploadInterval=window.setInterval(()=>{var e;const t=null===(e=this.requestRemoteMedia)||void 0===e?void 0:e.call(this);t&&this.uploadDownlinkExtensionStats(t)},2e3))}uploadDownlinkStats(e,t){var i;((null===(i=this.requestRemoteMedia)||void 0===i?void 0:i.call(this))||[]).forEach(t=>{let[i,r]=t;if(r.has(AB.VIDEO)&&i.videoTrack){const t=i.videoTrack?function(e,t,i){const r=t.videoRecv.find(t=>t.ssrc===e);if(!r)return null;const n={id:_K(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"video\",type:\"ssrc\",ssrc:r.ssrc.toString()};var o,s;return n.bytesReceived=r.bytes.toString(),n.packetsLost=r.packetsLost.toString(),n.packetsReceived=r.packets.toString(),r.framesRateFirefox&&(n.A_frr=r.framesRateFirefox.toString()),r.receivedFrame?(n.A_frr=r.receivedFrame.frameRate.toString(),n.A_fhr=r.receivedFrame.height.toString(),n.A_fwr=r.receivedFrame.width.toString()):(n.A_fhr=null===(o=i._videoHeight)||void 0===o?void 0:o.toString(),n.A_fwr=null===(s=i._videoWidth)||void 0===s?void 0:s.toString()),n.A_frd=r.decodeFrameRate.toString(),r.outputFrame&&(n.A_fro=r.outputFrame.frameRate.toString()),void 0!==r.jitterBufferMs&&(n.A_jbm=Math.floor(r.jitterBufferMs).toString()),void 0!==r.currentDelayMs&&(n.A_cdm=Math.floor(r.currentDelayMs).toString()),n.A_fs=r.firsCount.toString(),n.A_ns=r.nacksCount.toString(),n.A_ps=r.plisCount.toString(),i&&(n.A_vrtd=i._originMediaStreamTrack.enabled&&i._mediaStreamTrack.enabled?\"0\":\"1\"),i._player&&i._player.freezeTimeCounterList.length>0&&(n.A_vrft=i._player.freezeTimeCounterList.splice(0,1)[0].toString()),n.A_rvps=XL[i._player?i._player.videoElementStatus:\"uninit\"].toString(),n}(i._videoSSRC,e,i.videoTrack):void 0;t&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.SUBSCRIBE_STATS,{stream_id:i.uid,stats:t})})}if(r.has(AB.AUDIO)&&i.audioTrack){const t=i.audioTrack?function(e,t,i){const r=t.audioRecv.find(t=>t.ssrc===e);if(!r)return null;const n={id:_K(10,\"\"),timestamp:new Date(t.timestamp).toISOString(),mediaType:\"audio\",type:\"ssrc\",ssrc:r.ssrc.toString()};return n.bytesReceived=r.bytes.toString(),n.packetsLost=r.packetsLost.toString(),n.packetsReceived=r.packets.toString(),r.outputLevel?n.A_aol=Math.round(100*r.outputLevel).toString():n.A_aol=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),n.A_apol=Math.round(100*i._source.getAccurateVolumeLevel()).toString(),i&&(n.A_artd=i._originMediaStreamTrack.enabled&&i._mediaStreamTrack.enabled?\"0\":\"1\"),n.A_jr=r.jitterMs.toString(),n.A_jbm=Math.floor(r.jitterBufferMs).toString(),n.A_cdm=Math.floor(r.jitterBufferMs).toString(),n.A_raps=XL[zj.getPlayerState(i.getTrackId())].toString(),n}(i._audioSSRC,e,i.audioTrack):void 0;t&&DK(()=>{var e;return null===(e=this.requestUpload)||void 0===e?void 0:e.call(this,Ik.SUBSCRIBE_STATS,{stream_id:i.uid,stats:t})})}})}uploadSlowDownlinkStats(e){}uploadRelatedDownlinkStats(e,t){var i;((null===(i=this.requestRemoteMedia)||void 0===i?void 0:i.call(this))||[]).forEach(i=>{let[r,n]=i;if(n.has(AB.VIDEO)&&r.videoTrack){var o;const i=!0===(r._videoSSRC&&(null===(o=this.requestVideoIsReady)||void 0===o?void 0:o.call(this,r._videoSSRC))||!1),n=function(e,t,i,r,n,o){const s=i.videoRecv.find(t=>t.ssrc===e),a=n?n.videoRecv.find(t=>t.ssrc===e):void 0;if(!s)return null;const c=iK.isRemoteVideoFreeze(o,s,a)&&t,d={mediaType:\"video\",isVideoMute:!1,peerId:r,frameRateReceived:s.receivedFrame&&s.receivedFrame.frameRate.toString(),frameRateDecoded:s.decodedFrame&&s.decodedFrame.frameRate.toString(),isFreeze:c,bytesReceived:s.bytes.toString(),packetsReceived:s.packets.toString(),packetsLost:s.packetsLost.toString(),qpSumPerFrame:Math.floor(s.qpSumPerFrame).toString()};return s.framesRateFirefox&&(d.frameRateDecoded=s.framesRateFirefox.toString(),d.frameRateReceived=s.framesRateFirefox.toString()),d}(r._videoSSRC,i,e,r.uid,t,r.videoTrack);n&&DK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ik.SUBSCRIBE_RELATED_STATS,{stream_id:r.uid,stats:n})})}if(n.has(AB.AUDIO)&&r.audioTrack){const t=function(e,t,i,r){const n=t.audioRecv.find(t=>t.ssrc===e);if(!n)return null;const o=iK.isRemoteAudioFreeze(r);return{mediaType:\"audio\",isAudioMute:!1,peerId:i,googJitterReceived:n.jitterMs.toString(),isFreeze:o,bytesReceived:n.bytes.toString(),packetsReceived:n.packets.toString(),packetsLost:n.packetsLost.toString(),frameReceived:n.receivedFrames.toString(),frameDropped:n.droppedFrames.toString()}}(r._audioSSRC,e,r.uid,r.audioTrack);t&&DK(()=>{var e;null===(e=this.requestUpload)||void 0===e||e.call(this,Ik.SUBSCRIBE_RELATED_STATS,{stream_id:r.uid,stats:t})})}})}stopUploadDownlinkStats(){this.uploadDownlinkStarted&&(this.uploadDownlinkStarted=!1,this.downlinkStatsUploadInterval&&window.clearInterval(this.downlinkStatsUploadInterval),this.downlinkRelatedStatsUploadInterval&&window.clearInterval(this.downlinkRelatedStatsUploadInterval),this.downlinkStatsUploadInterval=void 0,this.downlinkRelatedStatsUploadInterval=void 0)}stopUploadTransportStats(){this.uploadTransportStarted&&(this.uploadTransportStarted=!1,this.transportStatsUploadInterval&&window.clearInterval(this.transportStatsUploadInterval),this.transportStatsUploadInterval=void 0)}stopUploadExtensionUsageStats(){this.uploadExtensionUsageStarted&&(this.uploadExtensionUsageStarted=!1,this.extensionUsageStatsUploadInterval&&window.clearInterval(this.extensionUsageStatsUploadInterval),this.extensionUsageStatsUploadInterval=void 0)}uploadDownlinkExtensionStats(e){e.forEach(e=>{let[t,i]=e;if(i.has(AB.VIDEO)&&t.videoTrack){t.videoTrack.getProcessorStats().forEach(e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)})}if(i.has(AB.AUDIO)&&t.audioTrack){t.audioTrack.getProcessorStats().forEach(e=>{var t;null===(t=this.requestUpload)||void 0===t||t.call(this,e.type,e.stats)})}})}}var r0;const n0=\"v=0\\no=- 0 0 IN IP4 127.0.0.1\\ns=AgoraGateway\\nt=0 0\\na=group:BUNDLE 0\\na=msid-semantic: WMS\\na=ice-lite\\nm=application 9 UDP/DTLS/SCTP webrtc-datachannel\\nc=IN IP4 127.0.0.1\\na=mid:0\\n\",o0=\"9\",s0=2e4,a0=4e4;let c0=mP(\"RemoteSDP\")(r0=class{get localCapabilities(){return PK(this._localCapabilities)}get rtpCapabilities(){return PK(this._rtpCapabilities)}get candidates(){return PK(this._candidates)}get iceParameters(){return PK(this._iceParameters)}get dtlsParameters(){return PK(this._dtlsParameters)}constructor(e){MN(this,\"sessionDesc\",void 0),MN(this,\"_localCapabilities\",void 0),MN(this,\"_rtpCapabilities\",void 0),MN(this,\"_candidates\",void 0),MN(this,\"_iceParameters\",void 0),MN(this,\"_dtlsParameters\",void 0),MN(this,\"setup\",void 0),MN(this,\"currentMidIndex\",void 0),MN(this,\"cname\",void 0),MN(this,\"firefoxSsrcMidMap\",new Map),e=PK(e);const{remoteIceParameters:t,remoteDtlsParameters:i,candidates:r,remoteRTPCapabilities:n,remoteSetup:o,localCapabilities:s,cname:a}=e,c=W$.exports.parse(n0);this._rtpCapabilities=n,this._candidates=r,this._iceParameters=t,this._dtlsParameters=i,this._localCapabilities=s,this.setup=o,this.cname=a;const d=this.rtpCapabilities.send;for(const e of c.mediaDescriptions){if(e.attributes.iceUfrag=t.iceUfrag,e.attributes.icePwd=t.icePwd,e.attributes.fingerprints=i.fingerprints,e.attributes.candidates=r,e.attributes.setup=o,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=d.videoCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.videoCodecs,e.attributes.extmaps=d.videoExtensions,LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:a0,rtx:LP(\"USE_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=d.audioCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=d.audioCodecs,e.attributes.extmaps=d.audioExtensions,d1(e),LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:s0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=c,this.currentMidIndex=c.mediaDescriptions.length-1}updateRemoteRTPCapabilities(e){const t=W$.exports.parse(n0);this._rtpCapabilities=e;const i=this.rtpCapabilities.send;for(const e of t.mediaDescriptions){if(e.attributes.iceUfrag=this._iceParameters.iceUfrag,e.attributes.icePwd=this._iceParameters.icePwd,e.attributes.fingerprints=this._dtlsParameters.fingerprints,e.attributes.candidates=this._candidates,e.attributes.setup=this.setup,\"application\"===e.media.mediaType&&(e.attributes.sctpPort=\"5000\"),\"video\"===e.media.mediaType&&(e.media.fmts=i.videoCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=i.videoCodecs,e.attributes.extmaps=i.videoExtensions,LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:a0,rtx:LP(\"USE_RTX\")?40001:void 0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}if(\"audio\"===e.media.mediaType&&(e.media.fmts=i.audioCodecs.map(e=>e.payloadType.toString(10)),e.attributes.payloads=i.audioCodecs,e.attributes.extmaps=i.audioExtensions,LP(\"PRELOAD_MEDIA_COUNT\")>0)){const{ssrcs:t,ssrcGroups:i}=$$([{ssrcId:s0}],this.cname);e.attributes.ssrcs=t,e.attributes.ssrcGroups=i}}this.sessionDesc=t,this.currentMidIndex=t.mediaDescriptions.length-1}preloadRemoteMedia(e){this.rtpCapabilities;const t=this.candidates,i=this.dtlsParameters,r=this.iceParameters,n=this.rtpCapabilities.send;for(let o=1;o<e;o++){const e=2*o+s0,s=2*o+a0,{ssrcs:a,ssrcGroups:c}=$$([{ssrcId:e}],this.cname),{ssrcs:d,ssrcGroups:u}=$$([{ssrcId:s,rtx:LP(\"USE_RTX\")?s+1:void 0}],this.cname);this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"video\",port:o0,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:n.videoCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:r.iceUfrag,icePwd:r.icePwd,unrecognized:[],candidates:t,extmaps:n.videoExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:d,ssrcGroups:u,rtcpFeedbackWildcards:[],payloads:n.videoCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*o-1)}}),this.sessionDesc.mediaDescriptions.push({media:{mediaType:\"audio\",port:o0,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:n.audioCodecs.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:r.iceUfrag,icePwd:r.icePwd,unrecognized:[],candidates:t,extmaps:n.audioExtensions,fingerprints:i.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:a,ssrcGroups:c,rtcpFeedbackWildcards:[],payloads:n.audioCodecs,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:\"sendonly\",rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(2*o)}}),this.currentMidIndex+=2}this.updateBundleMids()}toString(){return W$.exports.print(this.sessionDesc)}send(e,t,i,r){const{ssrcs:n,ssrcGroups:o}=$$(t,this.cname,i),s=this.findPreloadMediaDesc(n);if(s){if(gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,s.attributes.mid),r&&(r.tcc||r.remb)){const e=this.sessionDesc.mediaDescriptions.indexOf(s);return this.sessionDesc.mediaDescriptions[e]=this.mungSendMediaDesc(s,r),{mid:s.attributes.mid,needExchangeSDP:!0}}return{mid:s.attributes.mid,needExchangeSDP:!1}}{const t=this.findAvailableMediaIndex(e,n);if(pN()||mN()||fN()){if(-1!==t&&2!==t){const e=PK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction=\"sendonly\",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,r),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,\"sendonly\",r);return this.updateBundleMids(),{mid:t.attributes.mid,needExchangeSDP:!0}}}if(-1!==t){const e=PK(this.sessionDesc.mediaDescriptions[t]);return e.attributes.direction=\"sendonly\",e.attributes.ssrcs=n,e.attributes.ssrcGroups=o,this.sessionDesc.mediaDescriptions[t]=this.mungSendMediaDesc(e,r),gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,e.attributes.mid),{mid:e.attributes.mid,needExchangeSDP:!0}}{const t=this.createOrRecycleSendMedia(e,n,o,\"sendonly\",r);return this.updateBundleMids(),gN()&&this.firefoxSsrcMidMap.set(n[0].ssrcId,t.attributes.mid),{mid:t.attributes.mid,needExchangeSDP:!0}}}}batchSend(e){const t=e.map(e=>{let{kind:t,ssrcMsg:i,mslabel:r}=e;return this.send(t,i,r)}),i=[];let r=!1;return t.forEach(e=>{let{mid:t,needExchangeSDP:n}=e;n&&(r=!0),i.push(t)}),{mids:i,needExchangeSDP:r}}stopSending(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>t.attributes.mid&&-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.stopSending.\");t.forEach(e=>{\"0\"===e.attributes.mid||gN()||pN()||mN()||fN()?e.attributes.ssrcs=[]:(e.attributes.ssrcs=[],e.attributes.direction=\"inactive\",e.media.port=\"0\")}),this.updateBundleMids()}mute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.mute.\"));t.attributes.direction=\"inactive\"}unmute(e){const t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"mediaDescription not found with \".concat(e,\" in remote SDP when calling RemoteSDP.unmute.\"));t.attributes.direction=\"sendonly\"}muteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||\"\"));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach(e=>{e.attributes.direction=\"inactive\"})}unmuteRemote(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>e.includes(t.attributes.mid||\"\"));if(t.length!==e.length)throw new Error(\"mediaDescriptions' length doesn't match mids' length when calling RemoteSDP.muteRemote.\");t.forEach(e=>{e.attributes.direction=\"recvonly\"})}receive(e,t,i,r){e.forEach((e,n)=>{this.createOrRecycleRecvMedia(e,[],\"recvonly\",t,i,r[n])}),this.updateBundleMids()}stopReceiving(e){const t=this.sessionDesc.mediaDescriptions.filter(t=>-1!==e.indexOf(t.attributes.mid));if(t.length!==e.length)throw new Error(\"MediaDescriptions' length doesn't match mids's length when calling RemoteSDP.receive.\");t.forEach(e=>{e.media.port=\"0\",e.attributes.direction=\"inactive\"}),this.updateBundleMids()}restartICE(e){e=PK(e),this._iceParameters=e,this.sessionDesc.mediaDescriptions.forEach(t=>{t.attributes.iceUfrag=e.iceUfrag,t.attributes.icePwd=e.icePwd})}predictReceivingMids(e){const t=[];for(let i=0;i<e;i++)t.push((this.currentMidIndex+i+1).toString(10));return t}findAvailableMediaIndex(e,t){return this.sessionDesc.mediaDescriptions.findIndex(i=>{const r=i.media.mediaType===e&&\"0\"!==i.media.port&&(\"sendonly\"===i.attributes.direction||\"sendrecv\"===i.attributes.direction)&&0===i.attributes.ssrcs.length;if(gN()){if(r){const e=this.firefoxSsrcMidMap.get(t[0].ssrcId);return!(e||\"0\"!==i.attributes.mid&&\"1\"!==i.attributes.mid)||!(!e||e!==i.attributes.mid)}return!1}return r})}createOrRecycleRecvMedia(e,t,i,r,n,o){const s=e._mediaStreamTrack.kind,a=this.rtpCapabilities.recv,c=this.localCapabilities.send;let d=[];if(s===AB.VIDEO){var u,h;if(LP(\"H264_PROFILE_LEVEL_ID\")&&\"h264\"===r&&(d=a.videoCodecs.filter(e=>{var t,i;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(r)&&(null==e||null===(i=e.fmtp)||void 0===i?void 0:i.parameters[\"profile-level-id\"])===LP(\"H264_PROFILE_LEVEL_ID\")})),!d||0===(null===(u=d)||void 0===u?void 0:u.length)){const e=c.videoCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(r)});0!==e.length&&(d=a.videoCodecs.filter(t=>e.some(e=>e.payloadType===t.payloadType)))}if(LP(\"USE_RTX\")){const e=d.map(e=>e.payloadType.toString()),t=a.videoCodecs.filter(t=>{var i,r;return\"rtx\"===(null===(i=t.rtpMap)||void 0===i?void 0:i.encodingName)&&e.includes((null===(r=t.fmtp)||void 0===r?void 0:r.parameters.apt)||\"\")});d=[...d,...t]}if(0===d.length)JD.warning(\"codec \".concat(r,\" not included in rtpCapabilities, fallback to default payloads: \").concat(null===(h=a.videoCodecs[0].rtpMap)||void 0===h?void 0:h.encodingName)),d=a.videoCodecs}else d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(n)}),0===d.length&&(JD.warning(\"codec \".concat(n,\" not included in rtpCapabilities, fallback to opus\")),d=a.audioCodecs.filter(e=>{var t;return((null===(t=e.rtpMap)||void 0===t?void 0:t.encodingName.toLowerCase())||\"\").includes(\"opus\")}));const A=s===AB.VIDEO?a.videoExtensions:a.audioExtensions;this.currentMidIndex+=1;const l=\"\".concat(this.currentMidIndex);let p={media:{mediaType:s,port:o0,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:d.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:A,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:[],rtcpFeedbackWildcards:[],payloads:d,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:i,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(l)}};p=this.mungRecvMediaDsec(p,e,o);const g=this.findFirstClosedMedia(s);if(g){const e=this.sessionDesc.mediaDescriptions.indexOf(g);this.sessionDesc.mediaDescriptions[e]=p}else this.sessionDesc.mediaDescriptions.push(p);return p}createOrRecycleSendMedia(e,t,i,r,n){const o=this.rtpCapabilities.send,s=e===AB.VIDEO?o.videoCodecs:o.audioCodecs,a=e===AB.VIDEO?o.videoExtensions:o.audioExtensions;this.currentMidIndex+=1;const c=\"\".concat(this.currentMidIndex);let d={media:{mediaType:e,port:o0,protos:[\"UDP\",\"TLS\",\"RTP\",\"SAVPF\"],fmts:s.map(e=>e.payloadType.toString(10))},connections:[{nettype:\"IN\",addrtype:\"IP4\",address:\"127.0.0.1\"}],bandwidths:[],attributes:{iceUfrag:this.iceParameters.iceUfrag,icePwd:this.iceParameters.icePwd,unrecognized:[],candidates:this.candidates,extmaps:a,fingerprints:this.dtlsParameters.fingerprints,imageattr:[],msids:[],remoteCandidatesList:[],rids:[],ssrcs:t,ssrcGroups:i,rtcpFeedbackWildcards:[],payloads:s,rtcp:{port:\"9\",netType:\"IN\",addressType:\"IP4\",address:\"0.0.0.0\"},setup:this.setup,direction:r,rtcpMux:!0,rtcpRsize:!0,mid:\"\".concat(c)}};d=this.mungSendMediaDesc(d,n);const u=this.findFirstClosedMedia(e);if(u){const e=this.sessionDesc.mediaDescriptions.indexOf(u);this.sessionDesc.mediaDescriptions[e]=d}else this.sessionDesc.mediaDescriptions.push(d);return d}updateBundleMids(){this.sessionDesc.attributes.groups[0].identificationTag=this.sessionDesc.mediaDescriptions.filter(e=>\"0\"!==e.media.port).map(e=>e.attributes.mid)}mungRecvMediaDsec(e,t,i){const r=PK(e);return t1(r),e1(r,t),i1(r,t),r1(r),n1(r,i,this.localCapabilities.send),r}mungSendMediaDesc(e,t){const i=PK(e);return n1(i,t,this.localCapabilities.recv),d1(i),i}updateRecvMedia(e,t){const i=this.sessionDesc.mediaDescriptions.findIndex(t=>t.attributes.mid===e);if(-1!==i){const e=this.mungRecvMediaDsec(this.sessionDesc.mediaDescriptions[i],t);this.sessionDesc.mediaDescriptions[i]=e}}bumpMid(e){this.currentMidIndex+=e}findFirstClosedMedia(e){return this.sessionDesc.mediaDescriptions.find(t=>gN()?\"0\"===t.media.port&&t.media.mediaType===e:\"0\"===t.media.port)}findPreloadMediaDesc(e){return this.sessionDesc.mediaDescriptions.find(t=>{var i,r;return(null===(i=t.attributes)||void 0===i||null===(r=i.ssrcs[0])||void 0===r?void 0:r.ssrcId)===e[0].ssrcId})}getSSRC(e){var t;return null===(t=this.sessionDesc.mediaDescriptions.find(t=>t.attributes.mid===e))||void 0===t?void 0:t.attributes.ssrcs}})||r0;var d0,u0;function h0(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function A0(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?h0(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):h0(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let l0=mP(\"NVExtentionsConnection\",\"store.p2pId\")((VV((u0=class e extends RB{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(e,t,i){super(e,t),MN(this,\"store\",void 0),MN(this,\"peerConnection\",void 0),MN(this,\"remoteSDP\",void 0),MN(this,\"initialOffer\",void 0),MN(this,\"transportEventReceiver\",void 0),MN(this,\"statsFilter\",void 0),MN(this,\"useRTX\",LP(\"USE_RTX\")),MN(this,\"localCapabilities\",void 0),MN(this,\"localCandidateCount\",0),MN(this,\"allCandidatesReceived\",!1),MN(this,\"mutex\",new fj(\"NVExtentionsConnection-mutex\")),MN(this,\"rtcMedia\",void 0),this.store=t,this.peerConnection=i,this.statsFilter=D1(this.peerConnection,void 0,void 0,gN()?1200:void 0),this.bindPCEvents(),this.bindStatsEvents(),this.store.p2pId=this.store.p2pId+1}async establish(e){try{const e=await this.peerConnection.createOffer();if(!e.sdp)throw new Error(\"Cannot get initialOffer.sdp when trying to establish PeerConnection.\");const t=X$(e.sdp),i=await s1(!this.useRTX,LP(\"FILTER_VIDEO_FEC\"),LP(\"FILTER_AUDIO_FEC\"));return this.localCapabilities=i,this.initialOffer=e,A0(A0({},t),{},{rtpCapabilities:i,offerSDP:e.sdp})}catch(e){throw new QD(xD.GET_LOCAL_CONNECTION_PARAMS_FAILED,e.toString())}}async connect(e,t,i,r,n,o){try{if(!this.initialOffer)throw new Error(\"Cannot establish NVConnection without initial offer.\");this.remoteSDP=new c0({remoteIceParameters:e,remoteDtlsParameters:t,candidates:i,remoteRTPCapabilities:r,remoteSetup:n,localCapabilities:c1(this.localCapabilities),cname:o});const s=this.remoteSDP.toString(),a=W$.exports.parse(this.initialOffer.sdp),c=a.mediaDescriptions.find(e=>\"audio\"===e.media.mediaType);c&&d1(c);const d=W$.exports.print(a),u=this.logSDPExchange(d||\"\",\"offer\",\"local\",\"connect\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:d}),null==u||u(s),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:s})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NV.connect failed; \".concat(e.toString()))}}async updateRemoteConnect(e){var t,i,r;null===(t=this.remoteSDP)||void 0===t||t.updateRemoteRTPCapabilities(e),null===(i=this.remoteSDP)||void 0===i||i.preloadRemoteMedia(2);const n=null===(r=this.remoteSDP)||void 0===r?void 0:r.toString();await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:n});const o=await this.peerConnection.createAnswer();await this.peerConnection.setLocalDescription(o),JD.debug(\"[NVExtentionsConnection] updateRemoteRTPCapabilities by exchanging SDP.\")}send(e,t,i){var r=this;return C$((function*(){const n=yield S$(r.mutex.lock(\"From NVExtentionsConnection.send\"));try{if(!r.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.send before remote SDP created\");const o=[];e.forEach(e=>{const t=r.peerConnection.addTransceiver(e._mediaStreamTrack,{direction:\"sendonly\"});o.push(t)}),gN()&&!0===LP(\"SIMULCAST\")&&(hP(\"debug\",r,\"apply simulcast for firefox\"),yield S$(r.applySimulcastForFirefox(o,e)));const s=yield S$(r.peerConnection.createOffer()),a=r.remoteSDP.predictReceivingMids(e.length),c=r.mungSendOfferSDP(s.sdp,e,a),d=W$.exports.parse(c),u=a.map(e=>{const t=d.mediaDescriptions.find(t=>t.attributes.mid===e);if(!t)throw new Error(\"Cannot extract ssrc from mediaDescription.\");return z$(t,r.useRTX)});let h;try{h=yield u}catch(n){h=[],r.remoteSDP.receive(e,t,i,h);const o=r.remoteSDP.toString();throw yield S$(r.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield S$(r.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})),yield S$(r.stopSending(a,!0)),n}r.remoteSDP.receive(e,t,i,h);const A=r.remoteSDP.toString(),l=r.logSDPExchange(c,\"offer\",\"local\",\"send\");return yield S$(r.peerConnection.setLocalDescription({type:\"offer\",sdp:c})),yield S$(r.applySimulcastEncodings(o,e)),yield S$(r.applySendEncodings(o,e)),null==l||l(A),yield S$(r.peerConnection.setRemoteDescription({type:\"answer\",sdp:A})),o.map((e,t)=>{const i=a[t];return{localSSRC:u[t],id:i,transceiver:e}})}catch(e){throw e instanceof QD?e:new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.send failed; \".concat(e.toString()))}finally{n()}}))()}async stopSending(e,t){const i=t?void 0:await this.mutex.lock(\"From NVExtentionsConnection.stopSending\");try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.stopSending before remote SDP created\");const t=this.peerConnection.getTransceivers().filter(t=>-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length when trying to call NVExtentionsConnection.stopSending.\");t.map(e=>{var t;e.direction=\"inactive\",null===(t=e.stop)||void 0===t||t.call(e)});const r=await this.peerConnection.createOffer(),n=this.logSDPExchange(r.sdp||\"\",\"offer\",\"local\",\"stopSending\");await this.peerConnection.setLocalDescription(r),this.remoteSDP.stopReceiving(e);const o=this.remoteSDP.toString();null==n||n(o),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:o})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.stopSending failed; \".concat(e.toString()))}finally{i&&i()}}async receive(e,t,i,r){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.receive \".concat(e,\" before remoteSDP created.\"));const{mid:n,needExchangeSDP:o}=this.remoteSDP.send(e,t,i,r);if(o){const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer(),o=this.mungReceiveAnswerSDP(r.sdp,n,e);null==i||i(o||\"\"),await this.peerConnection.setLocalDescription({type:\"answer\",sdp:o}),JD.debug(\"[NVExtentionsConnection] receive \".concat(e,\" by exchanging SDP.\"))}else JD.debug(\"[NVExtentionsConnection] receive \".concat(e,\" no need to exchange SDP.\"));const s=this.peerConnection.getTransceivers().find(e=>e.mid===n);if(!s)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:s.receiver.track,id:n}}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.receive failed; \".concat(e.toString()))}}async batchReceive(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.batchReceive before remoteSDP created.\");const{mids:t,needExchangeSDP:i}=this.remoteSDP.batchSend(e);if(i){const e=this.remoteSDP.toString(),t=this.logSDPExchange(e,\"offer\",\"remote\",\"receive\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:e});const i=await this.peerConnection.createAnswer();null==t||t(i.sdp||\"\"),await this.peerConnection.setLocalDescription(i),JD.debug(\"[NVExtentionsConnection] batchReceive by exchanging SDP.\")}else JD.debug(\"[NVExtentionsConnection] batchReceive no need to exchange SDP.\");return t.map(e=>{const t=this.peerConnection.getTransceivers().find(t=>t.mid===e);if(!t)throw new Error(\"Cannot get transceiver after setLocalDescription.\");return{track:t.receiver.track,id:e}})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.receive failed; \".concat(e.toString()))}}async stopReceiving(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.stopReceiving before remote SDP created.\");this.remoteSDP.stopSending(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"stopReceiving\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection stopReceiving failed; \".concat(e.toString()))}}async muteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.muteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.mute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"muteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.muteRemote failed; \".concat(e.toString()))}}async unmuteRemote(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.unmuteRemote mid=\".concat(e,\" before remote SDP created.\"));this.remoteSDP.unmute(e);const t=this.remoteSDP.toString(),i=this.logSDPExchange(t,\"offer\",\"remote\",\"unmuteRemote\");await this.peerConnection.setRemoteDescription({type:\"offer\",sdp:t});const r=await this.peerConnection.createAnswer();null==i||i(r.sdp||\"\"),await this.peerConnection.setLocalDescription(r)}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.unmuteRemote failed; \".concat(e.toString()))}}async muteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.muteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map(e=>{e.direction=\"inactive\"});const i=await this.peerConnection.createOffer(),r=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"muteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.muteRemote(e);const n=this.remoteSDP.toString();null==r||r(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.muteLocal failed; \".concat(e.toString()))}}async unmuteLocal(e){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.unmuteLocal before remote SDP created.\");const t=this.peerConnection.getTransceivers().filter(t=>t.mid&&-1!==e.indexOf(t.mid));if(t.length!==e.length)throw new Error(\"Transceivers' length doesn't match mids' length.\");t.map(async(e,t)=>{e.direction=\"sendonly\"});const i=await this.peerConnection.createOffer(),r=this.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"unmuteLocal\");await this.peerConnection.setLocalDescription(i),this.remoteSDP.unmuteRemote(e);const n=this.remoteSDP.toString();null==r||r(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,\"NVExtentionsConnection.unmuteLocal failed; \".concat(e.toString()))}}restartICE(){var e=this;return C$((function*(){const t=yield S$(e.mutex.lock(\"From NVExtentionsConnection.restartICE\"));try{const i=yield S$(e.peerConnection.createOffer({iceRestart:!0}));if(!i.sdp)throw new Error(\"Cannot restartICE because restart offer SDP does not exist.\");const r=X$(i.sdp),{remoteIceParameters:n}=yield r.iceParameters;if(!e.remoteSDP)throw new Error(\"Cannot restartICE before remoteSDP created.\");e.remoteSDP.restartICE(n);const o=e.remoteSDP.toString(),s=e.logSDPExchange(i.sdp||\"\",\"offer\",\"local\",\"restartICE\");yield S$(e.peerConnection.setLocalDescription(i)),null==s||s(o),yield S$(e.peerConnection.setRemoteDescription({type:\"answer\",sdp:o}))}catch(e){JD.warning(\"restart ICE failed, abort operation\",e)}finally{t()}}))()}close(){var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,\"closed\"),this.unbindPCEvents(),this.unbindStatsEvents(),this.removeAllListeners(),this.transportEventReceiver=void 0,this.statsFilter.destroy()}getStats(){return this.statsFilter.getStats()}getRemoteVideoIsReady(e){return this.statsFilter.getVideoIsReady(e)}async updateEncoderConfig(e,t){try{if(!this.remoteSDP)throw new Error(\"Cannot call NVExtentionsConnection.updateEncoderConfig before remote SDP created.\");const i=await this.peerConnection.createOffer(),r=this.mungSendOfferSDP(i.sdp,[t],[e]);this.remoteSDP.updateRecvMedia(e,t);const n=this.remoteSDP.toString(),o=this.logSDPExchange(r,\"offer\",\"local\",\"updateEncoderConfig\");await this.peerConnection.setLocalDescription({type:\"offer\",sdp:r}),null==o||o(n),await this.peerConnection.setRemoteDescription({type:\"answer\",sdp:n})}catch(e){throw new QD(xD.EXCHANGE_SDP_FAILED,e.toString())}}async updateSendParameters(e,t){const i=this.peerConnection.getTransceivers().filter(t=>t.mid===e);1===i.length&&(this.isVP8Simulcast(t)?gN()||await this.applySimulcastEncodings(i,[t]):await this.applySendEncodings(i,[t]))}setStatsRemoteVideoIsReady(e,t){this.statsFilter.setVideoIsReady2(e,t)}async replaceTrack(e,t){const i=this.peerConnection.getTransceivers().find(e=>e.mid===t);i&&await i.sender.replaceTrack(e._mediaStreamTrack)}getP2PConnectionParams(){var e;if(null===(e=this.peerConnection.currentLocalDescription)||void 0===e||!e.sdp||!this.localCapabilities)throw new Error;return A0(A0({},X$(this.peerConnection.currentLocalDescription.sdp)),{},{rtpCapabilities:this.localCapabilities})}bindPCEvents(){this.peerConnection.oniceconnectionstatechange=()=>{var e;null===(e=this.onICEConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.iceConnectionState)},this.peerConnection.onconnectionstatechange=()=>{var e;null===(e=this.onConnectionStateChange)||void 0===e||e.call(this,this.peerConnection.connectionState)},this.peerConnection.onicecandidate=e=>{e.candidate?this.localCandidateCount+=1:(this.peerConnection.onicecandidate=null,this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] local candidate count\"),this.localCandidateCount))},setTimeout(()=>{this.allCandidatesReceived||(this.allCandidatesReceived=!0,JD.debug(\"[pc-\".concat(this.store.p2pId,\"] onicecandidate timeout, local candidate count\"),this.localCandidateCount))},LP(\"CANDIDATE_TIMEOUT\"))}unbindPCEvents(){this.peerConnection.oniceconnectionstatechange=null,this.peerConnection.onconnectionstatechange=null,this.peerConnection.onsignalingstatechange=null,this.peerConnection.onicecandidateerror=null,this.peerConnection.onicecandidate=null,this.peerConnection.ontrack=null}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Rk(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),LP(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),LP(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")}))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(oK(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!LP(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))}),t}async applySendEncodings(e,t){try{if(!wB().supportSetRtpSenderParameters)return;if(e.length!==t.length)return;for(let c=0;c<e.length;c++){const d=e[c],u=t[c];if(u&&u instanceof lz){var i,r;if(this.isVP8Simulcast(u))continue;const e={},t={};switch(u._optimizationMode){case\"motion\":e.degradationPreference=\"maintain-framerate\";break;case\"detail\":e.degradationPreference=\"maintain-resolution\";break;default:e.degradationPreference=\"balanced\"}var n,o,s,a;if(null!==(i=u._encoderConfig)&&void 0!==i&&i.bitrateMax)t.maxBitrate=1e3*(null===(n=u._encoderConfig)||void 0===n?void 0:n.bitrateMax);if(u._hints.includes($k.LOW_STREAM))null!==(o=u._encoderConfig)&&void 0!==o&&o.frameRate&&(t.maxFramerate=aK(u._encoderConfig.frameRate)),null!==(s=u._encoderConfig)&&void 0!==s&&s.scaleResolutionDownBy&&(null===(a=u._encoderConfig)||void 0===a?void 0:a.scaleResolutionDownBy)>1&&(t.scaleResolutionDownBy=u._encoderConfig.scaleResolutionDownBy);if(LP(\"DSCP_TYPE\")&&yN()){const e=LP(\"DSCP_TYPE\");[\"very-low\",\"low\",\"medium\",\"high\"].includes(e)&&(t.networkPriority=e)}const c=d.sender.getParameters(),h=null===(r=c.encodings)||void 0===r?void 0:r[0];gN()&&!h&&(e.encodings=[t]),h&&Object.assign(h,t),Object.assign(c,e),await d.sender.setParameters(c)}}}catch(e){JD.debug(\"Apply RTPSendEncodings failed.\")}}mungSendOfferSDP(e,t,i){const r=W$.exports.parse(e);return t.forEach((e,t)=>{const n=i[t],o=r.mediaDescriptions.find(e=>e.attributes.mid===n);o&&(e1(o,e),o1(o,e,this.store.codec))}),W$.exports.print(r)}mungReceiveAnswerSDP(e,t,i){const r=W$.exports.parse(e),n=r.mediaDescriptions.find(e=>e.attributes.mid===t);return n&&i===AB.AUDIO&&\"audio\"===n.media.mediaType&&d1(n),W$.exports.print(r)}bindStatsEvents(){this.statsFilter.onFirstAudioReceived=e=>{var t;null===(t=this.onFirstAudioReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoReceived=e=>{var t;null===(t=this.onFirstVideoReceived)||void 0===t||t.call(this,e)},this.statsFilter.onFirstAudioDecoded=e=>{var t;null===(t=this.onFirstAudioDecoded)||void 0===t||t.call(this,e)},this.statsFilter.onFirstVideoDecoded=(e,t,i)=>{var r;null===(r=this.onFirstVideoDecoded)||void 0===r||r.call(this,e,t,i)},this.statsFilter.onSelectedLocalCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedLocalCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onSelectedRemoteCandidateChanged=(e,t)=>{var i;null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i||i.call(this,e,t)},this.statsFilter.onFirstVideoDecodedTimeout=e=>{var t;null===(t=this.onFirstVideoDecodedTimeout)||void 0===t||t.call(this,e)}}unbindStatsEvents(){this.statsFilter.onFirstAudioReceived=void 0,this.statsFilter.onFirstVideoReceived=void 0,this.statsFilter.onFirstAudioDecoded=void 0,this.statsFilter.onFirstVideoDecoded=void 0,this.statsFilter.onSelectedLocalCandidateChanged=void 0,this.statsFilter.onSelectedRemoteCandidateChanged=void 0,this.statsFilter.onFirstVideoDecodedTimeout=void 0}async applySimulcastForFirefox(e,t){if(e.length===t.length)for(let s=0;s<e.length;s++){var i,r,n,o;const a=e[s],c=t[s];if(c instanceof lz&&!c._hints.includes($k.LOW_STREAM)&&null!==(i=c._encoderConfig)&&void 0!==i&&i.bitrateMax&&(null===(r=c._encoderConfig)||void 0===r?void 0:r.bitrateMax)>200&&null!==(n=c._scalabiltyMode)&&void 0!==n&&n.numSpatialLayers&&(null===(o=c._scalabiltyMode)||void 0===o?void 0:o.numSpatialLayers)>1&&\"vp8\"===this.store.codec){const e={},t={high:1e3*(c._encoderConfig.bitrateMax-50),medium:5e4};e.encodings=[{rid:\"m\",active:!0,maxBitrate:t.medium,scaleResolutionDownBy:4},{rid:\"h\",active:!0,maxBitrate:t.high}];const i=a.sender.getParameters();await a.sender.setParameters(Object.assign(i,e))}}}async applySimulcastEncodings(e,t){if(!gN()&&e.length===t.length)for(let i=0;i<e.length;i++){const r=t[i];if(r instanceof lz&&this.isVP8Simulcast(r)){const t=e[i],n={},o={high:1e3*(r._encoderConfig.bitrateMax-50),medium:5e4};n.encodings=[{active:!0,adaptivePtime:!1,networkPriority:\"high\",priority:\"high\",maxBitrate:o.high},{active:!0,adaptivePtime:!1,networkPriority:\"low\",priority:\"low\",maxBitrate:o.medium,scaleResolutionDownBy:4}];const s=t.sender.getParameters();await t.sender.setParameters(Object.assign(s,n))}}}isVP8Simulcast(e){var t,i,r,n;return!!(e instanceof lz&&LP(\"SIMULCAST\")&&\"vp8\"===this.store.codec&&!e._hints.includes($k.LOW_STREAM)&&null!==(t=e._encoderConfig)&&void 0!==t&&t.bitrateMax&&(null===(i=e._encoderConfig)||void 0===i?void 0:i.bitrateMax)>200&&null!==(r=e._scalabiltyMode)&&void 0!==r&&r.numSpatialLayers&&(null===(n=e._scalabiltyMode)||void 0===n?void 0:n.numSpatialLayers)>1)}logSDPExchange(e,t,i,r){if(LP(\"SDP_LOGGING\"))return JD.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during NVExtentionsConnection.\").concat(r,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",r)}:void 0}async getRemoteSSRC(e){if(!this.remoteSDP)return;const t=this.remoteSDP.getSSRC(e);return null==t?void 0:t[0].ssrcId}}).prototype,\"connect\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"connect\"),u0.prototype),VV(u0.prototype,\"updateRemoteConnect\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"updateRemoteConnect\"),u0.prototype),VV(u0.prototype,\"receive\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"receive\"),u0.prototype),VV(u0.prototype,\"batchReceive\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"batchReceive\"),u0.prototype),VV(u0.prototype,\"stopReceiving\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"stopReceiving\"),u0.prototype),VV(u0.prototype,\"muteRemote\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"muteRemote\"),u0.prototype),VV(u0.prototype,\"unmuteRemote\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"unmuteRemote\"),u0.prototype),VV(u0.prototype,\"muteLocal\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"muteLocal\"),u0.prototype),VV(u0.prototype,\"unmuteLocal\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"unmuteLocal\"),u0.prototype),VV(u0.prototype,\"close\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"close\"),u0.prototype),VV(u0.prototype,\"updateEncoderConfig\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"updateEncoderConfig\"),u0.prototype),VV(u0.prototype,\"updateSendParameters\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"updateSendParameters\"),u0.prototype),VV(u0.prototype,\"replaceTrack\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"replaceTrack\"),u0.prototype),VV(u0.prototype,\"getRemoteSSRC\",[p0],Object.getOwnPropertyDescriptor(u0.prototype,\"getRemoteSSRC\"),u0.prototype),d0=u0))||d0;function p0(e,t,i){const r=e[t];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From NVExtentionsConnection.\".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await r.apply(this,o)}finally{i()}},i}var g0,E0;function f0(e){var t,i,r,n=2;for(\"undefined\"!=typeof Symbol&&(i=R$,r=Symbol.iterator);n--;){if(i&&null!=(t=e[i]))return t.call(e);if(r&&null!=(t=e[r]))return new m0(t.call(e));i=\"@@asyncIterator\",r=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function m0(e){function t(e){if(Object(e)!==e)return l_.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return l_.resolve(e.value).then((function(e){return{value:e,done:t}}))}return(m0=function(e){this.s=e,this.n=e.next}).prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?l_.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?l_.reject(e):t(i.apply(this.s,arguments))}},new m0(e)}let I0=mP(\"DataChannelConnection\",\"store.dcId\")((VV((E0=class e extends RB{get currentLocalDescription(){return this.peerConnection.currentLocalDescription}get currentRemoteDescription(){return this.peerConnection.currentRemoteDescription}get peerConnectionState(){return this.peerConnection.connectionState}get iceConnectionState(){return this.peerConnection.iceConnectionState}constructor(t,i){super(t,i),MN(this,\"store\",void 0),MN(this,\"peerConnection\",void 0),MN(this,\"cname\",void 0),MN(this,\"mutex\",new fj(\"DataChannelConnection-mutex\")),MN(this,\"dataChannel\",void 0),MN(this,\"_p2pConnection\",void 0),MN(this,\"_nvMedia\",void 0),this.store=i,this.store.dcId=this.store.dcId+1,this.peerConnection=new RTCPeerConnection(e.resolvePCConfiguration(t),{optional:[{googDscp:!0}]}),this.dataChannel=this.peerConnection.createDataChannel(\"agora-signal\",{ordered:!1,maxPacketLifeTime:50}),this.dataChannel.binaryType=\"arraybuffer\",this._p2pConnection=new l0(t,i,this.peerConnection),this.bindPCEvents()}async establish(){var e;const t=null===(e=this._nvMedia)||void 0===e?void 0:e.getLocalRtpCapabilities();return await this._p2pConnection.establish(t)}getP2PConnectionParams(){return this._p2pConnection.getP2PConnectionParams()}async connect(e,t,i,r,n,o){return this.cname=o,await this._p2pConnection.connect(e,t,i,r,n,o),await new l_((e,t)=>{const r=setTimeout(()=>{this.closeSignal(),t(new QD(xD.DATACHANNEL_CONNECTION_TIMEOUT,\"Datachannel connection timed out, candidates: \".concat(JSON.stringify(i))))},2e3);this.dataChannel.onopen=()=>{if(\"open\"===this.dataChannel.readyState)return clearTimeout(r),void e()},this.dataChannel.onerror=e=>{this.closeSignal(),t(e)}}),{transmitter:this.dataChannel,close:this.closeSignal.bind(this)}}send(e,t,i){var r=this;return C$((function*(){const n=yield S$(r.mutex.lock(\"From DataChannelConnection.send\"));try{return yield*T$(f0(r._p2pConnection.send(e,t,i)),S$)}finally{n()}}))()}async stopSending(e,t){return this._p2pConnection.stopSending(e,t)}async receive(e,t,i,r){return this._nvMedia?(JD.debug(\"[DataChannelConnection] receive \".concat(e,\" by DataChannel.\")),await this._nvMedia.reveiveByRTCMedia(e,t,this.cname)):(JD.debug(\"[DataChannelConnection] receive \".concat(e,\" by WebRTC.\")),await this._p2pConnection.receive(e,t,i,r))}async batchReceive(e){return[...await this._p2pConnection.batchReceive(e)]}async stopReceiving(e){return await this._p2pConnection.stopReceiving(e)}async muteRemote(e){return await this._p2pConnection.muteRemote(e)}async unmuteRemote(e){return await this._p2pConnection.unmuteRemote(e)}async muteLocal(e){return await this._p2pConnection.muteLocal(e)}async unmuteLocal(e){return await this._p2pConnection.unmuteLocal(e)}restartICE(){var e=this;return C$((function*(){return yield*T$(f0(e._p2pConnection.restartICE()),S$)}))()}close(){var e;null===(e=this._nvMedia)||void 0===e||e.close(),this._p2pConnection.close(),this.unbindConnectionEvents(this._p2pConnection)}getStats(){return this._p2pConnection.getStats()}getRemoteVideoIsReady(e){return this._p2pConnection.getRemoteVideoIsReady(e)}updateRemoteConnect(e){var t;null===(t=this._nvMedia)||void 0===t||t.setRemoteRtpCapabilities(e),this._p2pConnection.updateRemoteConnect(e)}async updateEncoderConfig(e,t){return await this._p2pConnection.updateEncoderConfig(e,t)}async updateSendParameters(e,t){return await this._p2pConnection.updateSendParameters(e,t)}setStatsRemoteVideoIsReady(e,t){this._p2pConnection.setStatsRemoteVideoIsReady(e,t)}async replaceTrack(e,t){return await this._p2pConnection.replaceTrack(e,t)}async getRemoteSSRC(e){return this._p2pConnection.getRemoteSSRC(e)}logSDPExchange(e,t,i,r){if(LP(\"SDP_LOGGING\"))return JD.upload(\"exchanging \".concat(i,\" \").concat(t,\" SDP during DataChannelConnection.\").concat(r,\"\\n\"),e),\"offer\"===t?e=>{this.logSDPExchange(e,\"answer\",\"local\"===i?\"remote\":\"local\",r)}:void 0}static resolvePCConfiguration(t){const i={iceServers:[]};return t.iceServers?i.iceServers=t.iceServers:t.turnServer&&\"off\"!==t.turnServer.mode&&(Rk(t.turnServer.servers)?i.iceServers=t.turnServer.servers:(i.iceServers&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.servers)),LP(\"USE_TURN_SERVER_OF_GATEWAY\")&&i.iceServers&&t.turnServer.serversFromGateway&&i.iceServers.push(...e.turnServerConfigToIceServers(t.turnServer.serversFromGateway)),LP(\"FORCE_TURN_TCP\")?i.iceTransportPolicy=\"relay\":t.turnServer.servers.concat(t.turnServer.serversFromGateway||[]).forEach(e=>{e.forceturn&&(i.iceTransportPolicy=\"relay\")}))),i}static turnServerConfigToIceServers(e){const t=[];return e.forEach(e=>{e.security?e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turns:\".concat(oK(e.turnServerURL),\":\").concat(e.tcpport,\"?transport=tcp\")}):(e.udpport&&!LP(\"FORCE_TURN_TCP\")&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.udpport,\"?transport=udp\")}),e.tcpport&&t.push({username:e.username,credential:e.password,credentialType:\"password\",urls:\"turn:\".concat(e.turnServerURL,\":\").concat(e.tcpport,\"?transport=tcp\")}))}),t}bindPCEvents(){this._p2pConnection.onICEConnectionStateChange=e=>{var t;return null===(t=this.onICEConnectionStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onConnectionStateChange=e=>{var t;return null===(t=this.onConnectionStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onDTLSTransportStateChange=e=>{var t;return null===(t=this.onDTLSTransportStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onDTLSTransportError=e=>{var t;return null===(t=this.onDTLSTransportError)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onICETransportStateChange=e=>{var t;return null===(t=this.onICETransportStateChange)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstAudioReceived=e=>{var t;return null===(t=this.onFirstAudioReceived)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstVideoReceived=e=>{var t;return null===(t=this.onFirstVideoReceived)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstAudioDecoded=e=>{var t;return null===(t=this.onFirstAudioDecoded)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onFirstVideoDecoded=(e,t,i)=>{var r;return null===(r=this.onFirstVideoDecoded)||void 0===r?void 0:r.call(this,e,t,i)},this._p2pConnection.onFirstVideoDecodedTimeout=e=>{var t;return null===(t=this.onFirstVideoDecodedTimeout)||void 0===t?void 0:t.call(this,e)},this._p2pConnection.onSelectedLocalCandidateChanged=(e,t)=>{var i;return null===(i=this.onSelectedLocalCandidateChanged)||void 0===i?void 0:i.call(this,e,t)},this._p2pConnection.onSelectedRemoteCandidateChanged=(e,t)=>{var i;return null===(i=this.onSelectedRemoteCandidateChanged)||void 0===i?void 0:i.call(this,e,t)}}closeSignal(){this.dataChannel.close(),this.peerConnection.close()}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0}}).prototype,\"connect\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"connect\"),E0.prototype),VV(E0.prototype,\"receive\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"receive\"),E0.prototype),VV(E0.prototype,\"stopReceiving\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"stopReceiving\"),E0.prototype),VV(E0.prototype,\"muteRemote\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"muteRemote\"),E0.prototype),VV(E0.prototype,\"unmuteRemote\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"unmuteRemote\"),E0.prototype),VV(E0.prototype,\"muteLocal\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"muteLocal\"),E0.prototype),VV(E0.prototype,\"unmuteLocal\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"unmuteLocal\"),E0.prototype),VV(E0.prototype,\"close\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"close\"),E0.prototype),VV(E0.prototype,\"updateEncoderConfig\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"updateEncoderConfig\"),E0.prototype),VV(E0.prototype,\"updateSendParameters\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"updateSendParameters\"),E0.prototype),VV(E0.prototype,\"replaceTrack\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"replaceTrack\"),E0.prototype),VV(E0.prototype,\"getRemoteSSRC\",[_0],Object.getOwnPropertyDescriptor(E0.prototype,\"getRemoteSSRC\"),E0.prototype),g0=E0))||g0;function _0(e,t,i){const r=e[t];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From DataChannelConnection.\".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await r.apply(this,o)}finally{i()}},i}var C0,S0;function v0(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function T0(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?v0(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):v0(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function R0(e){var t,i,r,n=2;for(\"undefined\"!=typeof Symbol&&(i=R$,r=Symbol.iterator);n--;){if(i&&null!=(t=e[i]))return t.call(e);if(r&&null!=(t=e[r]))return new y0(t.call(e));i=\"@@asyncIterator\",r=\"@@iterator\"}throw new TypeError(\"Object is not async iterable\")}function y0(e){function t(e){if(Object(e)!==e)return l_.reject(new TypeError(e+\" is not an object.\"));var t=e.done;return l_.resolve(e.value).then((function(e){return{value:e,done:t}}))}return(y0=function(e){this.s=e,this.n=e.next}).prototype={s:null,n:null,next:function(){return t(this.n.apply(this.s,arguments))},return:function(e){var i=this.s.return;return void 0===i?l_.resolve({value:e,done:!0}):t(i.apply(this.s,arguments))},throw:function(e){var i=this.s.return;return void 0===i?l_.reject(e):t(i.apply(this.s,arguments))}},new y0(e)}let w0=mP(\"P2PChannel\",\"store.p2pId\")((VV((S0=class extends MD{get state(){return this._state}set state(e){const t=this._state;this._state=e,this.emit(gB.StateChange,t,this._state)}constructor(e,t){super(),MN(this,\"store\",void 0),MN(this,\"statsUploader\",void 0),MN(this,\"connection\",void 0),MN(this,\"localTrackMap\",new Map),MN(this,\"remoteUserMap\",new Map),MN(this,\"pendingLocalTracks\",[]),MN(this,\"pendingRemoteTracks\",[]),MN(this,\"statsCollector\",void 0),MN(this,\"isPlanB\",!1),MN(this,\"iceFailedCount\",0),MN(this,\"dtlsFailedCount\",0),MN(this,\"mutex\",new fj(\"P2PChannel-mutex\")),MN(this,\"_state\",pB.Disconnected),MN(this,\"handleMuteLocalTrack\",async(e,t,i)=>{const r=await this.mutex.lock(\"Locking from P2PChannel.handleMuteLocalTrack\");try{if(!this.connection)return void i(new QD(xD.INVALID_OPERATION,\"Cannot call P2PChannel.handleMuteLocalTrack before connection established.\"));gP(\"debug\",this,\"handleMuteLocalTrack\",e.getTrackId()),await this.waitTillConnected();const n=this.filterTobeMutedTracks(e);if(0===n.length)return void t();const o=n.find(e=>\"videoLowTrack\"===e[0]);if(o){o[1].track._originMediaStreamTrack.stop()}await this.connection.muteLocal(n.map(e=>{let[,{id:t}]=e;return t}));const s=this.createMuteMessage(n);await yK(this,gB.RequestMuteLocal,s),t()}catch(e){i(e)}finally{r()}}),MN(this,\"handleUnmuteLocalTrack\",async(e,t,i)=>{const r=await this.mutex.lock(\"Locking from P2PChannel.handleUnmuteLocalTrack\");try{if(!this.connection)return void i(new QD(xD.INVALID_OPERATION,\"Cannot call P2PChannel.handleUnmuteLocalTrack before connection established.\"));gP(\"debug\",this,\"handleUnmuteLocalTrack\",e.getTrackId()),await this.waitTillConnected();const n=this.filterTobeUnmutedTracks(e);if(0===n.length)return void t();const o=n.find(e=>\"videoLowTrack\"===e[0]);if(o){const t=o[1];if(t.track._originMediaStreamTrack.stop(),wB().supportDualStreamEncoding){const i=e._mediaStreamTrack.clone();t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}else{const i=W1(e,bK(this,gB.RequestLowStreamParameter));t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i}await new l_((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)})}await this.connection.unmuteLocal(n.map(e=>{let[,{id:t}]=e;return t}));const s=this.createUnmuteMessage(n);await yK(this,gB.RequestUnmuteLocal,s),t()}catch(e){i(e)}finally{r()}}),MN(this,\"handleUpdateVideoEncoder\",async(e,t,i)=>{const r=await this.mutex.lock(\"Locking from P2PChannel.handleSetVideoEncoder\");try{const i=this.localTrackMap.get(lB.LocalVideoTrack);if(!this.connection||!i||i.track!==e)return void t();await this.waitTillConnected();const{id:n,track:o}=i;await this.connection.updateSendParameters(n,o),await this.connection.updateEncoderConfig(n,o),this.emit(gB.UpdateVideoEncoder,o),t()}catch(e){i(e)}finally{r()}}),MN(this,\"handleSetOptimizationMode\",async(e,t,i)=>{const r=await this.mutex.lock(\"Locking from P2PChannel.handleSetOptimizationMode\");try{const i=this.localTrackMap.get(lB.LocalVideoTrack);if(!this.connection||!i||i.track!==e)return;await this.waitTillConnected();const{id:n,track:o}=i;await this.connection.updateSendParameters(n,o),t()}catch(e){i(e)}finally{r()}}),MN(this,\"handleReplaceTrack\",async(e,t,i,r)=>{let n;JD.debug(\"P2PChannel handleReplaceTrack for [track-id-\".concat(e.getTrackId(),\"]\")),\"boolean\"==typeof r&&r||(n=await this.mutex.lock(\"From P2PChannel.handleReplaceTrack\"));try{var o;const i=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:i}]=t;return e===i});if(!this.connection||!i)return void t();if(await this.waitTillConnected(),await(null===(o=this.connection)||void 0===o?void 0:o.replaceTrack(e,i[1].id)),this.isPlanB){const t=i[1];t.id=e._mediaStreamTrack.id,this.localTrackMap.set(i[0],t)}if(i[0]===lB.LocalVideoTrack&&wB().supportDualStreamEncoding){const t=this.localTrackMap.get(lB.LocalVideoLowTrack);if(t){const i=e._mediaStreamTrack.clone();t.track._originMediaStreamTrack.stop(),t.track._mediaStreamTrack=i,t.track._originMediaStreamTrack=i,await new l_((e,i)=>{this.handleReplaceTrack(t.track,e,i,!0)})}}t()}catch(e){i(e)}finally{var s;null===(s=n)||void 0===s||s()}}),MN(this,\"handleGetLocalVideoStats\",e=>{e(this.statsCollector.getLocalVideoTrackStats())}),MN(this,\"handleGetLocalAudioStats\",e=>{e(this.statsCollector.getLocalAudioTrackStats())}),MN(this,\"handleGetRemoteVideoStats\",e=>this.statsCollector.getRemoteVideoTrackStats(e.uid)[e.uid]),MN(this,\"handleGetRemoteAudioStats\",e=>this.statsCollector.getRemoteAudioTrackStats(e.uid)[e.uid]),this.store=e,this.statsCollector=t,this.statsCollector.addP2PChannel(this),this.statsUploader=new i0,this.bindStatsUploaderEvents(),this.isPlanB=!wB().supportUnifiedPlan||LP(\"CHROME_FORCE_PLAN_B\")&&yN()}async startP2PConnection(e,t){return this.state=pB.New,this.connection=t?new I0(e,this.store):this.isPlanB?new k1(e,this.store):new K1(e,this.store),this.bindConnectionEvents(this.connection),this.connection.establish()}async connect(e,t,i,r,n,o){if(!this.connection)throw new QD(xD.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");this.connection instanceof I0?this.connection.updateRemoteConnect(r):(this.store.peerConnectionStart(),await this.connection.connect(e,t,i,r,n,o),this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=pB.Connected)}async preConnect(e,t,i,r,n,o){if(!this.connection)throw new QD(xD.UNEXPECTED_ERROR,\"Cannot P2PChannel.connect before P2PChannel.startP2PConnection .\");this.store.peerConnectionStart();const s=await this.connection.connect(e,t,i,r,n,o);return this.statsUploader.startUploadTransportStats(),this.statsUploader.startUploadExtensionUsageStats(),this.state=pB.Connected,s}getEstablishParams(){if(this.connection instanceof I0)return this.connection.getP2PConnectionParams();throw new Error(\"Only DataChannelConnection needs to obtain establishParams\")}publish(e,t,i){var r=this;return C$((function*(){const n=yield S$(r.mutex.lock(\"From P2PChannel.publish\"));try{if(!r.connection){if(r.state===pB.Disconnected)throw new QD(xD.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\");r.throwIfTrackTypeNotMatch(e);const t=e.filter(e=>-1===r.pendingLocalTracks.indexOf(e));return void(r.pendingLocalTracks=r.pendingLocalTracks.concat(t))}r.store.pubId=r.store.pubId+1,$G.markPublishStart(r.store.clientId,r.store.pubId),yield S$(r.waitTillConnected());const o=r.filterTobePublishedTracks(e,t,i);if(0===o.length)return void(yield S$(r.tryToUnmuteAudio(e)));yield*T$(R0(r.doPublish(r.connection,o)),S$)}finally{n()}}))()}doPublish(e,t){var i=this;return C$((function*(){t.forEach(e=>{let{track:t,type:r}=e;const n=Date.now();i.store.publish(t.getTrackId(),r===lB.LocalAudioTrack?\"audio\":\"video\",n)}),i.bindLocalTrackEvents(t);const r=yield S$(e.send(t.map(e=>{let{track:t}=e;return t}),i.store.codec,i.store.audioCodec)),n=(yield S$(r.next())).value,o=i.createGatewayPublishMessage(t,n);let s;try{s=yield o}catch(e){throw hP(\"error\",i,\"doPublish yield error: \".concat(e.toString())),r.throw(e),(null==e?void 0:e.code)===xD.WS_ABORT&&t.forEach(e=>{let{track:t}=e;-1===i.pendingLocalTracks.indexOf(t)&&i.pendingLocalTracks.push(t)}),i.unbindLocalTrackEvents(t),e}const a=i.mapPubResToRemoteConfig(o,s);gP(\"debug\",i,\"doPublish\",{remoteConfigs:a,tracks:t.map(e=>{let{track:t}=e;return t.getTrackId()}),pubMsg:o,pubAns:s});const c=(yield S$(r.next(a))).value;t.forEach(e=>{let{type:t}=e;i.statsCollector.addLocalStats(t)}),i.assignLocalTracks(t,c),i.statsUploader.startUploadUplinkStats(),t.forEach(e=>{let{track:t,type:r}=e;const n=Date.now();i.store.publish(t.getTrackId(),r===lB.LocalAudioTrack?\"audio\":\"video\",void 0,n)})}))()}publishLowStream(e){var t=this;return C$((function*(){if(!t.connection)return;gP(\"debug\",t,\"publishLowStream\",e);const i=yield S$(t.mutex.lock(\"Locking from P2PChannel.publishLowStream\"));try{const n=t.localTrackMap.get(lB.LocalVideoTrack);if(!n)throw new QD(xD.UNEXPECTED_ERROR,\"Could not find high stream\");if(t.localTrackMap.has(lB.LocalVideoLowTrack))throw new QD(xD.UNEXPECTED_ERROR,\"[\".concat(t.store.clientId,\"] Can't publish low stream when stream already publish\"));yield S$(t.waitTillConnected());const o=[{track:t.getLowVideoTrack(n.track,e),type:lB.LocalVideoLowTrack}];if(yield*T$(R0(t.doPublish(t.connection,o)),S$),n.track.muted||!n.track.enabled){var r;const e=null===(r=t.localTrackMap.get(lB.LocalVideoLowTrack))||void 0===r?void 0:r.id;void 0!==e&&(yield S$(t.connection.muteLocal([e])))}}finally{i()}}))()}async republish(){this.pendingLocalTracks.length>0&&(JD.debug(\"Emit P2PChannelEvents.RequestRePublish to republish tracks.\"),gP(\"debug\",this,\"republish\",this.pendingLocalTracks.map(e=>e.getTrackId())),await RK(this,gB.RequestRePublish,this.pendingLocalTracks),this.emit(gB.MediaReconnectEnd,this.store.uid),this.pendingLocalTracks=[])}async reSubscribe(e){gP(\"debug\",this,\"reSubscribe\",this.pendingRemoteTracks.map(e=>{let{user:t}=e;return t.uid}));for(let e=this.pendingRemoteTracks.length-1;e>=0;e--){const{user:t,kind:i}=this.pendingRemoteTracks[e];(i!==AB.AUDIO||t._audio_added_&&t._audioSSRC)&&(i!==AB.VIDEO||t._video_added_&&t._videoSSRC)||this.pendingRemoteTracks.splice(e,1)}if(e)await RK(this,gB.RequestReSubscribe,this.pendingRemoteTracks);else for(const{user:e,kind:t}of this.pendingRemoteTracks)await this.subscribe(e,t,t===AB.VIDEO?e._videoSSRC:e._audioSSRC);this.pendingRemoteTracks.forEach(e=>{let{user:t}=e;this.emit(gB.MediaReconnectEnd,t.uid)}),this.pendingRemoteTracks=[]}async unpublish(e){if(!this.connection)return void e.forEach(e=>{const t=this.pendingLocalTracks.indexOf(e);-1!==t&&this.pendingLocalTracks.splice(t,1)});await this.waitTillConnected();const t=this.filterTobeUnpublishedTracks(e);if(0===t.length)return;const i=t.find(e=>\"videoLowTrack\"===e[0]);if(i){i[1].track.close()}return gP(\"debug\",this,\"unpublish\"),this.doUnpublish(this.connection,t)}async unpublishLowStream(){if(!this.connection)return;gP(\"debug\",this,\"unpublishLowStream\");const e=this.localTrackMap.get(lB.LocalVideoLowTrack);if(!e)return;await this.waitTillConnected(),e.track.close();const t=[[lB.LocalVideoLowTrack,e]];return this.doUnpublish(this.connection,t)}async doUnpublish(e,t){const i=this.createGatewayUnpublishMessage(t);return await e.stopSending(t.map(e=>{let[,{id:t}]=e;return t})),this.withdrawLocalTracks(t),this.unbindLocalTrackEvents(t.map(e=>{let[t,{track:i}]=e;return{type:t,track:i}})),t.forEach(e=>{let[t]=e;this.statsCollector.removeLocalStats(t)}),0===this.localTrackMap.size&&this.statsUploader.stopUploadUplinkStats(),i}async subscribe(e,t,i,r,n){var o;if(!this.connection)throw new QD(xD.INVALID_OPERATION,\"Cannot subscribe remote user when peerConnection disconnected.\");if(gP(\"debug\",this,\"subscribe\",{uid:e.uid,mediaType:t,ssrcId:i}),null!==(o=this.remoteUserMap.get(e))&&void 0!==o&&o.has(t))return;let s,a;if(await this.waitTillConnected(),n){const i=n.find(e=>{let{stream_type:i}=e;return i===t});if(!i)throw new QD(xD.UNEXPECTED_ERROR,\"Cannot subscribe to remote \".concat(t,\" for user: \").concat(e.uid,\" because subscribe answer from gateway does not contain stream_type: \").concat(t,\".\"));const r=await this.connection.receive(t,i.ssrcs,String(e._uintid),i.attributes);s=r.track,a=r.id}else{const n=await this.connection.receive(t,[{ssrcId:i,rtx:r}],String(e._uintid),void 0);s=n.track,a=n.id}t===AB.AUDIO?(e._audioTrack?e._audioTrack._updateOriginMediaStreamTrack(s):(e._audioTrack=new $1(s,e.uid,e._uintid,this.store),JD.info(\"[\".concat(this.store.p2pId,\"] create remote audio track: \").concat(e._audioTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._audioTrack)):(e._videoTrack?e._videoTrack._updateOriginMediaStreamTrack(s):(e._videoTrack=new Z1(s,e.uid,e._uintid,this.store),JD.info(\"[\".concat(this.store.p2pId,\"] create remote video track: \").concat(e._videoTrack.getTrackId()))),this.bindRemoteTrackEvents(e,e._videoTrack));const c=this.remoteUserMap.get(e);c?c.set(t,a):this.remoteUserMap.set(e,new Map([[t,a]])),this.statsCollector.addRemoteStats(e.uid),this.statsUploader.startUploadDownlinkStats();const d=this.pendingRemoteTracks.findIndex(i=>{let{user:r,kind:n}=i;return r.uid===e.uid&&t===n});-1!==d&&(this.pendingRemoteTracks.splice(d,1),this.emit(gB.MediaReconnectEnd,e.uid))}async massSubscribe(e){return this.massSubscribeNoLock(e)}async massSubscribeNoLock(e){if(!this.connection)throw new QD(xD.INVALID_OPERATION,\"Cannot subscribeAll remote users when peerConnection disconnected.\");gP(\"debug\",this,\"subscribeAll\",e.map(e=>{let{user:t,mediaType:i,ssrcId:r}=e;return{uid:t.uid,mediaType:i,ssrcId:r}})),e=e.filter(e=>{var t;let{user:i,mediaType:r}=e;return!(null!==(t=this.remoteUserMap.get(i))&&void 0!==t&&t.has(r))}),await this.waitTillConnected();const t=await this.connection.batchReceive(e.map(e=>{let{user:t,mediaType:i,ssrcId:r,rtxSsrcId:n}=e;return{kind:i,ssrcMsg:[{ssrcId:r,rtx:n}],mslabel:String(t._uintid)}}));e.forEach((e,i)=>{let{user:r,mediaType:n}=e;const{track:o,id:s}=t[i];n===AB.AUDIO?(r._audioTrack?r._audioTrack._updateOriginMediaStreamTrack(o):(r._audioTrack=new $1(o,r.uid,r._uintid,this.store),JD.info(\"[\".concat(this.store.p2pId,\"] create remote audio track: \").concat(r._audioTrack.getTrackId()))),this.bindRemoteTrackEvents(r,r._audioTrack)):(r._videoTrack?r._videoTrack._updateOriginMediaStreamTrack(o):(r._videoTrack=new Z1(o,r.uid,r._uintid,this.store),JD.info(\"[\".concat(this.store.p2pId,\"] create remote video track: \").concat(r._videoTrack.getTrackId()))),this.bindRemoteTrackEvents(r,r._videoTrack));const a=this.remoteUserMap.get(r);a?a.set(n,s):this.remoteUserMap.set(r,new Map([[n,s]])),this.statsCollector.addRemoteStats(r.uid),this.statsUploader.startUploadDownlinkStats();const c=this.pendingRemoteTracks.findIndex(e=>{let{user:t,kind:i}=e;return t.uid===r.uid&&n===i});-1!==c&&(this.pendingRemoteTracks.splice(c,1),this.emit(gB.MediaReconnectEnd,r.uid))})}async unsubscribe(e,t,i){const r=this.pendingRemoteTracks.filter(i=>{let{user:r,kind:n}=i;return void 0!==t?r.uid===e.uid&&t===n:r.uid===e.uid});if(r.forEach(e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)}),this.connection||i||r.forEach(t=>{let{kind:i}=t;var r;if(i===AB.AUDIO)null===(r=e._audioTrack)||void 0===r||r._destroy(),e._audioTrack=void 0;else if(i===AB.VIDEO){var n;null===(n=e._videoTrack)||void 0===n||n._destroy(),e._videoTrack=void 0}}),!this.connection)return;gP(\"debug\",this,\"unsubscribe\",{uid:e.uid,mediaType:t});const n=this.filterTobeUnSubscribedTracks(e,t);if(0===n.length)return;await this.connection.stopReceiving(n.map(e=>{let[,{id:t}]=e;return t}));const o=this.createUnsubscribeMessage(n);return this.withdrawRemoteTracks(n),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),n.forEach(e=>{let[t,{kind:r}]=e;var n,o;r===AB.VIDEO&&t._videoSSRC&&(null===(n=this.connection)||void 0===n||n.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(r===AB.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),i||(null===(o=t._videoTrack)||void 0===o||o._destroy(),t._videoTrack=void 0);else if(r===AB.AUDIO){var s;if(this.unbindRemoteTrackEvents(t._audioTrack),!i)null===(s=t._audioTrack)||void 0===s||s._destroy(),t._audioTrack=void 0}}),o}async massUnsubscribe(e){return this.massUnsubscribeNoLock(e)}async massUnsubscribeNoLock(e){let t=[];for(const{user:i,mediaType:r}of e){const e=this.pendingRemoteTracks.filter(e=>{let{user:t,kind:n}=e;return void 0!==r?t.uid===i.uid&&r===n:t.uid===i.uid});e.forEach(e=>{const t=this.pendingRemoteTracks.indexOf(e);this.pendingRemoteTracks.splice(t,1)}),t=t.concat(e)}if(!this.connection)return void t.forEach(e=>{let{user:t,kind:i}=e;var r;if(i===AB.AUDIO)null===(r=t._audioTrack)||void 0===r||r._destroy(),t._audioTrack=void 0;else if(i===AB.VIDEO){var n;null===(n=t._videoTrack)||void 0===n||n._destroy(),t._videoTrack=void 0}});gP(\"debug\",this,\"batchUnsubscribe\",e.map(e=>{let{user:t,mediaType:i}=e;return{uid:t.uid,mediaType:i}}));const i=cc(e).call(e,(e,t)=>{let{user:i,mediaType:r}=t;const n=this.filterTobeUnSubscribedTracks(i,r);return e.concat(n)},[]);if(0===i.length)return;await this.connection.stopReceiving(i.map(e=>{let[,{id:t}]=e;return t}));const r=this.createUnsubscribeAllMessage(i);return this.withdrawRemoteTracks(i),0===this.remoteUserMap.size&&this.statsUploader.stopUploadDownlinkStats(),i.forEach(e=>{let[t,{kind:i}]=e;var r,n;i===AB.VIDEO&&t._videoSSRC&&(null===(r=this.connection)||void 0===r||r.setStatsRemoteVideoIsReady(t._videoSSRC,!1));if(i===AB.VIDEO)this.unbindRemoteTrackEvents(t._videoTrack),null===(n=t._videoTrack)||void 0===n||n._destroy(),t._videoTrack=void 0;else if(i===AB.AUDIO){var o;this.unbindRemoteTrackEvents(t._audioTrack),null===(o=t._audioTrack)||void 0===o||o._destroy(),t._audioTrack=void 0}}),r}async muteRemote(e,t){if(!this.connection)return;gP(\"debug\",this,\"muteRemote\",{uid:e.uid,kind:t});const i=this.remoteUserMap.get(e);if(!i)return JD.warning(\"P2PChannel.muteRemote has no remote user \".concat(e.uid,\".\")),void hP(\"warning\",this,\"P2PChannel.muteRemote has no remote user \".concat(e.uid,\".\"));if(!i.get(t))return JD.warning(\"P2PChannel.muteRemote has no remote user \".concat(e.uid,\" media type \").concat(t,\".\")),void hP(\"warning\",this,\"P2PChannel.muteRemote has no remote user \".concat(e.uid,\" media type \").concat(t,\".\"));const r=t===AB.VIDEO?e._videoSSRC:e._audioSSRC;void 0!==r&&this.connection.setStatsRemoteVideoIsReady(r,!1)}async unmuteRemote(e,t){return this.unmuteRemoteNoLock(e,t)}async unmuteRemoteNoLock(e,t){if(!this.connection)return;gP(\"debug\",this,\"unmuteRemote\",{uid:e.uid,kind:t});const i=this.remoteUserMap.get(e);if(!i)return JD.warning(\"P2PChannel.unmuteRemote has no remote user \".concat(e.uid,\".\")),void hP(\"warning\",this,\"unmuteRemote has no remote user \".concat(e.uid));return i.get(t)?void 0:(JD.warning(\"P2PChannel.unmuteRemote has no remote user \".concat(e.uid,\" media type \").concat(t,\".\")),void hP(\"warning\",this,\"unmuteRemote has no remote user \".concat(e.uid,\" media type \").concat(t)))}getAllTracks(e){const t=this.localTrackMap.get(lB.LocalAudioTrack);if((null==t?void 0:t.track)instanceof XG){const i=t.track;return Array.from(this.localTrackMap.entries()).filter(e=>{let[t]=e;return t!==lB.LocalAudioTrack}).filter(t=>{let[i]=t;return!(e&&i===lB.LocalVideoLowTrack)}).map(e=>{let[,{track:t}]=e;return t}).concat(i.trackList)}return Array.from(this.localTrackMap.entries()).filter(t=>{let[i]=t;return!(e&&i===lB.LocalVideoLowTrack)}).map(e=>{let[,{track:t}]=e;return t})}reportPublishEvent(e,t,i,r,n){if(e){const i=this.localTrackMap.get(lB.LocalAudioTrack),o=r?this.localTrackMap.get(lB.LocalVideoLowTrack):this.localTrackMap.get(lB.LocalVideoTrack);pj.publish(this.store.sessionId,{eventElapse:$G.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==i?void 0:i.track.getTrackLabel(),videoName:null==o?void 0:o.track.getTrackLabel(),screenshare:-1!==(null==o?void 0:o.track._hints.indexOf($k.SCREEN_TRACK)),audio:!!i,video:!!o,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:n})}else{var o;i||(i=[]);const s=i.find(e=>e instanceof YG),a=r?null===(o=this.localTrackMap.get(lB.LocalVideoTrack))||void 0===o?void 0:o.track:i.find(e=>e instanceof lz);pj.publish(this.store.sessionId,{eventElapse:$G.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:e,ec:t,audioName:null==s?void 0:s.getTrackLabel(),videoName:null==a?void 0:a.getTrackLabel(),screenshare:-1!==(null==a?void 0:a._hints.indexOf($k.SCREEN_TRACK)),audio:!!s,video:!!a,p2pid:this.store.p2pId,publishRequestid:this.store.pubId,extend:n})}}reportSubscribeEvent(e,t,i,r){const n=r===AB.VIDEO?i._videoSSRC:i._audioSSRC;n&&pj.subscribe(this.store.sessionId,{succ:e,ec:t,video:r===AB.VIDEO,audio:r===AB.AUDIO,peerid:i.uid,subscribeRequestid:r===AB.VIDEO?i._videoSSRC:i._audioSSRC,p2pid:this.store.p2pId,eventElapse:$G.measureFromSubscribeStart(this.store.clientId,n)})}reset(){JD.debug(\"P2PChannel.reset\"),this.mutex=new fj(\"P2PChannel-mutex\"),this.connection&&(this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),this.statsUploader.stopUploadExtensionUsageStats(),this.unbindLocalTrackEvents(),this.unbindAllRemoteTrackEvents(),this.localTrackMap.clear(),this.remoteUserMap.clear(),this.statsCollector.removeRemoteStats(),this.statsCollector.removeLocalStats(),this.iceFailedCount=0,this.dtlsFailedCount=0,this.pendingLocalTracks=[],this.pendingRemoteTracks=[],this.state=pB.Disconnected}getStats(){var e;return null===(e=this.connection)||void 0===e?void 0:e.getStats()}getRemoteVideoIsReady(e){var t;return(null===(t=this.connection)||void 0===t?void 0:t.getRemoteVideoIsReady(e))||!1}getLocalAudioVolume(){const e=this.localTrackMap.get(lB.LocalAudioTrack);if(e)return e.track.getVolumeLevel()}getLocalVideoSize(){const e=this.localTrackMap.get(lB.LocalVideoTrack);if(e)return{width:e.track._videoWidth||0,height:e.track._videoHeight||0}}getEncoderConfig(e){const t=this.localTrackMap.get(e);return t&&t.track instanceof lz||t&&t.track instanceof YG?t.track._encoderConfig:void 0}getLocalMedia(e){return this.localTrackMap.get(e)}hasLocalMedia(){return this.localTrackMap.size>0}hasRemoteMedia(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}async hasRemoteMediaWithLock(e,t){if(!e)return this.remoteUserMap.size>0;const i=this.remoteUserMap.get(e);return!!i&&(!t||i.has(t))}getRemoteMedia(e){var t;const i=Array.from(qV(t=this.remoteUserMap).call(t)).find(t=>t.uid===e);return i?{audioTrack:i.audioTrack,audioSSRC:i._audioSSRC,videoTrack:i.videoTrack,videoSSRC:i._videoSSRC}:{}}getAudioLevels(){let e=Array.from(this.remoteUserMap.entries()).map(e=>{let[t]=e;return{uid:t.uid,level:t.audioTrack?100*t.audioTrack._source.getAccurateVolumeLevel():0}});const t=this.localTrackMap.get(lB.LocalAudioTrack);return t&&e.push({level:100*t.track._source.getAccurateVolumeLevel(),uid:this.store.uid}),e=kL(e).call(e,(e,t)=>e.level-t.level),e}async disconnectForReconnect(){this.connection&&(gP(\"debug\",this,\"disconnectForReconnect\"),JD.debug(\"P2PChannel.disconnectForReconnect closing P2PConnection\"),this.state=pB.Reconnecting,this.connection.close(),this.unbindConnectionEvents(this.connection),this.connection=void 0,0!==this.localTrackMap.size&&(Array.from(this.localTrackMap.entries()).forEach(e=>{let[t,{track:i}]=e;switch(t){case lB.LocalVideoTrack:i._hints.includes($k.LOW_STREAM)?i.close():this.pendingLocalTracks.push(i);break;case lB.LocalAudioTrack:i instanceof XG?this.pendingLocalTracks=this.pendingLocalTracks.concat(i.trackList):this.pendingLocalTracks.push(i);break;case lB.LocalVideoLowTrack:}}),this.emit(gB.MediaReconnectStart,this.store.uid)),this.unbindLocalTrackEvents(),this.localTrackMap.clear(),0!==this.remoteUserMap.size&&Array.from(this.remoteUserMap.entries()).forEach(e=>{let[t,i]=e;Array.from(qV(i).call(i)).forEach(e=>{this.setPendingRemoteMedia(t,e)}),this.emit(gB.MediaReconnectStart,t.uid)}),this.unbindAllRemoteTrackEvents(),this.remoteUserMap.clear(),this.statsUploader.stopUploadUplinkStats(),this.statsUploader.stopUploadDownlinkStats(),this.statsUploader.stopUploadTransportStats(),JD.debug(\"P2PChannel disconnected, waiting to reconnect.\"))}hasPendingRemoteMedia(e,t){for(const i of this.pendingRemoteTracks){const{user:r,kind:n}=i;if((e instanceof gz?e.uid:e)===r.uid&&t===n)return!0}return!1}setPendingRemoteMedia(e,t){this.hasPendingRemoteMedia(e,t)||this.pendingRemoteTracks.push({user:e,kind:t})}restartICE(){var e=this;return C$((function*(){if(!e.connection)throw new Error;const t=yield S$(e.mutex.lock(\"From P2PChannel.restartICE\"));try{yield*T$(R0(e.connection.restartICE()),S$)}finally{t()}}))()}getUplinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats(),t=this.localTrackMap.get(lB.LocalVideoTrack),i=this.localTrackMap.get(lB.LocalAudioTrack),r=e.videoSend.find(e=>e.ssrc===(null==t?void 0:t.ssrcs[0].ssrcId)),n=e.audioSend.find(e=>e.ssrc===(null==i?void 0:i.ssrcs[0].ssrcId));if(!r||!n)return 1;const o=wK(this,gB.NeedSignalRTT),s=r?r.rttMs:void 0,a=n?n.rttMs:void 0,c=s&&a?(s+a)/2:s||a,d=(c&&o?(c+o)/2:c||o)||0,u=100*e.sendPacketLossRate*.7/50+.3*d/1500,h=u<.17?1:u<.36?2:u<.59?3:u<.1?4:5,A=null==t?void 0:t.track;if(A&&A._encoderConfig&&-1===A._hints.indexOf($k.SCREEN_TRACK)){const t=A._encoderConfig.bitrateMax,i=e.bitrate.actualEncoded;if(t&&i){const e=(1e3*t-i)/(1e3*t);return FP[e<.15?0:e<.3?1:e<.45?2:e<.6?3:4][h]}}return h}getDownlinkNetworkQuality(){if(!this.connection)return 0;const e=this.connection.getStats();let t=0;return Array.from(this.remoteUserMap.entries()).forEach(i=>{let[r]=i;const n=r._audioSSRC,o=r._videoSSRC,s=e.audioRecv.find(e=>e.ssrc===n),a=e.videoRecv.find(e=>e.ssrc===o);if(!s&&!a)return void(t+=1);const c=wK(this,gB.NeedSignalRTT),d=e.rtt,u=(d&&c?(d+c)/2:d||c)||0,h=s?s.jitterMs:void 0,A=e.recvPacketLossRate;let l=.7*A*100/50+.3*u/1500;h&&(l=.6*A*100/50+.2*u/1500+.2*h/400);t+=l<.1?1:l<.17?2:l<.36?3:l<.59?4:5}),this.remoteUserMap.size>0?Math.round(t/this.remoteUserMap.size):t}async muteLocalTrack(e){return new l_((t,i)=>{this.handleMuteLocalTrack(e,t,i)})}filterTobePublishedTracks(e,t,i){const r=[],n=wB(),o=this.getAllTracks();e=OK(e=e.filter(e=>-1===o.indexOf(e)));let s=!1,a=!1;for(const o of e){if(o instanceof lz&&(this.localTrackMap.has(lB.LocalVideoTrack)||s?new QD(xD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS).throw():(r.push({track:o,type:lB.LocalVideoTrack}),s=!0),t)){const e=this.getLowVideoTrack(o,i);r.push({track:e,type:lB.LocalVideoLowTrack})}if(o instanceof YG){const e=this.localTrackMap.get(lB.LocalAudioTrack);if(e){if(!(e.track instanceof XG))throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o),this.bindLocalAudioTrackEvents(o,!0)}else if(a){const e=r.find(e=>{let{type:t}=e;return t===lB.LocalAudioTrack});if(!(e.track instanceof XG))throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser does not support audio mixing\");if(o._bypassWebAudio)throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio\");e.track.addAudioTrack(o)}else{if(!n.webAudioMediaStreamDest||o instanceof XG||o._bypassWebAudio)r.push({track:o,type:lB.LocalAudioTrack});else{const e=new XG;e.addAudioTrack(o),r.push({track:e,type:lB.LocalAudioTrack})}a=!0}}}return r}filterTobeUnpublishedTracks(e){const t=[],i=this.getAllTracks();e=OK(e=e.filter(e=>-1!==i.indexOf(e)));for(const i of e){if(i instanceof YG){const e=this.localTrackMap.get(lB.LocalAudioTrack);if(!e)continue;e.track instanceof XG?(e.track.removeAudioTrack(i),this.unbindLocalAudioTrackEvents(i),0===e.track.trackList.length&&(t.push([lB.LocalAudioTrack,e]),e.track.close())):t.push([lB.LocalAudioTrack,e])}if(i instanceof lz){const e=this.localTrackMap.get(lB.LocalVideoTrack);if(!e)continue;t.push([lB.LocalVideoTrack,e]);const i=this.localTrackMap.get(lB.LocalVideoLowTrack);i&&t.push([lB.LocalVideoLowTrack,i])}}return t}bindLocalTrackEvents(e){e.forEach(e=>{let{track:t,type:i}=e;switch(i){case lB.LocalVideoTrack:t.addListener(Zk.GET_STATS,this.handleGetLocalVideoStats),t.addListener(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.addListener(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.addListener(Zk.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.addListener(Zk.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.addListener(Zk.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.addListener(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.addListener(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case lB.LocalAudioTrack:this.bindLocalAudioTrackEvents(t);break;case lB.LocalVideoLowTrack:}})}bindLocalAudioTrackEvents(e,t){e instanceof XG?e.trackList.forEach(e=>{e.addListener(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Zk.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)}):(e.addListener(Zk.GET_STATS,this.handleGetLocalAudioStats),e.addListener(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.addListener(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.addListener(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.addListener(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack),t||e.addListener(Zk.NEED_REPLACE_TRACK,this.handleReplaceTrack))}unbindLocalTrackEvents(e){e||(e=Array.from(this.localTrackMap.entries()).map(e=>{let[t,{track:i}]=e;return{track:i,type:t}})),e.forEach(e=>{let{track:t,type:i}=e;switch(i){case lB.LocalVideoTrack:t.off(Zk.GET_STATS,this.handleGetLocalVideoStats),t.off(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),t.off(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),t.off(Zk.NEED_UPDATE_VIDEO_ENCODER,this.handleUpdateVideoEncoder),t.off(Zk.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode),t.off(Zk.NEED_REPLACE_TRACK,this.handleReplaceTrack),t.off(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),t.off(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack);break;case lB.LocalAudioTrack:this.unbindLocalAudioTrackEvents(t);break;case lB.LocalVideoLowTrack:}})}unbindLocalAudioTrackEvents(e){e instanceof XG?e.trackList.forEach(e=>{e.off(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Zk.GET_STATS,this.handleGetLocalAudioStats),e.off(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack)}):(e.off(Zk.GET_STATS,this.handleGetLocalAudioStats),e.off(Zk.NEED_DISABLE_TRACK,this.handleMuteLocalTrack),e.off(Zk.NEED_ENABLE_TRACK,this.handleUnmuteLocalTrack),e.off(Zk.NEED_REPLACE_TRACK,this.handleReplaceTrack),e.off(Zk.NEED_MUTE_TRACK,this.handleMuteLocalTrack),e.off(Zk.NEED_UNMUTE_TRACK,this.handleUnmuteLocalTrack))}bindRemoteTrackEvents(e,t){t instanceof Z1&&t.addListener(Zk.GET_STATS,t=>{t(this.handleGetRemoteVideoStats(e))}),t instanceof $1&&t.addListener(Zk.GET_STATS,t=>{t(this.handleGetRemoteAudioStats(e))})}unbindRemoteTrackEvents(e){e&&e.removeAllListeners(Zk.GET_STATS)}unbindAllRemoteTrackEvents(){Array.from(this.remoteUserMap.entries()).forEach(e=>{let[t,i]=e;i.has(AB.AUDIO)&&this.unbindRemoteTrackEvents(t._audioTrack),i.has(AB.VIDEO)&&this.unbindRemoteTrackEvents(t._videoTrack)})}createGatewayPublishMessage(e,t){return e.map((e,i)=>{let r,n,{track:o,type:s}=e;switch(s){case lB.LocalAudioTrack:r=qk.Audio,n={dtx:o instanceof JG&&o._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1};break;case lB.LocalVideoTrack:r=o._hints.includes($k.SCREEN_TRACK)?qk.Screen:qk.High,n=T0(T0({},cK(o)),{},{codec:this.store.codec});break;case lB.LocalVideoLowTrack:r=qk.Low,n=T0(T0({},cK(o)),{},{codec:this.store.codec})}return{stream_type:r,attributes:n,ssrcs:t[i]}})}createGatewayUnpublishMessage(e){return e.map(e=>{let t,[i,{track:r,ssrcs:n,id:o}]=e;switch(i){case lB.LocalVideoTrack:t=r._hints.includes($k.SCREEN_TRACK)?qk.Screen:qk.High;break;case lB.LocalAudioTrack:t=qk.Audio;break;case lB.LocalVideoLowTrack:t=qk.Low}return{stream_type:t,ssrcs:n,mid:o}})}assignLocalTracks(e,t){e.forEach((e,i)=>{let{track:r,type:n}=e;this.localTrackMap.set(n,{track:r,id:t[i].id,ssrcs:t[i].localSSRC})})}withdrawLocalTracks(e){e.forEach(e=>{let[t]=e;this.localTrackMap.delete(t)})}async waitTillConnected(){return new l_((e,t)=>{switch(this.state){case pB.New:case pB.Reconnecting:{const i=(r,n)=>n===pB.Disconnected?(this.off(gB.StateChange,i),void t(new QD(xD.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\"))):n===pB.Connected?(this.off(gB.StateChange,i),void e(void 0)):void 0;this.on(gB.StateChange,i);break}case pB.Connected:e(void 0);break;case pB.Disconnected:t(new QD(xD.UNEXPECTED_ERROR,\"PeerConnection already disconnected.\"))}})}bindConnectionEvents(e){e.onConnectionStateChange=async t=>{if(JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.onConnectionStateChange(\").concat(t,\")\")),AP(\"info\",this,\"connectionStateChange\",t),this.emit(gB.PeerConnectionStateChange,t),\"connected\"!==t||this.store.keyMetrics.peerConnectionEnd||this.store.peerConnectionEnd(),\"disconnected\"===t&&\"disconnected\"===e.iceConnectionState)return setTimeout(()=>{if(\"disconnected\"===e.iceConnectionState&&LP(\"ICE_RESTART\")){\"CONNECTED\"===wK(this,gB.QueryClientConnectionState)&&this.emit(gB.RequestRestartICE)}},800),void setTimeout(()=>{\"disconnected\"===e.peerConnectionState&&(JD.debug(\"P2PConnection disconnected timeout 4000ms, force reconnect\"),setTimeout(()=>this.emit(gB.P2PLost),0),this.iceFailedCount+=1,this.requestReconnect())},4e3);\"failed\"===t&&(JD.debug(\"P2PConnection state failed, force reconnect\"),setTimeout(()=>this.emit(gB.P2PLost),0),this.iceFailedCount+=1,await this.requestReconnect())},e.onICEConnectionStateChange=e=>{\"connected\"!==e||this.store.keyMetrics.iceConnectionEnd||this.store.iceConnectionEnd(),JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.onICEConnectionStateChange(\").concat(e,\")\")),AP(\"info\",this,\"iceConnectionStateChange\",e),pj.reportApiInvoke(this.store.sessionId,{name:\"ICEConnectionStateChange\",options:e,tag:nk.TRACER}).onSuccess(),this.emit(gB.IceConnectionStateChange,e)},e.onICETransportStateChange=e=>{JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.onICETransportStateChange(\").concat(e,\")\")),AP(\"info\",this,\"ICETransportStateChange\",e)},e.onDTLSTransportStateChange=e=>{JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportStateChange(\").concat(e,\")\")),AP(\"info\",this,\"DTLSTransportStateChange\",e)},e.onDTLSTransportError=e=>{JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.onDTLSTransportError(\").concat(e,\")\")),AP(\"info\",this,\"DTLSTransportError\",e)},e.onFirstAudioDecoded=e=>{var t;const i=Array.from(qV(t=this.remoteUserMap).call(t)).find(t=>t._audioSSRC===e);var r;i&&(this.store.subscribe(i.uid,\"audio\",void 0,void 0,void 0,Date.now()),null===(r=i.audioTrack)||void 0===r||r.emit(rB.FIRST_FRAME_DECODED),pj.firstRemoteFrame(this.store.sessionId,$L.FIRST_AUDIO_DECODE,ek.FIRST_AUDIO_DECODE,{peer:i._uintid,subscribeElapse:$G.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId}))},e.onFirstAudioReceived=e=>{var t;const i=Array.from(qV(t=this.remoteUserMap).call(t)).find(t=>t._audioSSRC===e);i&&pj.firstRemoteFrame(this.store.sessionId,$L.FIRST_AUDIO_RECEIVED,ek.FIRST_AUDIO_RECEIVED,{peer:i._uintid,subscribeElapse:$G.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onFirstVideoDecoded=(e,t,i)=>{this.reportVideoFirstFrameDecoded(e,t,i)},e.onFirstVideoReceived=e=>{var t;const i=Array.from(qV(t=this.remoteUserMap).call(t)).find(t=>t._videoSSRC===e);i&&pj.firstRemoteFrame(this.store.sessionId,$L.FIRST_VIDEO_RECEIVED,ek.FIRST_VIDEO_RECEIVED,{peer:i._uintid,subscribeElapse:$G.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId})},e.onSelectedLocalCandidateChanged=(e,t)=>{const i=\"relay\"===e.candidateType,r=\"relay\"===t.candidateType;\"unknown\"!==t.candidateType&&i===r||this.emit(gB.ConnectionTypeChange,i),JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.SelectedLocalCandidateChanged(\").concat(JSON.stringify(pK(t)),\" -> \").concat(JSON.stringify(pK(e)),\")\")),AP(\"info\",this,\"SelectedLocalCandidateChanged\",\"\".concat(JSON.stringify(pK(t)),\" -> \").concat(JSON.stringify(pK(e))))},e.onSelectedRemoteCandidateChanged=(e,t)=>{JD.info(\"[p2pId: \".concat(this.store.p2pId,\"]: P2PConnection.SelectedRemoteCandidateChanged(\").concat(JSON.stringify(pK(t)),\" -> \").concat(JSON.stringify(pK(e)),\")\")),AP(\"info\",this,\"SelectedRemoteCandidateChanged\",\"\".concat(JSON.stringify(pK(t)),\" -> \").concat(JSON.stringify(pK(e))))},e.onFirstVideoDecodedTimeout=e=>{this.reportVideoFirstFrameDecoded(e,void 0,void 0,!0)}}unbindConnectionEvents(e){e.onConnectionStateChange=void 0,e.onICEConnectionStateChange=void 0,e.onICETransportStateChange=void 0,e.onDTLSTransportStateChange=void 0,e.onDTLSTransportError=void 0,e.onFirstAudioDecoded=void 0,e.onFirstAudioReceived=void 0,e.onFirstVideoDecoded=void 0,e.onFirstVideoReceived=void 0,e.onSelectedLocalCandidateChanged=void 0,e.onSelectedRemoteCandidateChanged=void 0,e.onFirstVideoDecodedTimeout=void 0}filterTobeMutedTracks(e){const t=[];if(-1===this.getAllTracks().indexOf(e))return t;const i=this.localTrackMap.get(lB.LocalAudioTrack);if(e instanceof YG&&(null==i?void 0:i.track)instanceof XG)return i.track.isActive||t.push([lB.LocalAudioTrack,i]),t;const r=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:i}]=t;return e===i});if(r&&(t.push(r),r[0]===lB.LocalVideoTrack)){const e=this.localTrackMap.get(lB.LocalVideoLowTrack);e&&t.push([lB.LocalVideoLowTrack,e])}return t}filterTobeUnmutedTracks(e){const t=[],i=this.localTrackMap.get(lB.LocalAudioTrack);if(e instanceof YG&&(null==i?void 0:i.track)instanceof XG)return i.track.isActive&&t.push([lB.LocalAudioTrack,i]),t;const r=Array.from(this.localTrackMap.entries()).find(t=>{let[,{track:i}]=t;return e===i});if(r)if(r[0]===lB.LocalVideoTrack){t.push(r);const e=this.localTrackMap.get(lB.LocalVideoLowTrack);e&&t.push([lB.LocalVideoLowTrack,e])}else t.push(r);return t}createMuteMessage(e){return e.map(e=>{let t,[i,{track:r,ssrcs:n,id:o}]=e;switch(i){case lB.LocalAudioTrack:t=qk.Audio;break;case lB.LocalVideoTrack:t=r._hints.includes($k.SCREEN_TRACK)?qk.Screen:qk.High;break;case lB.LocalVideoLowTrack:t=qk.Low}return{stream_type:t,ssrcs:n,mid:o}})}createUnmuteMessage(e){return e.map(e=>{let t,[i,{track:r,ssrcs:n,id:o}]=e;switch(i){case lB.LocalAudioTrack:t=qk.Audio;break;case lB.LocalVideoTrack:t=r._hints.includes($k.SCREEN_TRACK)?qk.Screen:qk.High;break;case lB.LocalVideoLowTrack:t=qk.Low}return{stream_type:t,ssrcs:n,mid:o}})}filterTobeUnSubscribedTracks(e,t){const i=[],r=this.remoteUserMap.get(e);if(!r)return i;if(t){const n=r.get(t);if(!n)return i;i.push([e,{kind:t,id:n}])}else Array.from(r.entries()).forEach(t=>{let[r,n]=t;i.push([e,{kind:r,id:n}])});return i}createUnsubscribeMessage(e){const t=[];return e.forEach(e=>{let[i,{kind:r,id:n}]=e;switch(r){case AB.VIDEO:return void(i._videoSSRC&&t.push({stream_type:AB.VIDEO,ssrcId:i._videoSSRC}));case AB.AUDIO:return void(i._audioSSRC&&t.push({stream_type:AB.AUDIO,ssrcId:i._audioSSRC}))}}),t}createUnsubscribeAllMessage(e){const t=new Map;return e.forEach(e=>{let[i,{kind:r}]=e;if(t.has(i)){let e=t.get(i);r===AB.VIDEO?e|=zk.Video:e|=zk.Audio,t.set(i,e)}else r===AB.VIDEO?t.set(i,zk.Video):t.set(i,zk.Audio)}),{users:Array.from(t.entries()).map(e=>{let[t,i]=e;return{stream_id:t.uid,stream_type:i}})}}withdrawRemoteTracks(e){e.forEach(e=>{let[t,{kind:i}]=e;const r=this.remoteUserMap.get(t);r&&(r.delete(i),0===Array.from(r.entries()).length&&this.remoteUserMap.delete(t))})}async updateBitrateLimit(e){const t=this.localTrackMap.get(lB.LocalVideoTrack),i=this.localTrackMap.get(lB.LocalVideoLowTrack);t&&await t.track.setBitrateLimit(e.uplink),i&&e.low_stream_uplink&&await i.track.setBitrateLimit({max_bitrate:e.low_stream_uplink.bitrate,min_bitrate:e.low_stream_uplink.bitrate||0})}isP2PDisconnected(){if(this.connection){return\"connected\"!==this.connection.peerConnectionState}return!0}mapPubResToRemoteConfig(e,t){return e.map((e,i)=>{var r;let{stream_type:n}=e;return null===(r=t.find(e=>{let{stream_type:t}=e;return n===t}))||void 0===r?void 0:r.attributes})}async tryToUnmuteAudio(e){for(let i=0;i<e.length;i++)if(e[i]instanceof YG){var t;const r=this.filterTobeUnmutedTracks(e[i]);if(0===r.length)continue;await(null===(t=this.connection)||void 0===t?void 0:t.unmuteLocal(r.map(e=>{let[,{id:t}]=e;return t})));const n=this.createUnmuteMessage(r);return void await yK(this,gB.RequestUnmuteLocal,n)}}bindStatsUploaderEvents(){this.statsUploader.requestStats=()=>this.getStats(),this.statsUploader.requestLocalMedia=()=>Array.from(this.localTrackMap.entries()),this.statsUploader.requestRemoteMedia=()=>Array.from(this.remoteUserMap.entries()),this.statsUploader.requestVideoIsReady=e=>{var t;return!(null===(t=this.connection)||void 0===t||!t.getRemoteVideoIsReady(e))},this.statsUploader.requestUpload=(e,t)=>this.emit(gB.RequestUploadStats,e,t),this.statsUploader.requestAllTracks=()=>this.getAllTracks()}unbindStatsUploaderEvents(){this.statsUploader.requestStats=void 0,this.statsUploader.requestLocalMedia=void 0,this.statsUploader.requestRemoteMedia=void 0,this.statsUploader.requestVideoIsReady=void 0}async requestReconnect(){this.dtlsFailedCount+=1,await mK(VD(this.dtlsFailedCount,FD)),this.emit(gB.RequestReconnect)}async reconnectP2P(){const e=Array.from(this.localTrackMap.entries()),t=this.createGatewayUnpublishMessage(e);Array.from(this.remoteUserMap.entries()),t.length>0&&await RK(this,gB.RequestUnpublishForReconnectPC,t),this.disconnectForReconnect(),this.emit(gB.RequestReconnectPC)}canPublishLowStream(){return this.localTrackMap.has(lB.LocalVideoTrack)||this.pendingLocalTracks.some(e=>e instanceof lz)}throwIfTrackTypeNotMatch(e){if(e.filter(e=>e instanceof lz).length>1)throw new QD(xD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(e.filter(e=>e instanceof YG).length>1&&(e.some(e=>e instanceof YG&&e._bypassWebAudio)||!wB().webAudioMediaStreamDest))throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\");for(const t of e){if(t instanceof lz&&this.pendingLocalTracks.some(e=>e instanceof lz))throw new QD(xD.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS);if(t instanceof YG&&this.pendingLocalTracks.some(e=>e instanceof YG)&&(!wB().webAudioMediaStreamDest||t._bypassWebAudio||this.pendingLocalTracks.some(e=>e instanceof YG&&e._bypassWebAudio)))throw new QD(xD.NOT_SUPPORTED,\"cannot publish multiple tracks which one of them configured with bypassWebAudio or your browser doesn't support MediaStreamDestNode\")}}getLowVideoTrack(e,t){const i=wB().supportDualStreamEncoding,r=T0(T0({},{width:160,height:120,framerate:15,bitrate:50}),t);let n;n=i?e._mediaStreamTrack.clone():W1(e,r);const o=new lz(n,T0(T0({},i&&{scaleResolutionDownBy:lK(r,e)}),{},{frameRate:r.framerate,bitrateMax:r.bitrate,bitrateMin:r.bitrate}));return o._hints.push($k.LOW_STREAM),e.addListener(Zk.NEED_CLOSE,()=>{o.close()}),o}async globalLock(){return this.mutex.lock(\"From P2PChannel.globalLock\")}reportVideoFirstFrameDecoded(e,t,i,r){var n;const o=Array.from(qV(n=this.remoteUserMap).call(n)).find(t=>t._videoSSRC===e);if(o){r||this.store.subscribe(o.uid,\"video\",void 0,void 0,void 0,void 0,Date.now());const n=this.store.keyMetrics,s=n.subscribe.find(e=>e.userId===o.uid&&\"video\"===e.type);pj.firstRemoteVideoDecode(this.store.sessionId,$L.FIRST_VIDEO_DECODE,ek.FIRST_VIDEO_DECODE,{peer:o._uintid,videowidth:t,videoheight:i,subscribeElapse:$G.measureFromSubscribeStart(this.store.clientId,e),subscribeRequestid:e,p2pid:this.store.p2pId,apEnd:n.requestAPEnd||0,apStart:n.requestAPStart||0,joinGwEnd:n.joinGatewayEnd||0,joinGwStart:n.joinGatewayStart||0,pcEnd:n.peerConnectionEnd||0,pcStart:n.peerConnectionStart||0,subscriberEnd:(null==s?void 0:s.subscribeEnd)||0,subscriberStart:(null==s?void 0:s.subscribeStart)||0,videoAddNotify:(null==s?void 0:s.streamAdded)||0,state:r?1:0})}}async remoteMediaSsrcChanged(e,t,i){if(!this.connection)return!1;const r=this.remoteUserMap.get(e);if(!r)return!1;const n=r.get(t);if(!n)return!1;const o=await this.connection.getRemoteSSRC(n);return void 0!==o&&o!==i}}).prototype,\"startP2PConnection\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"startP2PConnection\"),S0.prototype),VV(S0.prototype,\"connect\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"connect\"),S0.prototype),VV(S0.prototype,\"preConnect\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"preConnect\"),S0.prototype),VV(S0.prototype,\"unpublish\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"unpublish\"),S0.prototype),VV(S0.prototype,\"unpublishLowStream\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"unpublishLowStream\"),S0.prototype),VV(S0.prototype,\"subscribe\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"subscribe\"),S0.prototype),VV(S0.prototype,\"massSubscribe\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"massSubscribe\"),S0.prototype),VV(S0.prototype,\"unsubscribe\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"unsubscribe\"),S0.prototype),VV(S0.prototype,\"massUnsubscribe\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"massUnsubscribe\"),S0.prototype),VV(S0.prototype,\"muteRemote\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"muteRemote\"),S0.prototype),VV(S0.prototype,\"unmuteRemote\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"unmuteRemote\"),S0.prototype),VV(S0.prototype,\"hasRemoteMediaWithLock\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"hasRemoteMediaWithLock\"),S0.prototype),VV(S0.prototype,\"disconnectForReconnect\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"disconnectForReconnect\"),S0.prototype),VV(S0.prototype,\"updateBitrateLimit\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"updateBitrateLimit\"),S0.prototype),VV(S0.prototype,\"remoteMediaSsrcChanged\",[b0],Object.getOwnPropertyDescriptor(S0.prototype,\"remoteMediaSsrcChanged\"),S0.prototype),C0=S0))||C0;function b0(e,t,i){const r=e[t];if(\"function\"!=typeof r)throw new Error(\"Cannot use mutex on object property.\");return i.value=async function(){const e=this.mutex,i=await e.lock(\"From P2PChannel.\".concat(t));try{for(var n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return await r.apply(this,o)}finally{i()}},i}function N0(e){return\"Minified Redux error #\"+e+\"; visit https://redux.js.org/Errors?code=\"+e+\" for the full message or use the non-minified dev environment for full errors. \"}var O0,D0=\"function\"==typeof Symbol&&Symbol.observable||\"@@observable\",P0=function(){return Math.random().toString(36).substring(7).split(\"\").join(\".\")},L0={INIT:\"@@redux/INIT\"+P0(),REPLACE:\"@@redux/REPLACE\"+P0(),PROBE_UNKNOWN_ACTION:function(){return\"@@redux/PROBE_UNKNOWN_ACTION\"+P0()}};function k0(e){if(\"object\"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function B0(e,t,i){var r;if(\"function\"==typeof t&&\"function\"==typeof i||\"function\"==typeof i&&\"function\"==typeof arguments[3])throw new Error(N0(0));if(\"function\"==typeof t&&void 0===i&&(i=t,t=void 0),void 0!==i){if(\"function\"!=typeof i)throw new Error(N0(1));return i(B0)(e,t)}if(\"function\"!=typeof e)throw new Error(N0(2));var n=e,o=t,s=[],a=s,c=!1;function d(){a===s&&(a=s.slice())}function u(){if(c)throw new Error(N0(3));return o}function h(e){if(\"function\"!=typeof e)throw new Error(N0(4));if(c)throw new Error(N0(5));var t=!0;return d(),a.push(e),function(){if(t){if(c)throw new Error(N0(6));t=!1,d();var i=a.indexOf(e);a.splice(i,1),s=null}}}function A(e){if(!k0(e))throw new Error(N0(7));if(void 0===e.type)throw new Error(N0(8));if(c)throw new Error(N0(9));try{c=!0,o=n(o,e)}finally{c=!1}for(var t=s=a,i=0;i<t.length;i++){(0,t[i])()}return e}function l(e){if(\"function\"!=typeof e)throw new Error(N0(10));n=e,A({type:L0.REPLACE})}function p(){var e,t=h;return(e={subscribe:function(e){if(\"object\"!=typeof e||null===e)throw new Error(N0(11));function i(){e.next&&e.next(u())}return i(),{unsubscribe:t(i)}}})[D0]=function(){return this},e}return A({type:L0.INIT}),(r={dispatch:A,subscribe:h,getState:u,replaceReducer:l})[D0]=p,r}function M0(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function U0(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?M0(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):M0(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}!function(e){e.SET_SESSION_ID=\"SET_SESSION_ID\",e.SET_P2P_ID=\"SET_P2P_id\",e.SET_DC_ID=\"SET_DC_id\",e.SET_UID=\"SET_UID\",e.SET_PUB_ID=\"SET_PUB_ID\",e.SET_CLOUD_PROXY_SERVER_MODE=\"SET_CLOUD_PROXY_SERVER_MODE\",e.KEY_METRIC_CLIENT_CREATED=\"KEY_METRIC_CLIENT_CREATED\",e.KEY_METRIC_JOIN_START=\"KEY_METRIC_JOIN_START\",e.AVOID_JOIN_START=\"AVOID_JOIN_START\",e.KEY_METRIC_JOIN_END=\"KEY_METRIC_JOIN_END\",e.KEY_METRIC_REQUEST_AP_START=\"KEY_METRIC_REQUEST_AP_START\",e.KEY_METRIC_REQUEST_AP_END=\"KEY_METRIC_REQUEST_AP_END\",e.KEY_METRIC_JOIN_GATEWAY_START=\"KEY_METRIC_JOIN_GATEWAY_START\",e.KEY_METRIC_JOIN_GATEWAY_END=\"KEY_METRIC_JOIN_GATEWAY_END\",e.KEY_METRIC_PEER_CONNECTION_START=\"KEY_METRIC_PEER_CONNECTION_START\",e.KEY_METRIC_PEER_CONNECTION_END=\"KEY_METRIC_PEER_CONNECTION_END\",e.KEY_METRIC_ICE_CONNECTION_END=\"KEY_METRIC_ICE_CONNECTION_END\",e.KEY_METRIC_SIGNAL_CHANNEL_OPEN=\"KEY_METRIC_SIGNAL_CHANNEL_OPEN\",e.KEY_METRIC_PUBLISH=\"KEY_METRIC_PUBLISH\",e.KEY_METRIC_SUBSCRIBE=\"KEY_METRIC_SUBSCRIBE\",e.RECORD_JOIN_CHANNEL_SERVICE=\"RECORD_JOIN_CHANNEL_SERVICE\",e.RESET_JOIN_CHANNEL_SERVICE_RECORDS=\"RESET_JOIN_CHANNEL_SERVICE_RECORDS\",e.RESET_KEY_METRICS=\"RESET_KEY_METRICS\"}(O0||(O0={}));class x0{constructor(e,t,i,r){MN(this,\"store\",void 0),MN(this,\"reducer\",void 0);const n={codec:e,audioCodec:t,mode:i,clientId:r,sessionId:null,p2pId:0,dcId:0,pubId:0,subId:0,avoidJoinStart:0,keyMetrics:{publish:[],subscribe:[]},joinChannelServiceRecords:[],cloudProxyServerMode:\"disabled\"};this.reducer=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case O0.SET_SESSION_ID:return U0(U0({},e),{},{sessionId:t.sessionId});case O0.SET_P2P_ID:return U0(U0({},e),{},{p2pId:t.p2pId});case O0.SET_UID:return U0(U0({},e),{},{uid:t.uid});case O0.SET_PUB_ID:return U0(U0({},e),{},{pubId:t.pubId});case O0.KEY_METRIC_CLIENT_CREATED:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{clientCreated:t.metric})});case O0.KEY_METRIC_JOIN_START:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{joinStart:t.metric})});case O0.AVOID_JOIN_START:return U0(U0({},e),{},{avoidJoinStart:t.avoidJoinStart});case O0.KEY_METRIC_JOIN_END:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{joinEnd:t.metric})});case O0.KEY_METRIC_REQUEST_AP_START:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{requestAPStart:t.metric})});case O0.KEY_METRIC_REQUEST_AP_END:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{requestAPEnd:t.metric})});case O0.KEY_METRIC_JOIN_GATEWAY_START:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{joinGatewayStart:t.metric})});case O0.KEY_METRIC_JOIN_GATEWAY_END:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{joinGatewayEnd:t.metric})});case O0.KEY_METRIC_PEER_CONNECTION_START:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{peerConnectionStart:t.metric})});case O0.KEY_METRIC_PEER_CONNECTION_END:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{peerConnectionEnd:t.metric})});case O0.KEY_METRIC_SIGNAL_CHANNEL_OPEN:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{signalChannelOpen:t.metric})});case O0.KEY_METRIC_ICE_CONNECTION_END:return U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{iceConnectionEnd:t.metric})});case O0.KEY_METRIC_PUBLISH:{const i=e.keyMetrics.publish,r=i.findIndex(e=>e.trackId===t.metric.trackId);return-1!==r?(i[r]=U0(U0({},i[r]),t.metric),U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{publish:[...i]})})):U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{publish:[...e.keyMetrics.publish,t.metric]})})}case O0.KEY_METRIC_SUBSCRIBE:{const i=e.keyMetrics.subscribe,r=i.findIndex(e=>e.userId===t.metric.userId&&e.type===t.metric.type);return-1!==r?(i[r]=U0(U0({},i[r]),t.metric),U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{subscribe:[...i]})})):U0(U0({},e),{},{keyMetrics:U0(U0({},e.keyMetrics),{},{subscribe:[...e.keyMetrics.subscribe,t.metric]})})}case O0.SET_CLOUD_PROXY_SERVER_MODE:return e.cloudProxyServerMode=t.mode,e;case O0.RECORD_JOIN_CHANNEL_SERVICE:return\"number\"!=typeof t.index?e.joinChannelServiceRecords=[...e.joinChannelServiceRecords,t.record]:(e.joinChannelServiceRecords[t.index]=U0(U0({},e.joinChannelServiceRecords[t.index]),t.record),e.joinChannelServiceRecords=[...e.joinChannelServiceRecords]),e;case O0.RESET_JOIN_CHANNEL_SERVICE_RECORDS:return e.joinChannelServiceRecords=[],e;case O0.RESET_KEY_METRICS:return e.keyMetrics={publish:[],subscribe:[]},e;default:return e}},this.store=B0(this.reducer)}set sessionId(e){this.store.dispatch({type:O0.SET_SESSION_ID,sessionId:e})}get sessionId(){return this.store.getState().sessionId}get codec(){return this.store.getState().codec}get audioCodec(){return this.store.getState().audioCodec}get clientId(){return this.store.getState().clientId}set p2pId(e){this.store.dispatch({type:O0.SET_P2P_ID,p2pId:e})}get p2pId(){return this.store.getState().p2pId}set dcId(e){this.store.dispatch({type:O0.SET_DC_ID,dcId:e})}get dcId(){return this.store.getState().dcId}set uid(e){this.store.dispatch({type:O0.SET_UID,uid:e})}get uid(){return this.store.getState().uid}set pubId(e){this.store.dispatch({type:O0.SET_PUB_ID,pubId:e})}get pubId(){return this.store.getState().pubId}set cloudProxyServerMode(e){this.store.dispatch({type:O0.SET_CLOUD_PROXY_SERVER_MODE,mode:e})}get cloudProxyServerMode(){return this.store.getState().cloudProxyServerMode}clientCreated(){this.store.dispatch({type:O0.KEY_METRIC_CLIENT_CREATED,metric:Date.now()})}joinStart(){this.store.dispatch({type:O0.KEY_METRIC_JOIN_START,metric:Date.now()})}joinEnd(){this.store.dispatch({type:O0.KEY_METRIC_JOIN_END,metric:Date.now()})}requestAPStart(){this.store.dispatch({type:O0.KEY_METRIC_REQUEST_AP_START,metric:Date.now()})}requestAPEnd(){this.store.dispatch({type:O0.KEY_METRIC_REQUEST_AP_END,metric:Date.now()})}joinGatewayStart(){this.store.dispatch({type:O0.KEY_METRIC_JOIN_GATEWAY_START,metric:Date.now()})}joinGatewayEnd(){this.store.dispatch({type:O0.KEY_METRIC_JOIN_GATEWAY_END,metric:Date.now()})}peerConnectionStart(){this.store.dispatch({type:O0.KEY_METRIC_PEER_CONNECTION_START,metric:Date.now()})}peerConnectionEnd(){this.store.dispatch({type:O0.KEY_METRIC_PEER_CONNECTION_END,metric:Date.now()})}signalChannelOpen(){this.store.dispatch({type:O0.KEY_METRIC_SIGNAL_CHANNEL_OPEN,metric:Date.now()})}iceConnectionEnd(){this.store.dispatch({type:O0.KEY_METRIC_ICE_CONNECTION_END,metric:Date.now()})}publish(e,t,i,r){this.store.dispatch({type:O0.KEY_METRIC_PUBLISH,metric:U0(U0({trackId:e,type:t},i&&{publishStart:i}),r&&{publishEnd:r})})}subscribe(e,t,i,r,n,o,s){this.store.dispatch({type:O0.KEY_METRIC_SUBSCRIBE,metric:U0(U0(U0(U0(U0({userId:e,type:t},i&&{subscribeStart:i}),r&&{subscribeEnd:r}),n&&{firstFrame:n}),o&&{streamAdded:o}),s&&{firstDecoded:s})})}massSubscribe(e,t,i,r){e.forEach(e=>{this.store.dispatch({type:O0.KEY_METRIC_SUBSCRIBE,metric:U0(U0(U0({userId:e.userId,type:e.type},t&&{subscribeStart:t}),i&&{subscribeEnd:i}),r&&{firstFrame:r})})})}get keyMetrics(){return this.store.getState().keyMetrics}recordJoinChannelService(e,t){\"gateway\"===e.service&&Array.isArray(e.urls)&&(e.urls=e.urls.map(e=>e.replace(/(\\d+)-\\d+-\\d+-(\\d+)/,\"$1-*-*-$2\")));try{return\"number\"!=typeof t?(this.store.dispatch({type:O0.RECORD_JOIN_CHANNEL_SERVICE,record:U0(U0({},e),{},{sessionId:this.sessionId,cloudProxyMode:this.cloudProxyServerMode,uid:this.uid})}),this.store.getState().joinChannelServiceRecords.length-1):(t<0||t>=this.store.getState().joinChannelServiceRecords.length||this.store.dispatch({type:O0.RECORD_JOIN_CHANNEL_SERVICE,record:e,index:t}),t)}catch(e){return 0}}resetJoinChannelServiceRecords(){this.store.dispatch({type:O0.RESET_JOIN_CHANNEL_SERVICE_RECORDS})}resetKeyMetrics(){this.store.dispatch({type:O0.RESET_KEY_METRICS})}get joinChannelServiceRecords(){try{return this.store.getState().joinChannelServiceRecords}catch(e){return[]}}get avoidJoinStart(){return this.store.getState().avoidJoinStart}set avoidJoinStart(e){this.store.dispatch({type:O0.AVOID_JOIN_START,avoidJoinStart:e})}}let Q0;const F0=()=>\"HTTPS\"===(Q0||Q0||(Q0=(window.location.protocol.split(\":\")[0]||\"\").toUpperCase(),Q0)),V0=()=>void 0!==window.isSecureContext;function j0(e){let t=$0();return function(e,t){let i=e.appId;void 0!==i&&(l2(t,10),s2(t,i));let r=e.cid;void 0!==r&&(l2(t,16),l2(t,r));let n=e.cname;void 0!==n&&(l2(t,26),s2(t,n));let o=e.deviceId;void 0!==o&&(l2(t,34),s2(t,o));let s=e.elapse;void 0!==s&&(l2(t,40),p2(t,s));let a=e.fileSize;void 0!==a&&(l2(t,48),p2(t,z0(a)));let c=e.height;void 0!==c&&(l2(t,56),p2(t,z0(c)));let d=e.jpg;void 0!==d&&(l2(t,66),l2(t,d.length),function(e,t){let i=r2(e,t.length);e.bytes.set(t,i)}(t,d));let u=e.networkType;void 0!==u&&(l2(t,72),p2(t,z0(u)));let h=e.osType;void 0!==h&&(l2(t,80),p2(t,z0(h)));let A=e.requestId;void 0!==A&&(l2(t,90),s2(t,A));let l=e.sdkVersion;void 0!==l&&(l2(t,98),s2(t,l));let p=e.sequence;void 0!==p&&(l2(t,104),p2(t,z0(p)));let g=e.sid;void 0!==g&&(l2(t,114),s2(t,g));let E=e.timestamp;void 0!==E&&(l2(t,120),p2(t,E));let f=e.uid;void 0!==f&&(l2(t,128),l2(t,f));let m=e.vid;void 0!==m&&(l2(t,136),l2(t,m));let I=e.width;void 0!==I&&(l2(t,144),p2(t,z0(I)));let _=e.service;void 0!==_&&(l2(t,152),l2(t,_));let C=e.callbackData;void 0!==C&&(l2(t,162),s2(t,C));let S=e.jpgEncryption;void 0!==S&&(l2(t,168),l2(t,S));let v=e.requestType;void 0!==v&&(l2(t,176),l2(t,v));let T=e.scorePorn;void 0!==T&&(l2(t,185),h2(t,T));let R=e.scoreSexy;void 0!==R&&(l2(t,193),h2(t,R));let y=e.scoreNeutral;void 0!==y&&(l2(t,201),h2(t,y));let w=e.scene;void 0!==w&&(l2(t,208),l2(t,w));let b=e.ossFilePrefix;void 0!==b&&(l2(t,218),s2(t,b));let N=e.serviceVendor;if(void 0!==N)for(let e of N){l2(t,226);let i=$0();H0(e,i),l2(t,i.limit),a2(t,i),e2(i)}}(e,t),function(e){let t=e.bytes,i=e.limit;return t.length===i?t:t.subarray(0,i)}(t)}function G0(e){return function(e){let t={};e:for(;!i2(e);){let i=A2(e);switch(i>>>3){case 0:break e;case 1:t.code=A2(e);break;case 2:t.msg=o2(e,A2(e));break;case 3:{let i=W0(e);t.data=K0(e),e.limit=i;break}default:Y0(e,7&i)}}return t}({bytes:t=e,offset:0,limit:t.length});var t}function K0(e){let t={};e:for(;!i2(e);){let i=A2(e);switch(i>>>3){case 0:break e;case 1:t.requestId=o2(e,A2(e));break;case 2:t.requestType=A2(e)>>>0;break;case 3:t.scorePorn=u2(e);break;case 4:t.scoreSexy=u2(e);break;case 5:t.scoreNeutral=u2(e);break;case 6:t.requestScene=A2(e)>>>0;break;case 7:t.scene=A2(e)>>>0;break;default:Y0(e,7&i)}}return t}function H0(e,t){let i=e.service;void 0!==i&&(l2(t,8),l2(t,i));let r=e.vendor;void 0!==r&&(l2(t,16),l2(t,r));let n=e.token;void 0!==n&&(l2(t,26),s2(t,n));let o=e.callbackUrl;void 0!==o&&(l2(t,34),s2(t,o))}function W0(e){let t=A2(e),i=e.limit;return e.limit=e.offset+t,i}function Y0(e,t){switch(t){case 0:for(;128&c2(e););break;case 2:t2(e,A2(e));break;case 5:t2(e,4);break;case 1:t2(e,8);break;default:throw new Error(\"Unimplemented type: \"+t)}}let J0=new Float32Array(1);new Uint8Array(J0.buffer);let q0=new Float64Array(1),X0=new Uint8Array(q0.buffer);function z0(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}let Z0=[];function $0(){const e=Z0.pop();return e?(e.offset=e.limit=0,e):{bytes:new Uint8Array(64),offset:0,limit:0}}function e2(e){Z0.push(e)}function t2(e,t){if(e.offset+t>e.limit)throw new Error(\"Skip past limit\");e.offset+=t}function i2(e){return e.offset>=e.limit}function r2(e,t){let i=e.bytes,r=e.offset,n=e.limit,o=r+t;if(o>i.length){let t=new Uint8Array(2*o);t.set(i),e.bytes=t}return e.offset=o,o>n&&(e.limit=o),r}function n2(e,t){let i=e.offset;if(i+t>e.limit)throw new Error(\"Read past limit\");return e.offset+=t,i}function o2(e,t){let i=n2(e,t),r=String.fromCharCode,n=e.bytes,o=\"ï¿½\",s=\"\";for(let e=0;e<t;e++){let a,c,d,u,h=n[e+i];0==(128&h)?s+=r(h):192==(224&h)?e+1>=t?s+=o:(a=n[e+i+1],128!=(192&a)?s+=o:(u=(31&h)<<6|63&a,u<128?s+=o:(s+=r(u),e++))):224==(240&h)?e+2>=t?s+=o:(a=n[e+i+1],c=n[e+i+2],32896!=(49344&(a|c<<8))?s+=o:(u=(15&h)<<12|(63&a)<<6|63&c,u<2048||u>=55296&&u<=57343?s+=o:(s+=r(u),e+=2))):240==(248&h)?e+3>=t?s+=o:(a=n[e+i+1],c=n[e+i+2],d=n[e+i+3],8421504!=(12632256&(a|c<<8|d<<16))?s+=o:(u=(7&h)<<18|(63&a)<<12|(63&c)<<6|63&d,u<65536||u>1114111?s+=o:(u-=65536,s+=r(55296+(u>>10),56320+(1023&u)),e+=3))):s+=o}return s}function s2(e,t){let i=t.length,r=0;for(let e=0;e<i;e++){let n=t.charCodeAt(e);n>=55296&&n<=56319&&e+1<i&&(n=(n<<10)+t.charCodeAt(++e)-56613888),r+=n<128?1:n<2048?2:n<65536?3:4}l2(e,r);let n=r2(e,r),o=e.bytes;for(let e=0;e<i;e++){let r=t.charCodeAt(e);r>=55296&&r<=56319&&e+1<i&&(r=(r<<10)+t.charCodeAt(++e)-56613888),r<128?o[n++]=r:(r<2048?o[n++]=r>>6&31|192:(r<65536?o[n++]=r>>12&15|224:(o[n++]=r>>18&7|240,o[n++]=r>>12&63|128),o[n++]=r>>6&63|128),o[n++]=63&r|128)}}function a2(e,t){let i=r2(e,t.limit),r=e.bytes,n=t.bytes;for(let e=0,o=t.limit;e<o;e++)r[e+i]=n[e]}function c2(e){return e.bytes[n2(e,1)]}function d2(e,t){let i=r2(e,1);e.bytes[i]=t}function u2(e){let t=n2(e,8),i=e.bytes;return X0[0]=i[t++],X0[1]=i[t++],X0[2]=i[t++],X0[3]=i[t++],X0[4]=i[t++],X0[5]=i[t++],X0[6]=i[t++],X0[7]=i[t++],q0[0]}function h2(e,t){let i=r2(e,8),r=e.bytes;q0[0]=t,r[i++]=X0[0],r[i++]=X0[1],r[i++]=X0[2],r[i++]=X0[3],r[i++]=X0[4],r[i++]=X0[5],r[i++]=X0[6],r[i++]=X0[7]}function A2(e){let t,i=0,r=0;do{t=c2(e),i<32&&(r|=(127&t)<<i),i+=7}while(128&t);return r}function l2(e,t){for(t>>>=0;t>=128;)d2(e,127&t|128),t>>>=7;d2(e,t)}function p2(e,t){let i=t.low>>>0,r=(t.low>>>28|t.high<<4)>>>0,n=t.high>>>24,o=0===n?0===r?i<16384?i<128?1:2:i<1<<21?3:4:r<16384?r<128?5:6:r<1<<21?7:8:n<128?9:10,s=r2(e,o),a=e.bytes;switch(o){case 10:a[s+9]=n>>>7&1;case 9:a[s+8]=9!==o?128|n:127&n;case 8:a[s+7]=8!==o?r>>>21|128:r>>>21&127;case 7:a[s+6]=7!==o?r>>>14|128:r>>>14&127;case 6:a[s+5]=6!==o?r>>>7|128:r>>>7&127;case 5:a[s+4]=5!==o?128|r:127&r;case 4:a[s+3]=4!==o?i>>>21|128:i>>>21&127;case 3:a[s+2]=3!==o?i>>>14|128:i>>>14&127;case 2:a[s+1]=2!==o?i>>>7|128:i>>>7&127;case 1:a[s]=1!==o?128|i:127&i}}var g2={};Object.defineProperty(g2,\"__esModule\",{value:!0});var E2=function(){function e(){this._dataLength=0,this._bufferLength=0,this._state=new Int32Array(4),this._buffer=new ArrayBuffer(68),this._buffer8=new Uint8Array(this._buffer,0,68),this._buffer32=new Uint32Array(this._buffer,0,17),this.start()}return e.hashStr=function(e,t){return void 0===t&&(t=!1),this.onePassHasher.start().appendStr(e).end(t)},e.hashAsciiStr=function(e,t){return void 0===t&&(t=!1),this.onePassHasher.start().appendAsciiStr(e).end(t)},e._hex=function(t){var i,r,n,o,s=e.hexChars,a=e.hexOut;for(o=0;o<4;o+=1)for(r=8*o,i=t[o],n=0;n<8;n+=2)a[r+1+n]=s.charAt(15&i),i>>>=4,a[r+0+n]=s.charAt(15&i),i>>>=4;return a.join(\"\")},e._md5cycle=function(e,t){var i=e[0],r=e[1],n=e[2],o=e[3];r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&n|~r&o)+t[0]-680876936|0)<<7|i>>>25)+r|0)&r|~i&n)+t[1]-389564586|0)<<12|o>>>20)+i|0)&i|~o&r)+t[2]+606105819|0)<<17|n>>>15)+o|0)&o|~n&i)+t[3]-1044525330|0)<<22|r>>>10)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&n|~r&o)+t[4]-176418897|0)<<7|i>>>25)+r|0)&r|~i&n)+t[5]+1200080426|0)<<12|o>>>20)+i|0)&i|~o&r)+t[6]-1473231341|0)<<17|n>>>15)+o|0)&o|~n&i)+t[7]-45705983|0)<<22|r>>>10)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&n|~r&o)+t[8]+1770035416|0)<<7|i>>>25)+r|0)&r|~i&n)+t[9]-1958414417|0)<<12|o>>>20)+i|0)&i|~o&r)+t[10]-42063|0)<<17|n>>>15)+o|0)&o|~n&i)+t[11]-1990404162|0)<<22|r>>>10)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&n|~r&o)+t[12]+1804603682|0)<<7|i>>>25)+r|0)&r|~i&n)+t[13]-40341101|0)<<12|o>>>20)+i|0)&i|~o&r)+t[14]-1502002290|0)<<17|n>>>15)+o|0)&o|~n&i)+t[15]+1236535329|0)<<22|r>>>10)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&o|n&~o)+t[1]-165796510|0)<<5|i>>>27)+r|0)&n|r&~n)+t[6]-1069501632|0)<<9|o>>>23)+i|0)&r|i&~r)+t[11]+643717713|0)<<14|n>>>18)+o|0)&i|o&~i)+t[0]-373897302|0)<<20|r>>>12)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&o|n&~o)+t[5]-701558691|0)<<5|i>>>27)+r|0)&n|r&~n)+t[10]+38016083|0)<<9|o>>>23)+i|0)&r|i&~r)+t[15]-660478335|0)<<14|n>>>18)+o|0)&i|o&~i)+t[4]-405537848|0)<<20|r>>>12)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&o|n&~o)+t[9]+568446438|0)<<5|i>>>27)+r|0)&n|r&~n)+t[14]-1019803690|0)<<9|o>>>23)+i|0)&r|i&~r)+t[3]-187363961|0)<<14|n>>>18)+o|0)&i|o&~i)+t[8]+1163531501|0)<<20|r>>>12)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r&o|n&~o)+t[13]-1444681467|0)<<5|i>>>27)+r|0)&n|r&~n)+t[2]-51403784|0)<<9|o>>>23)+i|0)&r|i&~r)+t[7]+1735328473|0)<<14|n>>>18)+o|0)&i|o&~i)+t[12]-1926607734|0)<<20|r>>>12)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r^n^o)+t[5]-378558|0)<<4|i>>>28)+r|0)^r^n)+t[8]-2022574463|0)<<11|o>>>21)+i|0)^i^r)+t[11]+1839030562|0)<<16|n>>>16)+o|0)^o^i)+t[14]-35309556|0)<<23|r>>>9)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r^n^o)+t[1]-1530992060|0)<<4|i>>>28)+r|0)^r^n)+t[4]+1272893353|0)<<11|o>>>21)+i|0)^i^r)+t[7]-155497632|0)<<16|n>>>16)+o|0)^o^i)+t[10]-1094730640|0)<<23|r>>>9)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r^n^o)+t[13]+681279174|0)<<4|i>>>28)+r|0)^r^n)+t[0]-358537222|0)<<11|o>>>21)+i|0)^i^r)+t[3]-722521979|0)<<16|n>>>16)+o|0)^o^i)+t[6]+76029189|0)<<23|r>>>9)+n|0,r=((r+=((n=((n+=((o=((o+=((i=((i+=(r^n^o)+t[9]-640364487|0)<<4|i>>>28)+r|0)^r^n)+t[12]-421815835|0)<<11|o>>>21)+i|0)^i^r)+t[15]+530742520|0)<<16|n>>>16)+o|0)^o^i)+t[2]-995338651|0)<<23|r>>>9)+n|0,r=((r+=((o=((o+=(r^((i=((i+=(n^(r|~o))+t[0]-198630844|0)<<6|i>>>26)+r|0)|~n))+t[7]+1126891415|0)<<10|o>>>22)+i|0)^((n=((n+=(i^(o|~r))+t[14]-1416354905|0)<<15|n>>>17)+o|0)|~i))+t[5]-57434055|0)<<21|r>>>11)+n|0,r=((r+=((o=((o+=(r^((i=((i+=(n^(r|~o))+t[12]+1700485571|0)<<6|i>>>26)+r|0)|~n))+t[3]-1894986606|0)<<10|o>>>22)+i|0)^((n=((n+=(i^(o|~r))+t[10]-1051523|0)<<15|n>>>17)+o|0)|~i))+t[1]-2054922799|0)<<21|r>>>11)+n|0,r=((r+=((o=((o+=(r^((i=((i+=(n^(r|~o))+t[8]+1873313359|0)<<6|i>>>26)+r|0)|~n))+t[15]-30611744|0)<<10|o>>>22)+i|0)^((n=((n+=(i^(o|~r))+t[6]-1560198380|0)<<15|n>>>17)+o|0)|~i))+t[13]+1309151649|0)<<21|r>>>11)+n|0,r=((r+=((o=((o+=(r^((i=((i+=(n^(r|~o))+t[4]-145523070|0)<<6|i>>>26)+r|0)|~n))+t[11]-1120210379|0)<<10|o>>>22)+i|0)^((n=((n+=(i^(o|~r))+t[2]+718787259|0)<<15|n>>>17)+o|0)|~i))+t[9]-343485551|0)<<21|r>>>11)+n|0,e[0]=i+e[0]|0,e[1]=r+e[1]|0,e[2]=n+e[2]|0,e[3]=o+e[3]|0},e.prototype.start=function(){return this._dataLength=0,this._bufferLength=0,this._state.set(e.stateIdentity),this},e.prototype.appendStr=function(t){var i,r,n=this._buffer8,o=this._buffer32,s=this._bufferLength;for(r=0;r<t.length;r+=1){if((i=t.charCodeAt(r))<128)n[s++]=i;else if(i<2048)n[s++]=192+(i>>>6),n[s++]=63&i|128;else if(i<55296||i>56319)n[s++]=224+(i>>>12),n[s++]=i>>>6&63|128,n[s++]=63&i|128;else{if((i=1024*(i-55296)+(t.charCodeAt(++r)-56320)+65536)>1114111)throw new Error(\"Unicode standard supports code points up to U+10FFFF\");n[s++]=240+(i>>>18),n[s++]=i>>>12&63|128,n[s++]=i>>>6&63|128,n[s++]=63&i|128}s>=64&&(this._dataLength+=64,e._md5cycle(this._state,o),s-=64,o[0]=o[16])}return this._bufferLength=s,this},e.prototype.appendAsciiStr=function(t){for(var i,r=this._buffer8,n=this._buffer32,o=this._bufferLength,s=0;;){for(i=Math.min(t.length-s,64-o);i--;)r[o++]=t.charCodeAt(s++);if(o<64)break;this._dataLength+=64,e._md5cycle(this._state,n),o=0}return this._bufferLength=o,this},e.prototype.appendByteArray=function(t){for(var i,r=this._buffer8,n=this._buffer32,o=this._bufferLength,s=0;;){for(i=Math.min(t.length-s,64-o);i--;)r[o++]=t[s++];if(o<64)break;this._dataLength+=64,e._md5cycle(this._state,n),o=0}return this._bufferLength=o,this},e.prototype.getState=function(){var e=this._state;return{buffer:String.fromCharCode.apply(null,Array.from(this._buffer8)),buflen:this._bufferLength,length:this._dataLength,state:[e[0],e[1],e[2],e[3]]}},e.prototype.setState=function(e){var t,i=e.buffer,r=e.state,n=this._state;for(this._dataLength=e.length,this._bufferLength=e.buflen,n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],t=0;t<i.length;t+=1)this._buffer8[t]=i.charCodeAt(t)},e.prototype.end=function(t){void 0===t&&(t=!1);var i=this._bufferLength,r=this._buffer8,n=this._buffer32,o=1+(i>>2);this._dataLength+=i;var s=8*this._dataLength;if(r[i]=128,r[i+1]=r[i+2]=r[i+3]=0,n.set(e.buffer32Identity.subarray(o),o),i>55&&(e._md5cycle(this._state,n),n.set(e.buffer32Identity)),s<=4294967295)n[14]=s;else{var a=s.toString(16).match(/(.*?)(.{0,8})$/);if(null===a)return;var c=parseInt(a[2],16),d=parseInt(a[1],16)||0;n[14]=c,n[15]=d}return e._md5cycle(this._state,n),t?this._state:e._hex(this._state)},e.stateIdentity=new Int32Array([1732584193,-271733879,-1732584194,271733878]),e.buffer32Identity=new Int32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),e.hexChars=\"0123456789abcdef\",e.hexOut=[],e.onePassHasher=new e,e}(),f2=g2.Md5=E2;if(\"5d41402abc4b2a76b9719d911017c592\"!==E2.hashStr(\"hello\"))throw new Error(\"Md5 self test failed.\");const m2=async(e,t,i)=>await(async(e,t,i)=>{const r=\"\"+t+i,n=new Uint8Array(f2.hashStr(r,!0).buffer).slice(0,16),o=n.slice(0,12),s=await window.crypto.subtle.importKey(\"raw\",n,\"AES-GCM\",!0,[\"encrypt\"]);return new Uint8Array(await window.crypto.subtle.encrypt({name:\"AES-GCM\",iv:o},s,e))})(e.buffer,t,i);function I2(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}const _2=new Map([[\"moderation\",1],[\"supervise\",2]]);class C2 extends MD{get connectionState(){return this._connectionState}set connectionState(e){if(this._connectionState===e)return;const t=this._connectionState;this._connectionState=e,this.emit(SB.CONNECTION_STATE_CHANGE,t,e)}get inspectType(){return this._inspectType}set inspectType(e){var t;this._inspectMode=cc(t=e.map(e=>_2.get(e)||0)).call(t,(e,t)=>e+t),this._inspectType=e}get quality(){return this._quality}set quality(e){this._quality=e>1?1:e<.1?.1:e,this.qualityTimer&&(window.clearTimeout(this.qualityTimer),this.qualityTimer=null),this._quality>=1||(this.qualityTimer=window.setTimeout(()=>{this.quality=this._quality/this.qualityRatio},6e4))}constructor(e){super(),MN(this,\"name\",\"AgoraRTCVideoContentInspect\"),MN(this,\"_connectionState\",_B.CONNECTING),MN(this,\"_innerConnectionState\",void 0),MN(this,\"sequence\",0),MN(this,\"inspectStartTime\",void 0),MN(this,\"workerManagerConnection\",void 0),MN(this,\"workerConnection\",void 0),MN(this,\"workerMessageLengthLimit\",void 0),MN(this,\"inspectIntervalMinimum\",void 0),MN(this,\"qualityRatio\",void 0),MN(this,\"_connectInfo\",void 0),MN(this,\"_cancelTokenSource\",kD.CancelToken.source()),MN(this,\"_retryConfig\",void 0),MN(this,\"wmSequence\",0),MN(this,\"inspectInterval\",void 0),MN(this,\"inspectTimer\",null),MN(this,\"ossFilePrefix\",void 0),MN(this,\"extraInfo\",void 0),MN(this,\"_inspectType\",void 0),MN(this,\"_inspectMode\",void 0),MN(this,\"_quality\",1),MN(this,\"qualityTimer\",null),MN(this,\"_inspectId\",void 0),MN(this,\"_needWorkUrlOnly\",!1),MN(this,\"inspectImage\",()=>{if(this.connectionState!==_B.CONNECTED)throw new QD(xD.OPERATION_ABORTED,\"content inspect service connection status is \".concat(this.connectionState));this.inspectTimer&&(window.clearInterval(this.inspectTimer),this.inspectTimer=null),this.inspectTimer=window.setInterval(()=>{if(this.connectionState!==_B.CONNECTED)return JD.debug(\"[\".concat(this._inspectId,\"] Inspect State is not connected , \"),this.connectionState),void hP(\"debug\",this,\"Inspect State is not connected , \".concat(this.connectionState));this.requestToInspectImage()},this.inspectInterval<this.inspectIntervalMinimum?this.inspectIntervalMinimum:this.inspectInterval),this.requestToInspectImage()}),this._inspectId=_K(5,\"inspect-\"),this.workerMessageLengthLimit=LP(\"VIDEO_INSPECT_WORKER_MESSAGE_LENGTH_LIMIT\"),this.inspectIntervalMinimum=LP(\"VIDEO_INSPECT_INTERVAL_MINIMUM\"),this.qualityRatio=LP(\"VIDEO_INSPECT_QUALITY_RATIO\"),this.inspectInterval=e.interval,this.ossFilePrefix=e.ossFilePrefix,this.extraInfo=e.extraInfo,this.inspectType=e.inspectType,this.inspectStartTime=Number(Date.now()),this.workerManagerConnection=new zJ(\"worker-manager-\"+this._inspectId,FD),this.on(SB.STATE_CHANGE,(e,t)=>{this._innerConnectionState=e,JD.debug(\"[\".concat(this._inspectId,\"] Inspect operation :\").concat(CB[e],\" \").concat(t||\"\")),pP(\"debug\",[\"Inspect\",this._inspectId],SB.STATE_CHANGE,\"\".concat(CB[e],\" \").concat(t||\"\"))}),this.handleWorkerManagerEvents(),this.workerConnection=new zJ(\"worker-\"+this._inspectId,FD),this.handleWorkerEvents()}async init(e,t){this.emit(SB.STATE_CHANGE,CB.CONNECT_AP),this._connectInfo=e;const i=this._cancelTokenSource.token;return this._retryConfig=t,new l_((r,n)=>{this.on(SB.CONNECTION_STATE_CHANGE,(e,t)=>{t===_B.CONNECTED&&r()}),this.requestAP(e,i,t).then(e=>{this.connectWorkerManager(e)}).catch(e=>{n(e)})})}async requestAP(e,t,i){const r=LP(\"WEBCS_DOMAIN\").map(e=>\"https://\".concat(e,\"/api/v1\")),n=await function(e,t,i,r){let{appId:n,areaCode:o,cname:s,sid:a,token:c,uid:d}=t;Nq++;const u=\"image_moderation_api\",h={service_name:u,json_body:JSON.stringify({appId:n,areaCode:o,cname:s,command:\"allocateEdge\",requestId:Nq,seq:Nq,sid:a,token:c,ts:Date.now(),uid:d+\"\"})};let A,l,p=e[0];return jD(async()=>{A=Date.now();const e=await ej(p,{data:h,cancelToken:i,headers:{\"X-Packet-Service-Type\":\"0\",\"X-Packet-URI\":\"61\"},params:{action:\"wrtc_gateway\"}});if(l=Date.now()-A,0!==e.code){const t=new QD(xD.UNEXPECTED_RESPONSE,\"image inspect ap error, code\"+e.code,{retry:!0,responseTime:l});throw JD.error(t.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestImageInspectAP\",void 0,t.toString()),t}const t=JSON.parse(e.json_body);if(200!==t.code){const e=new QD(xD.UNEXPECTED_RESPONSE,\"image inspect ap error, code: \".concat(t.code,\", reason: \").concat(t.reason),{code:t.code,responseTime:l});throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestImageInspectAP\",void 0,e.toString()),e}if(!t.servers||!Array.isArray(t.servers)||0===t.servers.length){const e=new QD(xD.UNEXPECTED_RESPONSE,\"image inspect ap empty server\",{code:t.code,responseTime:l});throw JD.error(e.toString()),gP(\"error\",[\"AjaxAPI\"],\"requestImageInspectAP\",void 0,e.toString()),e}const r=LP(\"VIDEO_INSPECT_WORKER_MANAGER_HOST\"),n=LP(\"VIDEO_INSPECT_WORKER_MANAGER_PORT\");return{addressList:t.servers.map(e=>{let{address:t,wss:i}=e;if(t&&i)return\"wss://\".concat(t.replace(/\\./g,\"-\"),\".\").concat(r,\":\").concat(n||i)}).filter(e=>!!e),workerToken:t.workerToken,vid:t.vid,responseTime:l}},(t,i)=>(pj.apworkerEvent(a,{success:!0,sc:200,serviceName:u,responseDetail:JSON.stringify(t.addressList),firstSuccess:0===i,responseTime:l,serverIp:e[i%e.length]}),!1),(t,i)=>(pj.apworkerEvent(a,{success:!1,sc:t.data&&t.data.code||200,serviceName:u,responseTime:l,serverIp:e[i%e.length]}),!!(t.code!==xD.OPERATION_ABORTED&&t.code!==xD.UNEXPECTED_RESPONSE||t.data&&t.data.retry)&&(p=e[(i+1)%e.length],!0)),r)}(r,e,t,i);this.emit(SB.STATE_CHANGE,CB.AP_CONNECTED);const{addressList:o}=n;return this.wmSequence++,o}async connectWorkerManager(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this._needWorkUrlOnly=t,this.emit(SB.STATE_CHANGE,CB.CONNECT_WORKER_MANAGER),await this.workerManagerConnection.init(e,1e4)}async connectWorker(e){await this.workerConnection.init([e])}handleWorkerManagerEvents(){this.workerManagerConnection.on(Lk.CONNECTED,async()=>{this.emit(SB.STATE_CHANGE,CB.WORKER_MANAGER_CONNECTED,this.workerManagerConnection.url),this.workerManagerConnection.sendMessage({appId:this._connectInfo.appId,cname:this._connectInfo.cname,uid:this._connectInfo.uid+\"\",sdkVersion:\"4.15.1\",sid:this._connectInfo.sid,seq:this.wmSequence,ts:Number(Date.now()),requestId:Math.floor(1e12*Math.random()),allocate:!0,clientRequest:{command:\"join\"}},!0)}),this.workerManagerConnection.on(Lk.CLOSED,()=>{this._innerConnectionState<CB.GET_WORKER_MANAGER_RESPONSE&&(JD.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is closed before connecting worker\")),pP(\"debug\",[\"Inspect\",this._inspectId],\"workerManagerConnectionClosed\"))}),this.workerManagerConnection.on(Lk.FAILED,()=>{this._innerConnectionState<CB.GET_WORKER_MANAGER_RESPONSE&&(JD.debug(\"[\".concat(this._inspectId,\"] Connecting inspect worker manager is failed before connecting worker\")),pP(\"debug\",[\"Inspect\",this._inspectId],\"workerManagerConnectionFailed\"))}),this.workerManagerConnection.on(Lk.RECONNECTING,()=>{this._innerConnectionState<CB.GET_WORKER_MANAGER_RESPONSE&&(JD.debug(\"[\".concat(this._inspectId,\"] Inspect worker manager is reconnecting before connecting worker\")),pP(\"debug\",[\"Inspect\",this._inspectId],\"workerManagerConnectionReconnecting\"))}),this.workerManagerConnection.on(Lk.ON_MESSAGE,async e=>{this.emit(SB.STATE_CHANGE,CB.GET_WORKER_MANAGER_RESPONSE);const t=this.workerManagerConnection.url;this.workerManagerConnection.close();const i=JSON.parse(e.data);if(200!==i.code)throw JD.error(\"[\".concat(this._inspectId,\"] Unexpected code \").concat(i.code,\" from worker manager\")),hP(\"error\",this,\"Unexpected code \".concat(i.code,\" from worker manager\")),new QD(xD.UNEXPECTED_RESPONSE,\"response code of worker is unexpected\",i);if(!(i.serverResponse&&i.serverResponse.portWss&&t))throw JD.error(\"[\".concat(this._inspectId,\"] Unexpected content from worker manager : \").concat(JSON.stringify(i))),hP(\"error\",this,\"Unexpected content from worker manager : \"+JSON.stringify(i)),new QD(xD.UNEXPECTED_RESPONSE,\"response content of worker is unexpected\",i);{const e=LP(\"VIDEO_INSPECT_WORKER_PORT\")||i.serverResponse.portWss,r=t.replace(/:\\d+\\/?$/,\":\".concat(e));this.emit(SB.STATE_CHANGE,CB.CONNECT_WORKER,r),this._needWorkUrlOnly?this.emit(SB.REQUEST_NEW_WORKER_URL,r):await this.connectWorker(r)}}),this.workerManagerConnection.on(Lk.WILL_RECONNECT,(e,t)=>{t(e)}),this.workerManagerConnection.on(Lk.REQUEST_NEW_URLS,(e,t)=>{this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e).catch(t)})}handleWorkerEvents(){this.workerConnection.on(Lk.CONNECTED,async()=>{this.emit(SB.STATE_CHANGE,CB.WORKER_CONNECTED,this.workerConnection.url),this.connectionState=_B.CONNECTED}),this.workerConnection.on(Lk.ON_MESSAGE,async e=>{if(e.data instanceof ArrayBuffer){const i=G0(new Uint8Array(e.data));if(LP(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")&&JD.debug(\"[\".concat(this._inspectId,\"] Response message for worker of inspect content \"),JSON.stringify(i)),200===i.code){if(Array.isArray(this.inspectType)&&1===this.inspectType.length&&\"supervise\"===this.inspectType[0])return void this.emit(SB.INSPECT_RESULT,void 0,void 0);if(i.data&&i.data.scorePorn&&i.data.scoreSexy&&i.data.scoreNeutral){var t;const e={porn:i.data.scorePorn,sexy:i.data.scoreSexy,neutral:i.data.scoreNeutral},r=cc(t=Object.keys(e)).call(t,(t,i)=>e[t]>e[i]?t:i,\"porn\"),n=Object.keys(e).find(e=>e===r);this.emit(SB.INSPECT_RESULT,n)}else this.emit(SB.INSPECT_RESULT,void 0,new QD(xD.UNEXPECTED_RESPONSE,i.code+\"\",\"There is an unexpected data on message\"))}else this.emit(SB.INSPECT_RESULT,void 0,new QD(xD.UNEXPECTED_RESPONSE,i.code+\"\",i.msg))}else JD.error(\"[\".concat(this._inspectId,\"] Unexpected message type from worker\")),hP(\"error\",this,\"Unexpected message type from worker\"),this.emit(SB.INSPECT_RESULT,void 0,new QD(xD.UNEXPECTED_RESPONSE,\"invalid worker message type\"))}),this.workerConnection.on(Lk.CLOSED,()=>{this.connectionState=_B.CLOSED}),this.workerConnection.on(Lk.FAILED,()=>{this.connectionState=_B.CLOSED}),this.workerConnection.on(Lk.RECONNECTING,()=>{this.connectionState=this.connectionState===_B.CONNECTED?_B.RECONNECTING:_B.CONNECTING}),this.workerConnection.on(Lk.WILL_RECONNECT,(e,t)=>{\"recover\"===e&&t(e),t(\"tryNext\")}),this.workerConnection.on(Lk.REQUEST_NEW_URLS,(e,t)=>{this.workerManagerConnection.close(),this.once(SB.REQUEST_NEW_WORKER_URL,t=>{e([t])}),this.requestAP(this._connectInfo,this._cancelTokenSource.token,this._retryConfig).then(e=>{this.connectWorkerManager(e,!0)}).catch(e=>{t(e)})})}static intToLong(e){return{low:e|=0,high:e>>31,unsigned:e>=0}}async requestToInspectImage(){this.sequence++;const e=wK(this,SB.CLIENT_LOCAL_VIDEO_TRACK),t={appId:this._connectInfo.appId,cname:this._connectInfo.cname,cid:this._connectInfo.cid,sid:this._connectInfo.sid,uid:this._connectInfo.uid,vid:this._connectInfo.vid};if(e){if(!e.isPlaying)return void this.emit(SB.INSPECT_RESULT,void 0,new QD(xD.INVALID_OPERATION,\"Only the track being played can be inspected\"));const i=await this.generateRequestData(e,t);this.workerConnection.sendMessage(i,!0,!0)}else this.emit(SB.INSPECT_RESULT,void 0,new QD(xD.INVALID_OPERATION,\"Only the track being published can be inspected\"))}async generateRequestData(e,t){let{appId:i,cname:r,cid:n,vid:o,sid:s,uid:a}=t;const c=Date.now(),d=await e.getCurrentFrameImage(\"image/jpeg\",this.quality),u=await m2(d,i,r),h=this.sequence+\"-\"+n+\"-\"+a+\"-\"+c+\"-\"+_K(12,\"\"),A={appId:i,cid:n,cname:r,deviceId:\"\",elapse:C2.intToLong(Number(c-this.inspectStartTime)),fileSize:u.byteLength,jpgEncryption:2,height:d.height,width:d.width,jpg:u,networkType:6,osType:7,requestId:h,sdkVersion:\"4.15.1\",sequence:this.sequence,sid:s,timestamp:C2.intToLong(c),uid:a,vid:o,service:this._inspectMode,callbackData:this.extraInfo,ossFilePrefix:this.ossFilePrefix};void 0===this.extraInfo&&delete A.callbackData,void 0===this.ossFilePrefix&&delete A.ossFilePrefix;const l=j0(A);if(l.byteLength<this.workerMessageLengthLimit){if(LP(\"SHOW_VIDEO_INSPECT_WORKER_MESSAGE\")){const e=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?I2(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):I2(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},A);delete e.jpg,JD.debug(\"[\".concat(this._inspectId,\"] Request message for worker of inspect content \"),JSON.stringify(e)),hP(\"debug\",this,\"Request message for worker of inspect content \".concat(JSON.stringify(e)))}return l}{const t=this.quality*this.qualityRatio;return this.quality=t,await this.generateRequestData(e,{appId:i,cname:r,cid:n,vid:o,sid:s,uid:a})}}close(){this._cancelTokenSource.cancel(),this._cancelTokenSource=kD.CancelToken.source(),this.workerManagerConnection&&this.workerManagerConnection.close(),this.workerConnection&&this.workerConnection.close(),this.inspectTimer&&window.clearInterval(this.inspectTimer),this.inspectTimer=null,this.connectionState=_B.CLOSED,this.emit(SB.STATE_CHANGE,CB.CLOSED)}}var S2,v2,T2,R2,y2,w2,b2,N2,O2,D2,P2,L2,k2,B2;function M2(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function U2(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?M2(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):M2(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}let x2=(S2=mP(\"AgoraRTCClient\",\"store.clientId\"),v2=Aj({report:pj}),T2=Aj(),R2=Aj(),y2=Aj({report:pj}),w2=Aj({report:pj}),b2=lj(),N2=lj({report:pj}),O2=lj({report:pj}),D2=lj({report:pj}),P2=Aj({reportResult:!0,report:pj}),L2=lj(),S2((VV((B2=class extends MD{get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._p2pChannel.getAllTracks(!0)}get uid(){return this._uid}get channelName(){return this._channelName}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}constructor(e){let t;if(super(),MN(this,\"store\",void 0),MN(this,\"_uid\",void 0),MN(this,\"_channelName\",void 0),MN(this,\"_uintUid\",void 0),MN(this,\"_users\",[]),MN(this,\"_codec\",void 0),MN(this,\"_mode\",void 0),MN(this,\"_config\",void 0),MN(this,\"_clientId\",void 0),MN(this,\"_appId\",void 0),MN(this,\"_sessionId\",null),MN(this,\"_key\",void 0),MN(this,\"_joinInfo\",void 0),MN(this,\"_gateway\",void 0),MN(this,\"_statsCollector\",void 0),MN(this,\"_configDistribute\",void 0),MN(this,\"_leaveMutex\",new fj(\"client-leave\")),MN(this,\"_publishMutex\",new fj(\"client-publish\")),MN(this,\"_renewTokenMutex\",new fj(\"client-renewtoken\")),MN(this,\"_subscribeMutex\",new fj(\"client-subscribe\")),MN(this,\"_encryptionMode\",\"none\"),MN(this,\"_encryptionSecret\",null),MN(this,\"_encryptionSalt\",null),MN(this,\"_proxyServer\",void 0),MN(this,\"_turnServer\",{servers:[],mode:\"auto\"}),MN(this,\"_cloudProxyServerMode\",\"disabled\"),MN(this,\"_isDualStreamEnabled\",!1),MN(this,\"_defaultStreamFallbackType\",void 0),MN(this,\"_lowStreamParameter\",void 0),MN(this,\"_streamFallbackTypeCacheMap\",new Map),MN(this,\"_remoteStreamTypeCacheMap\",new Map),MN(this,\"_axiosCancelSource\",kD.CancelToken.source()),MN(this,\"_audioVolumeIndicationInterval\",void 0),MN(this,\"_networkQualityInterval\",void 0),MN(this,\"_userOfflineTimeout\",void 0),MN(this,\"_streamRemovedTimeout\",void 0),MN(this,\"_injectStreamingClient\",void 0),MN(this,\"_liveTranscodeStreamingClient\",void 0),MN(this,\"_liveRawStreamingClient\",void 0),MN(this,\"_channelMediaRelayClient\",void 0),MN(this,\"_networkQualitySensitivity\",\"normal\"),MN(this,\"_p2pChannel\",void 0),MN(this,\"_useLocalAccessPoint\",!1),MN(this,\"_setLocalAPVersion\",void 0),MN(this,\"_joinAndNotLeaveYet\",!1),MN(this,\"_numberOfJoinCount\",0),MN(this,\"_remoteDefaultVideoStreamType\",void 0),MN(this,\"_inspect\",void 0),MN(this,\"_license\",void 0),MN(this,\"_handleLocalTrackEnable\",(e,t,i)=>{this.publish(e,!1).then(t).catch(i)}),MN(this,\"_handleLocalTrackDisable\",(e,t,i)=>{this.unpublish(e).then(t).catch(i)}),MN(this,\"_handleUserOnline\",e=>{this.isStringUID&&\"string\"!=typeof e.uid&&(JD.error(\"[\".concat(this._clientId,\"] StringUID is Mixed with UintUID\")),hP(\"error\",this,\"StringUID is Mixed with UintUID\"));const t=this._users.find(t=>t.uid===e.uid);if(t)t._trust_in_room_=!0;else{const t=new gz(e.uid,e.uint_id||e.uid);this._users.push(t),JD.debug(\"[\".concat(this._clientId,\"] user online\"),e.uid),lP(\"info\",this,\"user-joined\",{uid:e.uid}),this.emit(pk.USER_JOINED,t)}}),MN(this,\"_handleUserOffline\",e=>{const t=this._users.find(t=>t.uid===e.uid);t&&(this._handleRemoveStream(e),NK(this._users,t),this._remoteStreamTypeCacheMap.delete(t.uid),this._streamFallbackTypeCacheMap.delete(t.uid),JD.debug(\"[\".concat(this._clientId,\"] user offline\"),e.uid,\"reason:\",e.reason),lP(\"info\",this,\"user-left\",{reason:e.reason,uid:e.uid}),this.emit(pk.USER_LEAVED,t,e.reason))}),MN(this,\"_handleAddAudioOrVideoStream\",(e,t,i,r,n,o,s)=>{const a=this._users.find(e=>e.uid===t);if(!a)return JD.error(\"[\".concat(this._clientId,\"] can not find target user!(on_add_stream)\")),void AP(\"error\",[\"AgoraRTCGateway\",this._clientId],\"add_\".concat(e,\"_stream\"),\"can not find target user!\");JD.debug(\"[\".concat(this._clientId,\"] stream added with uid \").concat(t,\", type \").concat(e)),AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"add_\".concat(e,\"_stream\"),{uid:t,mediaType:e}),this.store.subscribe(a.uid,e,void 0,void 0,void 0,Date.now());const c=\"audio\"===e?a.hasAudio:a.hasVideo;a._uintid||(a._uintid=n||t),\"audio\"===e?a._trust_audio_stream_added_state_=!0:a._trust_video_stream_added_state_=!0,\"audio\"===e?(a._audio_added_=!0,void 0!==i&&(a._audioSSRC=i),void 0!==r&&(a._cname=r),o&&(a._audioOrtc=o)):(a._video_added_=!0,void 0!==i&&(a._videoSSRC=i),void 0!==r&&(a._cname=r),void 0!==s&&(a._rtxSsrcId=s),o&&(a._videoOrtc=o)),(\"audio\"===e?a.hasAudio:a.hasVideo)&&!c&&(JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(a.uid,\" published \").concat(e)),hP(\"info\",this,\"remote user \".concat(a.uid,\" published \").concat(e)),lP(\"info\",this,\"user-published\",{uid:a.uid,mediaType:e}),this.emit(pk.USER_PUBLISHED,a,e)),\"video\"===e?pj.onGatewayStream(this._sessionId,$L.ON_ADD_VIDEO_STREAM,ek.ON_ADD_VIDEO_STREAM,{peer:n||t}):pj.onGatewayStream(this._sessionId,$L.ON_ADD_AUDIO_STREAM,ek.ON_ADD_AUDIO_STREAM,{peer:n||t}),this._p2pChannel.remoteMediaSsrcChanged(a,e,i).then(t=>{if(t)return JD.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after rejoin because SSRC id changed.\")),this._p2pChannel.unsubscribe(a,e,!0).then(()=>this._subscribe(a,e,!0).catch(e=>{JD.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString()),hP(\"error\",this,\"resubscribe error: \".concat(e.toString()))}))}),this._p2pChannel.hasPendingRemoteMedia(a,e)&&(JD.debug(\"[\".concat(this._clientId,\"] resubscribe \").concat(e,\" for user \").concat(a.uid,\" after reconnect.\")),this._subscribe(a,e,!0).catch(e=>{JD.error(\"[\".concat(this._clientId,\"] resubscribe error\"),e.toString()),hP(\"error\",this,\"resubscribe error: \".concat(e.toString()))}))}),MN(this,\"_handleRemoveStream\",e=>{const t=this._users.find(t=>t.uid===e.uid);if(!t)return JD.warning(\"[\".concat(this._clientId,\"] can not find target user!(on_remove_stream)\")),void AP(\"warning\",[\"AgoraRTCGateway\",this._clientId],\"remove_stream\",{uid:e.uid,info:\"can not find target user!\"});JD.debug(\"[\".concat(this._clientId,\"] stream removed with uid \").concat(e.uid)),AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"remove_stream\",{uid:e.uid});let i=()=>{};t.hasAudio&&t.hasVideo?i=()=>{JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),lP(\"info\",this,\"user-unpublished\",{uid:t.uid,mediaType:\"audio\"}),this.emit(pk.USER_UNPUBLISHED,t,\"audio\"),JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),lP(\"info\",this,\"user-unpublished\",{uid:t.uid,mediaType:\"video\"}),this.emit(pk.USER_UNPUBLISHED,t,\"video\")}:t.hasVideo?i=()=>{JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished video track\")),lP(\"info\",this,\"user-unpublished\",{uid:t.uid,mediaType:\"video\"}),this.emit(pk.USER_UNPUBLISHED,t,\"video\")}:t.hasAudio&&(i=()=>{JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t.uid,\" unpublished audio track\")),lP(\"info\",this,\"user-unpublished\",{uid:t.uid,mediaType:\"audio\"}),this.emit(pk.USER_UNPUBLISHED,t,\"audio\")}),t._trust_audio_stream_added_state_=!0,t._trust_video_stream_added_state_=!0,t._audio_added_=!1,t._video_added_=!1,this._p2pChannel.unsubscribe(t).then(e=>{if(e)return this._gateway.unsubscribe(e,t.uid)}),t._audioSSRC=void 0,t._videoSSRC=void 0,t._audioOrtc=void 0,t._videoOrtc=void 0,t._rtxSsrcId=void 0,pj.onGatewayStream(this._sessionId,$L.ON_REMOVE_STREAM,ek.ON_REMOVE_STREAM,{peer:e.uint_id||e.uid}),i()}),MN(this,\"_handleSetStreamLocalEnable\",(e,t,i)=>{const r=this._users.find(e=>e.uid===t);if(!r)return JD.error(\"[\".concat(this._clientId,\"] can not find target user!(disable_local)\")),void AP(\"error\",this,\"disable_local_video\",\"can not find target user!(disable_local)\");JD.debug(\"[\".concat(this._clientId,\"] local \").concat(e,\" \").concat(i?\"enabled\":\"disabled\",\" with uid \").concat(t)),AP(\"debug\",this,\"disable_local_video\",\"local \".concat(e,\" \").concat(i?\"enabled\":\"disabled\",\" with uid \").concat(t));const n=\"audio\"===e?r.hasAudio:r.hasVideo;if(\"audio\"===e){r._trust_audio_enabled_state_=!0;const e=r._audio_enabled_;if(r._audio_enabled_=i,r._audio_enabled_===e)return;{const e=r._audio_enabled_?\"enable-local-audio\":\"disable-local-audio\";JD.debug(\"[\".concat(this._clientId,\"] user-info-updated, uid: \").concat(t,\", msg: \").concat(e)),fP(\"debug\",this,\"user-info-updated\",{uid:t,msg:e}),this.emit(pk.USER_INFO_UPDATED,t,e)}}else{r._trust_video_enabled_state_=!0;const e=r._video_enabled_;if(r._video_enabled_=i,r._video_enabled_===e)return;{const e=r._video_enabled_?\"enable-local-video\":\"disable-local-video\";JD.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(t,\", msg: \").concat(e)),fP(\"debug\",this,\"user-info-updated\",{uid:t,msg:e}),this.emit(pk.USER_INFO_UPDATED,t,e)}}const o=\"audio\"===e?r.hasAudio:r.hasVideo;return n!==o?!n&&o?(JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" published \").concat(e)),lP(\"info\",this,\"user-published\",{uid:t,mediaType:e}),void this.emit(pk.USER_PUBLISHED,r,e)):(\"video\"===e&&r._videoTrack&&r._videoTrack._destroy(),\"audio\"===e&&r._audioTrack,this._p2pChannel.muteRemote(r,e),JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(t,\" unpublished \").concat(e)),lP(\"info\",this,\"user-unpublished\",{uid:t,mediaType:e}),void this.emit(pk.USER_UNPUBLISHED,r,e)):void 0}),MN(this,\"_handleMuteStream\",(e,t,i)=>{JD.debug(\"[\".concat(this._clientId,\"] receive mute message\"),e,t,i),AP(\"debug\",this,\"mute_\".concat(t),i);const r=this._users.find(t=>t.uid===e);if(!r)return JD.warning(\"[\".concat(this._clientId,\"] can not find remote user, ignore mute event, uid: \").concat(e)),void AP(\"warning\",this,\"mute_\".concat(t),\"can not find remote user, ignore mute event, uid: \".concat(e));const n=\"audio\"===t?r.hasAudio:r.hasVideo;if(\"audio\"===t){r._trust_audio_mute_state_=!0;const t=r._audio_muted_;if(r._audio_muted_=i,r._audio_muted_===t)return;{const t=r._audio_muted_?\"mute-audio\":\"unmute-audio\";JD.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),fP(\"debug\",this,\"user-info-updated\",{uid:e,msg:t}),this.emit(pk.USER_INFO_UPDATED,e,t)}}else{r._trust_video_mute_state_=!0;const t=r._video_muted_;if(r._video_muted_=i,r._video_muted_===t)return;{const t=r._video_muted_?\"mute-video\":\"unmute-video\";JD.debug(\"[\".concat(this._clientId,\"] user-info-update, uid: \").concat(e,\", msg: \").concat(t)),fP(\"debug\",this,\"user-info-updated\",{uid:e,msg:t}),this.emit(pk.USER_INFO_UPDATED,e,t)}}const o=\"audio\"===t?r.hasAudio:r.hasVideo;if(n!==o){if(!n&&o){return(\"audio\"===t?r._audioSSRC:r._videoSSRC)?(JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" published \").concat(t)),lP(\"info\",this,\"user-published\",{uid:r.uid,mediaType:t}),void this.emit(pk.USER_PUBLISHED,r,t)):void JD.warning(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" receive \").concat(t,\" unmute message  before add stream message, \").concat(t,\" SSRC doesn't exist yet.\"))}\"video\"===t&&r._videoTrack&&r._videoTrack._destroy(),\"audio\"===t&&r._audioTrack,this._p2pChannel.muteRemote(r,t),JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(e,\" unpublished \").concat(t)),lP(\"info\",this,\"user-unpublished\",{uid:e,mediaType:t}),this.emit(pk.USER_UNPUBLISHED,r,t)}}),MN(this,\"_handleP2PLost\",async e=>{if(JD.debug(\"[\".concat(this._clientId,\"] receive p2p lost\"),e),AP(\"debug\",this,\"p2p_lost\",e),parseInt(e.p2pid,10)!==this.store.p2pId)return JD.warning(\"P2PLost stream not found\",e),void AP(\"warning\",this,\"p2p_lost\",\"P2PLost stream not found, \".concat(e));await this._p2pChannel.requestReconnect()}),MN(this,\"_handleTokenWillExpire\",()=>{JD.debug(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeWillExpire\")),AP(\"debug\",this,\"token_privilege_will_expire\"),this.emit(pk.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)}),MN(this,\"_handleBeforeUnload\",e=>{\"beforeunload\"===e.type&&void 0!==e.returnValue&&\"\"!==e.returnValue||(this.leave(),JD.info(\"[\".concat(this._clientId,\"] auto leave onbeforeunload or pagehide\")),pP(\"info\",[\"window\",this.store.clientId],pN()?\"beforeunload\":\"pagehide\"))}),MN(this,\"_handleUpdateNetworkQuality\",()=>{if(\"normal\"===this._networkQualitySensitivity)return;if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.emit(pk.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});const e={downlinkNetworkQuality:0,uplinkNetworkQuality:0};e.uplinkNetworkQuality=this._p2pChannel.getUplinkNetworkQuality(),e.downlinkNetworkQuality=this._p2pChannel.getDownlinkNetworkQuality(),this.emit(pk.NETWORK_QUALITY,e)}),this._codec=e.codec,this._mode=e.mode,this._clientId=_K(5,\"client-\"),this.store=new x0(e.codec,e.audioCodec,e.mode,this._clientId),this.store.clientCreated(),e.proxyServer&&this.setProxyServer(e.proxyServer,!0),e.turnServer&&this.setTurnServer(e.turnServer,!0),JD.info(\"[\".concat(this._clientId,\"] Initializing AgoraRTC client v\").concat(CP,\" build: \").concat(_P,\", mode: \").concat(this._mode,\", codec: \").concat(this._codec)),fP(\"info\",this,\"constructor\",{version:CP,build:_P,mode:this._mode,codec:this._codec}),e.clientRoleOptions)try{wk(e.clientRoleOptions),t=Object.assign({},e.clientRoleOptions)}catch(e){JD.warning(\"[\".concat(this._clientId,\"] \").concat(e.toString())),hP(\"warning\",this,e.toString())}this._statsCollector=new iK(this.store),this._statsCollector.onStatsException=(e,t,i)=>{JD.debug(\"[\".concat(this._clientId,\"] receive exception msg, code: \").concat(e,\", msg: \").concat(t,\", uid: \").concat(i)),lP(\"debug\",this,pk.EXCEPTION,{code:e,message:t,uid:i}),this.emit(pk.EXCEPTION,{code:e,msg:t,uid:i})},this._statsCollector.onUploadPublishDuration=(e,t,i,r)=>{const n=this._users.find(t=>t.uid===e);n&&pj.peerPublishStatus(this._sessionId,{subscribeElapse:r,audioPublishDuration:t,videoPublishDuration:i,peer:n._uintid})},this._gateway=new Eq(this.store,{clientId:this._clientId,mode:this._mode,codec:this._codec,websocketRetryConfig:e.websocketRetryConfig||FD,httpRetryConfig:e.httpRetryConfig||FD,forceWaitGatewayResponse:void 0===e.forceWaitGatewayResponse||e.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:e.role,clientRoleOptions:t}),this._config=e,this._configDistribute=new Yq,this._p2pChannel=new w0(this.store,this._statsCollector),this._handleP2PChannelEvents(),this._handleGatewayEvents(),this._handleGatewaySignalEvents()}async join(e,t,i,r,n){const o=++this._numberOfJoinCount;this.store.joinStart(),r&&(this.store.uid=r);const s=F0(),a=V0()?window.isSecureContext:\"Browser Not Support\";if(!V0()&&!s||!window.isSecureContext){const e=\"The website must be running in a secure context (About secure context: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts ), otherwise the media collection will be restricted by the browser\";JD.warning(e),gP(\"warning\",this,e)}const c=CK();\"DISCONNECTED\"===this.connectionState&&(this.store.avoidJoinStart=Math.round(Date.now()),JD.debug(\"[\".concat(this._clientId,\"] set avoidJoinStart to \").concat(this.store.avoidJoinStart)),gP(\"debug\",this,\"join\",void 0,\"[\".concat(this._clientId,\"] set avoidJoinStart to \").concat(this.store.avoidJoinStart)));const d=pj.reportApiInvoke(c,{name:rk.JOIN,options:[e,t,i,r],states:{isHttps:s,isSecureContext:a},tag:nk.TRACER});pj.setAppId(e);try{if(!i&&null!==i)throw new QD(xD.INVALID_PARAMS,\"Invalid token: \".concat(i,\". If you don not use token, set it to null\"));i&&QL(i,\"token\",1,2047),QL(e,\"appid\",1,2047),VL(t),r&&jL(r),n&&QL(n,\"optionalInfo\",1,2047)}catch(e){throw d.onError(e),e}if(JD.info(\"[\".concat(this._clientId,\"] start join channel \").concat(t,\", join number: \").concat(o)),fP(\"info\",this,\"join\",{channel:t}),this._leaveMutex.isLocked){JD.debug(\"[\".concat(this._clientId,\"] join: waiting leave operation\")),hP(\"debug\",this,\"join: waiting leave operation\");(await this._leaveMutex.lock())(),JD.debug(\"[\".concat(this._clientId,\"] join: continue\")),hP(\"debug\",this,\"join: continue\")}if(this._joinAndNotLeaveYet=!0,\"DISCONNECTED\"!==this.connectionState){const e=new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already in connecting/connected state\"));throw d.onError(e),e}this._sessionId||(this._sessionId=c,this.store.sessionId=this._sessionId),this._gateway.state=\"CONNECTING\";const u=U2({clientId:this._clientId,appId:e,sid:this._sessionId,cname:t,uid:\"string\"!=typeof r?r:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:i||e,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:n,license:this._license,useLocalAccessPoint:this._useLocalAccessPoint},void 0!==this._remoteDefaultVideoStreamType&&{defaultVideoStream:this._remoteDefaultVideoStreamType});if(this._useLocalAccessPoint&&(u.setLocalAPVersion=this._setLocalAPVersion),\"string\"==typeof r&&(u.stringUid=r,this._uintUid?(u.uid=this._uintUid,this._uintUid=void 0):u.uid=0),\"none\"!==this._encryptionMode&&this._encryptionSecret){if(u.aesmode=this._encryptionMode,u.aespassword=await(async e=>{const t=BK(\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCMnXAHkKIGAM+x4N22gCI+Wyu\\nSTM9ztkT3uYslTT2PuKmZfPzhH6kVdO7PTjGCOZnAsyb3oTtWat0KcxQ4jxvqQV+\\nHvYl3iI1Yd4vl2c3qRMJPLtRDfNxa2Mcxgq7e9aEUibzdd0st+OJAy3tOj/Y0aVy\\nxQiYDz3vqa6bP29adwIDAQAB\"),i=await window.crypto.subtle.importKey(\"spki\",t,{name:\"RSA-OAEP\",hash:\"SHA-256\"},!0,[\"encrypt\"]),r=sj(e),n=await window.crypto.subtle.encrypt({name:\"RSA-OAEP\"},i,r);return MK(new Uint8Array(n))})(this._encryptionSecret),!this._joinAndNotLeaveYet)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this._encryptionSalt&&(u.aessalt=this._encryptionSalt)}this._startSession(this._sessionId,{channel:t,appId:e});const h=this._sessionId;setTimeout(()=>{\"CONNECTING\"===this.connectionState&&h===this._sessionId&&pj.joinChannelTimeout(this._sessionId,5)},5e3);try{let r;const n=u.cloudProxyServer;if([\"proxy3\",\"proxy4\",\"proxy5\"].includes(n)){const e=LP(\"PROXY_SERVER_TYPE3\");Array.isArray(e)?u.proxyServer=e[0]:u.proxyServer=e}if(pj.setProxyServer(u.proxyServer),JD.setProxyServer(u.proxyServer),uP(u.proxyServer),this.store.requestAPStart(),u.stringUid&&!u.uid){const e=await xq(u.stringUid,u,this._axiosCancelSource.token,this._config.httpRetryConfig||FD,this.store);JD.debug(\"getUserAccount Success \".concat(u.stringUid,\" => \").concat(e)),hP(\"debug\",this,\"getUserAccount Success \".concat(u.stringUid,\" => \").concat(e)),u.uid=e,r=await Uq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||FD,!0,this.store)}else r=await Uq(u,this._axiosCancelSource.token,this._config.httpRetryConfig||FD,!0,this.store);if(!this._joinAndNotLeaveYet)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));this.store.requestAPEnd(),setTimeout(()=>{this._configDistribute.startGetConfigDistribute(u,this._axiosCancelSource.token),this._configDistribute.on(uB.UPDATE_BITRATE_LIMIT,e=>{this._p2pChannel.updateBitrateLimit(e)})},0),this._key=i||e;const o=r.gatewayInfo;this._joinInfo=U2(U2({},u),{},{cid:o.cid,uid:u.uid?u.uid:o.uid,vid:o.vid,apResponse:o.res,uni_lbs_ip:o.uni_lbs_ip,gatewayAddrs:o.gatewayAddrs});const s=await this._joinGateway();if(!this._joinAndNotLeaveYet)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client already left\"));return d.onSuccess(s),this._appId=e,this._channelName=u.cname,this._uid=s,this.store.uid=s,setTimeout(()=>{this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2e3),window.addEventListener(pN()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload)},0),JD.info(\"[\".concat(this._clientId,\"] Joining channel success: \").concat(t)),fP(\"info\",this,\"join\",t,\"success\"),setTimeout(()=>{LP(\"USE_NEW_LOG\")?IP():JD.startUpload()},5e3),this.store.joinEnd(),A=this,VP.includes(A)||VP.push(A),s}catch(e){const i=Array.isArray(e)?e[0]:e;throw JD.error(\"[\".concat(this._clientId,\"] join number: \").concat(o,\", Joining channel failed, rollback\"),i),fP(\"error\",this,\"join\",t,i.toString()),i.code!==xD.OPERATION_ABORTED&&this._numberOfJoinCount===o&&(this._gateway.state=\"DISCONNECTED\",this._reset()),d.onError(i),i}var A}_joinGateway(){if(!this._joinInfo||!this._key)throw new QD(xD.INVALID_OPERATION);return this._gateway.join(this._joinInfo,this._key,!(\"disabled\"!==this._joinInfo.cloudProxyServer||this._joinInfo.proxyServer||!LP(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\"))).then(e=>e).catch(e=>{if(e.code===xD.INIT_WEBSOCKET_TIMEOUT)return this._gateway.leave(!0,lk.FALLBACK),e;if(e.code===xD.INIT_DATACHANNEL_TIMEOUT)return this._gateway.leave(!0,lk.FALLBACK),e;throw e}).then(e=>{if(e instanceof QD){if(e.code===xD.INIT_WEBSOCKET_TIMEOUT){if(JD.info(\"[\".concat(this._clientId,\"] join timeout, fallback to proxy\")),!this._joinInfo||!this._key)throw new QD(xD.INVALID_OPERATION);this._joinInfo.cloudProxyServer=\"fallback\",this._cloudProxyServerMode=\"fallback\",this.store.cloudProxyServerMode=\"fallback\";const e=LP(\"PROXY_SERVER_TYPE3\");if(Array.isArray(e))if(this._joinInfo.apUrl){const t=new DJ(this._joinInfo.apUrl).host.split(\".\"),i=t.slice(t.length-2).join(\".\");e.forEach(e=>{this._joinInfo&&e.includes(i)&&(this._joinInfo.proxyServer=e)}),this._joinInfo.proxyServer||(this._joinInfo.proxyServer=e[0])}else this._joinInfo.proxyServer=e[0];else this._joinInfo.proxyServer=e;const t=LP(\"LOG_UPLOAD_SERVER\").match(/.+:(\\d{1,5})$/);t&&t[1]&&\"443\"!==t[1]&&(JD.setProxyServer(this._joinInfo.proxyServer),uP(this._joinInfo.proxyServer)),\"443\"!==LP(\"STATS_COLLECTOR_PORT\").toString()&&pj.setProxyServer(this._joinInfo.proxyServer);return pj.reportApiInvoke(this._sessionId,{name:rk.JOIN_FALLBACK_TO_PROXY,options:[this._joinInfo.proxyServer],tag:nk.TRACER}).onSuccess(),this.emit(pk.JOIN_FALLBACK_TO_PROXY,this._joinInfo.proxyServer),this._gateway.join(this._joinInfo,this._key)}if(JD.info(\"[\".concat(this._clientId,\"] join by datachannel timeout, fallback to websocket\")),!this._joinInfo||!this._key)throw new QD(xD.INVALID_OPERATION);return pj.reportApiInvoke(this._sessionId,{name:rk.DATACHANNEL_FAILBACK,options:[this.store.clientId],tag:nk.TRACER}).onSuccess(),this._joinGateway()}return e}).then(e=>e)}async leave(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.LEAVE,options:[],tag:nk.TRACER});JD.info(\"[\".concat(this._clientId,\"] Leaving channel\")),fP(\"info\",this,\"leave\"),window.removeEventListener(pN()?\"beforeunload\":\"pagehide\",this._handleBeforeUnload),this._reset(),function(e){const t=VP.indexOf(e);-1!==t&&VP.splice(t,1)}(this);const t=await this._leaveMutex.lock();if(\"DISCONNECTED\"===this.connectionState)return JD.info(\"[\".concat(this._clientId,\"] Leaving channel repeated, success\")),t(),e.onSuccess();await this._gateway.leave(\"CONNECTED\"!==this.connectionState),JD.info(\"[\".concat(this._clientId,\"] Leaving channel success\")),fP(\"info\",this,\"leave\",void 0,\"success\"),this._joinAndNotLeaveYet=!1,this.store.resetJoinChannelServiceRecords(),t(),e.onSuccess()}async publish(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];Array.isArray(e)||(e=[e]);const i=pj.reportApiInvoke(this._sessionId,{name:rk.PUBLISH,options:e.map(e=>e?Object(e).toString():\"null\"),tag:nk.TRACER});if(0===e.length){const e=new QD(xD.INVALID_PARAMS,\"track list is empty\");return i.onError(e),e.throw()}if(\"audience\"===this._gateway.role){const e=new QD(xD.INVALID_OPERATION,\"audience can not publish stream\");return i.onError(e),e.throw()}for(const r of e){if(!(r instanceof Ij)){const e=new QD(xD.INVALID_PARAMS,\"parameter is not local track\");return i.onError(e),e.throw()}if(!r._enabled&&t){const e=new QD(xD.TRACK_IS_DISABLED,\"can not publish a disabled track: \".concat(r.getTrackId()));return i.onError(e),e.throw()}}JD.info(\"[\".concat(this._clientId,\"] Publishing tracks, id \").concat(e.map(e=>\"\".concat(e.getTrackId(),\" \")))),fP(\"info\",this,\"publish\",e.map(e=>\"\".concat(e.getTrackId()))),await this._configDistribute.awaitConfigDistributeComplete(),t&&e.forEach(e=>{const t=this._configDistribute.getBitrateLimit();e instanceof lz&&t&&e.setBitrateLimit(t.uplink)});const r=await this._publishMutex.lock();try{await this._publishHighStream(e),i.onSuccess(e.map(e=>e.trackMediaType+\":\"+e.getTrackLabel()).toString()),JD.info(\"[\".concat(this._clientId,\"] Publish success, id \").concat(e.map(e=>\"\".concat(e.getTrackId(),\" \")))),fP(\"info\",this,\"publish\",e.map(e=>\"\".concat(e.getTrackId())),\"success\")}catch(e){throw i.onError(e),JD.error(\"[\".concat(this._clientId,\"] publish error\"),e.toString()),fP(\"error\",this,\"publish\",void 0,e.toString()),e}finally{r()}}async unpublish(e){if(!this._joinInfo||void 0===this._uid)throw new QD(xD.INVALID_OPERATION,\"Can't unpublish stream, haven't joined yet!\");e?Array.isArray(e)||(e=[e]):e=this._p2pChannel.getAllTracks(!0);const t=pj.reportApiInvoke(this._sessionId,{name:rk.UNPUBLISH,options:e.map(e=>e.getTrackId()),tag:nk.TRACER});JD.info(\"[\".concat(this._clientId,\"] Unpublish tracks, tracks \").concat(e.map(e=>\"\".concat(e.getTrackId(),\" \")),\" \")),fP(\"info\",this,\"unpublish\",e.map(e=>\"\".concat(e.getTrackId())));const i=await this._publishMutex.lock();try{const r=await this._p2pChannel.unpublish(e);r&&await this._gateway.unpublish(r,this._uid),JD.info(\"[\".concat(this._clientId,\"] Unpublish success,tracks \").concat(e.map(e=>\"\".concat(e.getTrackId())))),fP(\"info\",this,\"unpublish\",e.map(e=>\"\".concat(e.getTrackId())),\"success\"),t.onSuccess()}catch(e){throw t.onError(e),JD.error(\"[\".concat(this._clientId,\"] unpublish error\"),e.toString()),fP(\"error\",this,\"unpublish\",void 0,e.toString()),e}finally{i&&i()}}async subscribe(e,t){return this._subscribe(e,t)}async _subscribe(e,t,i){ML(t,\"mediaType\",[\"audio\",\"video\"]);const r=pj.reportApiInvoke(this._sessionId,{name:rk.SUBSCRIBE,options:[e.uid,t],tag:nk.TRACER});if(!this._joinInfo){const e=new QD(xD.INVALID_OPERATION,\"Can't subscribe stream, not joined\");throw r.onError(e),e}if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState){const e=new QD(xD.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));throw r.onError(e),e}if(!this._users.find(t=>t===e)){const t=new QD(xD.INVALID_REMOTE_USER,\"user is not in the channel\");throw JD.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", this user is not in the channel\")),fP(\"error\",this,\"subscribe\",e.uid,\"this user is not in the channel\"),r.onError(t),t}if(!e.hasAudio&&!e.hasVideo){const t=new QD(xD.INVALID_REMOTE_USER,\"user is not published\");throw JD.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\", user is not published\")),fP(\"error\",this,\"subscribe\",e.uid,\"this user is not published\"),r.onError(t),t}if(!(i||(\"audio\"!==t||e.hasAudio&&void 0!==e._audioSSRC)&&(\"video\"!==t||e.hasVideo&&void 0!==e._videoSSRC))){const i=new QD(xD.REMOTE_USER_IS_NOT_PUBLISHED);throw JD.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(e.uid,\" with mediaType \").concat(t,\", remote track is not published\")),fP(\"error\",this,\"subscribe\",e.uid,\"mediaType \".concat(t,\", remote track is not published\")),r.onError(i),i}const n=\"audio\"===t?e._audioSSRC:e._videoSSRC,o=\"audio\"===t?e._audioOrtc:e._videoOrtc,s=\"video\"===t?e._rtxSsrcId:void 0,a={stream_type:\"audio\"===t?AB.AUDIO:AB.VIDEO,ssrcId:n},c=await this._subscribeMutex.lock();JD.info(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\", mediaType: \").concat(t)),fP(\"info\",this,\"subscribe\",{uid:e.uid,mediaType:t});try{if(await this._p2pChannel.hasRemoteMediaWithLock(e,t))await this._p2pChannel.unmuteRemote(e,t);else try{$G.markSubscribeStart(this.store.clientId,n),this.store.subscribe(e.uid,t,Date.now()),await this._p2pChannel.subscribe(e,t,n,s,o);try{await this._gateway.subscribe(e.uid,a,!0)}catch(i){if((null==i?void 0:i.code)!==xD.WS_ABORT)throw await this._p2pChannel.unsubscribe(e,t),i;await this._p2pChannel.unsubscribe(e,t,!0),this._p2pChannel.setPendingRemoteMedia(e,t)}this.store.subscribe(e.uid,t,void 0,Date.now()),this._p2pChannel.reportSubscribeEvent(!0,null,e,t)}catch(i){throw this._p2pChannel.reportSubscribeEvent(!1,null==i?void 0:i.code,e,t),i}JD.info(\"[\".concat(this._clientId,\"] subscribe success user \").concat(e.uid,\", mediaType: \").concat(t)),fP(\"info\",this,\"subscribe\",{uid:e.uid,mediaType:t},\"success\"),this._defaultStreamFallbackType&&this.setStreamFallbackOption(e.uid,this._defaultStreamFallbackType).catch(e=>{JD.warning(\"[\".concat(this._clientId,\"] auto set fallback failed\"),e),hP(\"warning\",this,\"auto set fallback failed, \".concat(e.toString()))});const i=\"audio\"===t?e._audioTrack:e._videoTrack;if(!i){const e=new QD(xD.UNEXPECTED_ERROR,\"can not find remote track in user object\");return r.onError(e),e.throw()}return r.onSuccess(i.getTrackId()),i}catch(i){throw r.onError(i),JD.error(\"[\".concat(this._clientId,\"] subscribe user \").concat(e.uid,\" error\"),i),fP(\"error\",this,\"subscribe\",{uid:e.uid,mediaType:t},i.toString()),i}finally{c()}}async massSubscribe(e){FL(e,\"subscribeList\");const t=pj.reportApiInvoke(this._sessionId,{name:rk.MASS_SUBSCRIBE,options:e.map(e=>{let{user:t,mediaType:i}=e;return[null==t?void 0:t.uid,i]}),tag:nk.TRACER});if(!this._joinInfo){const e=new QD(xD.INVALID_OPERATION,\"Can't subscribe stream, not joined\");throw t.onError(e),e}if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState){const e=new QD(xD.INVALID_OPERATION,\"Can't subscribe stream in \".concat(this.connectionState,\" state\"));throw t.onError(e),e}const i=Date.now(),r=new Map,n=await this._subscribeMutex.lock();JD.info(\"[\".concat(this._clientId,\"]start massSubscribe user \").concat(e.map(e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)}).join(\"; \"))),fP(\"info\",this,\"massSubscribe\",e);const o=(e=[...e]).map(e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i}}),s=await this._p2pChannel.globalLock();try{var a;for(let i=e.length-1;i>=0;i--){const n=e[i],{user:s,mediaType:a}=n;if(ML(a,\"mediaType\",[\"audio\",\"video\"]),!s){const e=new QD(xD.INVALID_PARAMS,\"user property does not exist in subscribeList item\");throw JD.error(\"[\".concat(this._clientId,\"] user property does not exist in subscribeList item\")),t.onError(e),e}if(!this._users.find(e=>e===s)){const t=new QD(xD.INVALID_REMOTE_USER,\"user is not in the channel\");JD.error(\"[\".concat(this._clientId,\"] can not massSubscribe \").concat(s.uid,\", this user is not in the channel\")),fP(\"error\",this,\"massSubscribe\",s.uid,\"this user is not in the channel\"),o[i].error=t,e.splice(i,1);continue}if(\"audio\"===a&&(!s.hasAudio||void 0===s._audioSSRC)||\"video\"===a&&(!s.hasVideo||void 0===s._videoSSRC)){const t=new QD(xD.REMOTE_USER_IS_NOT_PUBLISHED);JD.error(\"[\".concat(this._clientId,\"] can not subscribe \").concat(s.uid,\" with mediaType \").concat(a,\", remote user is not published\")),fP(\"error\",this,\"subscribe\",s.uid,\"mediaType \".concat(a,\", remote user is not published\")),o[i].error=t,e.splice(i,1);continue}const c=zk.Video|zk.LwoVideo,d=r.get(s);if(d){if(\"video\"===a?d&c:d&zk.Audio){e.splice(i,1),JD.warning(\"repeat massSubscribe user:\".concat(s.uid,\", mediaType:\").concat(a,\" twice\"));continue}r.set(s,d|(\"video\"===a?c:zk.Audio))}else r.set(s,\"video\"===a?c:zk.Audio)}for(let t=e.length-1;t>=0;t--){const i=e[t],{user:n,mediaType:o}=i,s=zk.Video|zk.LwoVideo;if(this._p2pChannel.hasRemoteMedia(n,o)){await this._p2pChannel.unmuteRemoteNoLock(n,o);const i=r.get(n);r.set(n,\"video\"===o?i^s:i^zk.Audio),e.splice(t,1)}}this.store.massSubscribe(e.map(e=>({userId:e.user.uid,type:e.mediaType})),i);const c=cc(a=Array.from(r.entries())).call(a,(e,t)=>{let[i,r]=t;if(0===r)return e;const n={stream_id:i.uid,stream_type:r};return r&zk.Audio&&(n.audio_ssrc=i._audioSSRC),r&zk.Video&&(n.video_ssrc=i._videoSSRC),e.push(n),e},[]);try{e.length>0&&await this._p2pChannel.massSubscribeNoLock(e.map(e=>{let{user:t,mediaType:i}=e;return{user:t,mediaType:i,ssrcId:i===AB.VIDEO?t._videoSSRC:t._audioSSRC,rtxSsrcId:t._rtxSsrcId}}));const r=new Map;if(c.length>0){const e=await this._gateway.subscribeAll(c,!0);((null==e?void 0:e.users)||[]).forEach(e=>{let{stream_id:t,video_error_code:i,audio_error_code:n,error_code:o}=e;(i||n||o)&&r.set(t,{video_error_code:i,audio_error_code:n,error_code:o})})}if(Array.from(r.entries()).length>0){const e=Array.from(r.entries()).map(e=>{let t,[i,r]=e;r.error_code||r.video_error_code&&r.audio_error_code?t=void 0:r.video_error_code?t=AB.VIDEO:r.audio_error_code&&(t=AB.AUDIO);return{user:this.remoteUsers.find(e=>e.uid===i),mediaType:t}});await this._p2pChannel.massUnsubscribeNoLock(e)}for(const e of o){const t=r.get(e.user.uid);if(t){const i=t.error_code||\"audio\"===e.mediaType&&t.audio_error_code||\"video\"===e.mediaType&&t.video_error_code;if(i){const t=BJ(i);JD.error(\"user:\".concat(e.user.uid,\" mediaType:\").concat(e.mediaType,\" has massSubscribe error \").concat(t.desc)),e.error=new QD(xD.SUBSCRIBE_FAILED,\"code \".concat(i,\": \").concat(t.desc))}}e.error||(\"video\"===e.mediaType?e.track=e.user.videoTrack:e.track=e.user.audioTrack)}return this.store.massSubscribe(o.filter(e=>!e.error).map(e=>({userId:e.user.uid,type:e.mediaType})),void 0,Date.now()),o.forEach(e=>{var t;pj.subscribe(this.store.sessionId,{succ:!!e.error,ec:(null===(t=e.error)||void 0===t?void 0:t.code)||null,video:e.mediaType===AB.VIDEO,audio:e.mediaType===AB.AUDIO,peerid:e.user.uid,subscribeRequestid:e.mediaType===AB.VIDEO?e.user._videoSSRC:e.user._audioSSRC,p2pid:this.store.p2pId,eventElapse:Math.floor(performance.now()-i)},!0)}),t.onSuccess(),JD.info(\"[\".concat(this._clientId,\"] massSubscribe success \").concat(e.map(e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i)}).join(\"; \"))),fP(\"info\",this,\"massSubscribe\",e,\"success\"),o}catch(i){throw await this._p2pChannel.massUnsubscribeNoLock(e),t.onError(i),i}}finally{s(),n()}}async unsubscribe(e,t){if(t&&ML(t,\"mediaType\",[\"audio\",\"video\"]),!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"Can't unsubscribe stream, haven't joined yet!\");const i=pj.reportApiInvoke(this._sessionId,{name:rk.UNSUBSCRIBE,options:[e.uid,t],tag:nk.TRACER});if(!this._users.find(t=>t===e)){const r=new QD(xD.INVALID_REMOTE_USER,\"user is not in the channel\");throw JD.error(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(e.uid,\", user is not in the channel\")),fP(\"error\",this,\"unsubscribe\",{uid:e.uid,mediaType:t},\"user is not in the channel\"),i.onError(r),r}JD.info(\"[\".concat(this._clientId,\"] unsubscribe uid: \").concat(e.uid,\", mediaType: \").concat(t)),fP(\"info\",this,\"unsubscribe\",{uid:e.uid,mediaType:t});try{const r=await this._p2pChannel.unsubscribe(e,t);r&&await this._gateway.unsubscribe(r,e.uid),JD.info(\"[\".concat(this._clientId,\"] unsubscribe success uid: \").concat(e.uid,\", mediaType: \").concat(t)),fP(\"info\",this,\"unsubscribe\",{uid:e.uid,mediaType:t},\"success\"),i.onSuccess()}catch(r){if(r.code===xD.DISCONNECT_P2P)return JD.warning(\"disconnecting p2p, abort unsubscribe request.\"),void i.onSuccess();throw JD.error(\"[\".concat(this._clientId,\"] unsubscribe user \").concat(e.uid,\" error\"),r.toString()),fP(\"error\",this,\"unsubscribe\",{uid:e.uid,mediaType:t},r.toString()),i.onError(r),r}}async massUnsubscribe(e){FL(e,\"unsubscribeList\");const t=pj.reportApiInvoke(this._sessionId,{name:rk.UNSUBSCRIBE,options:e.map(e=>{let{user:t,mediaType:i}=e;return{uid:null==t?void 0:t.uid,mediaType:i}}),tag:nk.TRACER});if(!this._joinInfo){const e=new QD(xD.INVALID_OPERATION,\"Can't unsubscribeAll stream, haven't joined yet!\");throw t.onError(e),e}JD.info(\"[\".concat(this._clientId,\"] start massUnsubscribe \").concat(e.map(e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")}).join())),fP(\"info\",this,\"massUnsubscribe\",e),e=[...e];const i=new Map;for(let r=e.length-1;r>=0;r--){const{user:n,mediaType:o}=e[r];if(!n){const e=new QD(xD.INVALID_PARAMS,\"user property does not exist in unsubscribeList item\");throw JD.error(\"[\".concat(this._clientId,\"] user property does not exist in unsubscribeList item\")),t.onError(e),e}ML(o,\"mediaType\",[\"video\",\"audio\",void 0]);if(!this._users.find(e=>e===n)){JD.warning(\"[\".concat(this._clientId,\"] can not unsubscribe \").concat(n.uid,\", user is not in the channel\")),fP(\"error\",this,\"unsubscribe\",{uid:n.uid,mediaType:o},\"user is not in the channel\"),e.splice(r,1);continue}const s=zk.Video|zk.LwoVideo;if(i.has(n)){const t=i.get(n);let a;switch(o){case\"video\":a=t&s;break;case\"audio\":a=t&zk.Audio;break;default:a=t&(zk.Audio|s)}if(a){JD.warning(\"repeat massUnsubscribe user:\".concat(n.uid,\",mediaType:\").concat(o,\" twice.\")),e.splice(r,1);continue}o?\"audio\"===o?i.set(n,t|zk.Audio):\"video\"===o&&i.set(n,t|s):i.set(n,t|zk.Audio|s)}else o?\"audio\"===o?i.set(n,zk.Audio):\"video\"===o&&i.set(n,s):i.set(n,zk.Audio|s)}try{const i=await this._p2pChannel.massUnsubscribe(e);i&&await this._gateway.massUnsubscribe(i),JD.info(\"[\".concat(this._clientId,\"] massUnsubscribe success \").concat(e.map(e=>{let{user:t,mediaType:i}=e;return\"user: \".concat(null==t?void 0:t.uid,\", mediaType: \").concat(i,\";\")}).join())),fP(\"info\",this,\"massUnsubscribe\",e,\"success\"),t.onSuccess()}catch(i){if(i.code===xD.DISCONNECT_P2P)return JD.warning(\"disconnecting p2p, abort unsubscribe request.\"),void t.onSuccess();throw JD.error(\"[\".concat(this._clientId,\"] massUnsubscribe error\"),i.toString()),fP(\"error\",this,\"massUnsubscribe\",e,i.toString()),t.onError(i),i}}setLowStreamParameter(e){!function(e){if(!e)throw new QD(xD.INVALID_PARAMS);GL(e.width)||xL(e.width,\"streamParameter.width\"),GL(e.height)||xL(e.height,\"streamParameter.height\"),GL(e.framerate)||xL(e.framerate,\"streamParameter.framerate\"),GL(e.bitrate)||UL(e.bitrate,\"streamParameter.bitrate\")}(e);const t=pj.reportApiInvoke(this._sessionId,{name:rk.SET_LOW_STREAM_PARAMETER,options:[e],tag:nk.TRACER});(!e.width&&e.height||e.width&&!e.height)&&(JD.warning(\"[\".concat(this._clientId,\"] The width and height parameters take effect only when both are set\")),hP(\"warning\",this,\"The width and height parameters take effect only when both are set\")),JD.info(\"[\".concat(this._clientId,\"] set low stream parameter to\"),JSON.stringify(e)),fP(\"info\",this,\"setLowStreamParameter\",e);const i=this._configDistribute.getLowStreamConfigDistribute();i&&i.bitrate&&e.bitrate&&i.bitrate<e.bitrate&&(e.bitrate=i.bitrate),this._lowStreamParameter=e,t.onSuccess()}async enableDualStream(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.ENABLE_DUAL_STREAM,options:[],tag:nk.TRACER});if(!wB().supportDualStream){pj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1});const t=new QD(xD.NOT_SUPPORTED,\"Your browser is not support dual stream\");throw e.onError(t),t}if(this._isDualStreamEnabled){const t=new QD(xD.INVALID_OPERATION,\"Dual stream is already enabled\");throw e.onError(t),t}if(this._p2pChannel.canPublishLowStream())try{await this._publishLowStream()}catch(t){throw pj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!1}),e.onError(t),t}this._isDualStreamEnabled=!0,pj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!0,succ:!0}),JD.info(\"[\".concat(this._clientId,\"] enable dual stream\")),fP(\"info\",this,\"enableDualStream\"),e.onSuccess()}async disableDualStream(){if(!this._isDualStreamEnabled)return;if(!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");const e=pj.reportApiInvoke(this._sessionId,{name:rk.DISABLE_DUAL_STREAM,options:[],tag:nk.TRACER});if(this._p2pChannel.getLocalMedia(lB.LocalVideoLowTrack))try{const e=await this._p2pChannel.unpublishLowStream();e&&await this._gateway.unpublish(e,this._joinInfo.stringUid||this._joinInfo.uid)}catch(t){throw pj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!1}),e.onError(t),t}this._isDualStreamEnabled=!1,pj.streamSwitch(this._sessionId,{lts:Date.now(),isdual:!1,succ:!0}),JD.info(\"[\".concat(this._clientId,\"] disable dual stream\")),fP(\"info\",this,\"disableDualStream\"),e.onSuccess()}async setClientRole(e,t){!function(e){ML(e,\"role\",[\"audience\",\"host\"])}(e),t&&wk(t);const i=pj.reportApiInvoke(this._sessionId,{name:rk.SET_CLIENT_ROLE,options:[e,t],tag:nk.TRACER});if(\"rtc\"===this._mode){JD.warning(\"[\".concat(this._clientId,\"]rtc mode can not use setClientRole\")),fP(\"warning\",this,\"setClientRole\",e,\"rtc mode can not use setClientRole\");const t=new QD(xD.INVALID_OPERATION,\"rtc mode can not use setClientRole\");return i.onError(t),t.throw()}if(t&&t.level&&\"host\"===e){const e=new QD(xD.INVALID_OPERATION,\"host mode can not set audience latency level\");return i.onError(e),e.throw()}try{if(\"audience\"===e&&this._p2pChannel.hasLocalMedia()){const e=new QD(xD.INVALID_OPERATION,\"can not set client role to audience when publishing stream\");return i.onError(e),e.throw()}await this._gateway.setClientRole(e,t),JD.info(\"[\".concat(this._clientId,\"] set client role to \").concat(e,\", level: \").concat(t&&t.level)),fP(\"info\",this,\"setClientRole\",{role:e,level:t&&t.level}),i.onSuccess()}catch(e){throw i.onError(e),e}}setProxyServer(e,t){if(QL(e,\"proxyServer\"),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new QD(xD.INVALID_OPERATION,\"Set proxy server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new QD(xD.INVALID_OPERATION,\"You have already set the proxy\")}this._proxyServer=e,pj.setProxyServer(this._proxyServer),JD.setProxyServer(this._proxyServer),uP(this._proxyServer),JD.info(\"[\".concat(this._clientId,\"] Set proxy server \").concat(t?\"by initialize call\":\"\",\" success.\")),fP(\"info\",this,\"setProxyServer\",[...arguments],\"success\")}setTurnServer(e,t){if(Array.isArray(e)||(e=[e]),!t){if(\"DISCONNECTED\"!==this.connectionState)throw new QD(xD.INVALID_OPERATION,\"Set turn server before join channel\");if(\"disabled\"!==this._cloudProxyServerMode||this._useLocalAccessPoint)throw new QD(xD.INVALID_OPERATION,\"You have already set the proxy\")}if(Rk(e))return this._turnServer={servers:e,mode:\"original-manual\"},JD.info(\"[\".concat(this._clientId,\"] Set original turnserver \").concat(t?\"by initialize call\":\"\",\" success: \").concat(e.map(e=>e.urls).join(\",\"),\".\")),void fP(\"info\",this,\"setOriginalTurnServer\",[...arguments],\"success\");e.forEach(e=>yk(e)),this._turnServer={servers:e,mode:\"manual\"},JD.info(\"[\".concat(this._clientId,\"] Set turnserver \").concat(t?\"by initialize call\":\"\",\" success.\")),fP(\"info\",this,\"setTurnServer\",[...arguments],\"success\")}setLicense(e){if(\"DISCONNECTED\"!==this.connectionState){throw new QD(xD.INVALID_OPERATION,\"you should set license before join channel\")}if(QL(e,\"license\",32,32),!/^[A-Za-z\\d]+$/.test(e))throw new QD(xD.INVALID_PARAMS,\"license should only contains characters from A-Z a-z 0-9\");this._license=e,JD.info(\"[\".concat(this._clientId,\"] set license success\"),e)}startProxyServer(e){const t=pj.reportApiInvoke(this._sessionId,{name:rk.START_PROXY_SERVER,options:[],tag:nk.TRACER});if(\"DISCONNECTED\"!==this.connectionState){const e=new QD(xD.INVALID_OPERATION,\"Start proxy server before join channel\");throw t.onError(e),e}if(this._proxyServer||\"manual\"===this._turnServer.mode||this._useLocalAccessPoint){const e=new QD(xD.INVALID_OPERATION,\"You have already set the proxy\");throw t.onError(e),e}const i=[3,4,5];let r;switch(void 0===e&&(e=3),e){case 1:case 2:throw new QD(xD.NOT_SUPPORTED,\"proxy mode 1/2 has been deprecated and not supported.\");case 3:r=\"proxy3\";break;case 4:r=\"proxy4\";break;case 5:r=\"proxy5\";break;default:{const e=new QD(xD.INVALID_PARAMS,\"proxy server mode must be \".concat(i.join(\"|\")));throw t.onError(e),e}}this._cloudProxyServerMode=r,this.store.cloudProxyServerMode=r,JD.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode),fP(\"info\",this,\"startProxyServer\",this._cloudProxyServerMode),t.onSuccess()}stopProxyServer(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.STOP_PROXY_SERVER,options:[],tag:nk.TRACER});if(\"DISCONNECTED\"!==this.connectionState)throw new QD(xD.INVALID_OPERATION,\"Stop proxy server after leave channel\");pj.setProxyServer(),JD.setProxyServer(),uP(),this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\",JD.info(\"[\".concat(this._clientId,\"] set cloud proxy server mode to\"),this._cloudProxyServerMode),fP(\"info\",this,\"stopProxyServer\",this._cloudProxyServerMode),this._proxyServer=void 0,this._turnServer={mode:\"auto\",servers:[]},e.onSuccess()}setLocalAccessPointsV2(e){if(!e.accessPoints)throw new QD(xD.INVALID_PARAMS,\"accessPoints is required.\");FL(e.accessPoints.serverList,\"accessPoints.serverList\"),QL(e.accessPoints.domain,\"accessPoints.domain\");const t=(e,t)=>{UL(e,t,0,65535,!0)};let i=443;if(e.accessPoints.port&&(t(e.accessPoints.port,\"accessPoints.port\"),i=e.accessPoints.port),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new QD(xD.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");LP(\"CLOSE_AFB_FOR_LOCAL_AP\")&&(PP(\"JOIN_WITH_FALLBACK_SIGNAL_PROXY\",!1),PP(\"JOIN_WITH_FALLBACK_MEDIA_PROXY\",!1));const r=/^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/,n=e.accessPoints.domain,o=e.accessPoints.serverList.map(e=>r.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(n):e),s=o.map(e=>\"\".concat(e,\":\").concat(i));this._useLocalAccessPoint=!0,this._setLocalAPVersion=2,PP(\"WEBCS_DOMAIN\",s),PP(\"WEBCS_DOMAIN_BACKUP_LIST\",s),PP(\"GATEWAY_DOMAINS\",[n]),e.report&&e.report.hostname&&Array.isArray(e.report.hostname)&&e.report.hostname.length?(FL(e.report.hostname,\"report.hostname\"),PP(\"EVENT_REPORT_DOMAIN\",e.report.hostname[0]),PP(\"EVENT_REPORT_BACKUP_DOMAIN\",e.report.hostname[1]||e.report.hostname[0])):(PP(\"EVENT_REPORT_DOMAIN\",o[0]),PP(\"EVENT_REPORT_BACKUP_DOMAIN\",o[1]||o[0]));let a=6443;e.report&&e.report.port&&(t(e.report.port,\"report.port\"),a=e.report.port),PP(\"STATS_COLLECTOR_PORT\",a),e.report?PP(\"ENABLE_EVENT_REPORT\",!0):PP(\"ENABLE_EVENT_REPORT\",!1);let c=\"\";e.log&&e.log.hostname&&Array.isArray(e.log.hostname)&&e.log.hostname.length?(FL(e.log.hostname,\"log.hostname\"),c=e.log.hostname[0]):c=o[0];let d=6444;e.log&&e.log.port&&(t(e.log.port,\"log.port\"),d=e.log.port),PP(\"LOG_UPLOAD_SERVER\",\"\".concat(c,\":\").concat(d));let u=[];e.cds&&e.cds.hostname&&Array.isArray(e.cds.hostname)&&e.cds.hostname.length?(FL(e.cds.hostname,\"cds.hostname\"),u=e.cds.hostname):u=o;let h=443;e.cds&&e.cds.port&&(t(e.cds.port,\"cds.port\"),h=e.cds.port),PP(\"CDS_AP\",u.map(e=>\"\".concat(e,\":\").concat(h))),e.cds?PP(\"ENABLE_CONFIG_DISTRIBUTE\",!0):PP(\"ENABLE_CONFIG_DISTRIBUTE\",!1),JD.info(\"set local access point v2 success\"),fP(\"info\",this,\"setLocalAccessPointsV2\")}setLocalAccessPoints(e,t){if(FL(e,\"serverList\"),QL(t,\"domain\"),this._proxyServer||\"disabled\"!==this._cloudProxyServerMode)throw new QD(xD.INVALID_OPERATION,\"set local access point failed, You have already set the cloud proxy\");const i=/^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$/;e=e.map(e=>i.test(e)?\"\".concat(e.replace(/\\./g,\"-\"),\".\").concat(t):e),this._useLocalAccessPoint=!0,this._setLocalAPVersion=1,PP(\"WEBCS_DOMAIN\",e),PP(\"WEBCS_DOMAIN_BACKUP_LIST\",e),PP(\"GATEWAY_DOMAINS\",[t]),PP(\"EVENT_REPORT_DOMAIN\",e[0]),PP(\"EVENT_REPORT_BACKUP_DOMAIN\",e[1]||e[0]),PP(\"LOG_UPLOAD_SERVER\",\"\".concat(e[0],\":6444\")),JD.info(\"set local access point success\"),fP(\"info\",this,\"setLocalAccessPoints\")}async setRemoteDefaultVideoStreamType(e){if(ML(e,\"streamType\",[0,1]),this._remoteDefaultVideoStreamType=e,this._joinInfo)try{await this._gateway.setDefaultRemoteVideoStreamType(e),this._joinInfo.defaultVideoStream=this._remoteDefaultVideoStreamType}catch(e){throw JD.error(\"[\".concat(this._clientId,\"] set default remote video stream type error\"),e.toString()),e}else JD.debug(\"haven't joined yet, cache remoteDefaultVideoStreamType \".concat(e))}async setRemoteVideoStreamType(e,t){ML(t,\"streamType\",[0,1]);const i=pj.reportApiInvoke(this._sessionId,{name:rk.SET_REMOTE_VIDEO_STREAM_TYPE,options:[e,t],tag:nk.TRACER});try{await this._gateway.setRemoteVideoStreamType(e,t),setTimeout(()=>{const t=this._users.find(t=>t.uid===e);t&&t.videoTrack&&t.videoTrack.updateMediaStreamTrackResolution()},2e3)}catch(e){throw i.onError(e),JD.error(\"[\".concat(this._clientId,\"] set remote video stream type error\"),e.toString()),fP(\"error\",this,\"setRemoteVideoStreamType\",void 0,e.toString()),e}JD.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" video stream type to \").concat(t)),fP(\"info\",this,\"setRemoteVideoStreamType\",{uid:e,streamType:t}),this._remoteStreamTypeCacheMap.set(e,t),i.onSuccess()}async setStreamFallbackOption(e,t){ML(t,\"fallbackType\",[0,1,2]);const i=pj.reportApiInvoke(this._sessionId,{name:rk.SET_STREAM_FALLBACK_OPTION,options:[\"too long to show\",t],tag:nk.TRACER});try{await this._gateway.setStreamFallbackOption(e,t)}catch(e){throw i.onError(e),JD.error(\"[\".concat(this._clientId,\"] set stream fallback option\"),e.toString()),fP(\"error\",this,\"setStreamFallbackOption\",void 0,e.toString()),e}JD.info(\"[\".concat(this._clientId,\"] set remote \").concat(e,\" stream fallback type to \").concat(t)),fP(\"info\",this,\"setStreamFallbackOption\",{uid:e,fallbackType:t}),this._streamFallbackTypeCacheMap.set(e,t),i.onSuccess()}setEncryptionConfig(e,t,i){const r=pj.reportApiInvoke(this._sessionId,{name:rk.SET_ENCRYPTION_CONFIG,options:[e],tag:nk.TRACER});try{!function(e){ML(e,\"encryptionMode\",[\"aes-128-xts\",\"aes-256-xts\",\"aes-128-ecb\",\"sm4-128-ecb\",\"aes-128-gcm\",\"aes-256-gcm\",\"aes-128-gcm2\",\"aes-256-gcm2\",\"none\"])}(e),QL(t,\"secret\");if([\"aes-128-gcm2\",\"aes-256-gcm2\"].includes(e)){if(!i||!(i instanceof Uint8Array&&32===i.length))throw new QD(xD.INVALID_PARAMS,\"salt must be an Uint8Array and exactly equal to 32 bytes\")}else if(i)throw new QD(xD.INVALID_PARAMS,\"current encrypt mode does not need salt\");new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'\\\"|{}\\\\[\\\\]])(?=.{8,})\").test(t)||(JD.warning(\"The secret is not strong:\\n      The secret must contain at least 1 lowercase alphabetical character,\\n      The secret must contain at least 1 uppercase alphabetical character,\\n      The secret must contain at least 1 numeric character,\\n      The secret must contain at least one special character,\\n      The secret must be eight characters or longer.\\n      \"),hP(\"warning\",this,\"The secret is not strong:\\n      The secret must contain at least 1 lowercase alphabetical character,\\n      The secret must contain at least 1 uppercase alphabetical character,\\n      The secret must contain at least 1 numeric character,\\n      The secret must contain at least one special character,\\n      The secret must be eight characters or longer.\\n      \")),this._encryptionMode=e,this._encryptionSecret=t,i&&(this._encryptionSalt=MK(i)),r.onSuccess()}catch(e){throw r.onError(e),e}}async renewToken(e){QL(e,\"token\",1,2047);const t=pj.reportApiInvoke(this._sessionId,{name:rk.RENEW_TOKEN,options:[e],tag:nk.TRACER});if(!this._key||!this._joinInfo){const e=new QD(xD.INVALID_OPERATION,\"renewToken should not be called before user join\");return t.onError(e),e.throw()}const i=this._key;this._key=e,this._joinInfo&&(this._joinInfo.token=e);const r=await this._renewTokenMutex.lock();try{if(LP(\"USE_NEW_TOKEN\")){JD.debug(\"start renew token with ticket from unilbs\"),fP(\"debug\",this,\"renewToken\",\"unilbs\");const t=await Gq(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||FD);JD.debug(\"[\".concat(this._clientId,\"] get ticket from unilbs success\")),fP(\"debug\",this,\"renewToken\",\"unilbs\",\"success\"),await this._gateway.renewToken({token:e,ticket:t})}else JD.debug(\"start renew token without ticket\"),fP(\"debug\",this,\"renewToken\"),await this._gateway.renewToken({token:e});JD.debug(\"[\".concat(this._clientId,\"] renewToken success\")),fP(\"debug\",this,\"renewToken\",void 0,\"success\"),t.onSuccess()}catch(e){throw this._key=i,this._joinInfo.token=i,t.onError(e),JD.error(\"[\".concat(this._clientId,\"] renewToken failed\"),e.toString()),fP(\"error\",this,\"renewToken\",void 0,e.toString()),e}finally{r()}}enableAudioVolumeIndicator(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.ENABLE_AUDIO_VOLUME_INDICATOR,options:[],tag:nk.TRACER});if(this._audioVolumeIndicationInterval)return JD.warning(\"you have already enabled audio volume indicator!\"),fP(\"warning\",this,\"enableAudioVolumeIndicator\",\"you have already enabled audio volume indicator!\"),e.onSuccess();this._audioVolumeIndicationInterval=window.setInterval(()=>{const e=this._p2pChannel.getAudioLevels();this.emit(pk.VOLUME_INDICATOR,e)},LP(\"AUDIO_VOLUME_INDICATION_INTERVAL\")||2e3),e.onSuccess()}getRTCStats(){const e=this._statsCollector.getRTCStats(),t=this._gateway.getInChannelInfo();return e.Duration=Math.round(t.duration/1e3),e}startLiveStreaming(e,t){const i=pj.reportApiInvoke(this._sessionId,{name:rk.START_LIVE_STREAMING,options:[e,t],tag:nk.TRACER});if(!t){if(\"h264\"!==this._codec){const e=new QD(xD.LIVE_STREAMING_INVALID_RAW_STREAM,\"raw streaming is only support h264\");return i.onError(e),l_.reject(e)}if(!this._p2pChannel.hasLocalMedia()){const e=new QD(xD.LIVE_STREAMING_INVALID_RAW_STREAM,\"can not find stream to raw streaming\");return i.onError(e),l_.reject(e)}}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(e)||this._liveTranscodeStreamingClient&&this._liveTranscodeStreamingClient.hasUrl(e)){const e=new QD(xD.LIVE_STREAMING_TASK_CONFLICT);return i.onError(e),l_.reject(e)}const r=t?kk.TRANSCODE:kk.RAW;return this._createLiveStreamingClient(r).startLiveStreamingTask(e,r).then(()=>i.onSuccess()).catch(e=>{throw i.onError(e),e})}setLiveTranscoding(e){const t=pj.reportApiInvoke(this._sessionId,{name:rk.SET_LIVE_TRANSCODING,options:[e],tag:nk.TRACER});return this._createLiveStreamingClient(kk.TRANSCODE).setTranscodingConfig(e).then(()=>t.onSuccess()).catch(e=>{throw t.onError(e),e})}stopLiveStreaming(e){const t=pj.reportApiInvoke(this._sessionId,{name:rk.STOP_LIVE_STREAMING,options:[e],tag:nk.TRACER}),i=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient].filter(t=>t&&t.hasUrl(e));if(!i.length){const e=new QD(xD.INVALID_PARAMS,\"can not find live streaming url to stop\");return t.onError(e),l_.reject(e)}return l_.all(i.map(t=>t&&t.stopLiveStreamingTask(e))).then(()=>t.onSuccess()).catch(e=>{throw t.onError(e),e})}async addInjectStreamUrl(e,t){const i=pj.reportApiInvoke(this._sessionId,{name:rk.ADD_INJECT_STREAM_URL,options:[e,t],tag:nk.TRACER});try{if(!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"can not addInjectStreamUrl, no joininfo\");const i=this._createLiveStreamingClient(kk.INJECT);i.setInjectStreamConfig(t,0),await i.startLiveStreamingTask(e,kk.INJECT)}catch(e){throw i.onError(e),e}i.onSuccess()}async removeInjectStreamUrl(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.REMOVE_INJECT_STREAM_URL,options:[],tag:nk.TRACER});try{var t;const e=this._createLiveStreamingClient(kk.INJECT),i=Array.from(MG(t=e.streamingTasks).call(t)).find(e=>e.mode===kk.INJECT);if(!this._joinInfo||!i)throw new QD(xD.INVALID_OPERATION,\"can remove addInjectStreamUrl, no joininfo or inject task\");await e.stopLiveStreamingTask(i.url)}catch(t){throw e.onError(t),t}e.onSuccess()}async startChannelMediaRelay(e){const t=pj.reportApiInvoke(this._sessionId,{name:rk.START_CHANNEL_MEDIA_RELAY,options:[e],tag:nk.TRACER});try{tX(e);const t=this._createChannelMediaRelayClient();await t.startChannelMediaRelay(e)}catch(e){return t.onError(e),e.throw()}t.onSuccess()}async updateChannelMediaRelay(e){const t=pj.reportApiInvoke(this._sessionId,{name:rk.UPDATE_CHANNEL_MEDIA_RELAY,options:[e],tag:nk.TRACER});try{tX(e);const t=this._createChannelMediaRelayClient();await t.updateChannelMediaRelay(e)}catch(e){return t.onError(e),e.throw()}t.onSuccess()}async stopChannelMediaRelay(){const e=pj.reportApiInvoke(this._sessionId,{name:rk.STOP_CHANNEL_MEDIA_RELAY,options:[],tag:nk.TRACER});try{const e=this._createChannelMediaRelayClient();await e.stopChannelMediaRelay()}catch(t){return e.onError(t),t.throw()}e.onSuccess()}sendStreamMessage(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"can not send data stream, not joined\");if(\"string\"==typeof e){e=(new TextEncoder).encode(e)}if(new Blob([e]).size>1024)throw new QD(xD.INVALID_PARAMS,\"stream message out of range.\");return this._gateway.signal.request(mk.DATA_STREAM,{payload:MK(e)},!t)}sendMetadata(e){if(!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"can not send metadata, not joined\");if(new Blob([e]).size>1024)throw new QD(xD.METADATA_OUT_OF_RANGE);return this._gateway.signal.request(mk.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:MK(e)})}async sendCustomReportMessage(e){Array.isArray(e)||(e=[e]),e.forEach(zL);const t=pj.reportApiInvoke(this._sessionId,{name:rk.SEND_CUSTOM_REPORT_MESSAGE,options:[JSON.stringify(e)],tag:nk.TRACER});if(!this._joinInfo){const e=new QD(xD.INVALID_OPERATION,\"can not send custom report, not joined\");return t.onError(e),e.throw()}await pj.sendCustomReportMessage(this._joinInfo.sid,e),t.onSuccess()}getLocalAudioStats(){return this._statsCollector.getLocalAudioTrackStats()}getRemoteAudioStats(){return this._statsCollector.getRemoteAudioTrackStats()}getLocalVideoStats(){return this._statsCollector.getLocalVideoTrackStats()}getRemoteVideoStats(){return this._statsCollector.getRemoteVideoTrackStats()}getRemoteNetworkQuality(){return this._statsCollector.getRemoteNetworkQualityStats()}async pickSVCLayer(e,t){ML(t.spatialLayer,\"spatialLayer\",[0,1,2,3]),ML(t.temporalLayer,\"temporalLayer\",[0,1,2,3]);try{await this._gateway.pickSVCLayer(e,t)}catch(e){throw JD.error(\"[\".concat(this._clientId,\"] pick SVC layer failed\"),e.toString()),gP(\"error\",this,\"pickSVCLayer\",t,e.toString()),e}}_reset(){if(JD.debug(\"[\".concat(this._clientId,\"] reset client\")),gP(\"debug\",this,\"_reset\"),this._axiosCancelSource.cancel(),this._axiosCancelSource=kD.CancelToken.source(),this._streamFallbackTypeCacheMap=new Map,this._remoteStreamTypeCacheMap=new Map,this._configDistribute.stopGetConfigDistribute(),this._joinInfo=void 0,this._proxyServer=void 0,this._defaultStreamFallbackType=void 0,this._sessionId=null,this.store.sessionId=null,this._statsCollector.reset(),this._key=void 0,this._appId=void 0,this._uid=void 0,this.store.uid=void 0,this._channelName=void 0,this._encryptionMode=\"none\",this._encryptionSecret=null,this._encryptionSalt=null,this._users.forEach(e=>{e._audioTrack&&e._audioTrack._destroy(),e._videoTrack&&e._videoTrack._destroy()}),this._users=[],this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0),\"fallback\"===this._cloudProxyServerMode&&(this._cloudProxyServerMode=\"disabled\",this.store.cloudProxyServerMode=\"disabled\"),this._p2pChannel.reset(),this._publishMutex=new fj(\"client-publish\"),this._subscribeMutex=new fj(\"client-subscribe\"),this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0),this._injectStreamingClient&&(this._injectStreamingClient.terminate(),this._injectStreamingClient.removeAllListeners(),this._injectStreamingClient=void 0),this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0),this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0),this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0),this._inspect)try{this._inspect.close(),this._inspect=void 0}catch(e){}}_startSession(e,t){const i=e||CK();e?JD.debug(\"[\".concat(this._clientId,\"] new Session \").concat(i)):JD.debug(\"[\".concat(this._clientId,\"] renewSession \").concat(this._sessionId,\" => \").concat(i)),gP(\"debug\",this,\"_startSession\",{newSid:i,sid:this._sessionId}),this._sessionId=i,this.store.sessionId=i,t?pj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:t.channel,appid:t.appId,mode:this._mode}):this._joinInfo?pj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._joinInfo.cname,appid:this._joinInfo.appId,mode:this._mode}):this._gateway.joinInfo&&pj.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:this._gateway.joinInfo.cname,appid:this._gateway.joinInfo.appId,mode:this._mode}),this._joinInfo&&(this._joinInfo.sid=i),this._gateway.joinInfo&&(this._gateway.joinInfo.sid=i)}async _publishHighStream(e){if(!this._joinInfo||void 0===this._uid)throw new QD(xD.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new QD(xD.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));if(\"auto\"===this._turnServer.mode&&LP(\"FORCE_TURN\")&&!LP(\"TURN_ENABLE_TCP\")&&!LP(\"TURN_ENABLE_UDP\"))throw new QD(xD.UNEXPECTED_ERROR,\"force TURN With No TURN Configuration\");JD.debug(\"[\".concat(this._clientId,\"] publish high stream\")),gP(\"debug\",this,\"_publishHighStream\");try{const i=await this._p2pChannel.publish(e,this._isDualStreamEnabled,this._lowStreamParameter),r=(await i.next()).value;if(r){var t;let e;try{e=await this._gateway.publish(this._uid,r,!0)}catch(e){if(e.code!==xD.DISCONNECT_P2P)throw i.throw(e),e}await i.next((null===(t=e)||void 0===t?void 0:t.ortc)||[])}this._p2pChannel.reportPublishEvent(!0,null);for(const t of e)t instanceof lz&&t._encoderConfig&&this._gateway.setVideoProfile(t._encoderConfig),!t.muted&&t.enabled||await this._p2pChannel.muteLocalTrack(t)}catch(t){if(this._p2pChannel.reportPublishEvent(!1,null==t?void 0:t.code,e),(null==t?void 0:t.code)===xD.WS_ABORT)return;throw t}}async _publishLowStream(){if(!this._joinInfo||void 0===this._uid)throw new QD(xD.INVALID_OPERATION,\"Can't publish stream, haven't joined yet!\");if(\"CONNECTED\"!==this.connectionState&&\"RECONNECTING\"!==this.connectionState)throw new QD(xD.INVALID_OPERATION,\"can not publish stream in \".concat(this.connectionState,\" state\"));JD.debug(\"[\".concat(this._clientId,\"] publish low stream\")),gP(\"debug\",this,\"_publishLowStream\");const e=this._configDistribute.getLowStreamConfigDistribute();e&&e.bitrate&&(this._lowStreamParameter||(this._lowStreamParameter={width:160,height:120,framerate:15,bitrate:50}),this._lowStreamParameter&&this._lowStreamParameter.bitrate&&e.bitrate<this._lowStreamParameter.bitrate&&(this._lowStreamParameter.bitrate=e.bitrate));try{const e=await this._p2pChannel.publishLowStream(this._lowStreamParameter),i=(await e.next()).value;if(i){var t;let r;try{r=await this._gateway.publish(this._uid,i,!0)}catch(t){if(t.code!==xD.DISCONNECT_P2P)throw e.throw(t),t}e.next((null===(t=r)||void 0===t?void 0:t.ortc)||[]),this._p2pChannel.reportPublishEvent(!0,null,void 0,!0)}}catch(e){if(this._p2pChannel.reportPublishEvent(!1,null==e?void 0:e.code,void 0,!0),(null==e?void 0:e.code)===xD.WS_ABORT)return;throw e}}_createLiveStreamingClient(e){if(!this._joinInfo||!this._appId){return new QD(xD.INVALID_OPERATION,\"can not create live streaming client, please join channel first\").throw()}const t=()=>new $q(this._joinInfo,this._config.websocketRetryConfig||FD,this._config.httpRetryConfig||FD),i=e=>{e.onLiveStreamError=(e,t)=>{pj.reportApiInvoke(this._sessionId,{name:rk.ON_LIVE_STREAM_ERROR,options:[e,t],tag:nk.TRACER}).onSuccess(),this.emit(pk.LIVE_STREAMING_ERROR,e,t)},e.onLiveStreamWarning=(e,t)=>{pj.reportApiInvoke(this._sessionId,{name:rk.ON_LIVE_STREAM_WARNING,options:[e,t],tag:nk.TRACER}).onSuccess(),this.emit(pk.LIVE_STREAMING_WARNING,e,t)},e.on(jk.REQUEST_WORKER_MANAGER_LIST,(e,t,i)=>{if(!this._joinInfo)return i(new QD(xD.INVALID_OPERATION,\"can not find join info to get worker manager\"));Vq(e,this._joinInfo,this._axiosCancelSource.token,FD).then(t).catch(i)})};switch(e){case kk.RAW:return this._liveRawStreamingClient||(this._liveRawStreamingClient=t(),i(this._liveRawStreamingClient)),this._liveRawStreamingClient;case kk.TRANSCODE:return this._liveTranscodeStreamingClient||(this._liveTranscodeStreamingClient=t(),i(this._liveTranscodeStreamingClient)),this._liveTranscodeStreamingClient;case kk.INJECT:return this._injectStreamingClient||(this._injectStreamingClient=t(),this._injectStreamingClient.on(jk.REQUEST_WORKER_MANAGER_LIST,(e,t,i)=>{if(!this._joinInfo)return i(new QD(xD.INVALID_OPERATION,\"can not find join info to get worker manager\"));Vq(e,this._joinInfo,this._axiosCancelSource.token,FD).then(t).catch(i)}),this._injectStreamingClient.onInjectStatusChange=(e,t,i)=>{this.emit(pk.INJECT_STREAM_STATUS,e,t,i)}),this._injectStreamingClient}}_createChannelMediaRelayClient(){if(!this._joinInfo){return new QD(xD.INVALID_OPERATION,\"can not create channel media relay client, please join channel first\").throw()}return this._channelMediaRelayClient||(this._channelMediaRelayClient=new rX(this._joinInfo,this._clientId,this._config.websocketRetryConfig||FD,this._config.httpRetryConfig||FD),this._channelMediaRelayClient.on(\"state\",e=>{e===Yk.RELAY_STATE_FAILURE&&this._channelMediaRelayClient&&this._channelMediaRelayClient.dispose(),this.emit(pk.CHANNEL_MEDIA_RELAY_STATE,e)}),this._channelMediaRelayClient.on(\"event\",e=>{this.emit(pk.CHANNEL_MEDIA_RELAY_EVENT,e)})),this._channelMediaRelayClient}_handleGatewayEvents(){this._gateway.on(Xk.DISCONNECT_P2P,async()=>{await this._p2pChannel.disconnectForReconnect()}),this._gateway.on(Xk.CONNECTION_STATE_CHANGE,(e,t,i)=>{var r;if(i===lk.FALLBACK)return;const n=()=>{this.emit(pk.CONNECTION_STATE_CHANGE,e,t,i)};if(pj.reportApiInvoke(this._sessionId||(null===(r=this._gateway.joinInfo)||void 0===r?void 0:r.sid)||null,{name:rk.CONNECTION_STATE_CHANGE,options:[e,t,i],tag:nk.TRACER}).onSuccess(JSON.stringify({cur:e,prev:t,reason:i})),JD.info(\"[\".concat(this._clientId,\"] connection state change: \").concat(t,\" -> \").concat(e)),AP(\"info\",this,\"connection-state-change\",\"\".concat(t,\" -> \").concat(e)),\"DISCONNECTED\"===e)return this._reset(),void n();if(\"RECONNECTING\"===e)this._users.forEach(e=>{e._trust_in_room_=!1,e._trust_audio_enabled_state_=!1,e._trust_video_enabled_state_=!1,e._trust_audio_mute_state_=!1,e._trust_video_mute_state_=!1,e._trust_audio_stream_added_state_=!1,e._trust_video_stream_added_state_=!1,e._audioSSRC=void 0,e._videoSSRC=void 0,e._videoOrtc=void 0,e._audioOrtc=void 0,e._cname=void 0,e._rtxSsrcId=void 0}),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._userOfflineTimeout=void 0,this._streamRemovedTimeout=void 0;else if(\"CONNECTED\"===e){var o;this._streamFallbackTypeCacheMap.forEach((e,t)=>{this._gateway.setStreamFallbackOption(t,e).catch(e=>{JD.warning(\"[\".concat(this._clientId,\"] auto set stream fallback option failed\"),e),hP(\"warning\",this,\"auto set stream fallback option failed, \".concat(e.toString()))})}),this._remoteStreamTypeCacheMap.forEach((e,t)=>{this._gateway.setRemoteVideoStreamType(t,e).catch(e=>{JD.warning(\"[\".concat(this._clientId,\"] auto set remote stream type failed\"),e),hP(\"warning\",this,\"auto set remote stream type failed, \".concat(e.toString()))})}),void 0!==this._remoteDefaultVideoStreamType&&void 0===(null===(o=this._joinInfo)||void 0===o?void 0:o.defaultVideoStream)&&this.setRemoteDefaultVideoStreamType(this._remoteDefaultVideoStreamType).then(()=>{JD.debug(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway connected\"))}).catch(e=>{JD.error(\"[\".concat(this._clientId,\"] setRemoteDefaultVideoStreamType after gateway failed, \").concat(e))}),this._p2pChannel.republish(),this._userOfflineTimeout=window.setTimeout(()=>{if(\"CONNECTED\"!==this.connectionState)return;this._userOfflineTimeout=void 0;this._users.filter(e=>!e._trust_in_room_).forEach(e=>{JD.debug(\"[\".concat(this._clientId,\"] user offline timeout, emit user offline \").concat(e.uid)),hP(\"debug\",this,\"user offline timeout, emit user offline \".concat(e.uid)),this._handleUserOffline({uid:e.uid})})},3e3),this._streamRemovedTimeout=window.setTimeout(()=>{\"CONNECTED\"===this.connectionState&&(this._streamRemovedTimeout=void 0,this._users.forEach(e=>{e._trust_audio_mute_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch audio unmute event \").concat(e.uid)),hP(\"debug\",this,\"auto dispatch audio unmute event \".concat(e.uid)),this._handleMuteStream(e.uid,\"audio\",!1)),e._trust_video_mute_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch video unmute event \").concat(e.uid)),hP(\"debug\",this,\"auto dispatch video unmute event \".concat(e.uid)),this._handleMuteStream(e.uid,\"video\",!1)),e._trust_audio_enabled_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local audio \").concat(e.uid)),hP(\"debug\",this,\"auto dispatch enable local audio \".concat(e.uid)),this._handleSetStreamLocalEnable(\"audio\",e.uid,!0)),e._trust_video_enabled_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch enable local video \").concat(e.uid)),hP(\"debug\",this,\"auto dispatch enable local video \".concat(e.uid)),this._handleSetStreamLocalEnable(\"video\",e.uid,!0)),e._trust_video_stream_added_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch reset video stream added \").concat(e.uid)),this._handleResetAddStream(e,\"video\")),e._trust_audio_stream_added_state_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch reset audio stream added \").concat(e.uid)),this._handleResetAddStream(e,\"audio\")),e._video_added_||e._audio_added_||(JD.debug(\"[\".concat(this._clientId,\"] auto dispatch stream remove \").concat(e.uid)),hP(\"debug\",this,\"auto dispatch stream remove \".concat(e.uid)),this._handleRemoveStream({uid:e.uid,uint_id:e._uintid}))}))},1e3)}n()}),this._gateway.on(Xk.REQUEST_NEW_GATEWAY_LIST,(e,t)=>{if(!this._joinInfo)return t(new QD(xD.UNEXPECTED_ERROR,\"can not recover, no join info\"));Mq(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||FD,this.store).then(t=>{this._joinInfo&&(this._joinInfo.apResponse=t.gatewayInfo.res,this._joinInfo.gatewayAddrs=t.gatewayInfo.gatewayAddrs,this._joinInfo.uni_lbs_ip=t.gatewayInfo.uni_lbs_ip),e(t.gatewayInfo.gatewayAddrs.map(e=>{if(this._joinInfo&&this._joinInfo.proxyServer){const t=e.address.split(\":\");return\"wss://\".concat(this._joinInfo.proxyServer,\"/ws/?h=\").concat(t[0],\"&p=\").concat(t[1])}return\"wss://\".concat(e.address)}))}).catch(t)}),this._gateway.on(Xk.NETWORK_QUALITY,e=>{\"normal\"===this._networkQualitySensitivity&&this.emit(pk.NETWORK_QUALITY,e)}),this._gateway.on(Xk.STREAM_TYPE_CHANGE,(e,t)=>{this.emit(pk.STREAM_TYPE_CHANGED,e,t);pj.reportApiInvoke(this._sessionId,{name:rk.STREAM_TYPE_CHANGE,options:[e,t],tag:nk.TRACER}).onSuccess(JSON.stringify({uid:e,streamType:t}))}),this._gateway.on(Xk.IS_P2P_DISCONNECTED,e=>{this._p2pChannel.isP2PDisconnected()?e(!0):this._p2pChannel.hasLocalMedia()||this._p2pChannel.hasRemoteMedia()?e(!1):e(!0)}),this._gateway.on(Xk.NEED_RENEW_SESSION,()=>{this._startSession()}),this._gateway.on(Xk.REQUEST_P2P_CONNECTION_PARAMS,async(e,t,i)=>{try{t(await this._p2pChannel.startP2PConnection(e))}catch(e){i(e)}}),this._gateway.on(Xk.JOIN_RESPONSE,(e,t)=>{const{dtlsParameters:i,iceParameters:r,candidates:n,rtpCapabilities:o,setup:s,cname:a}=Z$(e.ortc,t);this._p2pChannel.connect(r,i,n,o,s,a)}),this._gateway.on(Xk.REQUEST_DC_CONNECTION_PARAMS,e=>{e(this._p2pChannel.getEstablishParams())}),this._gateway.on(Xk.RESET_CONNECTION_EVENTS,()=>{this._handleGatewaySignalEvents()}),this._gateway.on(Xk.DATACHANNEL_FAILBACK,()=>{this._joinGateway()}),this._gateway.on(Xk.DATACHANNEL_PRECONNECT,async(e,t,i,r)=>{var n,o,s,a,c,d;await this._p2pChannel.startP2PConnection({turnServer:null===(n=this._joinInfo)||void 0===n?void 0:n.turnServer},!0);const u=function(e,t){let i;return t&&t.ip&&\"number\"==typeof t.port?(i=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip,port:t.port.toString(),type:\"host\",extension:{}}],JD.debug(\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),hP(\"debug\",[],\"Using remote candidate from AP \".concat(t.ip,\":\").concat(t.port)),t.ip6&&(i.push({foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:t.ip6,port:t.port.toString(),type:\"host\",extension:{}}),JD.debug(\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)),hP(\"debug\",[],\"Using IPV6 remote candidate from AP \".concat(t.ip6,\":\").concat(t.port)))):i=[{foundation:\"udpcandidate\",componentId:\"1\",transport:\"udp\",priority:\"2103266323\",connectionAddress:e.ip,port:e.port.toString(),type:\"host\",extension:{}}],i}(e,t);return this._p2pChannel.preConnect({iceUfrag:\"\".concat(null===(o=this._joinInfo)||void 0===o?void 0:o.apResponse.cid,\"_\").concat(null===(s=this._joinInfo)||void 0===s?void 0:s.apResponse.cert),icePwd:\"\".concat(null===(a=this._joinInfo)||void 0===a?void 0:a.apResponse.cid,\"_\").concat(null===(c=this._joinInfo)||void 0===c?void 0:c.apResponse.cert)},{fingerprints:[{hashFunction:\"sha-256\",fingerprint:null!==(d=LP(\"FINGERPRINT\"))&&void 0!==d?d:e.fingerprint}]},u,{send:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]},recv:{audioCodecs:[],videoCodecs:[],audioExtensions:[],videoExtensions:[]}},\"active\",\"o/i14u9pJrxRKAsu\").then(i).catch(r)})}_handleGatewaySignalEvents(){this._gateway.signal.on(_k.ON_USER_ONLINE,this._handleUserOnline),this._gateway.signal.on(_k.ON_USER_OFFLINE,this._handleUserOffline),this._gateway.signal.on(_k.ON_ADD_AUDIO_STREAM,e=>this._handleAddAudioOrVideoStream(\"audio\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc)),this._gateway.signal.on(_k.ON_ADD_VIDEO_STREAM,e=>this._handleAddAudioOrVideoStream(\"video\",e.uid,e.ssrcId,e.cname,e.uint_id,e.ortc,e.rtxSsrcId)),this._gateway.signal.on(_k.ON_REMOVE_STREAM,this._handleRemoveStream),this._gateway.signal.on(_k.ON_P2P_LOST,this._handleP2PLost),this._gateway.signal.on(_k.MUTE_AUDIO,e=>(AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"mute_audio\",{uid:e.uid}),this._handleMuteStream(e.uid,\"audio\",!0))),this._gateway.signal.on(_k.UNMUTE_AUDIO,e=>(AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"unmute_audio\",{uid:e.uid}),this._handleMuteStream(e.uid,\"audio\",!1))),this._gateway.signal.on(_k.MUTE_VIDEO,e=>(AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"mute_video\",{uid:e.uid}),this._handleMuteStream(e.uid,\"video\",!0))),this._gateway.signal.on(_k.UNMUTE_VIDEO,e=>(AP(\"debug\",[\"AgoraRTCGateway\",this._clientId],\"unmute_video\",{uid:e.uid}),this._handleMuteStream(e.uid,\"video\",!1))),this._gateway.signal.on(_k.RECEIVE_METADATA,e=>{const t=BK(e.metadata);this.emit(pk.RECEIVE_METADATA,e.uid,t)}),this._gateway.signal.on(_k.ON_DATA_STREAM,e=>{e.seq&&delete e.seq,e.payload=BK(e.payload),this.emit(pk.STREAM_MESSAGE,e.uid,e.payload),this.onStreamMessage&&this.onStreamMessage(e)}),this._gateway.signal.on(_k.ON_CRYPT_ERROR,()=>{kK(()=>{JD.warning(\"[\".concat(this._clientId,\"] on crypt error\")),AP(\"warning\",this,\"crypt_error\"),this.emit(pk.CRYPT_ERROR)},this._sessionId)}),this._gateway.signal.on(_k.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire),this._gateway.signal.on(_k.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{JD.warning(\"[\".concat(this._clientId,\"] received message onTokenPrivilegeDidExpire, please get new token and join again\")),AP(\"warning\",this,\"token_privilege_did_expire\"),this._gateway.leave(!0),this.emit(pk.ON_TOKEN_PRIVILEGE_DID_EXPIRE),this._reset()}),this._gateway.signal.on(_k.ON_STREAM_FALLBACK_UPDATE,e=>{JD.debug(\"[\".concat(this._clientId,\"] stream fallback peerId: \").concat(e.stream_id,\", attr: \").concat(e.stream_type)),AP(\"debug\",this,\"stream_fallback_update\",{peerId:e.stream_id,attr:e.stream_type}),this.emit(pk.STREAM_FALLBACK,e.stream_id,1===e.stream_type?\"fallback\":\"recover\")}),this._gateway.signal.on(_k.ON_PUBLISH_STREAM,e=>{this.uid===this._uid&&(this._p2pChannel.reportPublishEvent(!0,null,void 0,!1,JSON.stringify({proxy:e.proxy})),JD.info(\"[\".concat(this._clientId,\"] on publish stream, \").concat(JSON.stringify(e))),AP(\"info\",this,\"publish_stream\",e))}),this._gateway.signal.on(_k.ENABLE_LOCAL_VIDEO,e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!0)}),this._gateway.signal.on(_k.DISABLE_LOCAL_VIDEO,e=>{this._handleSetStreamLocalEnable(\"video\",e.uid,!1)}),this._gateway.signal.on(fk.REQUEST_TIMEOUT,(e,t)=>{if(this._joinInfo)switch(e){case mk.PUBLISH:{if(!t)return;const e=(t=t).ortc;if(e){var i,r,n,o;const s=e.some(e=>{let{stream_type:t}=e;return t===qk.Audio}),a=e.some(e=>{let{stream_type:t}=e;return t!==qk.Audio}),c=e.some(e=>{let{stream_type:t}=e;return t===qk.Screen||t===qk.ScreenLow});\"offer\"===t.state&&pj.publish(this._joinInfo.sid,{eventElapse:$G.measureFromPublishStart(this.store.clientId,this.store.pubId),succ:!1,ec:xD.TIMEOUT,audio:s,video:a,p2pid:t.p2p_id,publishRequestid:this.store.pubId,screenshare:c,audioName:s?null===(i=e.find(e=>{let{stream_type:t}=e;return t===qk.Audio}))||void 0===i||null===(r=i.ssrcs[0])||void 0===r?void 0:r.ssrcId.toString():void 0,videoName:a?null===(n=e.find(e=>{let{stream_type:t}=e;return t!==qk.Audio}))||void 0===n||null===(o=n.ssrcs[0])||void 0===o?void 0:o.ssrcId.toString():void 0})}break}case mk.SUBSCRIBE:(t=t)&&pj.subscribe(this._joinInfo.sid,{succ:!1,ec:xD.TIMEOUT,audio:t.stream_type===AB.AUDIO,video:t.stream_type===AB.VIDEO,peerid:t.stream_id,subscribeRequestid:t.ssrcId,p2pid:this.store.p2pId,eventElapse:$G.measureFromSubscribeStart(this.store.clientId,t.ssrcId)})}}),this._gateway.signal.on(_k.ON_P2P_OK,e=>{this.uid,this._uid}),this._gateway.signal.on(_k.ON_PUBLISHED_USER_LIST,e=>{if(null==e||!e.users)return;const t=[],i=[];for(const r of e.users){let e=this._users.find(e=>e.uid===r.stream_id);e?e._trust_in_room_=!0:(e=new gz(r.stream_id,r.stream_id),this._users.push(e),0===this.getListeners(pk.PUBLISHED_USER_LIST).length&&(JD.debug(\"[\".concat(this._clientId,\"] user online\"),r.stream_id),lP(\"info\",this,\"user-joined\",{uid:r.stream_id}),this.emit(pk.USER_JOINED,e)));const n=zk.Audio&r.stream_type,o=(zk.Video|zk.LwoVideo)&r.stream_type,s=n&&e.hasAudio,a=o&&e.hasVideo;o&&(e._trust_video_stream_added_state_=!0,e._video_added_=!0,e._videoSSRC=r.video_ssrc),n&&(e._trust_audio_stream_added_state_=!0,e._audio_added_=!0,e._audioSSRC=r.audio_ssrc),n&&!s&&0===this.getListeners(pk.PUBLISHED_USER_LIST).length&&(JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published audio\")),hP(\"info\",this,\"remote user \".concat(e.uid,\" published audio\")),this.emit(pk.USER_PUBLISHED,e,\"audio\")),o&&!a&&0===this.getListeners(pk.PUBLISHED_USER_LIST).length&&(JD.info(\"[\".concat(this._clientId,\"] remote user \").concat(e.uid,\" published video\")),hP(\"info\",this,\"remote user \".concat(e.uid,\" published video\")),this.emit(pk.USER_PUBLISHED,e,\"video\")),(n&&!s||o&&!a)&&t.push(e),o&&this._p2pChannel.hasPendingRemoteMedia(e,\"video\")&&i.push({user:e,mediaType:\"video\"}),n&&this._p2pChannel.hasPendingRemoteMedia(e,\"audio\")&&i.push({user:e,mediaType:\"audio\"})}i.length>0&&(JD.debug(\"[\".concat(this._clientId,\"] RE massSubscribe after reconnect \").concat(i.map(e=>\"user: \".concat(e.user.uid,\", mediaType: \").concat(e.mediaType)).join(\"; \"),\" \")),this.massSubscribe(i).catch(e=>{JD.error(\"[\".concat(this._clientId,\"] mass resubscribe error\"),e.toString())})),this.getListeners(pk.PUBLISHED_USER_LIST).length>0?(JD.info(\"[\".concat(this._clientId,\"] client emit user-list event, users: \").concat(t.map(e=>e.uid).join(\", \"))),this.emit(pk.PUBLISHED_USER_LIST,t)):JD.info(\"[\".concat(this._clientId,\"] client not emit user-list event case there is no user-list listener, users: \").concat(t.map(e=>e.uid).join(\", \")))})}_handleP2PChannelEvents(){this._p2pChannel.on(gB.RequestMuteLocal,async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.muteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xD.DISCONNECT_P2P?t():i(e)}else t()}),this._p2pChannel.on(gB.RequestUnmuteLocal,async(e,t,i)=>{if(this._joinInfo)try{await this._gateway.unmuteLocal(e,this._joinInfo.stringUid||this._joinInfo.uid),t()}catch(e){e.code===xD.DISCONNECT_P2P?t():i(e)}else t()}),this._p2pChannel.on(gB.RequestRePublish,(e,t,i)=>{this.publish(e,!1).then(t).catch(i)}),this._p2pChannel.on(gB.RequestReSubscribe,async(e,t,i)=>{try{for(const{user:t,kind:i}of e)i===AB.VIDEO?await this.subscribe(t,\"video\"):await this.subscribe(t,\"audio\");t()}catch(e){i(e)}}),this._p2pChannel.on(gB.RequestUploadStats,(e,t)=>{this._gateway.uploadStats(e,t)}),this._p2pChannel.on(gB.MediaReconnectStart,e=>{this.emit(pk.MEDIA_RECONNECT_START,e)}),this._p2pChannel.on(gB.MediaReconnectEnd,e=>{this.emit(pk.MEDIA_RECONNECT_END,e)}),this._p2pChannel.on(gB.NeedSignalRTT,e=>{e(this._gateway.getSignalRTT())}),this._p2pChannel.on(gB.RequestRestartICE,async()=>{const e=await this._p2pChannel.restartICE(),t=await e.next();if(t.done)return;const i=t.value;let r;try{r=await this._gateway.restartICE({iceParameters:i})}catch(t){return void e.throw(t)}const{iceParameters:n}=function(e){const t=e.iceParameters;return{iceParameters:{iceUfrag:t.iceUfrag,icePwd:t.icePwd}}}(r);await e.next({remoteIceParameters:n})}),this._p2pChannel.on(gB.RequestReconnect,async()=>{this._gateway.reconnect()}),this._p2pChannel.on(gB.RequestReconnectPC,async()=>{var e;const{iceParameters:t,dtlsParameters:i,rtpCapabilities:r}=await this._p2pChannel.startP2PConnection({turnServer:null===(e=this._joinInfo)||void 0===e?void 0:e.turnServer}),{gatewayEstablishParams:n,gatewayAddress:o}=await this._gateway.reconnectPC({iceParameters:t,dtlsParameters:i,rtpCapabilities:r}),{dtlsParameters:s,iceParameters:a,candidates:c,rtpCapabilities:d,setup:u,cname:h}=Z$(n,o);await this._p2pChannel.connect(a,s,c,d,u,h),await this._p2pChannel.republish(),await this._p2pChannel.reSubscribe()}),this._p2pChannel.on(gB.RequestUnpublishForReconnectPC,async(e,t,i)=>{this._joinInfo&&void 0!==this._uid?(await this._gateway.unpublish(e,this._uid),t()):i()}),this._p2pChannel.on(gB.P2PLost,()=>{this.emit(pk.P2P_LOST,this.store.uid)}),this._p2pChannel.on(gB.UpdateVideoEncoder,e=>{e._encoderConfig&&this._gateway.setVideoProfile(e._encoderConfig)}),this._p2pChannel.on(gB.ConnectionTypeChange,e=>{this.emit(pk.IS_USING_CLOUD_PROXY,e)}),this._p2pChannel.on(gB.RequestLowStreamParameter,e=>{e(this._lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50})}),this._p2pChannel.on(gB.QueryClientConnectionState,e=>{e(this.connectionState)})}getKeyMetrics(){return this.store.keyMetrics}async enableContentInspect(e){if(\"CONNECTED\"!==this.connectionState||!this._joinInfo)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Client did not join channel\"));if(this._inspect)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] Inspect content service already in connecting/connected state\"));if(!e)throw new QD(xD.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig is necessary\"));if(!e.inspectType||!Array.isArray(e.inspectType))throw new QD(xD.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig.inspectType is necessary and is an instance of Array.\"));{const t=[...new Set(e.inspectType)];t.forEach(e=>{if(![\"supervise\",\"moderation\"].includes(e))throw new QD(xD.INVALID_PARAMS,\"[\".concat(this._clientId,\"] \").concat(e,\" is not a valid inspect type.\"))}),e.inspectType=t}if(e&&e.extraInfo&&e.extraInfo.length>1024)throw new QD(xD.INVALID_PARAMS,\"[\".concat(this._clientId,\"] inspectConfig.extraInfo length cannot exceed 1024 bytes\"));try{const t=new C2(e);this._inspect=t,this.handleVideoInspectEvents(this._inspect),await t.init({appId:this._joinInfo.appId,areaCode:\"\",cname:this._joinInfo.cname,sid:this._joinInfo.sid,token:this._joinInfo.token,uid:this._joinInfo.uid,cid:this._joinInfo.cid,vid:this._joinInfo.vid?Number(this._joinInfo.vid):0},FD)}catch(e){throw Array.isArray(e)?e[0]:e}}async disableContentInspect(){if(!this._inspect)throw new QD(xD.INVALID_OPERATION,\"[\".concat(this._clientId,\"] inspectVideoContent not started\"));try{this._inspect.close(),this._inspect=void 0}catch(e){throw Array.isArray(e)?e[0]:e}}handleVideoInspectEvents(e){e.on(SB.CONNECTION_STATE_CHANGE,(t,i)=>{switch(this.emit(pk.CONTENT_INSPECT_CONNECTION_STATE_CHANGE,t,i),i){case _B.CONNECTED:if(\"CONNECTED\"!==this.connectionState)return void this.emit(pk.CONTENT_INSPECT_ERROR,new QD(xD.OPERATION_ABORTED,\"Content inspect was cancelled because it left the channel\"));e.inspectImage()}}),e.on(SB.INSPECT_RESULT,(e,t)=>{var i;if((null==t?void 0:t.code)===xD.INVALID_OPERATION&&\"DISCONNECTED\"===this.connectionState)return JD.debug(\"Stop inspect content because that has left channel\"),null==this||null===(i=this._inspect)||void 0===i||i.close(),void(this._inspect=void 0);this.emit(pk.CONTENT_INSPECT_RESULT,e,t)}),e.on(SB.CLIENT_LOCAL_VIDEO_TRACK,e=>{e(this.localTracks.filter(e=>\"video\"===e.trackMediaType)[0])})}getJoinChannelServiceRecords(){return JD.debug(\"getJoinChannelServiceRecords\"),this.store.joinChannelServiceRecords}async setPublishAudioFilterEnabled(e){BL(e,\"enabled\"),PP(\"ENABLE_PUBLISH_AUDIO_FILTER\",e),this._joinInfo&&await this._gateway.setPublishAudioFilterEnabled(e)}_handleResetAddStream(e,t){switch(t){case\"audio\":e._audio_added_=!1,e._trust_audio_stream_added_state_=!0;break;case\"video\":e._video_added_=!1,e._trust_video_stream_added_state_=!0}}}).prototype,\"setProxyServer\",[v2],Object.getOwnPropertyDescriptor(B2.prototype,\"setProxyServer\"),B2.prototype),VV(B2.prototype,\"setTurnServer\",[T2],Object.getOwnPropertyDescriptor(B2.prototype,\"setTurnServer\"),B2.prototype),VV(B2.prototype,\"setLicense\",[R2],Object.getOwnPropertyDescriptor(B2.prototype,\"setLicense\"),B2.prototype),VV(B2.prototype,\"setLocalAccessPointsV2\",[y2],Object.getOwnPropertyDescriptor(B2.prototype,\"setLocalAccessPointsV2\"),B2.prototype),VV(B2.prototype,\"setLocalAccessPoints\",[w2],Object.getOwnPropertyDescriptor(B2.prototype,\"setLocalAccessPoints\"),B2.prototype),VV(B2.prototype,\"setRemoteDefaultVideoStreamType\",[b2],Object.getOwnPropertyDescriptor(B2.prototype,\"setRemoteDefaultVideoStreamType\"),B2.prototype),VV(B2.prototype,\"pickSVCLayer\",[N2],Object.getOwnPropertyDescriptor(B2.prototype,\"pickSVCLayer\"),B2.prototype),VV(B2.prototype,\"enableContentInspect\",[O2],Object.getOwnPropertyDescriptor(B2.prototype,\"enableContentInspect\"),B2.prototype),VV(B2.prototype,\"disableContentInspect\",[D2],Object.getOwnPropertyDescriptor(B2.prototype,\"disableContentInspect\"),B2.prototype),VV(B2.prototype,\"getJoinChannelServiceRecords\",[P2],Object.getOwnPropertyDescriptor(B2.prototype,\"getJoinChannelServiceRecords\"),B2.prototype),VV(B2.prototype,\"setPublishAudioFilterEnabled\",[L2],Object.getOwnPropertyDescriptor(B2.prototype,\"setPublishAudioFilterEnabled\"),B2.prototype),k2=B2))||k2);class Q2 extends Lj{set currentState(e){e!==this._currentState&&(this._currentState=e,this.emit(Sk.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),MN(this,\"audioBuffer\",void 0),MN(this,\"sourceNode\",void 0),MN(this,\"startPlayTime\",0),MN(this,\"startPlayOffset\",0),MN(this,\"pausePlayTime\",0),MN(this,\"options\",void 0),MN(this,\"currentLoopCount\",0),MN(this,\"_currentState\",\"stopped\"),this.audioBuffer=e,this.options=t,this.startPlayOffset=this.options.startPlayTime||0}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer.duration}get currentTime(){return\"stopped\"===this.currentState?0:\"paused\"===this.currentState?this.pausePlayTime:(this.context.currentTime-this.startPlayTime+this.startPlayOffset)%this.audioBuffer.duration}updateOptions(e){\"stopped\"===this.currentState?(this.options=e,this.startPlayOffset=this.options.startPlayTime||0):JD.warning(\"can not set audio source options\")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer(),this.sourceNode=this.createSourceNode(),this.startSourceNode(),this.currentState=\"playing\"}pauseProcessAudioBuffer(){this.sourceNode&&\"playing\"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState=\"paused\")}seekAudioBuffer(e){this.sourceNode&&(this.sourceNode.onended=null,\"playing\"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),\"playing\"===this.currentState?(this.startPlayOffset=e,this.startSourceNode()):\"paused\"===this.currentState&&(this.pausePlayTime=e))}resumeProcessAudioBuffer(){\"paused\"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState=\"playing\")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(e){}this.reset()}}startSourceNode(){this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=this.handleSourceNodeEnded.bind(this))}createSourceNode(){const e=this.context.createBufferSource();return e.buffer=this.audioBuffer,e.loop=!!this.options.loop,e.connect(this.outputNode),e}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0,this.currentState=\"stopped\",this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=void 0),this.currentLoopCount=0}}const F2=new Map;async function V2(e,t){let i=null;if(\"string\"==typeof e){const t=F2.get(e);if(t)return JD.debug(\"use cached audio resource: \",e),t;try{i=(await jD(()=>kD.get(e,{responseType:\"arraybuffer\"}),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new QD(xD.FETCH_AUDIO_FILE_FAILED,e.toString())}}else{const t=new l_((t,i)=>{const r=new FileReader;r.onload=e=>{e.target?t(e.target.result):i(new QD(xD.READ_LOCAL_AUDIO_FILE_ERROR))},r.onerror=()=>{i(new QD(xD.READ_LOCAL_AUDIO_FILE_ERROR))},r.readAsArrayBuffer(e)});i=await t}const r=await function(e){const t=yj();return new l_((i,r)=>{t.decodeAudioData(e,e=>{i(e)},e=>{r(new QD(xD.DECODE_AUDIO_FILE_FAILED,e.toString()))})})}(i);return\"string\"==typeof e&&t&&F2.set(e,r),r}function j2(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function G2(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?j2(Object(i),!0).forEach((function(t){MN(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):j2(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function K2(e,t,i,r){i.optimizationMode&&(r&&r.width&&r.height?(i.encoderConfig=G2(G2({},r),{},{bitrateMin:r.bitrateMin,bitrateMax:r.bitrateMax}),\"motion\"!==i.optimizationMode&&\"detail\"!==i.optimizationMode||(t.contentHint=i.optimizationMode,t.contentHint===i.optimizationMode?(JD.debug(\"[\".concat(e,\"] set content hint to\"),i.optimizationMode),fP(\"debug\",[\"AgoraRTC\"],\"videoTrackOptimizationModeProcess\",[e,i,r])):(JD.debug(\"[\".concat(e,\"] set content hint failed\")),fP(\"warning\",[\"AgoraRTC\"],\"videoTrackOptimizationModeProcess\",[e,i,r],\"failed\")))):(JD.warning(\"[\".concat(e,\"] can not apply optimization mode bitrate config, no encoderConfig\")),hP(\"warning\",[\"AgoraRTC\"],\"[\".concat(e,\"] can not apply optimization mode bitrate config, no encoderConfig\"))))}const H2=oN().name;function W2(e,t,i,r){let n,o=0,s=null;return new l_((a,c)=>{setTimeout(()=>{n&&(n(),a(o))},t),n=Nj(()=>{!function(){o>r&&n&&(n(),a(o));const t=i.getContext(\"2d\");if(!t){const e=new QD(xD.UNEXPECTED_ERROR,\"can not get canvas 2d context.\");return JD.error(e.toString()),void c(e)}t.drawImage(e,0,0,160,120);const d=t.getImageData(0,0,i.width,i.height),u=Math.floor(d.data.length/3);if(s){for(let e=0;e<u;e+=3)if(d.data[e]!==s[e])return o+=1,void(s=d.data);s=d.data}else s=d.data}()},30)})}class Y2{constructor(e,t){MN(this,\"id\",0),MN(this,\"element\",void 0),MN(this,\"peerPair\",void 0),MN(this,\"context\",void 0),MN(this,\"audioPlayerElement\",void 0),MN(this,\"audioTrack\",void 0),Y2.count+=1,this.id=Y2.count,this.element=e,this.context=t}initPeers(){this.peerPair=[new RTCPeerConnection,new RTCPeerConnection],this.peerPair[1].ontrack=e=>{const t=document.createElement(\"audio\");t.srcObject=new MediaStream([e.track]),t.play(),this.audioPlayerElement=t}}async switchSdp(){if(!this.peerPair)return;const e=async(e,t)=>{const i=\"offer\"===t?await e.createOffer():await e.createAnswer();return await e.setLocalDescription(i),\"complete\"===e.iceGatheringState?e.localDescription:new l_(t=>{e.onicegatheringstatechange=()=>{\"complete\"===e.iceGatheringState&&t(e.localDescription)}})},t=async(e,t)=>await e.setRemoteDescription(t);try{const i=await e(this.peerPair[0],\"offer\");await t(this.peerPair[1],i);const r=await e(this.peerPair[1],\"answer\");await t(this.peerPair[0],r)}catch(e){throw new QD(xD.LOCAL_AEC_ERROR,e.toString()).print()}}async getTracksFromMediaElement(e){if(this.audioTrack)return this.audioTrack;let t;try{e instanceof HTMLVideoElement&&(e.captureStream?e.captureStream():e.mozCaptureStream()),t=this.context.createMediaStreamDestination();this.context.createMediaElementSource(e).connect(t)}catch(e){throw new QD(xD.LOCAL_AEC_ERROR,e.toString()).print()}if(!t){throw new QD(xD.LOCAL_AEC_ERROR,\"no dest node when local aec\").print()}const i=t.stream.getAudioTracks()[0];return this.audioTrack=i,i}getElement(){return this.element}async startEchoCancellation(){this.context.resume(),this.peerPair&&this.close(),this.initPeers();const e=this.element,t=await this.getTracksFromMediaElement(e);this.peerPair&&this.peerPair[0].addTrack(t),await this.switchSdp()}close(){JD.debug(\"close echo cancellation unit, id is\",this.id),this.audioPlayerElement&&this.audioPlayerElement.pause(),this.peerPair&&this.peerPair.forEach(e=>{e.close()}),this.peerPair=void 0,this.audioPlayerElement=void 0}}var J2,q2;MN(Y2,\"count\",0);const X2=window.AudioContext||window.webkitAudioContext;const z2=new(J2=Aj({report:pj}),VV((q2=class{constructor(){MN(this,\"units\",[]),MN(this,\"context\",void 0)}processExternalMediaAEC(e){if(!this._doesEnvironmentNeedAEC())return JD.debug(\"the system does not need to process local aec\"),-1;this.context||(this.context=new X2);let t=this.units.find(t=>t&&t.getElement()===e);return t||(t=new Y2(e,this.context),this.units.push(t)),t.startEchoCancellation(),JD.debug(\"start processing local audio echo cancellation, id is\",t.id),t.id}_doesEnvironmentNeedAEC(){return oN().name!==tN.SAFARI}}).prototype,\"processExternalMediaAEC\",[J2],Object.getOwnPropertyDescriptor(q2.prototype,\"processExternalMediaAEC\"),q2.prototype),q2);PP(\"PROCESS_ID\",\"process-\".concat(_K(8,\"\"),\"-\").concat(_K(4,\"\"),\"-\").concat(_K(4,\"\"),\"-\").concat(_K(4,\"\"),\"-\").concat(_K(12,\"\"))),function(){const e=oN();yB.getDisplayMedia=function(e){if(navigator.mediaDevices&&navigator.mediaDevices.getDisplayMedia)return!0;return!1}(),yB.getStreamFromExtension=e.name===tN.CHROME&&Number(e.version)>34,yB.supportUnifiedPlan=function(){if(!window.RTCRtpTransceiver)return!1;if(!(\"currentDirection\"in RTCRtpTransceiver.prototype))return!1;const e=new RTCPeerConnection;let t=!1;try{e.addTransceiver(\"audio\"),t=!0}catch(e){}return e.close(),t}(),yB.supportMinBitrate=e.name===tN.CHROME||e.name===tN.EDGE,yB.supportSetRtpSenderParameters=function(){const e=oN();if(!window.RTCRtpSender||!window.RTCRtpSender.prototype.setParameters||!window.RTCRtpSender.prototype.getParameters)return!1;return!!yN()||(!(!pN()&&!uN())||e.name===tN.FIREFOX&&Number(e.version)>=64)}(),e.name===tN.SAFARI&&(Number(e.version)>=14?yB.supportDualStream=!0:yB.supportDualStream=!1),yB.webAudioMediaStreamDest=function(){const e=oN();if(e.name===tN.SAFARI&&Number(e.version)<12)return!1;return!0}(),yB.supportReplaceTrack=function(){if(!window.RTCRtpSender)return!1;if(\"function\"==typeof RTCRtpSender.prototype.replaceTrack)return!0;return!1}(),yB.supportWebGL=\"undefined\"!=typeof WebGLRenderingContext,yB.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack,yN()||(yB.webAudioWithAEC=!0),yB.supportShareAudio=function(){const e=oN();if((e.os===eN.WIN_10||e.os===eN.WIN_81||e.os===eN.WIN_7||e.os===eN.LINUX||e.os===eN.MAC_OS)&&e.name===tN.CHROME&&Number(e.version)>=74)return!0;return!1}(),yB.supportDualStreamEncoding=function(){const e=oN();if(LP(\"DISABLE_WEBAUDIO\"))return!0;return\"Safari\"===e.name&&Number(e.version)>=14||!!(\"Chrome\"===e.name&&/Windows/i.test(e.os||\"\")&&Number(e.version)>=100&&LP(\"CHROME_DUAL_STREAM_USE_ENCODING\"))}(),yB.supportDataChannel=function(){if(function(e){const t=oN();return!(t.name!==tN.CHROME||!t.osVersion)&&Number(t.version)>=e}(76)||function(e){const t=oN();return!(t.name!==tN.FIREFOX||!t.osVersion)&&Number(t.version)>=e}(68)||function(e){const t=oN();return!(t.name!==tN.SAFARI||!t.osVersion)&&Number(t.version)>=e}(14))return!0;return!1}(),JD.info(\"browser compatibility\",JSON.stringify(yB),JSON.stringify(e)),gP(\"info\",[],\"updateAgoraRTCCompatibility\",{browserCompatibility:yB,browserInfo:e})}(),function(){let e;try{e=window.localStorage.getItem(\"websdk_ng_global_parameter\")}catch(e){return void JD.error(\"Error loading sdk config\",e.message)}if(e)try{const t=JSON.parse(window.atob(e)),i=Date.now();JD.debug(\"Loading global parameters from cache\",t),gP(\"debug\",[],\"loadConfigFromLocalStorage\",t),Object.keys(t).forEach(e=>{if(Object.prototype.hasOwnProperty.call(kP,e)){const{value:r,expires:n}=t[e];if(n&&n<=i)return;BP[e]=r,kP[e]=r}})}catch(t){JD.error(\"Error loading mutableParamsCache: \".concat(e),t.message)}}();const Z2={__CLIENT_LIST__:VP,__TRACK_LIST__:jP,VERSION:CP,BUILD:_P,setParameter:PP,getParameter:LP,getSupportedCodec:async function(){let e={audio:[],video:[]};try{let t=new RTCPeerConnection;t.addTransceiver(\"video\",{direction:\"recvonly\"}),t.addTransceiver(\"audio\",{direction:\"recvonly\"});const i=(await t.createOffer()).sdp;if(!i)return e;t.close(),t=null,e=function(e){const t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push(\"VP8\"),e.match(/ VP9/i)&&t.video.push(\"VP9\"),e.match(/ AV1/i)&&t.video.push(\"AV1\"),e.match(/ H264/i)&&t.video.push(\"H264\"),e.match(/ opus/i)&&t.audio.push(\"OPUS\"),e.match(/ PCMU/i)&&t.audio.push(\"PCMU\"),e.match(/ PCMA/i)&&t.audio.push(\"PCMA\"),e.match(/ G722/i)&&t.audio.push(\"G722\"),t}(i)}catch(e){throw new QD(xD.CREATE_OFFER_FAILED,e.toString&&e.toString()).print()}return e},checkSystemRequirements:function(){const e=pj.reportApiInvoke(null,{name:rk.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:nk.TRACER});let t=!1;try{const e=window.RTCPeerConnection,i=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,r=window.WebSocket;t=!!(e&&i&&r)}catch(e){return JD.error(\"check system requirement failed: \",e),!1}let i=!1;const r=oN();r.name===tN.CHROME&&Number(r.version)>=58&&(!AN()||hN())&&(i=!0),r.name===tN.FIREFOX&&Number(r.version)>=56&&(i=!0),r.name===tN.OPERA&&Number(r.version)>=45&&(i=!0),r.name===tN.SAFARI&&Number(r.version)>=11&&(i=!0),(TN()||oN().name===tN.QQ)&&(i=!0),JD.debug(\"checkSystemRequirements, api:\",t,\"browser\",i);const n=t&&i;return e.onSuccess(n),n},getDevices:function(e){return Yj.enumerateDevices(!0,!0,e)},getMicrophones:function(e){return Yj.getRecordingDevices(e)},getCameras:function(e){return Yj.getCamerasDevices(e)},getElectronScreenSources:Uj,getPlaybackDevices:function(e){return Yj.getSpeakers(e)},createClient:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{codec:\"vp8\",audioCodec:\"opus\",mode:\"rtc\"};const t=pj.reportApiInvoke(null,{name:rk.CREATE_CLIENT,options:[e],tag:nk.TRACER});try{Tk(e)}catch(e){throw t.onError(e),e}return void 0===e.audioCodec&&(e.audioCodec=\"opus\"),t.onSuccess(),new x2(U2(U2({forceWaitGatewayResponse:!0},e),{},{role:\"rtc\"===e.mode?\"host\":e.role}))},createCameraVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{encoderConfig:\"480p_1\"};const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_CAM_VIDEO_TRACK,options:[G2({},e)]}),i=LX(e),r=_K(8,\"track-cam-\");let n=null;JD.info(\"start create camera video track with config\",JSON.stringify(e),\"trackId\",r),fP(\"info\",[\"AgoraRTC\"],\"createCameraVideoTrack\",e);try{n=(await Gj({video:i},r)).getVideoTracks()[0]||null}catch(e){throw t.onError(e),e}if(!n){const e=new QD(xD.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw()}e.optimizationMode&&K2(r,n,e,e.encoderConfig&&wP(e.encoderConfig));const o=new pz(n,e,i,e.scalabiltyMode?NP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,r);return t.onSuccess(o.getTrackId()),JD.info(\"create camera video success, trackId:\",r),fP(\"info\",[\"AgoraRTC\"],\"createCameraVideoTrack\",void 0,r),o},createCustomVideoTrack:function(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_CUSTOM_VIDEO_TRACK,options:[e]}),i=new lz(e.mediaStreamTrack,{bitrateMax:e.bitrateMax,bitrateMin:e.bitrateMin},e.scalabiltyMode?NP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode);return t.onSuccess(i.getTrackId()),JD.info(\"create custom video track success with config\",e,\"trackId\",i.getTrackId()),fP(\"info\",[\"AgoraRTC\"],\"createCustomVideoTrack\",e,i.getTrackId()),i},createScreenVideoTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"disable\";const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_SCREEN_VIDEO_TRACK,options:[G2({},e),t]});e.encoderConfig?\"string\"==typeof e.encoderConfig||e.encoderConfig.width&&e.encoderConfig.height||(e.encoderConfig.width={max:1920},e.encoderConfig.height={max:1080}):e.encoderConfig=\"1080p_2\";const r=kX(e),n=_K(8,\"track-scr\");let o=null,s=null;const a=wB();if(!a.supportShareAudio&&\"enable\"===t){const e=new QD(xD.NOT_SUPPORTED,\"your browser or platform is not support share-screen with audio\");return i.onError(e),e.throw()}JD.info(\"start create screen video track with config\",e,\"withAudio\",t,\"trackId\",n),fP(\"info\",[\"AgoraRTC\"],\"createScreenVideoTrack\",[e,t]);try{const e=await Gj({screen:r,screenAudio:\"auto\"===t?a.supportShareAudio:\"enable\"===t},n);o=e.getVideoTracks()[0]||null,s=e.getAudioTracks()[0]||null}catch(e){throw i.onError(e),e}if(!o){const e=new QD(xD.UNEXPECTED_ERROR,\"can not find track in media stream\");return i.onError(e),e.throw()}if(!s&&\"enable\"===t){o&&o.stop();const e=new QD(xD.SHARE_AUDIO_NOT_ALLOWED);return i.onError(e),e.throw()}e.optimizationMode||(e.optimizationMode=\"detail\"),e.optimizationMode&&(K2(n,o,e,e.encoderConfig&&bP(e.encoderConfig)),e.encoderConfig&&\"string\"!=typeof e.encoderConfig&&(e.encoderConfig.bitrateMin=e.encoderConfig.bitrateMax));const c=new lz(o,e.encoderConfig?bP(e.encoderConfig):{},e.scalabiltyMode?NP(e.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},e.optimizationMode,n,[$k.SCREEN_TRACK]);if(!s)return i.onSuccess(c.getTrackId()),JD.info(\"create screen video track success\",\"video:\",c.getTrackId()),fP(\"info\",[\"AgoraRTC\"],\"createScreenVideoTrack\",void 0,{videoTrack:c.getTrackId()}),c;const d=new YG(s);return i.onSuccess([c.getTrackId(),d.getTrackId()]),JD.info(\"create screen video track success\",\"video:\",c.getTrackId(),\"audio:\",d.getTrackId()),fP(\"info\",[\"AgoraRTC\"],\"createScreenVideoTrack\",void 0,{videoTrack:c.getTrackId(),audioTrack:d.getTrackId()}),[c,d]},createMicrophoneAndCameraTracks:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{encoderConfig:\"480p_1\"};const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_MIC_AND_CAM_TRACKS,options:[e,t]}),r=LX(t),n=BX(e),o=_K(8,\"track-mic-\"),s=_K(8,\"track-cam-\");let a=null,c=null;JD.info(\"start create camera video track(\".concat(s,\") and microphone audio track(\").concat(o,\") with config, audio: \").concat(JSON.stringify(e),\", video: \").concat(JSON.stringify(t))),fP(\"info\",[\"AgoraRTC\"],\"createMicrophoneAndCameraTracks\",{videoConfig:t,audioConfig:e});try{const e=await Gj({audio:n,video:r},\"\".concat(o,\"-\").concat(s));a=e.getAudioTracks()[0],c=e.getVideoTracks()[0]}catch(e){throw i.onError(e),e}if(!a||!c){const e=new QD(xD.UNEXPECTED_ERROR,\"can not find tracks in media stream\");return i.onError(e),e.throw()}t.optimizationMode&&K2(s,c,t,t.encoderConfig&&wP(t.encoderConfig));const d=new JG(a,e,n,o),u=new pz(c,t,r,t.scalabiltyMode?NP(t.scalabiltyMode):{numSpatialLayers:1,numTemporalLayers:1},t.optimizationMode,s);return i.onSuccess([d.getTrackId(),u.getTrackId()]),JD.info(\"create camera video track(\".concat(s,\") and microphone audio track(\").concat(o,\") success\")),fP(\"info\",[\"AgoraRTC\"],\"createMicrophoneAndCameraTracks\",void 0,{videoTrackId:s,audioTrackId:o}),[d,u]},createMicrophoneAudioTrack:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_MIC_AUDIO_TRACK,options:[e]}),i=BX(e),r=_K(8,\"track-mic-\");let n=null;JD.info(\"start create microphone audio track with config\",JSON.stringify(e),\"trackId\",r),fP(\"info\",[\"AgoraRTC\"],\"createMicrophoneAudioTrack\",e);try{n=(await Gj({audio:i},r)).getAudioTracks()[0]||null}catch(e){throw t.onError(e),e}if(!n){const e=new QD(xD.UNEXPECTED_ERROR,\"can not find track in media stream\");return t.onError(e),e.throw()}const o=new JG(n,e,i,r);return t.onSuccess(o.getTrackId()),JD.info(\"create microphone audio track success, trackId:\",r),fP(\"info\",[\"AgoraRTC\"],\"createMicrophoneAudioTrack\",e,r),o},createCustomAudioTrack:function(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_CUSTOM_AUDIO_TRACK,options:[e]}),i=new YG(e.mediaStreamTrack,e.encoderConfig?DP(e.encoderConfig):{});return JD.info(\"create custom audio track success with config\",e,\"trackId\",i.getTrackId()),fP(\"info\",[\"AgoraRTC\"],\"createCustomAudioTrack\",e,i.getTrackId()),t.onSuccess(i.getTrackId()),i},createBufferSourceAudioTrack:async function(e){const t=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CREATE_BUFFER_AUDIO_TRACK,options:[e]});if(LP(\"DISABLE_WEBAUDIO\"))throw new QD(xD.NOT_SUPPORTED,\"can not create BufferSourceAudioTrack when WebAudio disabled\");const i=_K(8,\"track-buf-\");JD.info(\"start create buffer source audio track with config\",JSON.stringify(e),\"trackId\",i),fP(\"info\",[],\"createBufferSourceAudioTrack\",e);const r=e.source;if(!(e.source instanceof AudioBuffer))try{e.source=await V2(e.source,e.cacheOnlineFile)}catch(e){return t.onError(e),e.throw()}const n=new Q2(e.source),o=new qG(r,n,e.encoderConfig?DP(e.encoderConfig):{},i);return JD.info(\"create buffer source audio track success, trackId:\",i),fP(\"info\",[\"AgoraRTC\"],\"createBufferSourceAudioTrack\",void 0,i),t.onSuccess(o.getTrackId()),o},setAppType:function(e){if(JD.debug(\"setAppType: \".concat(e)),!(Number.isInteger(e)&&e>=0))throw JD.debug(\"Invalid appType\"),new QD(xD.INVALID_PARAMS,\"invalid app type\",e);PP(\"APP_TYPE\",Math.floor(e))},setLogLevel:function(e){LP(\"USE_NEW_LOG\")?function(e){e=Math.min(Math.max(0,e),4),tP=e}(e):JD.setLogLevel(e)},enableLogUpload:function(){LP(\"USE_NEW_LOG\")?PP(\"UPLOAD_LOG\",!0):JD.enableLogUpload()},disableLogUpload:function(){LP(\"USE_NEW_LOG\")?PP(\"UPLOAD_LOG\",!1):JD.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new eX},checkAudioTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof YG||e instanceof $1)){const e=new QD(xD.INVALID_TRACK,\"the parameter is not a audio track\");return i.onError(e),e.throw()}t&&t<1e3&&(t=1e3);const r=e instanceof YG?e.getTrackLabel():\"remote_track\",n=e.getVolumeLevel();let o=n,s=n;const a=Date.now();return new l_(n=>{const c=setInterval(()=>{const d=e.getVolumeLevel();o=d>o?d:o,s=d<s?d:s;const u=o-s>1e-4,h=Date.now()-a;if(u||h>t){clearInterval(c);const t=u,s={duration:h,deviceLabel:r,maxVolumeLevel:o,result:t};JD.info(\"[track-\".concat(e.getTrackId(),\"] check audio track active completed. \").concat(JSON.stringify(s))),i.onSuccess(s),n(t)}},200)})},checkVideoTrackIsActive:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;const i=pj.reportApiInvoke(null,{tag:nk.TRACER,name:rk.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[t]});if(!(e instanceof lz||e instanceof Z1)){const e=new QD(xD.INVALID_TRACK,\"the parameter is not a video track\");return i.onError(e),e.throw()}const r=4;t&&t<1e3&&(t=1e3);const n=e instanceof lz?e.getTrackLabel():\"remote_track\",o=e.getMediaStreamTrack(!0),s=document.createElement(\"video\");s.style.width=\"1px\",s.style.height=\"1px\",s.setAttribute(\"muted\",\"\"),s.muted=!0,s.setAttribute(\"playsinline\",\"\"),s.controls=!1,(pN()||uN())&&(s.style.opacity=\"0.01\",s.style.position=\"fixed\",s.style.left=\"0\",s.style.top=\"0\",document.body.appendChild(s)),s.srcObject=new MediaStream([o]),s.play();const a=document.createElement(\"canvas\");a.width=160,a.height=120;let c=0,d=0;try{const e=Date.now();c=await W2(s,t,a,r),d=Date.now()-e}catch(e){throw i.onError(e),e}H2===tN.SAFARI&&(s.pause(),s.remove()),s.srcObject=null;const u=c>r,h={duration:d,changedPicNum:c,deviceLabel:n,result:u};return JD.info(\"[track-\".concat(e.getTrackId(),\"] check video track active completed. \").concat(JSON.stringify(h))),i.onSuccess(h),u},setArea:function(e){const t=pj.reportApiInvoke(null,{name:rk.SET_AREA,options:e,tag:nk.TRACER});try{let t=[];if(\"string\"==typeof e&&(t=[e]),Array.isArray(e)&&(e.forEach(e=>{if(!aB.includes(e))throw new QD(xD.INVALID_PARAMS,\"invalid area code\")}),t=e),\"[object Object]\"===Object.prototype.toString.call(e)){const{areaCode:i,excludedArea:r}=e;if(!i)throw new QD(xD.INVALID_PARAMS,\"area code is needed\");let n=i;\"string\"==typeof i&&(n=[i]),t=r?Bq(n,r):n}PP(\"AREAS\",t);const i=(e=>{const t={CODE:\"\",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[],PROXY_SERVER_TYPE3:[]};return e.map(e=>{const i=dB[e],r=Object.keys(i);r&&r.map(e=>{\"CODE\"!==e&&(t[e]=t[e].concat(i[e]))})}),t})(t);Object.keys(i).map(e=>{if(\"LOG_UPLOAD_SERVER\"===e||\"EVENT_REPORT_DOMAIN\"===e||\"EVENT_REPORT_BACKUP_DOMAIN\"===e||\"PROXY_SERVER_TYPE3\"===e){PP(e,i[e][0])}else PP(e,i[e])}),JD.debug(\"set area success:\",t.join(\",\"))}catch(e){throw t.onError(e),e}t.onSuccess()},audioElementPlayCenter:zj,processExternalMediaAEC:function(e){z2.processExternalMediaAEC(e)},registerExtensions:function(e){e.forEach(e=>{const t=e;t.__registered__=!0,t.logger.hookLog=JD.extLog,t.reporter.hookApiInvoke=pj.extApiInvoke,t.parameters&&Object.keys(t.parameters).forEach(e=>{t.parameters[e]=LP(e)})})},ChannelMediaRelayError:Jk,ChannelMediaRelayEvent:Wk,ChannelMediaRelayState:Yk,RemoteStreamFallbackType:tB,RemoteStreamType:eB,ConnectionDisconnectedReason:lk,AudienceLatencyLevelType:Ak,AREAS:nB},$2=window||document;return Object.defineProperties(Z2,{onAudioAutoplayFailed:{get:()=>nj.onAudioAutoplayFailed,set:e=>{nj.onAudioAutoplayFailed=e}},onAutoplayFailed:{get:()=>nj.onAutoplayFailed,set:e=>{nj.onAutoplayFailed=e}},_onSecurityPolicyViolation:{value:void 0,writable:!0},_cspEventHandlerPointer:{value:void 0,writable:!0},onSecurityPolicyViolation:{get:()=>Z2._onSecurityPolicyViolation,set(e){if(Z2._onSecurityPolicyViolation=e,!$2)return;const t=e=>{if(!(e&&e.blockedURI&&Z2.onSecurityPolicyViolation))return;const t=e.blockedURI;LP(\"CSP_DETECTED_HOSTNAME_LIST\").some(e=>t.includes(e))&&Z2.onSecurityPolicyViolation&&\"function\"==typeof Z2.onSecurityPolicyViolation&&Z2.onSecurityPolicyViolation(e)},i=Z2._cspEventHandlerPointer;i&&$2.removeEventListener(\"securitypolicyviolation\",i),e&&\"function\"==typeof e&&$2.addEventListener(\"securitypolicyviolation\",t),Z2._cspEventHandlerPointer=t}}}),Yj.on(sk.CAMERA_DEVICE_CHANGED,e=>{JD.info(\"camera device changed\",JSON.stringify(e)),Z2.onCameraChanged&&Z2.onCameraChanged(e)}),Yj.on(sk.RECORDING_DEVICE_CHANGED,e=>{JD.info(\"microphone device changed\",JSON.stringify(e)),Z2.onMicrophoneChanged&&Z2.onMicrophoneChanged(e)}),Yj.on(sk.PLAYOUT_DEVICE_CHANGED,e=>{JD.debug(\"playout device changed\",JSON.stringify(e)),Z2.onPlaybackDeviceChanged&&Z2.onPlaybackDeviceChanged(e)}),zj.onAutoplayFailed=()=>{JD.info(\"detect audio element autoplay failed\"),nj.onAudioAutoplayFailed&&nj.onAudioAutoplayFailed()},Tj.on(\"autoplay-failed\",()=>{JD.info(\"detect webaudio autoplay failed\"),nj.onAudioAutoplayFailed&&nj.onAudioAutoplayFailed()}),window&&(window.__ARTC__=Z2),Z2}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/agora-rtc-sdk-ng/AgoraRTC_N-production.js\n"));

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzPzM3NzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxuLy8gU3VwcG9ydCBkZWNvZGluZyBVUkwtc2FmZSBiYXNlNjQgc3RyaW5ncywgYXMgTm9kZS5qcyBkb2VzLlxuLy8gU2VlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CYXNlNjQjVVJMX2FwcGxpY2F0aW9uc1xucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gZ2V0TGVucyAoYjY0KSB7XG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG5cbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGV4dHJhIGJ5dGVzIGFmdGVyIHBsYWNlaG9sZGVyIGJ5dGVzIGFyZSBmb3VuZFxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qcy9pc3N1ZXMvNDJcbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoJz0nKVxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlblxuXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSB2YWxpZExlbiA9PT0gbGVuXG4gICAgPyAwXG4gICAgOiA0IC0gKHZhbGlkTGVuICUgNClcblxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXG59XG5cbi8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIF9ieXRlTGVuZ3RoIChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pIHtcbiAgcmV0dXJuICgodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzTGVuXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBsZW5zWzFdXG5cbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSlcblxuICB2YXIgY3VyQnl0ZSA9IDBcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIHZhciBsZW4gPSBwbGFjZUhvbGRlcnNMZW4gPiAwXG4gICAgPyB2YWxpZExlbiAtIDRcbiAgICA6IHZhbGlkTGVuXG5cbiAgdmFyIGlcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDE4KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8XG4gICAgICByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiAxNikgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhGRlxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMikge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTApIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiA2ICYgMHgzRl0gK1xuICAgIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPVxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweEZGMDAwMCkgK1xuICAgICAgKCh1aW50OFtpICsgMV0gPDwgOCkgJiAweEZGMDApICtcbiAgICAgICh1aW50OFtpICsgMl0gJiAweEZGKVxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKVxuICB9XG4gIHJldHVybiBvdXRwdXQuam9pbignJylcbn1cblxuZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSAodWludDgpIHtcbiAgdmFyIHRtcFxuICB2YXIgbGVuID0gdWludDgubGVuZ3RoXG4gIHZhciBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXSArXG4gICAgICAnPT0nXG4gICAgKVxuICB9IGVsc2UgaWYgKGV4dHJhQnl0ZXMgPT09IDIpIHtcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArXG4gICAgICBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdICtcbiAgICAgIGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl0gK1xuICAgICAgJz0nXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base64-js/index.js\n"));

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/ZWJjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuZXhwb3J0cy5yZWFkID0gZnVuY3Rpb24gKGJ1ZmZlciwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG1cbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSAoZSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSAobSAqIDI1NikgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXNcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiAoKHMgPyAtMSA6IDEpICogSW5maW5pdHkpXG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBNYXRoLnBvdygyLCBtTGVuKVxuICAgIGUgPSBlIC0gZUJpYXNcbiAgfVxuICByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIE1hdGgucG93KDIsIGUgLSBtTGVuKVxufVxuXG5leHBvcnRzLndyaXRlID0gZnVuY3Rpb24gKGJ1ZmZlciwgdmFsdWUsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtLCBjXG4gIHZhciBlTGVuID0gKG5CeXRlcyAqIDgpIC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICgodmFsdWUgKiBjKSAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ieee754/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLmVudikgJiYgdHlwZW9mICgocmVmMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ })

}]);